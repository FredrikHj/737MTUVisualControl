{"version":3,"file":"phidget22.js","sources":["../../node_modules/core-js-pure/internals/global.js","../../node_modules/core-js-pure/internals/fails.js","../../node_modules/core-js-pure/internals/function-bind-native.js","../../node_modules/core-js-pure/internals/function-apply.js","../../node_modules/core-js-pure/internals/function-uncurry-this.js","../../node_modules/core-js-pure/internals/is-callable.js","../../node_modules/core-js-pure/internals/descriptors.js","../../node_modules/core-js-pure/internals/function-call.js","../../node_modules/core-js-pure/internals/object-property-is-enumerable.js","../../node_modules/core-js-pure/internals/create-property-descriptor.js","../../node_modules/core-js-pure/internals/classof-raw.js","../../node_modules/core-js-pure/internals/indexed-object.js","../../node_modules/core-js-pure/internals/require-object-coercible.js","../../node_modules/core-js-pure/internals/to-indexed-object.js","../../node_modules/core-js-pure/internals/is-object.js","../../node_modules/core-js-pure/internals/path.js","../../node_modules/core-js-pure/internals/get-built-in.js","../../node_modules/core-js-pure/internals/object-is-prototype-of.js","../../node_modules/core-js-pure/internals/engine-user-agent.js","../../node_modules/core-js-pure/internals/engine-v8-version.js","../../node_modules/core-js-pure/internals/native-symbol.js","../../node_modules/core-js-pure/internals/use-symbol-as-uid.js","../../node_modules/core-js-pure/internals/is-symbol.js","../../node_modules/core-js-pure/internals/try-to-string.js","../../node_modules/core-js-pure/internals/a-callable.js","../../node_modules/core-js-pure/internals/get-method.js","../../node_modules/core-js-pure/internals/ordinary-to-primitive.js","../../node_modules/core-js-pure/internals/is-pure.js","../../node_modules/core-js-pure/internals/set-global.js","../../node_modules/core-js-pure/internals/shared-store.js","../../node_modules/core-js-pure/internals/shared.js","../../node_modules/core-js-pure/internals/to-object.js","../../node_modules/core-js-pure/internals/has-own-property.js","../../node_modules/core-js-pure/internals/uid.js","../../node_modules/core-js-pure/internals/well-known-symbol.js","../../node_modules/core-js-pure/internals/to-primitive.js","../../node_modules/core-js-pure/internals/to-property-key.js","../../node_modules/core-js-pure/internals/document-create-element.js","../../node_modules/core-js-pure/internals/ie8-dom-define.js","../../node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","../../node_modules/core-js-pure/internals/is-forced.js","../../node_modules/core-js-pure/internals/function-bind-context.js","../../node_modules/core-js-pure/internals/v8-prototype-define-bug.js","../../node_modules/core-js-pure/internals/an-object.js","../../node_modules/core-js-pure/internals/object-define-property.js","../../node_modules/core-js-pure/internals/create-non-enumerable-property.js","../../node_modules/core-js-pure/internals/export.js","../../node_modules/core-js-pure/internals/shared-key.js","../../node_modules/core-js-pure/internals/correct-prototype-getter.js","../../node_modules/core-js-pure/internals/object-get-prototype-of.js","../../node_modules/core-js-pure/internals/a-possible-prototype.js","../../node_modules/core-js-pure/internals/object-set-prototype-of.js","../../node_modules/core-js-pure/internals/to-integer-or-infinity.js","../../node_modules/core-js-pure/internals/to-absolute-index.js","../../node_modules/core-js-pure/internals/to-length.js","../../node_modules/core-js-pure/internals/length-of-array-like.js","../../node_modules/core-js-pure/internals/array-includes.js","../../node_modules/core-js-pure/internals/hidden-keys.js","../../node_modules/core-js-pure/internals/object-keys-internal.js","../../node_modules/core-js-pure/internals/enum-bug-keys.js","../../node_modules/core-js-pure/internals/object-get-own-property-names.js","../../node_modules/core-js-pure/internals/object-get-own-property-symbols.js","../../node_modules/core-js-pure/internals/own-keys.js","../../node_modules/core-js-pure/internals/copy-constructor-properties.js","../../node_modules/core-js-pure/internals/object-keys.js","../../node_modules/core-js-pure/internals/object-define-properties.js","../../node_modules/core-js-pure/internals/html.js","../../node_modules/core-js-pure/internals/object-create.js","../../node_modules/core-js-pure/internals/clear-error-stack.js","../../node_modules/core-js-pure/internals/install-error-cause.js","../../node_modules/core-js-pure/internals/iterators.js","../../node_modules/core-js-pure/internals/is-array-iterator-method.js","../../node_modules/core-js-pure/internals/to-string-tag-support.js","../../node_modules/core-js-pure/internals/classof.js","../../node_modules/core-js-pure/internals/get-iterator-method.js","../../node_modules/core-js-pure/internals/get-iterator.js","../../node_modules/core-js-pure/internals/iterator-close.js","../../node_modules/core-js-pure/internals/iterate.js","../../node_modules/core-js-pure/internals/to-string.js","../../node_modules/core-js-pure/internals/normalize-string-argument.js","../../node_modules/core-js-pure/internals/error-stack-installable.js","../../node_modules/core-js-pure/modules/es.aggregate-error.js","../../node_modules/core-js-pure/internals/inspect-source.js","../../node_modules/core-js-pure/internals/native-weak-map.js","../../node_modules/core-js-pure/internals/internal-state.js","../../node_modules/core-js-pure/internals/function-name.js","../../node_modules/core-js-pure/internals/redefine.js","../../node_modules/core-js-pure/internals/iterators-core.js","../../node_modules/core-js-pure/internals/object-to-string.js","../../node_modules/core-js-pure/internals/set-to-string-tag.js","../../node_modules/core-js-pure/internals/create-iterator-constructor.js","../../node_modules/core-js-pure/internals/define-iterator.js","../../node_modules/core-js-pure/modules/es.array.iterator.js","../../node_modules/core-js-pure/internals/native-promise-constructor.js","../../node_modules/core-js-pure/internals/redefine-all.js","../../node_modules/core-js-pure/internals/set-species.js","../../node_modules/core-js-pure/internals/an-instance.js","../../node_modules/core-js-pure/internals/check-correctness-of-iteration.js","../../node_modules/core-js-pure/internals/is-constructor.js","../../node_modules/core-js-pure/internals/a-constructor.js","../../node_modules/core-js-pure/internals/species-constructor.js","../../node_modules/core-js-pure/internals/array-slice.js","../../node_modules/core-js-pure/internals/validate-arguments-length.js","../../node_modules/core-js-pure/internals/engine-is-ios.js","../../node_modules/core-js-pure/internals/engine-is-node.js","../../node_modules/core-js-pure/internals/task.js","../../node_modules/core-js-pure/internals/engine-is-ios-pebble.js","../../node_modules/core-js-pure/internals/engine-is-webos-webkit.js","../../node_modules/core-js-pure/internals/microtask.js","../../node_modules/core-js-pure/internals/new-promise-capability.js","../../node_modules/core-js-pure/internals/promise-resolve.js","../../node_modules/core-js-pure/internals/host-report-errors.js","../../node_modules/core-js-pure/internals/perform.js","../../node_modules/core-js-pure/internals/queue.js","../../node_modules/core-js-pure/internals/engine-is-browser.js","../../node_modules/core-js-pure/modules/es.promise.js","../../node_modules/core-js-pure/modules/es.promise.all-settled.js","../../node_modules/core-js-pure/modules/es.promise.any.js","../../node_modules/core-js-pure/modules/es.promise.finally.js","../../node_modules/core-js-pure/internals/string-multibyte.js","../../node_modules/core-js-pure/modules/es.string.iterator.js","../../node_modules/core-js-pure/es/promise/index.js","../../node_modules/core-js-pure/internals/dom-iterables.js","../../node_modules/core-js-pure/modules/web.dom-collections.iterator.js","../../node_modules/core-js-pure/stable/promise/index.js","../../node_modules/@babel/runtime-corejs3/core-js-stable/promise.js","../../src/js/net/sha256.ts","../../node_modules/core-js-pure/internals/entry-virtual.js","../../node_modules/core-js-pure/es/array/virtual/values.js","../../node_modules/core-js-pure/stable/array/virtual/values.js","../../node_modules/core-js-pure/stable/instance/values.js","../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/values.js","../../src/js/Enumerations.gen.ts","../../src/js/ErrorStrings.gen.ts","../../src/js/PhidgetError.ts","../../src/js/Logging.ts","../../src/js/PhidgetLock.ts","../../src/js/phidget22.ts","../../src/js/Connection.ts","../../src/js/net/Request.ts","../../node_modules/core-js-pure/internals/regexp-flags.js","../../node_modules/core-js-pure/es/regexp/flags.js","../../node_modules/core-js-pure/es/instance/flags.js","../../node_modules/core-js-pure/stable/instance/flags.js","../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/flags.js","../../src/js/BridgePacket.ts","../../src/js/ChannelClassName.gen.ts","../../src/js/DeviceClassName.gen.ts","../../src/js/Phidget.gen.ts","../../src/js/Phidget.ts","../../src/js/Channel.ts","../../src/js/net/NetworkChannel.ts","../../src/js/Devices.gen.ts","../../src/js/Device.ts","../../src/js/net/NetworkDevice.ts","../../src/js/net/NetworkConnection.ts","../../src/js/net/NetworkConnection.web.ts","../../src/js/usb/LocalDevice.ts","../../src/js/Utils.ts","../../src/js/usb/PacketTracker.ts","../../node_modules/core-js-pure/internals/is-array.js","../../node_modules/core-js-pure/modules/es.array.reverse.js","../../node_modules/core-js-pure/es/array/virtual/reverse.js","../../node_modules/core-js-pure/es/instance/reverse.js","../../node_modules/core-js-pure/stable/instance/reverse.js","../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/reverse.js","../../src/js/SupportedEnum.gen.ts","../../src/js/usb/VintPackets.ts","../../src/js/usb/USB.ts","../../src/js/usb/PhidgetUSBDevice.ts","../../src/js/usb/device/HubDevice.ts","../../src/js/usb/VintPackets.gen.ts","../../src/js/usb/device/VINTDevice.ts","../../src/js/usb/LocalChannel.ts","../../src/js/usb/device/InterfaceKitDevice.ts","../../src/js/usb/device/RFIDDevice.ts","../../src/js/usb/device/SpatialDevice.ts","../../src/js/usb/device/EncoderDevice.ts","../../src/js/usb/device/BridgeDevice.ts","../../src/js/usb/device/DataAdapterDevice.ts","../../src/js/usb/device/GenericDevice.ts","../../src/js/usb/device/TemperatureSensorDevice.ts","../../src/js/usb/device/AccelerometerDevice.ts","../../src/js/usb/CreateUSBDevice.ts","../../src/js/usb/USBConnection.ts","../../src/js/usb/USBConnection.web.ts","../../src/js/class/VoltageRatioInput.gen.ts","../../src/js/AnalogSensor.ts","../../src/js/class/VoltageRatioInput.ts","../../src/js/class/DigitalInput.gen.ts","../../src/js/class/DigitalInput.ts","../../src/js/class/DigitalOutput.gen.ts","../../src/js/class/DigitalOutput.ts","../../src/js/class/RCServo.gen.ts","../../src/js/class/RCServo.ts","../../src/js/class/VoltageOutput.gen.ts","../../src/js/class/VoltageOutput.ts","../../src/js/class/Accelerometer.gen.ts","../../src/js/class/Accelerometer.ts","../../node_modules/core-js-pure/internals/array-reduce.js","../../node_modules/core-js-pure/internals/array-method-is-strict.js","../../node_modules/core-js-pure/modules/es.array.reduce.js","../../node_modules/core-js-pure/es/array/virtual/reduce.js","../../node_modules/core-js-pure/es/instance/reduce.js","../../node_modules/core-js-pure/stable/instance/reduce.js","../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/reduce.js","../../src/js/class/VoltageInput.gen.ts","../../src/js/class/VoltageInput.ts","../../src/js/class/CapacitiveTouch.gen.ts","../../src/js/class/CapacitiveTouch.ts","../../src/js/class/RFID.gen.ts","../../src/js/class/RFID.ts","../../src/js/class/GPS.gen.ts","../../src/js/class/GPS.ts","../../src/js/class/Gyroscope.gen.ts","../../src/js/class/Gyroscope.ts","../../src/js/class/Magnetometer.gen.ts","../../src/js/class/Magnetometer.ts","../../src/js/class/Spatial.gen.ts","../../src/js/class/Spatial.ts","../../src/js/class/TemperatureSensor.gen.ts","../../src/js/class/TemperatureSensor.ts","../../src/js/class/Encoder.gen.ts","../../src/js/class/Encoder.ts","../../src/js/class/FrequencyCounter.gen.ts","../../src/js/class/FrequencyCounter.ts","../../src/js/class/IR.gen.ts","../../src/js/class/IR.ts","../../src/js/class/PHSensor.gen.ts","../../src/js/class/PHSensor.ts","../../src/js/class/DCMotor.gen.ts","../../src/js/class/DCMotor.ts","../../src/js/class/CurrentInput.gen.ts","../../src/js/class/CurrentInput.ts","../../src/js/class/Stepper.gen.ts","../../src/js/class/Stepper.ts","../../src/js/class/LCD.gen.ts","../../src/js/class/LCD.ts","../../src/js/class/MotorPositionController.gen.ts","../../src/js/class/MotorPositionController.ts","../../src/js/class/BLDCMotor.gen.ts","../../src/js/class/BLDCMotor.ts","../../src/js/class/DistanceSensor.gen.ts","../../src/js/class/DistanceSensor.ts","../../src/js/class/HumiditySensor.gen.ts","../../src/js/class/HumiditySensor.ts","../../src/js/class/LightSensor.gen.ts","../../src/js/class/LightSensor.ts","../../src/js/class/PressureSensor.gen.ts","../../src/js/class/PressureSensor.ts","../../src/js/class/ResistanceInput.gen.ts","../../src/js/class/ResistanceInput.ts","../../src/js/class/PowerGuard.gen.ts","../../src/js/class/PowerGuard.ts","../../src/js/class/SoundSensor.gen.ts","../../src/js/class/SoundSensor.ts","../../src/js/class/Hub.gen.ts","../../src/js/class/Hub.ts","../../src/js/class/FirmwareUpgrade.gen.ts","../../src/js/class/FirmwareUpgrade.ts","../../src/js/class/Generic.gen.ts","../../src/js/class/Generic.ts","../../node_modules/core-js-pure/internals/whitespaces.js","../../node_modules/core-js-pure/internals/string-trim.js","../../node_modules/core-js-pure/internals/string-trim-forced.js","../../node_modules/core-js-pure/modules/es.string.trim.js","../../node_modules/core-js-pure/es/string/virtual/trim.js","../../node_modules/core-js-pure/es/instance/trim.js","../../node_modules/core-js-pure/stable/instance/trim.js","../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/trim.js","../../src/js/class/Dictionary.gen.ts","../../src/js/class/Dictionary.ts","../../src/js/CreatePhidgetChannel.gen.ts","../../src/js/Manager.ts"],"sourcesContent":["var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar uncurryThis = NATIVE_BIND && bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? function (fn) {\n  return fn && uncurryThis(fn);\n} : function (fn) {\n  return fn && function () {\n    return call.apply(fn, arguments);\n  };\n};\n","// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar Object = global.Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : Object(it);\n} : Object;\n","var global = require('../internals/global');\n\nvar TypeError = global.TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = {};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Object = global.Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));\n};\n","var global = require('../internals/global');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  try {\n    return String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar TypeError = global.TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw TypeError(tryToString(argument) + ' is not a function');\n};\n","var aCallable = require('../internals/a-callable');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return func == null ? undefined : aCallable(func);\n};\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar TypeError = global.TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = true;\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.21.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","var global = require('../internals/global');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar Object = global.Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TypeError = global.TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar String = global.String;\nvar TypeError = global.TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw TypeError(String(argument) + ' is not an object');\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar TypeError = global.TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n  options.name        - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind timers to global for call from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changs in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && !targetPrototype[key]) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var global = require('../internals/global');\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar Object = global.Object;\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof Object ? ObjectPrototype : null;\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar String = global.String;\nvar TypeError = global.TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw TypeError(\"Can't set \" + String(argument) + ' as a prototype');\n};\n","/* eslint-disable no-proto -- safe */\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- safe\n  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","module.exports = {};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String(Error(arg).stack); })('zxcasd');\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string') {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","var isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\n// `InstallErrorCause` abstract operation\n// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\nmodule.exports = function (O, options) {\n  if (isObject(options) && 'cause' in options) {\n    createNonEnumerableProperty(O, 'cause', options.cause);\n  }\n};\n","module.exports = {};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var global = require('../internals/global');\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Object = global.Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var classof = require('../internals/classof');\nvar getMethod = require('../internals/get-method');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return getMethod(it, ITERATOR)\n    || getMethod(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw TypeError(tryToString(argument) + ' is not iterable');\n};\n","var call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","var global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar TypeError = global.TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw TypeError(tryToString(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n  while (!(step = call(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n","var global = require('../internals/global');\nvar classof = require('../internals/classof');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","var toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","var fails = require('../internals/fails');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = !fails(function () {\n  var error = Error('a');\n  if (!('stack' in error)) return true;\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));\n  return error.stack !== 7;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar clearErrorStack = require('../internals/clear-error-stack');\nvar installErrorCause = require('../internals/install-error-cause');\nvar iterate = require('../internals/iterate');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Error = global.Error;\nvar push = [].push;\n\nvar $AggregateError = function AggregateError(errors, message /* , options */) {\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create(AggregateErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));\n  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));\n  installErrorCause(that, options);\n  var errorsArray = [];\n  iterate(errors, push, { that: errorsArray });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\n\nif (setPrototypeOf) setPrototypeOf($AggregateError, Error);\nelse copyConstructorProperties($AggregateError, Error, { name: true });\n\nvar AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'AggregateError')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$({ global: true }, {\n  AggregateError: $AggregateError\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = uncurryThis(store.get);\n  var wmhas = uncurryThis(store.has);\n  var wmset = uncurryThis(store.set);\n  set = function (it, metadata) {\n    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  redefine(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          redefine(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/define-iterator');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) {\n    if (options && options.unsafe && target[key]) target[key] = src[key];\n    else redefine(target, key, src[key], options);\n  } return target;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","var global = require('../internals/global');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw TypeError('Incorrect invocation');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","var global = require('../internals/global');\nvar isConstructor = require('../internals/is-constructor');\nvar tryToString = require('../internals/try-to-string');\n\nvar TypeError = global.TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nmodule.exports = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw TypeError(tryToString(argument) + ' is not a constructor');\n};\n","var anObject = require('../internals/an-object');\nvar aConstructor = require('../internals/a-constructor');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","var global = require('../internals/global');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n  return passed;\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);\n","var classof = require('../internals/classof-raw');\nvar global = require('../internals/global');\n\nmodule.exports = classof(global.process) == 'process';\n","var global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar bind = require('../internals/function-bind-context');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar fails = require('../internals/fails');\nvar html = require('../internals/html');\nvar arraySlice = require('../internals/array-slice');\nvar createElement = require('../internals/document-create-element');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar Dispatch = global.Dispatch;\nvar Function = global.Function;\nvar MessageChannel = global.MessageChannel;\nvar String = global.String;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar location, defer, channel, port;\n\ntry {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  location = global.location;\n} catch (error) { /* empty */ }\n\nvar run = function (id) {\n  if (hasOwn(queue, id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(String(id), location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var args = arraySlice(arguments, 1);\n    queue[++counter] = function () {\n      apply(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global.addEventListener &&\n    isCallable(global.postMessage) &&\n    !global.importScripts &&\n    location && location.protocol !== 'file:' &&\n    !fails(post)\n  ) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var userAgent = require('../internals/engine-user-agent');\nvar global = require('../internals/global');\n\nmodule.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /web0s(?!.*chrome)/i.test(userAgent);\n","var global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_IOS_PEBBLE = require('../internals/engine-is-ios-pebble');\nvar IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar document = global.document;\nvar process = global.process;\nvar Promise = global.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    // workaround of WebKit ~ iOS Safari 10.1 bug\n    promise.constructor = Promise;\n    then = bind(promise.then, promise);\n    notify = function () {\n      then(flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    // strange IE + webpack dev server bug - use .bind(global)\n    macrotask = bind(macrotask, global);\n    notify = function () {\n      macrotask(flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length == 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","var Queue = function () {\n  this.head = null;\n  this.tail = null;\n};\n\nQueue.prototype = {\n  add: function (item) {\n    var entry = { item: item, next: null };\n    if (this.head) this.tail.next = entry;\n    else this.head = entry;\n    this.tail = entry;\n  },\n  get: function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = entry.next;\n      if (this.tail === entry) this.tail = null;\n      return entry.item;\n    }\n  }\n};\n\nmodule.exports = Queue;\n","module.exports = typeof window == 'object';\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar call = require('../internals/function-call');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar aCallable = require('../internals/a-callable');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar anInstance = require('../internals/an-instance');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar Queue = require('../internals/queue');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_BROWSER = require('../internals/engine-is-browser');\nvar IS_NODE = require('../internals/engine-is-node');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\n\nvar getInternalState = InternalStateModule.getterFor(PROMISE);\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar NativePromisePrototype = NativePromise && NativePromise.prototype;\nvar PromiseConstructor = NativePromise;\nvar PromisePrototype = NativePromisePrototype;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\n\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar NATIVE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar SUBCLASSING = false;\n\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can't detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromisePrototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = new PromiseConstructor(function (resolve) { resolve(1); });\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n  if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && isCallable(then = it.then) ? then : false;\n};\n\nvar callReaction = function (reaction, state) {\n  var value = state.value;\n  var ok = state.state == FULFILLED;\n  var handler = ok ? reaction.ok : reaction.fail;\n  var resolve = reaction.resolve;\n  var reject = reaction.reject;\n  var domain = reaction.domain;\n  var result, then, exited;\n  try {\n    if (handler) {\n      if (!ok) {\n        if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n        state.rejection = HANDLED;\n      }\n      if (handler === true) result = value;\n      else {\n        if (domain) domain.enter();\n        result = handler(value); // can throw\n        if (domain) {\n          domain.exit();\n          exited = true;\n        }\n      }\n      if (result === reaction.promise) {\n        reject(TypeError('Promise-chain cycle'));\n      } else if (then = isThenable(result)) {\n        call(then, result, resolve, reject);\n      } else resolve(result);\n    } else reject(value);\n  } catch (error) {\n    if (domain && !exited) domain.exit();\n    reject(error);\n  }\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  microtask(function () {\n    var reactions = state.reactions;\n    var reaction;\n    while (reaction = reactions.get()) {\n      callReaction(reaction, state);\n    }\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  call(task, global, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  call(task, global, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          call(then, value,\n            bind(internalResolve, wrapper, state),\n            bind(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromisePrototype);\n    aCallable(executor);\n    call(Internal, this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, state), bind(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n  PromisePrototype = PromiseConstructor.prototype;\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: new Queue(),\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromisePrototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.then\n    // eslint-disable-next-line unicorn/no-thenable -- safe\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      state.parent = true;\n      reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;\n      reaction.fail = isCallable(onRejected) && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      if (state.state == PENDING) state.reactions.add(reaction);\n      else microtask(function () {\n        callReaction(reaction, state);\n      });\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, state);\n    this.reject = bind(internalReject, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && isCallable(NativePromise) && NativePromisePrototype !== Object.prototype) {\n    nativeThen = NativePromisePrototype.then;\n\n    if (!SUBCLASSING) {\n      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs\n      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {\n        var that = this;\n        return new PromiseConstructor(function (resolve, reject) {\n          call(nativeThen, that, resolve, reject);\n        }).then(onFulfilled, onRejected);\n      // https://github.com/zloirock/core-js/issues/640\n      }, { unsafe: true });\n\n      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\n      redefine(NativePromisePrototype, 'catch', PromisePrototype['catch'], { unsafe: true });\n    }\n\n    // make `.constructor === Promise` work for native promise-based APIs\n    try {\n      delete NativePromisePrototype.constructor;\n    } catch (error) { /* empty */ }\n\n    // make `instanceof Promise` work for native promise-based APIs\n    if (setPrototypeOf) {\n      setPrototypeOf(NativePromisePrototype, PromisePrototype);\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.es/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    call(capability.reject, undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.es/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.es/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call($promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.es/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      iterate(iterable, function (promise) {\n        call($promiseResolve, C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aCallable = require('../internals/a-callable');\nvar getBuiltIn = require('../internals/get-built-in');\nvar call = require('../internals/function-call');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\nvar PROMISE_ANY_ERROR = 'No one promise resolved';\n\n// `Promise.any` method\n// https://tc39.es/ecma262/#sec-promise.any\n$({ target: 'Promise', stat: true }, {\n  any: function any(iterable) {\n    var C = this;\n    var AggregateError = getBuiltIn('AggregateError');\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var errors = [];\n      var counter = 0;\n      var remaining = 1;\n      var alreadyResolved = false;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyRejected = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyResolved = true;\n          resolve(value);\n        }, function (error) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyRejected = true;\n          errors[index] = error;\n          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n        });\n      });\n      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromise)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromise.prototype['finally'] !== method) {\n    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });\n  }\n}\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","require('../../modules/es.aggregate-error');\nrequire('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.promise');\nrequire('../../modules/es.promise.all-settled');\nrequire('../../modules/es.promise.any');\nrequire('../../modules/es.promise.finally');\nrequire('../../modules/es.string.iterator');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Promise;\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","require('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar global = require('../internals/global');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {\n    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","var parent = require('../../es/promise');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","module.exports = require(\"core-js-pure/stable/promise\");","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n/*  SHA-256 implementation in JavaScript                (c) Chris Veness 2002-2014 / MIT Licence  */\r\n/*                                                                                                */\r\n/*  - see http://csrc.nist.gov/groups/ST/toolkit/secure_hashing.html                              */\r\n/*        http://csrc.nist.gov/groups/ST/toolkit/examples.html                                    */\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n\r\n\r\n/**\r\n * Generates SHA-256 hash of string.\r\n *\r\n * @param   {string} msg - String to be hashed\r\n * @returns {string} Hash of msg as hex character string\r\n */\r\nexport default function sha256hash(msg: string) {\r\n\t/**\r\n\t * Rotates right (circular right shift) value x by n positions [3.2.4].\r\n\t * @private\r\n\t */\r\n\tfunction ROTR(n: number, x: number) {\r\n\t\treturn (x >>> n) | (x << (32 - n));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Logical functions [4.1.2].\r\n\t * @private\r\n\t */\r\n\tfunction S0(x: number) { return ROTR(2, x) ^ ROTR(13, x) ^ ROTR(22, x); }\r\n\tfunction S1(x: number) { return ROTR(6, x) ^ ROTR(11, x) ^ ROTR(25, x); }\r\n\tfunction s0(x: number) { return ROTR(7, x) ^ ROTR(18, x) ^ (x >>> 3); }\r\n\tfunction s1(x: number) { return ROTR(17, x) ^ ROTR(19, x) ^ (x >>> 10); }\r\n\tfunction Ch(x: number, y: number, z: number) { return (x & y) ^ (~x & z); }\r\n\tfunction Maj(x: number, y: number, z: number) { return (x & y) ^ (x & z) ^ (y & z); }\r\n\t\r\n\t/**\r\n\t * Hexadecimal representation of a number.\r\n\t * @private\r\n\t */\r\n\tfunction toHexStr(n: number) {\r\n\t\t// note can't use toString(16) as it is implementation-dependant,\r\n\t\t// and in IE returns signed numbers when used on full words\r\n\t\tlet s = \"\", v;\r\n\t\tfor (let i = 7; i >= 0; i--) { v = (n >>> (i * 4)) & 0xf; s += v.toString(16); }\r\n\t\treturn s;\r\n\t}\r\n\r\n\t// convert string to UTF-8, as SHA only deals with byte-streams\r\n\tmsg = unescape(encodeURIComponent(msg));\r\n\r\n\t// constants [4.2.2]\r\n\tconst K = [\r\n\t\t0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n\t\t0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n\t\t0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n\t\t0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n\t\t0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n\t\t0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n\t\t0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n\t\t0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\r\n\t// initial hash value [5.3.1]\r\n\tconst H = [\r\n\t\t0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\r\n\r\n\t// PREPROCESSING \r\n\r\n\tmsg += String.fromCharCode(0x80);  // add trailing '1' bit (+ 0's padding) to string [5.1.1]\r\n\r\n\t// convert string msg into 512-bit/16-integer blocks arrays of ints [5.2.1]\r\n\tconst l = msg.length / 4 + 2; // length (in 32-bit integers) of msg + 1 + appended length\r\n\tconst N = Math.ceil(l / 16);  // number of 16-integer-blocks required to hold 'l' ints\r\n\tconst M = new Array(N);\r\n\r\n\tfor (let i = 0; i < N; i++) {\r\n\t\tM[i] = new Array(16);\r\n\t\tfor (let j = 0; j < 16; j++) {  // encode 4 chars per integer, big-endian encoding\r\n\t\t\tM[i][j] = (msg.charCodeAt(i * 64 + j * 4) << 24) | (msg.charCodeAt(i * 64 + j * 4 + 1) << 16) |\r\n\t\t\t\t(msg.charCodeAt(i * 64 + j * 4 + 2) << 8) | (msg.charCodeAt(i * 64 + j * 4 + 3));\r\n\t\t} // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\r\n\t}\r\n\t// add length (in bits) into final pair of 32-bit integers (big-endian) [5.1.1]\r\n\t// note: most significant word would be (len-1)*8 >>> 32, but since JS converts\r\n\t// bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\r\n\tM[N - 1][14] = ((msg.length - 1) * 8) / Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);\r\n\tM[N - 1][15] = ((msg.length - 1) * 8) & 0xffffffff;\r\n\r\n\t// HASH COMPUTATION [6.1.2]\r\n\r\n\tconst W = new Array(64); \r\n\tlet a, b, c, d, e, f, g, h;\r\n\tfor (let i = 0; i < N; i++) {\r\n\r\n\t\t// 1 - prepare message schedule 'W'\r\n\t\tfor (let t = 0; t < 16; t++) W[t] = M[i][t];\r\n\t\tfor (let t = 16; t < 64; t++) W[t] = (s1(W[t - 2]) + W[t - 7] + s0(W[t - 15]) + W[t - 16]) & 0xffffffff;\r\n\r\n\t\t// 2 - initialise working variables a, b, c, d, e, f, g, h with previous hash value\r\n\t\ta = H[0]; b = H[1]; c = H[2]; d = H[3]; e = H[4]; f = H[5]; g = H[6]; h = H[7];\r\n\r\n\t\t// 3 - main loop (note 'addition modulo 2^32')\r\n\t\tfor (let t = 0; t < 64; t++) {\r\n\t\t\tconst T1:number = h + S1(e) + Ch(e, f, g) + K[t] + W[t];\r\n\t\t\tconst T2:number = S0(a) + Maj(a, b, c);\r\n\t\t\th = g;\r\n\t\t\tg = f;\r\n\t\t\tf = e;\r\n\t\t\te = (d + T1) & 0xffffffff;\r\n\t\t\td = c;\r\n\t\t\tc = b;\r\n\t\t\tb = a;\r\n\t\t\ta = (T1 + T2) & 0xffffffff;\r\n\t\t}\r\n\t\t// 4 - compute the new intermediate hash value (note 'addition modulo 2^32')\r\n\t\tH[0] = (H[0] + a) & 0xffffffff;\r\n\t\tH[1] = (H[1] + b) & 0xffffffff;\r\n\t\tH[2] = (H[2] + c) & 0xffffffff;\r\n\t\tH[3] = (H[3] + d) & 0xffffffff;\r\n\t\tH[4] = (H[4] + e) & 0xffffffff;\r\n\t\tH[5] = (H[5] + f) & 0xffffffff;\r\n\t\tH[6] = (H[6] + g) & 0xffffffff;\r\n\t\tH[7] = (H[7] + h) & 0xffffffff;\r\n\t}\r\n\r\n\treturn toHexStr(H[0]) + toHexStr(H[1]) + toHexStr(H[2]) + toHexStr(H[3]) +\r\n\t\ttoHexStr(H[4]) + toHexStr(H[5]) + toHexStr(H[6]) + toHexStr(H[7]);\r\n}","var path = require('../internals/path');\n\nmodule.exports = function (CONSTRUCTOR) {\n  return path[CONSTRUCTOR + 'Prototype'];\n};\n","require('../../../modules/es.array.iterator');\nrequire('../../../modules/es.object.to-string');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').values;\n","var parent = require('../../../es/array/virtual/values');\n\nmodule.exports = parent;\n","require('../../modules/web.dom-collections.iterator');\nvar classof = require('../../internals/classof');\nvar hasOwn = require('../../internals/has-own-property');\nvar isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/values');\n\nvar ArrayPrototype = Array.prototype;\n\nvar DOMIterables = {\n  DOMTokenList: true,\n  NodeList: true\n};\n\nmodule.exports = function (it) {\n  var own = it.values;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.values)\n    || hasOwn(DOMIterables, classof(it)) ? method : own;\n};\n","module.exports = require(\"core-js-pure/stable/instance/values\");","/**\n * Encoder interface mode\n * @public\n */\nexport enum EncoderIOMode {\n\t/**\n\t * No additional pull-up or pull-down resistors will be applied to the input lines.\n\t * @public\n\t */\n\tPUSH_PULL = 1,\n\t/**\n\t * 2.2kΩ pull-down resistors will be applied to the input lines.\n\t * @public\n\t */\n\tLINE_DRIVER_2K2 = 2,\n\t/**\n\t * 10kΩ pull-down resistors will be applied to the input lines.\n\t * @public\n\t */\n\tLINE_DRIVER_10K = 3,\n\t/**\n\t * 2.2kΩ pull-up resistors will be applied to the input lines.\n\t * @public\n\t */\n\tOPEN_COLLECTOR_2K2 = 4,\n\t/**\n\t * 10kΩ pull-up resistors will be applied to the input lines.\n\t * @public\n\t */\n\tOPEN_COLLECTOR_10K = 5,\n}\n/**\n * Error codes returned from all API calls via Exceptions.\n * @public\n */\nexport enum ErrorCode {\n\t/**\n\t * Call succeeded.\n\t * @public\n\t */\n\tSUCCESS = 0,\n\t/**\n\t * Not Permitted\n\t * @public\n\t */\n\tNOT_PERMITTED = 1,\n\t/**\n\t * The specified entity does not exist. This is usually a result of Net or Log API calls.\n\t * @public\n\t */\n\tNO_SUCH_ENTITY = 2,\n\t/**\n\t * Call has timed out. This can happen for a number of common reasons: Check that the Phidget you are trying to open is plugged in, and that the addressing parameters have been specified correctly. Check that the Phidget is not already open in another program, such as the Phidget Control Panel, or another program you are developing. If your Phidget has a plug or terminal block for external power, ensure it is plugged in and powered. If you are using remote Phidgets, ensure that your computer can access the remote Phidgets using the Phidget Control Panel. If you are using remote Phidgets, ensure you have enabled Server Discovery or added the server corresponding to the Phidget you are trying to open. If you are using Network Server Discovery, try extending the timeout to allow more time for the server to be discovered.\n\t * @public\n\t */\n\tTIMEOUT = 3,\n\t/**\n\t * Keep Alive Failure\n\t * @public\n\t */\n\tKEEP_ALIVE = 58,\n\t/**\n\t * The operation was interrupted; either from an error, or because the device was closed.\n\t * @public\n\t */\n\tINTERRUPTED = 4,\n\t/**\n\t * IO Issue\n\t * @public\n\t */\n\tIO = 5,\n\t/**\n\t * Memory Issue\n\t * @public\n\t */\n\tNO_MEMORY = 6,\n\t/**\n\t * Access to the resource (file) is denied. This can happen when enabling logging.\n\t * @public\n\t */\n\tACCESS = 7,\n\t/**\n\t * Address Issue\n\t * @public\n\t */\n\tFAULT = 8,\n\t/**\n\t * Specified resource is in use. This error code is not normally used.\n\t * @public\n\t */\n\tBUSY = 9,\n\t/**\n\t * Object Exists\n\t * @public\n\t */\n\tEXISTS = 10,\n\t/**\n\t * Object is not a directory\n\t * @public\n\t */\n\tIS_NOT_DIRECTORY = 11,\n\t/**\n\t * Object is a directory\n\t * @public\n\t */\n\tIS_DIRECTORY = 12,\n\t/**\n\t * Invalid or malformed command. This can be caused by sending a command to a device which is not supported in it's current configuration.\n\t * @public\n\t */\n\tINVALID = 13,\n\t/**\n\t * Too many open files in system\n\t * @public\n\t */\n\tTOO_MANY_FILES_SYSTEM = 14,\n\t/**\n\t * Too many open files\n\t * @public\n\t */\n\tTOO_MANY_FILES = 15,\n\t/**\n\t * The provided buffer argument size is too small.\n\t * @public\n\t */\n\tNO_SPACE = 16,\n\t/**\n\t * File too Big\n\t * @public\n\t */\n\tFILE_TOO_BIG = 17,\n\t/**\n\t * Read Only Filesystem\n\t * @public\n\t */\n\tREAD_ONLY_FILESYSTEM = 18,\n\t/**\n\t * Read Only Object\n\t * @public\n\t */\n\tREAD_ONLY = 19,\n\t/**\n\t * This API call is not supported. For Class APIs this means that this API is not supported by this device. This can also mean the API is not supported on this OS, or OS configuration.\n\t * @public\n\t */\n\tUNSUPPORTED = 20,\n\t/**\n\t * One or more of the parameters passed to the function is not accepted by the channel in its current configuration.\n\t * @public\n\t */\n\tINVALID_ARGUMENT = 21,\n\t/**\n\t * Try again\n\t * @public\n\t */\n\tTRY_AGAIN = 22,\n\t/**\n\t * Not Empty\n\t * @public\n\t */\n\tNOT_EMPTY = 26,\n\t/**\n\t * Something unexpected has occured. Enable library logging and have a look at the log, or contact Phidgets support.\n\t * @public\n\t */\n\tUNEXPECTED = 28,\n\t/**\n\t * Duplicated request. Can happen with some Net API calls, such as trying to add the same server twice.\n\t * @public\n\t */\n\tDUPLICATE = 27,\n\t/**\n\t * Bad Credential\n\t * @public\n\t */\n\tBAD_PASSWORD = 37,\n\t/**\n\t * Network Unavailable\n\t * @public\n\t */\n\tNETWORK_UNAVAILABLE = 45,\n\t/**\n\t * Connection Refused\n\t * @public\n\t */\n\tCONNECTION_REFUSED = 35,\n\t/**\n\t * Connection Reset\n\t * @public\n\t */\n\tCONNECTION_RESET = 46,\n\t/**\n\t * No route to host\n\t * @public\n\t */\n\tHOST_UNREACHABLE = 48,\n\t/**\n\t * No Such Device\n\t * @public\n\t */\n\tNO_SUCH_DEVICE = 40,\n\t/**\n\t * A Phidget channel object of the wrong channel class was passed into this API call.\n\t * @public\n\t */\n\tWRONG_DEVICE = 50,\n\t/**\n\t * Broken Pipe\n\t * @public\n\t */\n\tBROKEN_PIPE = 41,\n\t/**\n\t * Name Resolution Failure\n\t * @public\n\t */\n\tNAME_RESOLUTION_FAILURE = 44,\n\t/**\n\t * The value is unknown. This can happen right after attach, when the value has not yet been recieved from the Phidget. This can also happen if a device has not yet been configured / enabled. Some properties can only be read back after being set.\n\t * @public\n\t */\n\tUNKNOWN_VALUE = 51,\n\t/**\n\t * This can happen for a number of common reasons. Be sure you are opening the channel before trying to use it. If you are opening the channel, the program may not be waiting for the channel to be attached. If possible use openWaitForAttachment. Otherwise, be sure to check the Attached property of the channel before trying to use it.\n\t * @public\n\t */\n\tNOT_ATTACHED = 52,\n\t/**\n\t * Invalid or Unexpected Packet\n\t * @public\n\t */\n\tINVALID_PACKET = 53,\n\t/**\n\t * Argument List Too Long\n\t * @public\n\t */\n\tTOO_BIG = 54,\n\t/**\n\t * Bad Version\n\t * @public\n\t */\n\tBAD_VERSION = 55,\n\t/**\n\t * Channel was closed. This can happen if a channel is closed while openWaitForAttachment is waiting.\n\t * @public\n\t */\n\tCLOSED = 56,\n\t/**\n\t * Device is not configured enough for this API call. Have a look at the must-set properties for this device and make sure to configure them first.\n\t * @public\n\t */\n\tNOT_CONFIGURED = 57,\n\t/**\n\t * End of File\n\t * @public\n\t */\n\tEND_OF_FILE = 31,\n\t/**\n\t * Failsafe Triggered on this channel. Close and Re-open the channel to resume operation.\n\t * @public\n\t */\n\tFAILSAFE = 59,\n\t/**\n\t * The value has been measured to be higher than the valid range of the sensor.\n\t * @public\n\t */\n\tUNKNOWN_VALUE_HIGH = 60,\n\t/**\n\t * The value has been measured to be lower than the valid range of the sensor.\n\t * @public\n\t */\n\tUNKNOWN_VALUE_LOW = 61,\n\t/**\n\t * The power supply of your device is outside the acceptable range to allow operation.\n\t * @public\n\t */\n\tBAD_POWER = 62,\n\t/**\n\t * Something has caused your device to decide it needs to be powered off and on to resume operation.\n\t * @public\n\t */\n\tPOWER_CYCLE = 63,\n\t/**\n\t * The hall sensor on your BLDC Motor Controller is Improperly Connected\n\t * @public\n\t */\n\tHALLSENSOR = 64,\n}\n/**\n * The error code from an Error event\n * @public\n */\nexport enum ErrorEventCode {\n\t/**\n\t * Client and Server protocol versions don't match. Ensure that both sides are using the same release of phidget22.\n\t * @public\n\t */\n\tBAD_VERSION = 1,\n\t/**\n\t * Check that the Phidget is not already open in another program, such as the Phidget Control Panel, or another program you are developing.\n\t * @public\n\t */\n\tBUSY = 2,\n\t/**\n\t * This could be a network communication issue, an authentication issue (if server password is enabled), or a Device access / hardware issue.\n\t * @public\n\t */\n\tNETWORK = 3,\n\t/**\n\t * An error occured dispatching a command or event.\n\t * @public\n\t */\n\tDISPATCH = 4,\n\t/**\n\t * A general failure occured - see description for details.\n\t * @public\n\t */\n\tFAILURE = 5,\n\t/**\n\t * An error state has cleared.\n\t * @public\n\t */\n\tSUCCESS = 4096,\n\t/**\n\t * A sampling overrun happened in firmware.\n\t * @public\n\t */\n\tOVERRUN = 4098,\n\t/**\n\t * One or more packets were lost.\n\t * @public\n\t */\n\tPACKET_LOST = 4099,\n\t/**\n\t * Variable has wrapped around.\n\t * @public\n\t */\n\tWRAP_AROUND = 4100,\n\t/**\n\t * Over-temperature condition detected.\n\t * @public\n\t */\n\tOVER_TEMPERATURE = 4101,\n\t/**\n\t * Over-current condition detected.\n\t * @public\n\t */\n\tOVER_CURRENT = 4102,\n\t/**\n\t * Out of range condition detected.\n\t * @public\n\t */\n\tOUT_OF_RANGE = 4103,\n\t/**\n\t * Power supply problem detected.\n\t * @public\n\t */\n\tBAD_POWER = 4104,\n\t/**\n\t * Saturation condition detected.\n\t * @public\n\t */\n\tSATURATION = 4105,\n\t/**\n\t * Over-voltage condition detected.\n\t * @public\n\t */\n\tOVER_VOLTAGE = 4107,\n\t/**\n\t * Failsafe condition detected.\n\t * @public\n\t */\n\tFAILSAFE_CONDITION = 4108,\n\t/**\n\t * Voltage error detected.\n\t * @public\n\t */\n\tVOLTAGE_ERROR = 4109,\n\t/**\n\t * Energy dump condition detected.\n\t * @public\n\t */\n\tENERGY_DUMP_CONDITION = 4110,\n\t/**\n\t * Motor stall detected.\n\t * @public\n\t */\n\tMOTOR_STALL_CONDITION = 4111,\n\t/**\n\t * Invalid state detected.\n\t * @public\n\t */\n\tINVALID_STATE_CONDITION = 4112,\n\t/**\n\t * Bad connection detected.\n\t * @public\n\t */\n\tBAD_CONNECTION_CONDITION = 4113,\n\t/**\n\t * Measurement is above the valid range.\n\t * @public\n\t */\n\tOUT_OF_RANGE_HIGH_CONDITION = 4114,\n\t/**\n\t * Measurement is below the valid range.\n\t * @public\n\t */\n\tOUT_OF_RANGE_LOW_CONDITION = 4115,\n\t/**\n\t * Fault condition detected.\n\t * @public\n\t */\n\tFAULT = 4116,\n\t/**\n\t * Emergency stop condition detected.\n\t * @public\n\t */\n\tESTOP = 4117,\n}\n/**\n * Phidget device ID\n * @public\n */\nexport enum DeviceID {\n\t/**\n\t * Unknown device\n\t * @internal\n\t */\n\tNONE = 0,\n\t/**\n\t * Unknown device\n\t * @public\n\t */\n\tUNKNOWN = 125,\n\t/**\n\t * Hub Port in Digital Input mode\n\t * @public\n\t */\n\tDIGITAL_INPUT_PORT = 95,\n\t/**\n\t * Hub Port in Digital Output mode\n\t * @public\n\t */\n\tDIGITAL_OUTPUT_PORT = 96,\n\t/**\n\t * Hub Port in Voltage Input mode\n\t * @public\n\t */\n\tVOLTAGE_INPUT_PORT = 97,\n\t/**\n\t * Hub Port in Voltage Ratio Input mode\n\t * @public\n\t */\n\tVOLTAGE_RATIO_INPUT_PORT = 98,\n\t/**\n\t * Dictionary\n\t * @public\n\t */\n\tPN_DICTIONARY = 111,\n\t/**\n\t * PhidgetServo 1-Motor (1000)\n\t * @public\n\t */\n\tPN_1000 = 2,\n\t/**\n\t * PhidgetServo 4-Motor (1001)\n\t * @public\n\t */\n\tPN_1001 = 3,\n\t/**\n\t * PhidgetAnalog 4-Output (1002)\n\t * @public\n\t */\n\tPN_1002 = 4,\n\t/**\n\t * PhidgetAccelerometer 2-Axis (1008)\n\t * @public\n\t */\n\tPN_1008 = 5,\n\t/**\n\t * PhidgetInterfaceKit 8/8/8 (1010, 1013, 1018, 1019)\n\t * @public\n\t */\n\tPN_1010_1013_1018_1019 = 6,\n\t/**\n\t * PhidgetInterfaceKit 2/2/2 (1011)\n\t * @public\n\t */\n\tPN_1011 = 7,\n\t/**\n\t * PhidgetInterfaceKit 0/16/16 (1012)\n\t * @public\n\t */\n\tPN_1012 = 8,\n\t/**\n\t * PhidgetInterfaceKit 0/0/4 (1014)\n\t * @public\n\t */\n\tPN_1014 = 9,\n\t/**\n\t * PhidgetLinearTouch (1015)\n\t * @public\n\t */\n\tPN_1015 = 10,\n\t/**\n\t * PhidgetCircularTouch (1016)\n\t * @public\n\t */\n\tPN_1016 = 11,\n\t/**\n\t * PhidgetInterfaceKit 0/0/8 (1017)\n\t * @public\n\t */\n\tPN_1017 = 12,\n\t/**\n\t * PhidgetRFID (1023)\n\t * @public\n\t */\n\tPN_1023 = 13,\n\t/**\n\t * PhidgetRFID Read-Write (1024)\n\t * @public\n\t */\n\tPN_1024 = 14,\n\t/**\n\t * PhidgetLED-64 (1030)\n\t * @public\n\t */\n\tPN_1030 = 15,\n\t/**\n\t * PhidgetLED-64 Advanced (1031)\n\t * @public\n\t */\n\tPN_1031 = 16,\n\t/**\n\t * PhidgetLED-64 Advanced (1032)\n\t * @public\n\t */\n\tPN_1032 = 17,\n\t/**\n\t * PhidgetGPS (1040)\n\t * @public\n\t */\n\tPN_1040 = 18,\n\t/**\n\t * PhidgetSpatial 0/0/3 Basic (1041)\n\t * @public\n\t */\n\tPN_1041 = 19,\n\t/**\n\t * PhidgetSpatial 3/3/3 Basic (1042)\n\t * @public\n\t */\n\tPN_1042 = 20,\n\t/**\n\t * PhidgetSpatial Precision 0/0/3 High Resolution (1043)\n\t * @public\n\t */\n\tPN_1043 = 21,\n\t/**\n\t * PhidgetSpatial Precision 3/3/3 High Resolution (1044)\n\t * @public\n\t */\n\tPN_1044 = 22,\n\t/**\n\t * PhidgetTemperatureSensor IR (1045)\n\t * @public\n\t */\n\tPN_1045 = 23,\n\t/**\n\t * PhidgetBridge 4-Input (1046)\n\t * @public\n\t */\n\tPN_1046 = 24,\n\t/**\n\t * PhidgetEncoder HighSpeed 4-Input (1047)\n\t * @public\n\t */\n\tPN_1047 = 25,\n\t/**\n\t * PhidgetTemperatureSensor 4-input (1048)\n\t * @public\n\t */\n\tPN_1048 = 26,\n\t/**\n\t * PhidgetSpatial 0/0/3 (1049)\n\t * @public\n\t */\n\tPN_1049 = 27,\n\t/**\n\t * PhidgetTemperatureSensor 1-Input (1051)\n\t * @public\n\t */\n\tPN_1051 = 28,\n\t/**\n\t * PhidgetEncoder Mechanical (1052)\n\t * @public\n\t */\n\tPN_1052 = 29,\n\t/**\n\t * PhidgetAccelerometer 2-Axis (1053)\n\t * @public\n\t */\n\tPN_1053 = 30,\n\t/**\n\t * PhidgetFrequencyCounter (1054)\n\t * @public\n\t */\n\tPN_1054 = 31,\n\t/**\n\t * PhidgetIR (1055)\n\t * @public\n\t */\n\tPN_1055 = 32,\n\t/**\n\t * PhidgetSpatial 3/3/3 (1056)\n\t * @public\n\t */\n\tPN_1056 = 33,\n\t/**\n\t * PhidgetEncoder HighSpeed (1057)\n\t * @public\n\t */\n\tPN_1057 = 34,\n\t/**\n\t * PhidgetPHSensor (1058)\n\t * @public\n\t */\n\tPN_1058 = 35,\n\t/**\n\t * PhidgetAccelerometer 3-Axis (1059)\n\t * @public\n\t */\n\tPN_1059 = 36,\n\t/**\n\t * PhidgetMotorControl LV (1060)\n\t * @public\n\t */\n\tPN_1060 = 37,\n\t/**\n\t * PhidgetAdvancedServo 8-Motor (1061)\n\t * @public\n\t */\n\tPN_1061 = 38,\n\t/**\n\t * PhidgetStepper Unipolar 4-Motor (1062)\n\t * @public\n\t */\n\tPN_1062 = 39,\n\t/**\n\t * PhidgetStepper Bipolar 1-Motor (1063)\n\t * @public\n\t */\n\tPN_1063 = 40,\n\t/**\n\t * PhidgetMotorControl HC (1064)\n\t * @public\n\t */\n\tPN_1064 = 41,\n\t/**\n\t * PhidgetMotorControl 1-Motor (1065)\n\t * @public\n\t */\n\tPN_1065 = 42,\n\t/**\n\t * PhidgetAdvancedServo 1-Motor (1066)\n\t * @public\n\t */\n\tPN_1066 = 43,\n\t/**\n\t * PhidgetStepper Bipolar HC (1067)\n\t * @public\n\t */\n\tPN_1067 = 44,\n\t/**\n\t * PhidgetTextLCD 20x2 with PhidgetInterfaceKit 8/8/8 (1202, 1203)\n\t * @public\n\t */\n\tPN_1202_1203 = 45,\n\t/**\n\t * PhidgetTextLCD Adapter (1204)\n\t * @public\n\t */\n\tPN_1204 = 46,\n\t/**\n\t * PhidgetTextLCD 20x2 (1215, 1216, 1217, 1218)\n\t * @public\n\t */\n\tPN_1215__1218 = 47,\n\t/**\n\t * PhidgetTextLCD 20x2 with PhidgetInterfaceKit 0/8/8 (1219, 1220, 1221, 1222)\n\t * @public\n\t */\n\tPN_1219__1222 = 48,\n\t/**\n\t * pH Adapter\n\t * @public\n\t */\n\tPN_ADP1000 = 49,\n\t/**\n\t * Analog Input Module x8\n\t * @public\n\t */\n\tPN_DAQ1000 = 51,\n\t/**\n\t * Digital Input 4\n\t * @public\n\t */\n\tPN_DAQ1200 = 52,\n\t/**\n\t * Digital Input 4 Isolated\n\t * @public\n\t */\n\tPN_DAQ1300 = 53,\n\t/**\n\t * Digital Input 16\n\t * @public\n\t */\n\tPN_DAQ1301 = 54,\n\t/**\n\t * Versatile Input\n\t * @public\n\t */\n\tPN_DAQ1400 = 55,\n\t/**\n\t * Bridge\n\t * @public\n\t */\n\tPN_DAQ1500 = 56,\n\t/**\n\t * DC Motor Controller with PID\n\t * @public\n\t */\n\tPN_DCC1000 = 57,\n\t/**\n\t * Small DC Motor Controller\n\t * @public\n\t */\n\tPN_DCC1001 = 110,\n\t/**\n\t * 4A Small DC Motor Controller\n\t * @public\n\t */\n\tPN_DCC1002 = 117,\n\t/**\n\t * 2 Channel DC Motor Controller\n\t * @public\n\t */\n\tPN_DCC1003 = 120,\n\t/**\n\t * BLDC Motor Controller\n\t * @public\n\t */\n\tPN_DCC1100 = 108,\n\t/**\n\t * 200mm Distance Sensor\n\t * @public\n\t */\n\tPN_DST1000 = 58,\n\t/**\n\t * 650mm distance sensor\n\t * @public\n\t */\n\tPN_DST1001 = 121,\n\t/**\n\t * 1200mm distance sensor\n\t * @public\n\t */\n\tPN_DST1002 = 126,\n\t/**\n\t * Sonar Distance Sensor\n\t * @public\n\t */\n\tPN_DST1200 = 59,\n\t/**\n\t * Encoder\n\t * @public\n\t */\n\tPN_ENC1000 = 60,\n\t/**\n\t * Phidget SPI device under firmware upgrade\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE_SPI = 104,\n\t/**\n\t * VINT Device in firmware upgrade mode, STM32F0 Proc.\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE_STM32F0 = 102,\n\t/**\n\t * VINT Device in firmware upgrade mode, STM32F3 Proc.\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE_STM32F3 = 145,\n\t/**\n\t * VINT Device in firmware upgrade mode, STM32G0 Proc.\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE_STM32G0 = 143,\n\t/**\n\t * VINT Device in firmware upgrade mode, STM8S Proc.\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE_STM8S = 103,\n\t/**\n\t * USB device in firmware upgrade mode\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE_USB = 101,\n\t/**\n\t * Capacitive Touch Sensor\n\t * @public\n\t */\n\tPN_HIN1000 = 61,\n\t/**\n\t * Capacitive Scroll\n\t * @public\n\t */\n\tPN_HIN1001 = 62,\n\t/**\n\t * Joystick\n\t * @public\n\t */\n\tPN_HIN1100 = 63,\n\t/**\n\t * Dial Encoder\n\t * @public\n\t */\n\tPN_HIN1101 = 109,\n\t/**\n\t * Phidget USB VINT Hub with 6 ports\n\t * @public\n\t */\n\tPN_HUB0000 = 64,\n\t/**\n\t * Phidget USB VINT Hub with 6 ports\n\t * @public\n\t */\n\tPN_HUB0001 = 142,\n\t/**\n\t * Phidget SPI VINT Hub with 6 ports\n\t * @public\n\t */\n\tPN_HUB0004 = 67,\n\t/**\n\t * Phidget Network Hub with 6 ports\n\t * @public\n\t */\n\tPN_HUB5000 = 123,\n\t/**\n\t * Humidity Sensor\n\t * @public\n\t */\n\tPN_HUM1000 = 69,\n\t/**\n\t * Humidity Sensor\n\t * @public\n\t */\n\tPN_HUM1001 = 127,\n\t/**\n\t * VINT Moisture Sensor\n\t * @public\n\t */\n\tPN_HUM1100 = 136,\n\t/**\n\t * PhidgetInterfaceKit 4/8/8\n\t * @internal\n\t */\n\tPN_INTERFACE_KIT488 = 1,\n\t/**\n\t * LCD\n\t * @public\n\t */\n\tPN_LCD1100 = 70,\n\t/**\n\t * LED Driver 32\n\t * @public\n\t */\n\tPN_LED1000 = 71,\n\t/**\n\t * Light Sensor\n\t * @public\n\t */\n\tPN_LUX1000 = 72,\n\t/**\n\t * Phidget Accelerometer\n\t * @public\n\t */\n\tPN_MOT0100 = 146,\n\t/**\n\t * PhidgetSpatial Precision 3/3/3\n\t * @public\n\t */\n\tPN_MOT0109 = 140,\n\t/**\n\t * PhidgetSpatial Precision 3/3/3\n\t * @public\n\t */\n\tPN_MOT0110 = 141,\n\t/**\n\t * Accelerometer 0/0/3\n\t * @public\n\t */\n\tPN_MOT1100 = 73,\n\t/**\n\t * Spatial 3/3/3\n\t * @public\n\t */\n\tPN_MOT1101 = 74,\n\t/**\n\t * VINT Spatial Phidget AHRS\n\t * @public\n\t */\n\tPN_MOT1102 = 137,\n\t/**\n\t * Analog Output 0-5V\n\t * @public\n\t */\n\tPN_OUT1000 = 75,\n\t/**\n\t * Analog Output (+/-)10V\n\t * @public\n\t */\n\tPN_OUT1001 = 76,\n\t/**\n\t * Analog Output (+/-)10V - 16 bit\n\t * @public\n\t */\n\tPN_OUT1002 = 77,\n\t/**\n\t * Digital Output 4\n\t * @public\n\t */\n\tPN_OUT1100 = 78,\n\t/**\n\t * Barometer\n\t * @public\n\t */\n\tPN_PRE1000 = 79,\n\t/**\n\t * PhidgetAdvancedServo 8-Motor\n\t * @public\n\t */\n\tPN_RCC0004 = 124,\n\t/**\n\t * 8-Servo Controller\n\t * @public\n\t */\n\tPN_RCC1000 = 80,\n\t/**\n\t * Power Relay 4\n\t * @public\n\t */\n\tPN_REL1000 = 81,\n\t/**\n\t * Digital Output 4 Isolated\n\t * @public\n\t */\n\tPN_REL1100 = 82,\n\t/**\n\t * Digital Output 16 Isolated\n\t * @public\n\t */\n\tPN_REL1101 = 83,\n\t/**\n\t * Power Supply Protector\n\t * @public\n\t */\n\tPN_SAF1000 = 84,\n\t/**\n\t * Sound Pressure Level Sensor\n\t * @public\n\t */\n\tPN_SND1000 = 85,\n\t/**\n\t * Bipolar Stepper Motor Controller\n\t * @public\n\t */\n\tPN_STC1000 = 86,\n\t/**\n\t * Bipolar Stepper Motor SmallController\n\t * @public\n\t */\n\tPN_STC1001 = 115,\n\t/**\n\t * 8A Bipolar Stepper Motor Controller\n\t * @public\n\t */\n\tPN_STC1002 = 118,\n\t/**\n\t * 4A Bipolar Stepper Motor SmallController\n\t * @public\n\t */\n\tPN_STC1003 = 119,\n\t/**\n\t * 4A Bipolar Stepper Motor SmallController\n\t * @public\n\t */\n\tPN_STC1005 = 149,\n\t/**\n\t * Integrated Temperature Sensor\n\t * @public\n\t */\n\tPN_TMP1000 = 87,\n\t/**\n\t * Thermocouple 1\n\t * @public\n\t */\n\tPN_TMP1100 = 88,\n\t/**\n\t * Thermocouple 4\n\t * @public\n\t */\n\tPN_TMP1101 = 89,\n\t/**\n\t * RTD\n\t * @public\n\t */\n\tPN_TMP1200 = 90,\n\t/**\n\t * Voltage Sensor High Precision\n\t * @public\n\t */\n\tPN_VCP1000 = 92,\n\t/**\n\t * Voltage Sensor Large\n\t * @public\n\t */\n\tPN_VCP1001 = 93,\n\t/**\n\t * Voltage Sensor Small\n\t * @public\n\t */\n\tPN_VCP1002 = 94,\n\t/**\n\t * 30A Current Sensor\n\t * @public\n\t */\n\tPN_VCP1100 = 105,\n}\n/**\n * Phidget logging level\n * @public\n */\nexport enum LogLevel {\n\t/**\n\t * Critical\n\t * @public\n\t */\n\tCRITICAL = 1,\n\t/**\n\t * Error\n\t * @public\n\t */\n\tERROR = 2,\n\t/**\n\t * Warning\n\t * @public\n\t */\n\tWARNING = 3,\n\t/**\n\t * Info\n\t * @public\n\t */\n\tINFO = 4,\n\t/**\n\t * Debug\n\t * @public\n\t */\n\tDEBUG = 5,\n\t/**\n\t * Verbose\n\t * @public\n\t */\n\tVERBOSE = 6,\n}\n/**\n * Phidget device class\n * @public\n */\nexport enum DeviceClass {\n\t/**\n\t * Any device\n\t * @internal\n\t */\n\tNONE = 0,\n\t/**\n\t * PhidgetAccelerometer device\n\t * @public\n\t */\n\tACCELEROMETER = 1,\n\t/**\n\t * PhidgetAdvancedServo device\n\t * @public\n\t */\n\tADVANCED_SERVO = 2,\n\t/**\n\t * PhidgetAnalog device\n\t * @public\n\t */\n\tANALOG = 3,\n\t/**\n\t * PhidgetBridge device\n\t * @public\n\t */\n\tBRIDGE = 4,\n\t/**\n\t * PhidgetDataAdapter device\n\t * @internal\n\t */\n\tDATA_ADAPTER = 25,\n\t/**\n\t * Dictionary device\n\t * @public\n\t */\n\tDICTIONARY = 24,\n\t/**\n\t * PhidgetEncoder device\n\t * @public\n\t */\n\tENCODER = 5,\n\t/**\n\t * Phidget device in Firmware Upgrade mode\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE = 23,\n\t/**\n\t * PhidgetFrequencyCounter device\n\t * @public\n\t */\n\tFREQUENCY_COUNTER = 6,\n\t/**\n\t * Generic device\n\t * @internal\n\t */\n\tGENERIC = 22,\n\t/**\n\t * PhidgetGPS device\n\t * @public\n\t */\n\tGPS = 7,\n\t/**\n\t * Phidget VINT Hub device\n\t * @public\n\t */\n\tHUB = 8,\n\t/**\n\t * PhidgetInterfaceKit device\n\t * @public\n\t */\n\tINTERFACE_KIT = 9,\n\t/**\n\t * PhidgetIR device\n\t * @public\n\t */\n\tIR = 10,\n\t/**\n\t * PhidgetLED device\n\t * @public\n\t */\n\tLED = 11,\n\t/**\n\t * Phidget Mesh Dongle\n\t * @internal\n\t */\n\tMESH_DONGLE = 12,\n\t/**\n\t * PhidgetMotorControl device\n\t * @public\n\t */\n\tMOTOR_CONTROL = 13,\n\t/**\n\t * PhidgetPHSensor device\n\t * @public\n\t */\n\tPH_SENSOR = 14,\n\t/**\n\t * PhidgetRFID device\n\t * @public\n\t */\n\tRFID = 15,\n\t/**\n\t * PhidgetServo device\n\t * @public\n\t */\n\tSERVO = 16,\n\t/**\n\t * PhidgetSpatial device\n\t * @public\n\t */\n\tSPATIAL = 17,\n\t/**\n\t * PhidgetStepper device\n\t * @public\n\t */\n\tSTEPPER = 18,\n\t/**\n\t * PhidgetTemperatureSensor device\n\t * @public\n\t */\n\tTEMPERATURE_SENSOR = 19,\n\t/**\n\t * PhidgetTextLCD device\n\t * @public\n\t */\n\tTEXT_LCD = 20,\n\t/**\n\t * Phidget VINT device\n\t * @public\n\t */\n\tVINT = 21,\n}\n/**\n * Phidget channel class\n * @public\n */\nexport enum ChannelClass {\n\t/**\n\t * Any channel\n\t * @internal\n\t */\n\tNONE = 0,\n\t/**\n\t * Accelerometer channel\n\t * @public\n\t */\n\tACCELEROMETER = 1,\n\t/**\n\t * BLDC motor channel\n\t * @public\n\t */\n\tBLDC_MOTOR = 35,\n\t/**\n\t * Capacitive Touch channel\n\t * @public\n\t */\n\tCAPACITIVE_TOUCH = 14,\n\t/**\n\t * Current input channel\n\t * @public\n\t */\n\tCURRENT_INPUT = 2,\n\t/**\n\t * Current output channel\n\t * @internal\n\t */\n\tCURRENT_OUTPUT = 38,\n\t/**\n\t * Data adapter channel\n\t * @internal\n\t */\n\tDATA_ADAPTER = 3,\n\t/**\n\t * DC motor channel\n\t * @public\n\t */\n\tDC_MOTOR = 4,\n\t/**\n\t * Dictionary\n\t * @public\n\t */\n\tDICTIONARY = 36,\n\t/**\n\t * Digital input channel\n\t * @public\n\t */\n\tDIGITAL_INPUT = 5,\n\t/**\n\t * Digital output channel\n\t * @public\n\t */\n\tDIGITAL_OUTPUT = 6,\n\t/**\n\t * Distance sensor channel\n\t * @public\n\t */\n\tDISTANCE_SENSOR = 7,\n\t/**\n\t * Encoder channel\n\t * @public\n\t */\n\tENCODER = 8,\n\t/**\n\t * Firmware upgrade channel\n\t * @internal\n\t */\n\tFIRMWARE_UPGRADE = 32,\n\t/**\n\t * Frequency counter channel\n\t * @public\n\t */\n\tFREQUENCY_COUNTER = 9,\n\t/**\n\t * Generic channel\n\t * @internal\n\t */\n\tGENERIC = 33,\n\t/**\n\t * GPS channel\n\t * @public\n\t */\n\tGPS = 10,\n\t/**\n\t * Gyroscope channel\n\t * @public\n\t */\n\tGYROSCOPE = 12,\n\t/**\n\t * VINT Hub channel\n\t * @public\n\t */\n\tHUB = 13,\n\t/**\n\t * Humidity sensor channel\n\t * @public\n\t */\n\tHUMIDITY_SENSOR = 15,\n\t/**\n\t * IR channel\n\t * @public\n\t */\n\tIR = 16,\n\t/**\n\t * LCD channel\n\t * @public\n\t */\n\tLCD = 11,\n\t/**\n\t * Light sensor channel\n\t * @public\n\t */\n\tLIGHT_SENSOR = 17,\n\t/**\n\t * Magnetometer channel\n\t * @public\n\t */\n\tMAGNETOMETER = 18,\n\t/**\n\t * Mesh dongle channel\n\t * @internal\n\t */\n\tMESH_DONGLE = 19,\n\t/**\n\t * Motor position control channel.\n\t * @public\n\t */\n\tMOTOR_POSITION_CONTROLLER = 34,\n\t/**\n\t * Motor velocity control channel.\n\t * @internal\n\t */\n\tMOTOR_VELOCITY_CONTROLLER = 39,\n\t/**\n\t * pH sensor channel\n\t * @public\n\t */\n\tPH_SENSOR = 37,\n\t/**\n\t * Power guard channel\n\t * @public\n\t */\n\tPOWER_GUARD = 20,\n\t/**\n\t * Pressure sensor channel\n\t * @public\n\t */\n\tPRESSURE_SENSOR = 21,\n\t/**\n\t * RC Servo channel\n\t * @public\n\t */\n\tRC_SERVO = 22,\n\t/**\n\t * Resistance input channel\n\t * @public\n\t */\n\tRESISTANCE_INPUT = 23,\n\t/**\n\t * RFID channel\n\t * @public\n\t */\n\tRFID = 24,\n\t/**\n\t * Sound sensor channel\n\t * @public\n\t */\n\tSOUND_SENSOR = 25,\n\t/**\n\t * Spatial channel\n\t * @public\n\t */\n\tSPATIAL = 26,\n\t/**\n\t * Stepper channel\n\t * @public\n\t */\n\tSTEPPER = 27,\n\t/**\n\t * Temperature sensor channel\n\t * @public\n\t */\n\tTEMPERATURE_SENSOR = 28,\n\t/**\n\t * Voltage input channel\n\t * @public\n\t */\n\tVOLTAGE_INPUT = 29,\n\t/**\n\t * Voltage output channel\n\t * @public\n\t */\n\tVOLTAGE_OUTPUT = 30,\n\t/**\n\t * Voltage ratio input channel\n\t * @public\n\t */\n\tVOLTAGE_RATIO_INPUT = 31,\n}\n/**\n * Phidget channel sub class\n * @public\n */\nexport enum ChannelSubclass {\n\t/**\n\t * No subclass\n\t * @public\n\t */\n\tNONE = 1,\n\t/**\n\t * Digital output duty cycle\n\t * @public\n\t */\n\tDIGITAL_OUTPUT_DUTY_CYCLE = 16,\n\t/**\n\t * Digital output frequency\n\t * @public\n\t */\n\tDIGITAL_OUTPUT_FREQUENCY = 18,\n\t/**\n\t * Digital output LED driver\n\t * @public\n\t */\n\tDIGITAL_OUTPUT_LEDDRIVER = 17,\n\t/**\n\t * Encoder IO mode settable\n\t * @public\n\t */\n\tENCODER_MODE_SETTABLE = 96,\n\t/**\n\t * Graphic LCD\n\t * @public\n\t */\n\tLCD_GRAPHIC = 80,\n\t/**\n\t * Text LCD\n\t * @public\n\t */\n\tLCD_TEXT = 81,\n\t/**\n\t * Spatial AHRS/IMU\n\t * @public\n\t */\n\tSPATIAL_AHRS = 112,\n\t/**\n\t * Temperature sensor RTD\n\t * @public\n\t */\n\tTEMPERATURE_SENSOR_RTD = 32,\n\t/**\n\t * Temperature sensor thermocouple\n\t * @public\n\t */\n\tTEMPERATURE_SENSOR_THERMOCOUPLE = 33,\n\t/**\n\t * Voltage sensor port\n\t * @public\n\t */\n\tVOLTAGE_INPUT_SENSOR_PORT = 48,\n\t/**\n\t * Voltage ratio bridge input\n\t * @public\n\t */\n\tVOLTAGE_RATIO_INPUT_BRIDGE = 65,\n\t/**\n\t * Voltage ratio sensor port\n\t * @public\n\t */\n\tVOLTAGE_RATIO_INPUT_SENSOR_PORT = 64,\n}\n/**\n * Phidget mesh mode\n * @public\n */\nexport enum MeshMode {\n\t/**\n\t * Router mode\n\t * @public\n\t */\n\tROUTER = 1,\n\t/**\n\t * Sleepy end device mode\n\t * @public\n\t */\n\tSLEEPY_END_DEVICE = 2,\n}\n/**\n * The voltage level being provided to the sensor\n * @public\n */\nexport enum PowerSupply {\n\t/**\n\t * Switch the sensor power supply off\n\t * @public\n\t */\n\tOFF = 1,\n\t/**\n\t * The sensor is provided with 12 volts\n\t * @public\n\t */\n\tVOLTS_12 = 2,\n\t/**\n\t * The sensor is provided with 24 volts\n\t * @public\n\t */\n\tVOLTS_24 = 3,\n}\n/**\n * RTD wiring configuration\n * @public\n */\nexport enum RTDWireSetup {\n\t/**\n\t * Configures the device to make resistance calculations based on a 2-wire RTD setup.\n\t * @public\n\t */\n\tWIRES_2 = 1,\n\t/**\n\t * Configures the device to make resistance calculations based on a 3-wire RTD setup.\n\t * @public\n\t */\n\tWIRES_3 = 2,\n\t/**\n\t * Configures the device to make resistance calculations based on a 4-wire RTD setup.\n\t * @public\n\t */\n\tWIRES_4 = 3,\n}\n/**\n * The selected polarity mode for the digital input\n * @public\n */\nexport enum InputMode {\n\t/**\n\t * For interfacing NPN digital sensors\n\t * @public\n\t */\n\tNPN = 1,\n\t/**\n\t * For interfacing PNP digital sensors\n\t * @public\n\t */\n\tPNP = 2,\n}\n/**\n * The operating condition of the fan. Choose between on, off, or automatic (based on temperature).\n * @public\n */\nexport enum FanMode {\n\t/**\n\t * Turns the fan off.\n\t * @public\n\t */\n\tOFF = 1,\n\t/**\n\t * Turns the fan on.\n\t * @public\n\t */\n\tON = 2,\n\t/**\n\t * The fan will be automatically controlled based on temperature.\n\t * @public\n\t */\n\tAUTO = 3,\n}\n/**\n * The drive type selection for the motor\n * @public\n */\nexport enum MotorDriveType {\n\t/**\n\t * Configures the motor to coast\n\t * @public\n\t */\n\tCOAST = 1,\n\t/**\n\t * Configures the motor for active control\n\t * @public\n\t */\n\tACTIVE = 2,\n}\n/**\n * The drive type selection for the motor\n * @public\n */\nexport enum MotorPositionType {\n\t/**\n\t * Configures the controller to use the encoder as a position source\n\t * @public\n\t */\n\tENCODER = 1,\n\t/**\n\t * Configures the controller to use the hall-effect sensor as a position source\n\t * @public\n\t */\n\tHALL = 2,\n}\n/**\n * Controls how data from primary and backup spatial sensing chips are used.\n * @public\n */\nexport enum SpatialPrecision {\n\t/**\n\t * High precision sensor is used when possible, fallback to low precision sensor.\n\t * @public\n\t */\n\tHYBRID = 0,\n\t/**\n\t * High precision sensor is always used.\n\t * @public\n\t */\n\tHIGH = 1,\n\t/**\n\t * Low precision sensor is always used.\n\t * @public\n\t */\n\tLOW = 2,\n}\n/**\n * Analog sensor units. These correspond to the types of quantities that can be measured by Phidget analog sensors.\n * @public\n */\nexport enum Unit {\n\t/**\n\t * Unitless\n\t * @public\n\t */\n\tNONE = 0,\n\t/**\n\t * Boolean\n\t * @public\n\t */\n\tBOOLEAN = 1,\n\t/**\n\t * Percent\n\t * @public\n\t */\n\tPERCENT = 2,\n\t/**\n\t * Decibel\n\t * @public\n\t */\n\tDECIBEL = 3,\n\t/**\n\t * Millimeter\n\t * @public\n\t */\n\tMILLIMETER = 4,\n\t/**\n\t * Centimeter\n\t * @public\n\t */\n\tCENTIMETER = 5,\n\t/**\n\t * Meter\n\t * @public\n\t */\n\tMETER = 6,\n\t/**\n\t * Gram\n\t * @public\n\t */\n\tGRAM = 7,\n\t/**\n\t * Kilogram\n\t * @public\n\t */\n\tKILOGRAM = 8,\n\t/**\n\t * Milliampere\n\t * @public\n\t */\n\tMILLIAMPERE = 9,\n\t/**\n\t * Ampere\n\t * @public\n\t */\n\tAMPERE = 10,\n\t/**\n\t * Kilopascal\n\t * @public\n\t */\n\tKILOPASCAL = 11,\n\t/**\n\t * Volt\n\t * @public\n\t */\n\tVOLT = 12,\n\t/**\n\t * Degree Celcius\n\t * @public\n\t */\n\tDEGREE_CELCIUS = 13,\n\t/**\n\t * Lux\n\t * @public\n\t */\n\tLUX = 14,\n\t/**\n\t * Gauss\n\t * @public\n\t */\n\tGAUSS = 15,\n\t/**\n\t * pH\n\t * @public\n\t */\n\tPH = 16,\n\t/**\n\t * Watt\n\t * @public\n\t */\n\tWATT = 17,\n}\n/**\n * Bridge gain amplification setting. Higher gain results in better resolution, but narrower voltage range.\n * @public\n */\nexport enum BridgeGain {\n\t/**\n\t * 1x Amplificaion\n\t * @public\n\t */\n\tGAIN_1X = 1,\n\t/**\n\t * 2x Amplification\n\t * @public\n\t */\n\tGAIN_2X = 2,\n\t/**\n\t * 4x Amplification\n\t * @public\n\t */\n\tGAIN_4X = 3,\n\t/**\n\t * 8x Amplification\n\t * @public\n\t */\n\tGAIN_8X = 4,\n\t/**\n\t * 16x Amplification\n\t * @public\n\t */\n\tGAIN_16X = 5,\n\t/**\n\t * 32x Amplification\n\t * @public\n\t */\n\tGAIN_32X = 6,\n\t/**\n\t * 64x Amplification\n\t * @public\n\t */\n\tGAIN_64X = 7,\n\t/**\n\t * 128x Amplification\n\t * @public\n\t */\n\tGAIN_128X = 8,\n}\n/**\n * The type of sensor attached to the voltage ratio input\n * @public\n */\nexport enum VoltageRatioSensorType {\n\t/**\n\t * Default. Configures the channel to be a generic ratiometric sensor. Unit is volts/volt.\n\t * @public\n\t */\n\tVOLTAGE_RATIO = 0,\n\t/**\n\t * 1101 - IR Distance Adapter, with Sharp Distance Sensor 2D120X (4-30cm)\n\t * @public\n\t */\n\tPN_1101_SHARP2D120X = 11011,\n\t/**\n\t * 1101 - IR Distance Adapter, with Sharp Distance Sensor 2Y0A21 (10-80cm)\n\t * @public\n\t */\n\tPN_1101_SHARP2Y0A21 = 11012,\n\t/**\n\t * 1101 - IR Distance Adapter, with Sharp Distance Sensor 2Y0A02 (20-150cm)\n\t * @public\n\t */\n\tPN_1101_SHARP2Y0A02 = 11013,\n\t/**\n\t * 1102 - IR Reflective Sensor 5mm\n\t * @public\n\t */\n\tPN_1102 = 11020,\n\t/**\n\t * 1103 - IR Reflective Sensor 10cm\n\t * @public\n\t */\n\tPN_1103 = 11030,\n\t/**\n\t * 1104 - Vibration Sensor\n\t * @public\n\t */\n\tPN_1104 = 11040,\n\t/**\n\t * 1105 - Light Sensor\n\t * @public\n\t */\n\tPN_1105 = 11050,\n\t/**\n\t * 1106 - Force Sensor\n\t * @public\n\t */\n\tPN_1106 = 11060,\n\t/**\n\t * 1107 - Humidity Sensor\n\t * @public\n\t */\n\tPN_1107 = 11070,\n\t/**\n\t * 1108 - Magnetic Sensor\n\t * @public\n\t */\n\tPN_1108 = 11080,\n\t/**\n\t * 1109 - Rotation Sensor\n\t * @public\n\t */\n\tPN_1109 = 11090,\n\t/**\n\t * 1110 - Touch Sensor\n\t * @public\n\t */\n\tPN_1110 = 11100,\n\t/**\n\t * 1111 - Motion Sensor\n\t * @public\n\t */\n\tPN_1111 = 11110,\n\t/**\n\t * 1112 - Slider 60\n\t * @public\n\t */\n\tPN_1112 = 11120,\n\t/**\n\t * 1113 - Mini Joy Stick Sensor\n\t * @public\n\t */\n\tPN_1113 = 11130,\n\t/**\n\t * 1115 - Pressure Sensor\n\t * @public\n\t */\n\tPN_1115 = 11150,\n\t/**\n\t * 1116 - Multi-turn Rotation Sensor\n\t * @public\n\t */\n\tPN_1116 = 11160,\n\t/**\n\t * 1118 - 50Amp Current Sensor AC\n\t * @public\n\t */\n\tPN_1118_AC = 11181,\n\t/**\n\t * 1118 - 50Amp Current Sensor DC\n\t * @public\n\t */\n\tPN_1118_DC = 11182,\n\t/**\n\t * 1119 - 20Amp Current Sensor AC\n\t * @public\n\t */\n\tPN_1119_AC = 11191,\n\t/**\n\t * 1119 - 20Amp Current Sensor DC\n\t * @public\n\t */\n\tPN_1119_DC = 11192,\n\t/**\n\t * 1120 - FlexiForce Adapter\n\t * @public\n\t */\n\tPN_1120 = 11200,\n\t/**\n\t * 1121 - Voltage Divider\n\t * @public\n\t */\n\tPN_1121 = 11210,\n\t/**\n\t * 1122 - 30 Amp Current Sensor AC\n\t * @public\n\t */\n\tPN_1122_AC = 11221,\n\t/**\n\t * 1122 - 30 Amp Current Sensor DC\n\t * @public\n\t */\n\tPN_1122_DC = 11222,\n\t/**\n\t * 1124 - Precision Temperature Sensor\n\t * @public\n\t */\n\tPN_1124 = 11240,\n\t/**\n\t * 1125 - Humidity Sensor\n\t * @public\n\t */\n\tPN_1125_HUMIDITY = 11251,\n\t/**\n\t * 1125 - Temperature Sensor\n\t * @public\n\t */\n\tPN_1125_TEMPERATURE = 11252,\n\t/**\n\t * 1126 - Differential Air Pressure Sensor +- 25kPa\n\t * @public\n\t */\n\tPN_1126 = 11260,\n\t/**\n\t * 1128 - MaxBotix EZ-1 Sonar Sensor\n\t * @public\n\t */\n\tPN_1128 = 11280,\n\t/**\n\t * 1129 - Touch Sensor\n\t * @public\n\t */\n\tPN_1129 = 11290,\n\t/**\n\t * 1131 - Thin Force Sensor\n\t * @public\n\t */\n\tPN_1131 = 11310,\n\t/**\n\t * 1134 - Switchable Voltage Divider\n\t * @public\n\t */\n\tPN_1134 = 11340,\n\t/**\n\t * 1136 - Differential Air Pressure Sensor +-2 kPa\n\t * @public\n\t */\n\tPN_1136 = 11360,\n\t/**\n\t * 1137 - Differential Air Pressure Sensor +-7 kPa\n\t * @public\n\t */\n\tPN_1137 = 11370,\n\t/**\n\t * 1138 - Differential Air Pressure Sensor 50 kPa\n\t * @public\n\t */\n\tPN_1138 = 11380,\n\t/**\n\t * 1139 - Differential Air Pressure Sensor 100 kPa\n\t * @public\n\t */\n\tPN_1139 = 11390,\n\t/**\n\t * 1140 - Absolute Air Pressure Sensor 20-400 kPa\n\t * @public\n\t */\n\tPN_1140 = 11400,\n\t/**\n\t * 1141 - Absolute Air Pressure Sensor 15-115 kPa\n\t * @public\n\t */\n\tPN_1141 = 11410,\n\t/**\n\t * 1146 - IR Reflective Sensor 1-4mm\n\t * @public\n\t */\n\tPN_1146 = 11460,\n\t/**\n\t * 3120 - Compression Load Cell (0-4.5 kg)\n\t * @public\n\t */\n\tPN_3120 = 31200,\n\t/**\n\t * 3121 - Compression Load Cell (0-11.3 kg)\n\t * @public\n\t */\n\tPN_3121 = 31210,\n\t/**\n\t * 3122 - Compression Load Cell (0-22.7 kg)\n\t * @public\n\t */\n\tPN_3122 = 31220,\n\t/**\n\t * 3123 - Compression Load Cell (0-45.3 kg)\n\t * @public\n\t */\n\tPN_3123 = 31230,\n\t/**\n\t * 3130 - Relative Humidity Sensor\n\t * @public\n\t */\n\tPN_3130 = 31300,\n\t/**\n\t * 3520 - Sharp Distance Sensor (4-30cm)\n\t * @public\n\t */\n\tPN_3520 = 35200,\n\t/**\n\t * 3521 - Sharp Distance Sensor (10-80cm)\n\t * @public\n\t */\n\tPN_3521 = 35210,\n\t/**\n\t * 3522 - Sharp Distance Sensor (20-150cm)\n\t * @public\n\t */\n\tPN_3522 = 35220,\n}\n/**\n * The forward voltage setting of the LED\n * @public\n */\nexport enum LEDForwardVoltage {\n\t/**\n\t * 1.7 V\n\t * @public\n\t */\n\tVOLTS_1_7 = 1,\n\t/**\n\t * 2.75 V\n\t * @public\n\t */\n\tVOLTS_2_75 = 2,\n\t/**\n\t * 3.2 V\n\t * @public\n\t */\n\tVOLTS_3_2 = 3,\n\t/**\n\t * 3.9 V\n\t * @public\n\t */\n\tVOLTS_3_9 = 4,\n\t/**\n\t * 4.0 V\n\t * @public\n\t */\n\tVOLTS_4_0 = 5,\n\t/**\n\t * 4.8 V\n\t * @public\n\t */\n\tVOLTS_4_8 = 6,\n\t/**\n\t * 5.0 V\n\t * @public\n\t */\n\tVOLTS_5_0 = 7,\n\t/**\n\t * 5.6 V\n\t * @public\n\t */\n\tVOLTS_5_6 = 8,\n}\n/**\n * Voltage supplied to all attached servos\n * @public\n */\nexport enum RCServoVoltage {\n\t/**\n\t * Run all servos on 5V DC\n\t * @public\n\t */\n\tVOLTS_5_0 = 1,\n\t/**\n\t * Run all servos on 6V DC\n\t * @public\n\t */\n\tVOLTS_6_0 = 2,\n\t/**\n\t * Run all servos on 7.4V DC\n\t * @public\n\t */\n\tVOLTS_7_4 = 3,\n}\n/**\n * The selected output voltage range\n * @public\n */\nexport enum VoltageOutputRange {\n\t/**\n\t * ±10V DC\n\t * @public\n\t */\n\tVOLTS_10 = 1,\n\t/**\n\t * 0-5V DC\n\t * @public\n\t */\n\tVOLTS_5 = 2,\n}\n/**\n * Measurement range of the voltage input. Larger ranges have less resolution.\n * @public\n */\nexport enum VoltageRange {\n\t/**\n\t * Range ±10mV DC\n\t * @public\n\t */\n\tMILLIVOLTS_10 = 1,\n\t/**\n\t * Range ±40mV DC\n\t * @public\n\t */\n\tMILLIVOLTS_40 = 2,\n\t/**\n\t * Range ±200mV DC\n\t * @public\n\t */\n\tMILLIVOLTS_200 = 3,\n\t/**\n\t * Range ±312.5mV DC\n\t * @public\n\t */\n\tMILLIVOLTS_312_5 = 4,\n\t/**\n\t * Range ±400mV DC\n\t * @public\n\t */\n\tMILLIVOLTS_400 = 5,\n\t/**\n\t * Range ±1000mV DC\n\t * @public\n\t */\n\tMILLIVOLTS_1000 = 6,\n\t/**\n\t * Range ±2V DC\n\t * @public\n\t */\n\tVOLTS_2 = 7,\n\t/**\n\t * Range ±5V DC\n\t * @public\n\t */\n\tVOLTS_5 = 8,\n\t/**\n\t * Range ±15V DC\n\t * @public\n\t */\n\tVOLTS_15 = 9,\n\t/**\n\t * Range ±40V DC\n\t * @public\n\t */\n\tVOLTS_40 = 10,\n\t/**\n\t * Auto-range mode changes based on the present voltage measurements.\n\t * @public\n\t */\n\tAUTO = 11,\n}\n/**\n * Type of sensor attached to the voltage input\n * @public\n */\nexport enum VoltageSensorType {\n\t/**\n\t * Default. Configures the channel to be a generic voltage sensor. Unit is volts.\n\t * @public\n\t */\n\tVOLTAGE = 0,\n\t/**\n\t * 1114 - Temperature Sensor\n\t * @public\n\t */\n\tPN_1114 = 11140,\n\t/**\n\t * 1117 - Voltage Sensor\n\t * @public\n\t */\n\tPN_1117 = 11170,\n\t/**\n\t * 1123 - Precision Voltage Sensor\n\t * @public\n\t */\n\tPN_1123 = 11230,\n\t/**\n\t * 1127 - Precision Light Sensor\n\t * @public\n\t */\n\tPN_1127 = 11270,\n\t/**\n\t * 1130 - pH Adapter\n\t * @public\n\t */\n\tPN_1130_PH = 11301,\n\t/**\n\t * 1130 - ORP Adapter\n\t * @public\n\t */\n\tPN_1130_ORP = 11302,\n\t/**\n\t * 1132 - 4-20mA Adapter\n\t * @public\n\t */\n\tPN_1132 = 11320,\n\t/**\n\t * 1133 - Sound Sensor\n\t * @public\n\t */\n\tPN_1133 = 11330,\n\t/**\n\t * 1135 - Precision Voltage Sensor\n\t * @public\n\t */\n\tPN_1135 = 11350,\n\t/**\n\t * 1142 - Light Sensor 1000 lux\n\t * @public\n\t */\n\tPN_1142 = 11420,\n\t/**\n\t * 1143 - Light Sensor 70000 lux\n\t * @public\n\t */\n\tPN_1143 = 11430,\n\t/**\n\t * 3500 - AC Current Sensor 10Amp\n\t * @public\n\t */\n\tPN_3500 = 35000,\n\t/**\n\t * 3501 - AC Current Sensor 25Amp\n\t * @public\n\t */\n\tPN_3501 = 35010,\n\t/**\n\t * 3502 - AC Current Sensor 50Amp\n\t * @public\n\t */\n\tPN_3502 = 35020,\n\t/**\n\t * 3503 - AC Current Sensor 100Amp\n\t * @public\n\t */\n\tPN_3503 = 35030,\n\t/**\n\t * 3507 - AC Voltage Sensor 0-250V (50Hz)\n\t * @public\n\t */\n\tPN_3507 = 35070,\n\t/**\n\t * 3508 - AC Voltage Sensor 0-250V (60Hz)\n\t * @public\n\t */\n\tPN_3508 = 35080,\n\t/**\n\t * 3509 - DC Voltage Sensor 0-200V\n\t * @public\n\t */\n\tPN_3509 = 35090,\n\t/**\n\t * 3510 - DC Voltage Sensor 0-75V\n\t * @public\n\t */\n\tPN_3510 = 35100,\n\t/**\n\t * 3511 - DC Current Sensor 0-10mA\n\t * @public\n\t */\n\tPN_3511 = 35110,\n\t/**\n\t * 3512 - DC Current Sensor 0-100mA\n\t * @public\n\t */\n\tPN_3512 = 35120,\n\t/**\n\t * 3513 - DC Current Sensor 0-1A\n\t * @public\n\t */\n\tPN_3513 = 35130,\n\t/**\n\t * 3514 - AC Active Power Sensor 0-250V*0-30A (50Hz)\n\t * @public\n\t */\n\tPN_3514 = 35140,\n\t/**\n\t * 3515 - AC Active Power Sensor 0-250V*0-30A (60Hz)\n\t * @public\n\t */\n\tPN_3515 = 35150,\n\t/**\n\t * 3516 - AC Active Power Sensor 0-250V*0-5A (50Hz)\n\t * @public\n\t */\n\tPN_3516 = 35160,\n\t/**\n\t * 3517 - AC Active Power Sensor 0-250V*0-5A (60Hz)\n\t * @public\n\t */\n\tPN_3517 = 35170,\n\t/**\n\t * 3518 - AC Active Power Sensor 0-110V*0-5A (60Hz)\n\t * @public\n\t */\n\tPN_3518 = 35180,\n\t/**\n\t * 3519 - AC Active Power Sensor 0-110V*0-15A (60Hz)\n\t * @public\n\t */\n\tPN_3519 = 35190,\n\t/**\n\t * 3584 - 0-50A DC Current Transducer\n\t * @public\n\t */\n\tPN_3584 = 35840,\n\t/**\n\t * 3585 - 0-100A DC Current Transducer\n\t * @public\n\t */\n\tPN_3585 = 35850,\n\t/**\n\t * 3586 - 0-250A DC Current Transducer\n\t * @public\n\t */\n\tPN_3586 = 35860,\n\t/**\n\t * 3587 - +-50A DC Current Transducer\n\t * @public\n\t */\n\tPN_3587 = 35870,\n\t/**\n\t * 3588 - +-100A DC Current Transducer\n\t * @public\n\t */\n\tPN_3588 = 35880,\n\t/**\n\t * 3589 - +-250A DC Current Transducer\n\t * @public\n\t */\n\tPN_3589 = 35890,\n\t/**\n\t * MOT2002 - Motion Sensor Low Sensitivity\n\t * @public\n\t */\n\tPN_MOT2002_LOW = 20020,\n\t/**\n\t * MOT2002 - Motion Sensor Medium Sensitivity\n\t * @public\n\t */\n\tPN_MOT2002_MED = 20021,\n\t/**\n\t * MOT2002 - Motion Sensor High Sensitivity\n\t * @public\n\t */\n\tPN_MOT2002_HIGH = 20022,\n\t/**\n\t * VCP4114 - +-25A DC Current Transducer\n\t * @public\n\t */\n\tPN_VCP4114 = 41140,\n}\n/**\n * The protocol used to communicate with the tags\n * @public\n */\nexport enum RFIDProtocol {\n\t/**\n\t * EM4100 Series\n\t * @public\n\t */\n\tEM4100 = 1,\n\t/**\n\t * ISO11785 FDX B\n\t * @public\n\t */\n\tISO11785_FDX_B = 2,\n\t/**\n\t * PhidgetTAG\n\t * @public\n\t */\n\tPHIDGET_TAG = 3,\n}\n/**\n * Controls the AHRS algorithm.\n * @public\n */\nexport enum SpatialAlgorithm {\n\t/**\n\t * No AHRS algorithm is used.\n\t * @public\n\t */\n\tNONE = 0,\n\t/**\n\t * AHRS algorithm, incorporating magnetometer data for yaw correction.\n\t * @public\n\t */\n\tAHRS = 1,\n\t/**\n\t * IMU algorithm, using gyro and accelerometer, but not magnetometer.\n\t * @public\n\t */\n\tIMU = 2,\n}\n/**\n * RTD sensor type\n * @public\n */\nexport enum RTDType {\n\t/**\n\t * Configures the RTD type as a PT100 with a 3850ppm curve.\n\t * @public\n\t */\n\tPT100_3850 = 1,\n\t/**\n\t * Configures the RTD type as a PT1000 with a 3850ppm curve.\n\t * @public\n\t */\n\tPT1000_3850 = 2,\n\t/**\n\t * Configures the RTD type as a PT100 with a 3920ppm curve.\n\t * @public\n\t */\n\tPT100_3920 = 3,\n\t/**\n\t * Configures the RTD type as a PT1000 with a 3920ppm curve.\n\t * @public\n\t */\n\tPT1000_3920 = 4,\n}\n/**\n * The type of thermocouple being used\n * @public\n */\nexport enum ThermocoupleType {\n\t/**\n\t * Configures the thermocouple input as a J-Type thermocouple.\n\t * @public\n\t */\n\tJ = 1,\n\t/**\n\t * Configures the thermocouple input as a K-Type thermocouple.\n\t * @public\n\t */\n\tK = 2,\n\t/**\n\t * Configures the thermocouple input as a E-Type thermocouple.\n\t * @public\n\t */\n\tE = 3,\n\t/**\n\t * Configures the thermocouple input as a T-Type thermocouple.\n\t * @public\n\t */\n\tT = 4,\n}\n/**\n * Type of filter used on the frequency input\n * @public\n */\nexport enum FrequencyFilterType {\n\t/**\n\t * Frequency is calculated from the number of times the signal transitions from a negative voltage to a positive voltage and back again.\n\t * @public\n\t */\n\tZERO_CROSSING = 1,\n\t/**\n\t * Frequency is calculated from the number of times the signal transitions from a logic false to a logic true and back again.\n\t * @public\n\t */\n\tLOGIC_LEVEL = 2,\n}\n/**\n * Describes the encoding technique used for the code\n * @public\n */\nexport enum IRCodeEncoding {\n\t/**\n\t * Unknown - the default value\n\t * @public\n\t */\n\tUNKNOWN = 1,\n\t/**\n\t * Space encoding, or Pulse Distance Modulation\n\t * @public\n\t */\n\tSPACE = 2,\n\t/**\n\t * Pulse encoding, or Pulse Width Modulation\n\t * @public\n\t */\n\tPULSE = 3,\n\t/**\n\t * Bi-Phase, or Manchester encoding\n\t * @public\n\t */\n\tBI_PHASE = 4,\n\t/**\n\t * RC5 - a type of Bi-Phase encoding\n\t * @public\n\t */\n\tRC5 = 5,\n\t/**\n\t * RC6 - a type of Bi-Phase encoding\n\t * @public\n\t */\n\tRC6 = 6,\n}\n/**\n * The length type of the bitstream and gaps\n * @public\n */\nexport enum IRCodeLength {\n\t/**\n\t * Unknown - the default value\n\t * @public\n\t */\n\tUNKNOWN = 1,\n\t/**\n\t * Constant - the bitstream and gap length is constant\n\t * @public\n\t */\n\tCONSTANT = 2,\n\t/**\n\t * Variable - the bitstream has a variable length with a constant gap\n\t * @public\n\t */\n\tVARIABLE = 3,\n}\n/**\n * Method of motor control\n * @public\n */\nexport enum StepperControlMode {\n\t/**\n\t * Control the motor by setting a target position.\n\t * @public\n\t */\n\tSTEP = 0,\n\t/**\n\t * Control the motor by selecting a target velocity (sign indicates direction). The motor will rotate continuously in the chosen direction.\n\t * @public\n\t */\n\tRUN = 1,\n}\n/**\n * The type of font being used\n * @public\n */\nexport enum LCDFont {\n\t/**\n\t * User-defined font #1\n\t * @public\n\t */\n\tUSER1 = 1,\n\t/**\n\t * User-defined font #2\n\t * @public\n\t */\n\tUSER2 = 2,\n\t/**\n\t * 6px by 10px font\n\t * @public\n\t */\n\tDIMENSIONS_6X10 = 3,\n\t/**\n\t * 5px by 8px font\n\t * @public\n\t */\n\tDIMENSIONS_5X8 = 4,\n\t/**\n\t * 6px by 12px font\n\t * @public\n\t */\n\tDIMENSIONS_6X12 = 5,\n}\n/**\n * Size of the attached LCD screen\n * @public\n */\nexport enum LCDScreenSize {\n\t/**\n\t * Screen size unknown\n\t * @public\n\t */\n\tNO_SCREEN = 1,\n\t/**\n\t * One row, eight column text screen\n\t * @public\n\t */\n\tDIMENSIONS_1X8 = 2,\n\t/**\n\t * Two row, eight column text screen\n\t * @public\n\t */\n\tDIMENSIONS_2X8 = 3,\n\t/**\n\t * One row, 16 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_1X16 = 4,\n\t/**\n\t * Two row, 16 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_2X16 = 5,\n\t/**\n\t * Four row, 16 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_4X16 = 6,\n\t/**\n\t * Two row, 20 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_2X20 = 7,\n\t/**\n\t * Four row, 20 column text screen.\n\t * @public\n\t */\n\tDIMENSIONS_4X20 = 8,\n\t/**\n\t * Two row, 24 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_2X24 = 9,\n\t/**\n\t * One row, 40 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_1X40 = 10,\n\t/**\n\t * Two row, 40 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_2X40 = 11,\n\t/**\n\t * Four row, 40 column text screen\n\t * @public\n\t */\n\tDIMENSIONS_4X40 = 12,\n\t/**\n\t * 64px by 128px graphic screen\n\t * @public\n\t */\n\tDIMENSIONS_64X128 = 13,\n}\n/**\n * The on/off state of the pixel to be set\n * @public\n */\nexport enum LCDPixelState {\n\t/**\n\t * Pixel off state\n\t * @public\n\t */\n\tOFF = 0,\n\t/**\n\t * Pixel on state\n\t * @public\n\t */\n\tON = 1,\n\t/**\n\t * Invert the pixel state\n\t * @public\n\t */\n\tINVERT = 2,\n}\n/**\n * The parity setting of the data adapter\n * @public\n */\nexport enum DataAdapterParity {\n\t/**\n\t * No Parity Bit\n\t * @public\n\t */\n\tNONE = 1,\n\t/**\n\t * Even Parity\n\t * @public\n\t */\n\tEVEN = 2,\n\t/**\n\t * Odd Parity\n\t * @public\n\t */\n\tODD = 3,\n}\n/**\n * The number of stop bits used for communication\n * @public\n */\nexport enum DataAdapterStopBits {\n\t/**\n\t * One Stop Bit\n\t * @public\n\t */\n\tONE = 1,\n\t/**\n\t * Two Stop Bits\n\t * @public\n\t */\n\tTWO = 2,\n}\n/**\n * The mothod of handshaking used for communication\n * @public\n */\nexport enum DataAdapterHandshakeMode {\n\t/**\n\t * RTS is never set, and CTS is ignored.\n\t * @public\n\t */\n\tNONE = 1,\n\t/**\n\t * RTS Pin requests to transmit data. CTS input confirms we can send data.\n\t * @public\n\t */\n\tREQUEST_TO_SEND = 2,\n\t/**\n\t * RTS signals this device can receive data. CTS confirms we can send data.\n\t * @public\n\t */\n\tREADY_TO_RECEIVE = 3,\n}\n/**\n * The communication protocol\n * @public\n */\nexport enum DataAdapterProtocol {\n\t/**\n\t * Basic half-duplex RS485. Always receiving until you send data.\n\t * @public\n\t */\n\tRS485 = 1,\n\t/**\n\t * Uses full-duplex RS422 communication.\n\t * @public\n\t */\n\tRS422 = 2,\n\t/**\n\t * Allows communication with DMX512-compatible devices, such as stage lighting\n\t * @public\n\t */\n\tDMX512 = 3,\n\t/**\n\t * Allows communication with MODBUS RTU compatible devices\n\t * @public\n\t */\n\tMODBUS_RTU = 4,\n\t/**\n\t * Allows communication with SPI compatible devices\n\t * @public\n\t */\n\tSPI = 5,\n\t/**\n\t * Allows communication with I2C compatible devices\n\t * @public\n\t */\n\tI2C = 6,\n\t/**\n\t * Allows communication with UART compatible devices\n\t * @public\n\t */\n\tUART = 7,\n\t/**\n\t * Allows communication with RS232 compatible devices\n\t * @public\n\t */\n\tRS232 = 8,\n}\n/**\n * The SPI Mode\n * @public\n */\nexport enum DataAdapterSPIMode {\n\t/**\n\t * CPOL = 0 CPHA = 0\n\t * @public\n\t */\n\tMODE_0 = 1,\n\t/**\n\t * CPOL = 0 CPHA = 1\n\t * @public\n\t */\n\tMODE_1 = 2,\n\t/**\n\t * CPOL = 1 CPHA = 0\n\t * @public\n\t */\n\tMODE_2 = 3,\n\t/**\n\t * CPOL = 1 CPHA = 1\n\t * @public\n\t */\n\tMODE_3 = 4,\n}\n/**\n * The SPI Mode\n * @public\n */\nexport enum DataAdapterEndianness {\n\t/**\n\t * MSB First\n\t * @public\n\t */\n\tMSB_FIRST = 1,\n\t/**\n\t * LSB First\n\t * @public\n\t */\n\tLSB_FIRST = 2,\n}\n/**\n * The IO Voltage\n * @public\n */\nexport enum DataAdapterIOVoltage {\n\t/**\n\t * Voltage supplied by external device\n\t * @public\n\t */\n\tEXTERNAL = 1,\n\t/**\n\t * 1.8V\n\t * @public\n\t */\n\tVOLTS_1_8 = 2,\n\t/**\n\t * 2.5V\n\t * @public\n\t */\n\tVOLTS_2_5 = 3,\n\t/**\n\t * 3.3V\n\t * @public\n\t */\n\tVOLTS_3_3 = 4,\n\t/**\n\t * 5.0V\n\t * @public\n\t */\n\tVOLTS_5 = 5,\n}\n/**\n * The Type of Error on the Packet\n * @public\n */\nexport enum PacketErrorCode {\n\t/**\n\t * No error\n\t * @public\n\t */\n\tOK = 0,\n\t/**\n\t * Unknown Error\n\t * @public\n\t */\n\tUNKNOWN = 1,\n\t/**\n\t * The response packet timed out\n\t * @public\n\t */\n\tTIMEOUT = 2,\n\t/**\n\t * Something about the received transmission didn't match the expected format.\n\t * @public\n\t */\n\tFORMAT = 3,\n\t/**\n\t * The input lines are invalid. This likely means a cable has been unplugged.\n\t * @public\n\t */\n\tINVALID = 4,\n\t/**\n\t * Data is being received fater than it can be processed. Some has been lost.\n\t * @public\n\t */\n\tOVERRUN = 5,\n\t/**\n\t * Something behind the scenes got out of sequence.\n\t * @public\n\t */\n\tCORRUPT = 6,\n}\n/**\n * The measurement range of the sound sensor\n * @public\n */\nexport enum SPLRange {\n\t/**\n\t * Range 102dB\n\t * @public\n\t */\n\tDB_102 = 1,\n\t/**\n\t * Range 82dB\n\t * @public\n\t */\n\tDB_82 = 2,\n}\n/**\n * The mode of the VINT port\n * @public\n */\nexport enum HubPortMode {\n\t/**\n\t * Communicate with a smart VINT device\n\t * @public\n\t */\n\tVINT = 0,\n\t/**\n\t * 5V Logic-level digital input\n\t * @public\n\t */\n\tDIGITAL_INPUT = 1,\n\t/**\n\t * 3.3V digital output\n\t * @public\n\t */\n\tDIGITAL_OUTPUT = 2,\n\t/**\n\t * 0-5V voltage input for non-ratiometric sensors \n\t * @public\n\t */\n\tVOLTAGE_INPUT = 3,\n\t/**\n\t * 0-5V voltage input for ratiometric sensors\n\t * @public\n\t */\n\tVOLTAGE_RATIO_INPUT = 4,\n}\n","\n/** @internal */\nexport const PhidgetErrorDescription = {\n\t0: 'Success',\n\t1: 'Not Permitted',\n\t2: 'No Such Entity',\n\t3: 'Timed Out',\n\t58: 'Keep Alive Failure',\n\t4: 'Op Interrupted',\n\t5: 'IO Issue',\n\t6: 'Memory Issue',\n\t7: 'Access (Permission) Issue',\n\t8: 'Address Issue',\n\t9: 'Resource Busy',\n\t10: 'Object Exists',\n\t11: 'Object is not a directory',\n\t12: 'Object is a directory',\n\t13: 'Invalid',\n\t14: 'Too many open files in system',\n\t15: 'Too many open files',\n\t16: 'Not enough space',\n\t17: 'File too Big',\n\t18: 'Read Only Filesystem',\n\t19: 'Read Only Object',\n\t20: 'Operation Not Supported',\n\t21: 'Invalid Argument',\n\t22: 'Try again',\n\t26: 'Not Empty',\n\t28: 'Unexpected Error',\n\t27: 'Duplicate',\n\t37: 'Bad Credential',\n\t45: 'Network Unavailable',\n\t35: 'Connection Refused',\n\t46: 'Connection Reset',\n\t48: 'No route to host',\n\t40: 'No Such Device',\n\t50: 'Wrong Device',\n\t41: 'Broken Pipe',\n\t44: 'Name Resolution Failure',\n\t51: 'Unknown or Invalid Value',\n\t52: 'Device not Attached',\n\t53: 'Invalid or Unexpected Packet',\n\t54: 'Argument List Too Long',\n\t55: 'Bad Version',\n\t56: 'Closed',\n\t57: 'Not Configured',\n\t31: 'End of File',\n\t59: 'Failsafe Triggered',\n\t60: 'Invalid Value - Too High',\n\t61: 'Invalid Value - Too Low',\n\t62: 'Bad Power Supply',\n\t63: 'Power Cycle Required',\n\t64: 'Hall Sensor Error',\n}\n\n","﻿import { PhidgetErrorDescription } from './ErrorStrings.gen';\nimport { ErrorCode } from './Enumerations.gen';\n\n/** @public */\nclass PhidgetError extends Error {\n\t/** \n\t * The Error Code\n\t */\n\terrorCode: ErrorCode;\n\tinnerException?: Error;\n\n\tconstructor(code: ErrorCode, message?: string, innerException?: unknown) {\n\t\tlet msg = (message || PhidgetErrorDescription[code]);\n\t\tif (innerException != undefined) {\n\t\t\tlet innerMsg: string;\n\t\t\tif (innerException instanceof Error) {\n\t\t\t\tinnerMsg = innerException.message;\n\t\t\t} else if (typeof innerException === 'string') {\n\t\t\t\tinnerMsg = innerException;\n\t\t\t} else {\n\t\t\t\tinnerMsg = JSON.stringify(innerException);\n\t\t\t}\n\t\t\tif (innerMsg.length > 0)\n\t\t\t\tmsg += ' - ' + innerMsg;\n\t\t}\n\t\tsuper(msg);\n\n\t\tif (innerException instanceof Error)\n\t\t\tthis.innerException = innerException;\n\n\t\t// Maintains proper stack trace for where our error was thrown (only available on V8)\n\t\tif (Error.captureStackTrace)\n\t\t\tError.captureStackTrace(this, PhidgetError)\n\n\t\tthis.name = \"PhidgetError\";\n\t\tthis.errorCode = code;\n\t}\n\n\tget stacks() {\n\t\tlet _stacks = this.stack\n\t\tif (this.innerException && this.innerException.stack)\n\t\t\t_stacks += '\\n<- ' + this.innerException.stack;\n\t\treturn _stacks;\n\t}\n}\nexport { PhidgetError };","﻿import { LogLevel } from './Enumerations.gen';\n\n// Enable logging by default - user can disable if needed\nlet loglevel: LogLevel = LogLevel.WARNING;\nlet logsEnabled = true;\n\n/**\n * The Logging API controls logs sent to the console. By default, warnings and errors are printed.\n * Verbosity of logs can be changed, or logging can be disabled entirely.\n * @public\n */\nexport class Log {\n\n\t/**\n\t * Sets the log level (verbosity).\n\t */\n\tstatic setLevel(level: LogLevel) {\n\t\tloglevel = level;\n\t}\n\n\t/**\n\t * Gets the log level (verbosity).\n\t */\n\tstatic getLevel() {\n\t\treturn loglevel;\n\t}\n\n\t/**\n\t * Enables logging within the Phidget library. Logs are sent to the console.\n\t * @param level - The logging level\n\t */\n\tstatic enable(level: LogLevel) {\n\t\tif (level !== undefined)\n\t\t\tloglevel = level;\n\t\tlogsEnabled = true;\n\t}\n\n\t/**\n\t * Disables logging within the Phidget library.\n\t */\n\tstatic disable() {\n\t\tlogsEnabled = false;\n\t}\n\n\t/**\n\t * Writes a message to the Phidget library log.\n\t * @param level - The logging level\n\t * @param message - The message\n\t */\n\tstatic log(level: LogLevel, message: string) {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.CRITICAL:\n\t\t\t\tlogcrit(message);\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.ERROR:\n\t\t\t\tlogerr(message);\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.WARNING:\n\t\t\t\tlogwarn(message);\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.INFO:\n\t\t\t\tloginfo(message);\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.DEBUG:\n\t\t\t\tlogdebug(message);\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.VERBOSE:\n\t\t\t\tlogverbose(message);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nconst colours = {\n\tred: '\\x1B[31m',\n\tgreen: '\\x1B[32m',\n\tyellow: '\\x1B[33m',\n\tblue: '\\x1B[34m',\n\tmagenta: '\\x1B[35m',\n\tcyan: '\\x1B[36m',\n\treset: '\\x1B[0m',\n}\n\nlet includeHeader = false;\nlet useColours = false;\nlet msDiff = true;\nlet timestamp = false;\n\nlet prevTime: number | null = null;\n\nexport interface LoggingOptions {\n\tuseColours?: boolean;\n\tmsDiff?: boolean;\n\ttimestamp?: boolean;\n\tincludeHeader?: boolean;\n}\n\nexport function setLogOptions(opts: LoggingOptions) {\n\tif (opts.includeHeader !== undefined)\n\t\tincludeHeader = opts.includeHeader;\n\tif (opts.useColours !== undefined)\n\t\tuseColours = opts.useColours;\n\tif (opts.msDiff !== undefined)\n\t\tmsDiff = opts.msDiff;\n\tif (opts.timestamp !== undefined)\n\t\ttimestamp = opts.timestamp;\n}\n\nfunction colouredText(txt: string, colour: string) {\n\tif (!useColours)\n\t\treturn txt;\n\treturn colour + txt + colours.reset;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction log(logger: Function, lvl: string, msg: string, obj?: unknown) {\n\tif (!logsEnabled)\n\t\treturn;\n\n\tlet msDiffTxt = '';\n\n\tif (msDiff) {\n\t\tconst curr = Number(new Date());\n\t\tconst ms = curr - (prevTime || curr);\n\t\tprevTime = curr;\n\t\tmsDiffTxt = colouredText(' +' + ms + 'ms', colours.green);\n\t}\n\n\tconst m = (timestamp ? new Date().toISOString() + ' ' : '')\n\t\t+ (includeHeader ? colouredText('phidget22', colours.blue) +  lvl + ' : ' : '')\n\t\t+ msg + msDiffTxt;\n\tif (obj)\n\t\tlogger(m + ' -', obj);\n\telse\n\t\tlogger(m);\n}\n\nexport function logcrit(msg: string, obj?: unknown) {\n\tif (loglevel >= LogLevel.CRITICAL)\n\t\tlog(console.error, ' <' + colouredText('CRIT', colours.red) + '>', msg, obj);\n}\nexport function logerr(msg: string, obj?: unknown) {\n\tif (loglevel >= LogLevel.ERROR)\n\t\tlog(console.error, '<' + colouredText('ERROR', colours.red) + '>', msg, obj);\n}\nexport function logwarn(msg: string, obj?: unknown) {\n\tif (loglevel >= LogLevel.WARNING)\n\t\tlog(console.warn, ' <' + colouredText('Warn', colours.yellow) + '>', msg, obj);\n}\nexport function loginfo(msg: string, obj?: unknown) {\n\tif (loglevel >= LogLevel.INFO)\n\t\tlog(console.log, ' <' + 'Info' + '>', msg, obj);\n}\nexport function logdebug(msg: string, obj?: unknown) {\n\tif (loglevel >= LogLevel.DEBUG)\n\t\tlog(console.debug, '<' + colouredText('Debug', colours.cyan) + '>', msg, obj);\n}\nexport function logverbose(msg: string, obj?: unknown) {\n\tif (loglevel >= LogLevel.VERBOSE)\n\t\tlog(console.debug, ' <' + colouredText('Verb', colours.blue) + '>', msg, obj);\n}\n\nexport function logbuffer(message: string, buffer: BufferSource) {\n\n\t// Don't do any work if we aren't at VERBOSE loglevel\n\tif (loglevel < LogLevel.VERBOSE)\n\t\treturn;\n\n\tlet bytestring = \" \";\n\tlet view: DataView;\n\n\tif (ArrayBuffer.isView(buffer)) {\n\t\t// buffer is ArrayBufferView\n\t\tview = new DataView(buffer.buffer);\n\t} else {\n\t\t// buffer is ArrayBuffer\n\t\tview = new DataView(buffer);\n\t}\n\n\tfor (let i = 0; i < view.byteLength; i++) {\n\t\tlet by = view.getUint8(i).toString(16);\n\t\tif (by.length === 1)\n\t\t\tby = \"0\" + by;\n\t\tbytestring += \"0x\" + by + \", \";\n\t}\n\n\tbytestring = bytestring.slice(0, bytestring.length - 2);\n\n\tlogverbose(message + \" - \" + bytestring);\n}\n\nexport function logEventException(err: unknown) {\n\tlogwarn(\"Unhandled exception in event handler\", err);\n}","import { logverbose } from \"./Logging\";\r\n\r\n/** @internal */\r\nclass PhidgetLock {\r\n\tprivate _locked: boolean;\r\n\tprivate releaseEvents: Array<() => void>;\r\n\r\n\tconstructor() {\r\n\t\tthis._locked = false;\r\n\t\tthis.releaseEvents = [];\r\n\t}\r\n\r\n\tprivate onRelease(listener: () => void) {\r\n\t\tthis.releaseEvents.push(listener);\r\n\t}\r\n\r\n\tprivate removeReleaseListener(listener: () => void) {\r\n\t\tconst idx = this.releaseEvents.indexOf(listener);\r\n\t\tif (idx > -1)\r\n\t\t\tthis.releaseEvents.splice(idx, 1);\r\n\t}\r\n\r\n\tprivate emitRelease() {\r\n\t\t// Must create a copy because the winning tryAcquire() removes itself from the list\r\n\t\tconst listeners = this.releaseEvents.slice();\r\n\t\tconst length = listeners.length;\r\n\t\tfor (let i = 0; i < length; i++)\r\n\t\t\tlisteners[i]();\r\n\t\tlogverbose('LOCK Released!');\r\n\t}\r\n\r\n\tacquire(): Promise<void> {\r\n\t\tlogverbose('LOCK Aquiring..');\r\n\t\treturn new Promise<void>(resolve => {\r\n\t\t\tif (!this._locked) {\r\n\t\t\t\tthis._locked = true;\r\n\t\t\t\treturn resolve();\r\n\t\t\t}\r\n\r\n\t\t\tconst tryAcquire = () => {\r\n\t\t\t\tif (!this._locked) {\r\n\t\t\t\t\tthis._locked = true;\r\n\t\t\t\t\tthis.removeReleaseListener(tryAcquire);\r\n\t\t\t\t\tlogverbose('LOCK Aquired!');\r\n\t\t\t\t\treturn resolve();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.onRelease(tryAcquire);\r\n\t\t});\r\n\t}\r\n\r\n\trelease() {\r\n\t\tthis._locked = false;\r\n\t\tsetTimeout(() => this.emitRelease());\r\n\t}\r\n\r\n\tget locked() { return this._locked; }\r\n}\r\n\r\nexport { PhidgetLock };","import { logerr, loginfo } from './Logging';\nimport { PhidgetChannel } from './Phidget';\nimport { Manager } from './Manager';\nimport { PhidgetConnection } from './Connection';\nimport { Channel } from './Channel';\nimport { PhidgetLock } from './PhidgetLock';\nimport { Device } from './Device';\n\nexport const C_LIBRARY_VERSION = \"1.16\"\n\n/**\n * The base Phidget22 library version for this release - corresponds to the C library version\n * @public\n */\nexport const LibraryVersion = \"Phidget22 - Version \" + C_LIBRARY_VERSION + \" - Built [VI]{date}[/VI]\";\n/**\n * The JavaScript library version\n * @public\n */\nexport const JSLibraryVersion = \"[VI]{version} - {date}[/VI]\";\n\nexport const Managers: Manager[] = [];\t\t\t\t/* User Created Managers */\nexport const Connections: PhidgetConnection[] = [];\t\t/* User Created connections */\nexport const UserPhidgets: PhidgetChannel[] = [];\t/* User Created Phidgets */\n\nlet Epoch: number | undefined;\nexport function tm() {\n\tif (Epoch == undefined)\n\t\tEpoch = Date.now();\n\treturn (Date.now() - Epoch);\n}\n\nexport async function scanChannels(userphid: PhidgetChannel) {\n\n\tfor (const conn of Connections) {\n\n\t\tif (userphid._isLocal && conn._isRemote)\n\t\t\tcontinue;\n\n\t\tif (userphid._isRemote && conn._isLocal)\n\t\t\tcontinue;\n\n\t\tif (await conn._match(userphid))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport async function scanUserPhidgets(ch: Channel) {\n\n\tfor (const userphid of UserPhidgets) {\n\t\tif (await ch.tryMatchOpen(userphid))\n\t\t\treturn;\n\t}\n}\n\nlet scanningActive = false;\nlet scanStopped: (() => void) | undefined;\nlet scanLock: PhidgetLock;\nlet scanTimeout: NodeJS.Timer | undefined;\n\nexport async function startScanningUserPhidgets() {\n\n\tif (!scanLock)\n\t\tscanLock = new PhidgetLock();\n\n\tawait scanLock.acquire();\n\tif (scanningActive) {\n\t\tscanLock.release();\n\t\treturn;\n\t}\n\n\tconst scan = () => {\n\t\tscanTimeout = undefined;\n\n\t\tconst again = () => {\n\t\t\t// if still scanning, scan again in 1000ms\n\t\t\tif (scanningActive) {\n\t\t\t\tscanTimeout = setTimeout(scan, 1000);\n\t\t\t} else {\n\t\t\t\tif (scanStopped) {\n\t\t\t\t\tscanStopped();\n\t\t\t\t\tscanStopped = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// This scans channels on all user phidgets in parallel\n\t\tPromise.all(UserPhidgets.filter(userphid => !userphid._attaching && !userphid._isopen).map(userphid => {\n\t\t\treturn scanChannels(userphid);\n\t\t})).then(() => {\n\t\t\tagain();\n\t\t}).catch(err => {\n\t\t\tlogerr(\"Error during User Phidgets scan\", err);\n\t\t\tagain();\n\t\t});\n\t}\n\n\tscanningActive = true;\n\tloginfo(\"Starting User Phidget scanning\");\n\tscan();\n\tscanLock.release();\n}\nexport async function stopScanningUserPhidgets() {\n\n\tif (!scanLock)\n\t\tscanLock = new PhidgetLock();\n\n\tawait scanLock.acquire();\n\tif (!scanningActive) {\n\t\tscanLock.release();\n\t\treturn;\n\t}\n\n\tscanningActive = false;\n\tif (scanTimeout != undefined) {\n\t\t// This means that scanning isn't actively awaiting scanChannels. We can just cancel the timeout.\n\t\tclearTimeout(scanTimeout);\n\t} else {\n\t\t// This means that we need to actively wait for an ongoing scan to finish\n\t\tconst scanStopPromise = new Promise<void>((resolve) => {\n\t\t\tscanStopped = resolve;\n\t\t});\n\t\tawait (scanStopPromise);\n\t}\n\tloginfo(\"User Phidget scanning Stopped\");\n\tscanLock.release();\n}\n\nexport function managerDeviceAttach(dev: Device) {\n\tfor (const m of Managers)\n\t\tm._deviceAttach(dev);\n}\n\nexport function managerDeviceDetach(dev: Device) {\n\tfor (const m of Managers)\n\t\tm._deviceDetach(dev);\n}\n\nexport function managerChannelAttach(ch: Channel) {\n\tfor (const m of Managers)\n\t\tm._channelAttach(ch);\n}\n\nexport function managerChannelDetach(ch: Channel) {\n\tfor (const m of Managers)\n\t\tm._channelDetach(ch);\n}\n","﻿import { ErrorCode } from './Enumerations.gen';\nimport { PhidgetError } from './PhidgetError';\nimport { loginfo, logverbose, logerr } from './Logging';\nimport { Channel } from './Channel';\nimport { PhidgetChannel } from './Phidget';\nimport {\n\tConnections, scanUserPhidgets,\n\tmanagerDeviceAttach, managerChannelDetach, managerDeviceDetach, managerChannelAttach\n} from './phidget22';\nimport { Device } from './Device';\n\ntype ConnectionHandler = (conn: PhidgetConnection) => void;\n\nlet _onConnectionRemoved: ConnectionHandler | null = null;\nlet _onConnectionAdded: ConnectionHandler | null = null;\nfunction onConnectionRemoved(conn: PhidgetConnection) {\n\tif (_onConnectionRemoved)\n\t\t_onConnectionRemoved(conn);\n}\nfunction onConnectionAdded(conn: PhidgetConnection) {\n\tif (_onConnectionAdded)\n\t\t_onConnectionAdded(conn);\n}\n\ntype ConnectionErrorHandler = (this: PhidgetConnection, code: ErrorCode, msg: string) => void;\n\nlet ConnectionID = 0;\n\nexport interface ConnectionOptions { name?: string; onError?: ConnectionErrorHandler; }\n\n/** @internal */\nexport const enum ConnType {\n\tLOCAL = 0,\n\tREMOTE = 1\n}\n\n/** @public */\nexport abstract class PhidgetConnection {\n\t/** @internal */\n\t_channels: Map<string, Channel>;\n\t/** @internal */\n\t_devices: Map<string, Device>;\n\t/** @internal */\n\t_id: number;\n\n\t/** @internal */\n\treadonly abstract _type: ConnType;\n\n\t/** Connects */\n\tprotected abstract connect(): Promise<void>;\n\t/** Closes the connection */\n\tprotected abstract close(): void;\n\n\t/** Connection status */\n\tpublic connected: boolean;\n\t/** Name assigned to this connection via constructor options */\n\tpublic readonly name: string;\n\t/**\n\t* **Error** event\n\t*  * `code` - The error code\n\t*  * `msg` - The error description\n\t* ---\n\t* `Error` is called when an error condition has been detected on the connection.\n\t*/\n\tpublic onError: ConnectionErrorHandler | null = null;\n\n\t/** Sets the global connection removed event handler */\n\tstatic setOnConnectionRemoved(func: ConnectionHandler) { _onConnectionRemoved = func; }\n\t/** Sets the global connection added event handler */\n\tstatic setOnConnectionAdded(func: ConnectionHandler) { _onConnectionAdded = func; }\n\n\t/** @internal */\n\tconstructor(opts?: ConnectionOptions) {\n\n\t\tif (opts != undefined && typeof opts !== 'object')\n\t\t\tthrow new Error('Options argument must be an object');\n\n\t\t// NOTE: This is solely here for the control panel\n\t\tthis._id = ConnectionID++;\n\n\t\tthis.connected = false;\t/* currently connected */\n\n\t\tthis._channels = new Map();\n\t\tthis._devices = new Map();\n\n\t\tthis.name = '';\n\n\t\t/*\n\t\t * Handle user config after basic setup.\n\t\t */\n\t\tif (opts != undefined) {\n\n\t\t\tif (opts.name != undefined && typeof opts.name === 'string')\n\t\t\t\tthis.name = opts.name;\n\n\t\t\tif (opts.onError != undefined && typeof opts.onError === 'function')\n\t\t\t\tthis.onError = opts.onError;\n\t\t}\n\n\t\tif (this.onError === undefined) {\n\t\t\tthis.onError = function (code, msg) {\n\t\t\t\tlogerr(\"Connection error: \" + msg + ':0x' + code.toString(16));\n\t\t\t};\n\t\t}\n\n\t\tConnections.push(this);\n\t\tonConnectionAdded(this);\n\t}\n\n\t/** Removes this connection from the internal Connection list, and cleans up Connection resources */\n\tdelete() {\n\n\t\tif (this.connected)\n\t\t\tthrow (new PhidgetError(ErrorCode.BUSY, 'close connection before deleting'));\n\n\t\tonConnectionRemoved(this);\n\n\t\tif (Connections.includes(this))\n\t\t\tConnections.splice(Connections.indexOf(this), 1);\n\t}\n\n\t/** A unique key representing this connection */\n\tgetKey() { return this._id; }\n\t/** A unique key representing this connection */\n\tget key() { return this._id; }\n\n\t//////////////\n\t// Internal //\n\t//////////////\n\n\t/** @internal */\n\tget _isLocal() { return this._type === ConnType.LOCAL; }\n\t/** @internal */\n\tget _isRemote() { return this._type === ConnType.REMOTE; }\n\n\t/** @internal */\n\t_getChannel(id: string) {\n\t\tconst ch = this._channels.get(id);\n\t\tif (ch == undefined)\n\t\t\tthrow (new PhidgetError(ErrorCode.UNEXPECTED, 'invalid channel id:' + id));\n\t\treturn (ch);\n\t}\n\n\t/** @internal */\n\t_getDevice(id: string) {\n\t\tconst dev = this._devices.get(id);\n\t\tif (dev == undefined)\n\t\t\treturn (null);\n\t\treturn (dev);\n\t}\n\n\t/** @internal */\n\tprotected _detachAllDevices() {\n\n\t\twhile (this._devices.size > 0) {\n\t\t\t// Remove in reverse order so we aren't removing a hub before it's devices, etc.\n\t\t\tconst last = Array.from(this._devices.values())[this._devices.size - 1];\n\t\t\t// NOTE: This removes that device from the list, so we can't just iterate\n\t\t\ttry {\n\t\t\t\tthis._deviceDetach(last);\n\t\t\t} catch (err) {\n\t\t\t\tlogerr(\"Error while detaching all devices\", err);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @internal */\n\tprotected _deviceAttach(dev: Device) {\n\t\tif (this._devices.has(dev.id))\n\t\t\tthrow new PhidgetError(ErrorCode.DUPLICATE, 'duplicate device:' + dev);\n\n\t\t(dev.isHubPort ? logverbose : loginfo)(\"Device Attach: \" + dev);\n\t\tthis._devices.set(dev.id, dev);\n\t\tmanagerDeviceAttach(dev);\n\t}\n\n\t/** @internal */\n\t_deviceDetach(dev: Device) {\n\t\tif (!(this._devices.has(dev.id)))\n\t\t\tthrow new PhidgetError(ErrorCode.NO_SUCH_ENTITY, 'no such device:' + dev);\n\n\t\tfor (const ch of this._channels.entries()) {\n\t\t\tif (ch[1].parent === dev) {\n\t\t\t\tlogverbose(\"Channel Detach: \" + ch[1]);\n\t\t\t\tmanagerChannelDetach(ch[1]);\n\t\t\t\tch[1].detach();\n\t\t\t\tthis._channels.delete(ch[0]);\n\t\t\t}\n\t\t}\n\n\t\t(dev.isHubPort ? logverbose : loginfo)(\"Device Detach: \" + dev);\n\t\tmanagerDeviceDetach(dev);\n\t\tthis._devices.delete(dev.id);\n\t}\n\n\t/** @internal */\n\tprotected _channelAttach(ch: Channel) {\n\t\tif (this._channels.has(ch.id))\n\t\t\tthrow new PhidgetError(ErrorCode.DUPLICATE, 'duplicate channel:' + ch);\n\n\t\tlogverbose(\"Channel Attach: \" + ch);\n\t\tthis._channels.set(ch.id, ch);\n\t\tmanagerChannelAttach(ch);\n\t\tscanUserPhidgets(ch).catch(err => {\n\t\t\tlogerr(\"Error scanning user phidgets\", err);\n\t\t});\n\t}\n\n\t/** @internal */\n\tasync _match(userphid: PhidgetChannel) {\n\n\t\tfor (const ch of this._channels.values()) {\n\t\t\tif (await ch.tryMatchOpen(userphid))\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}","﻿import { NR, P22MSG, P22SMSG } from './NetworkConnection';\n\n/** @internal */\nclass Request {\n\thdrlen: number;\n\tflgs!: number;\n\tlen!: number;\n\treqseq!: number;\n\trepseq!: number;\n\ttype!: P22MSG;\n\tstype!: P22SMSG;\n\n\t/*\n\t * Constructor takes either a buffer to parse, or the parameters to create a new request.\n\t */\n\tconstructor(dataOrLength: Uint8Array);\n\tconstructor(dataOrLength: number, flags: number, reqseq: number, repseq: number, type: P22MSG, stype: P22SMSG);\n\tconstructor(dataOrLength: number | Uint8Array, flgs?: number, reqseq?: number, repseq?: number, type?: P22MSG, stype?: P22SMSG) {\n\n\t\tif (typeof dataOrLength === 'number') {\n\t\t\tif (flgs === undefined || reqseq === undefined || repseq === undefined || type === undefined || stype === undefined)\n\t\t\t\tthrow new Error(\"Invalid Input\");\n\t\t\tthis.len = dataOrLength;\n\t\t\tthis.flgs = flgs;\n\t\t\tthis.reqseq = reqseq;\n\t\t\tthis.repseq = repseq;\n\t\t\tthis.type = type;\n\t\t\tthis.stype = stype;\n\t\t\tthis.hdrlen = 16;\n\t\t} else {\n\t\t\tthis.hdrlen = this.parse(dataOrLength);\n\t\t}\n\t}\n\n\t\n\ttoString() {\n\n\t\treturn ('{flags:0x' + this.flgs.toString(16) + ' len:' + this.len +\n\t\t\t' reqseq:' + this.reqseq + ' repseq:' + this.repseq +\n\t\t\t' type:' + this.type + ' subtype:' + this.stype + '}');\n\t}\n\n\tparse(buf: Uint8Array) {\n\t\tconst magic = (buf[3] << 24) | (buf[2] << 16) | (buf[1] << 8) | buf[0];\n\t\tthis.len = (buf[7] << 24) | (buf[6] << 16) | (buf[5] << 8) | buf[4];\n\t\tthis.flgs = (buf[9] << 8) | buf[8];\n\t\tthis.reqseq = (buf[11] << 8) | buf[10];\n\t\tthis.repseq = (buf[13] << 8) | buf[12];\n\t\tthis.type = buf[14];\n\t\tthis.stype = buf[15];\n\n\t\tif (magic != NR.Magic)\n\t\t\tthrow new Error(\"Bad Request Magic\");\n\n\t\treturn (16);\n\t}\n\n\tget buffer() {\n\t\tconst array = new Uint8Array(16);\n\n\t\tarray[3] = (NR.Magic >> 24) & 0xff;\n\t\tarray[2] = (NR.Magic >> 16) & 0xff;\n\t\tarray[1] = (NR.Magic >> 8) & 0xff;\n\t\tarray[0] = NR.Magic & 0xff;\n\t\tarray[7] = (this.len >> 24) & 0xff;\n\t\tarray[6] = (this.len >> 16) & 0xff;\n\t\tarray[5] = (this.len >> 8) & 0xff;\n\t\tarray[4] = this.len & 0xff;\n\t\tarray[9] = (this.flgs >> 8) & 0xff;\n\t\tarray[8] = this.flgs & 0xff;\n\t\tarray[11] = (this.reqseq >> 8) & 0xff;\n\t\tarray[10] = this.reqseq & 0xff;\n\t\tarray[13] = (this.repseq >> 8) & 0xff;\n\t\tarray[12] = this.repseq & 0xff;\n\t\tarray[14] = this.type;\n\t\tarray[15] = this.stype;\n\n\t\treturn (array);\n\t}\n}\n\nexport { Request };","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","require('../../modules/es.regexp.flags');\nvar uncurryThis = require('../../internals/function-uncurry-this');\nvar regExpFlags = require('../../internals/regexp-flags');\n\nmodule.exports = uncurryThis(regExpFlags);\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar flags = require('../regexp/flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (it) {\n  return (it === RegExpPrototype || isPrototypeOf(RegExpPrototype, it)) ? flags(it) : it.flags;\n};\n","var parent = require('../../es/instance/flags');\n\nmodule.exports = parent;\n","module.exports = require(\"core-js-pure/stable/instance/flags\");","﻿import { PhidgetError } from './PhidgetError';\nimport { ErrorCode } from './Enumerations.gen';\nimport { BP } from './BridgePackets.gen';\nimport { PhidgetConnection } from './Connection';\nimport { Channel } from './Channel';\n\n/** @internal */\nexport const enum PUNK {\n\tBOOL = 0x02,\n\tINT8 = 127,\n\tUINT8 = 0xff,\n\tINT16 = 32767,\n\tUINT16 = 0xffff,\n\tINT32 = 2147483647,\n\tUINT32 = 0xffffffff,\n\t//NOTE: Value in C library is: 9223372036854775807 but JavaScript loses precision\n\tINT64 = 9223372036854776000,\n\t//NOTE: Value in C library is: 0xffffffffffffffff but JavaScript loses precision\n\tUINT64 = 18446744073709552000,\n\tDBL = 1e300,\n\tFLT = 1e30,\n\tENUM = 2147483647,\n\t//NOTE: Value in C library is: 0xffffffffffffffff but JavaScript loses precision\n\tSIZE = 18446744073709552000\n}\n\n/** @internal */\nconst enum BPEntryType {\n\tUNEXPECTED = -1,\n\tNUMBER = 1,\n\tFLOAT = 2,\n\tSTRING = 3,\n\tARRAY = 4,\n\tJSON = 5\n}\n\n/** @internal */\nconst enum BPSource {\n\tBRIDGE = 1,\n\tJSON = 2\n}\n\n/** @internal */\nconst BPE_ISEVENT_FLAG = 0x01\n\n/** @internal */\ntype BPJsonEntryValue = number | string | readonly number[] | Record<string, unknown>;\n/** @internal */\ninterface BPJsonEntry {\n\tt: string,\n\tv: BPJsonEntryValue\n}\n\n/** @internal */\nexport interface BPJsonIn {\n\tv: number;\n\ts: BPSource;\n\tf: number;\n\tp: BP;\n\tI: string;\n\tO: string;\n\tX: number;\n\tc: number;\n\te: Record<string, BPJsonEntry>;\n}\n\n/** @internal */\nexport interface BPJsonOut {\n\tv: number;\n\ts: BPSource;\n\tf: number;\n\tp: BP;\n\tI: string;\n\tX: number;\n\tc: number;\n\te: Record<string, BPJsonEntry>;\n}\n\n/** @internal */\ninterface BPEntryString {\n\tname: string;\n\ttype: 's';\n\tvalue: string;\n}\n/** @internal */\ninterface BPEntryNumber {\n\tname: string;\n\ttype: 'c' | 'h' | 'uh' | 'd' | 'u' | 'l' | 'ul' | 'f' | 'g';\n\tvalue: number;\n}\n/** @internal */\ninterface BPEntryArray {\n\tname: string;\n\ttype: 'R' | 'I' | 'G' | 'U' | 'H';\n\tvalue: readonly number[];\n}\n/** @internal */\ninterface BPEntryObject {\n\tname: string;\n\ttype: 'J';\n\tvalue: Record<string, BPJsonEntryValue>;\n}\n\n/** @internal */\ntype BPEntry = BPEntryString | BPEntryNumber | BPEntryArray | BPEntryObject;\n\n/** @internal */\nclass BridgePacket {\n\tprivate version: number;\n\tprivate source: BPSource;\n\tprivate flags: number;\n\tvpkt?: BP;\n\tprivate ch?: Channel;\n\tentryCount: number;\n\tentries: Record<string, BPJsonEntry>;\n\tlocal: boolean;\n\n\tconstructor();\n\tconstructor(conn: PhidgetConnection, data: BPJsonIn);\n\tconstructor(conn?: PhidgetConnection, data?: BPJsonIn) {\n\n\t\tif (conn != undefined && data != undefined) {\n\t\t\tthis.version = data.v;\n\t\t\tthis.source = data.s;\n\t\t\tthis.flags = data.f;\n\t\t\tthis.vpkt = data.p;\n\t\t\tthis.ch = conn._getChannel(data.O);\n\t\t\tthis.entryCount = data.c;\n\t\t\tthis.entries = data.e;\n\t\t\tthis.local = false;\n\t\t} else {\n\t\t\tthis.version = 0;\n\t\t\tthis.source = BPSource.JSON;\n\t\t\tthis.flags = 0;\n\t\t\tthis.entryCount = 0;\n\t\t\tthis.entries = {};\n\t\t\tthis.local = true;\n\t\t}\n\t}\n\n\tisEvent() {\n\n\t\tif (this.flags & BPE_ISEVENT_FLAG)\n\t\t\treturn (true);\n\t\treturn (false);\n\t}\n\n\tprivate entryType(type: string): BPEntryType {\n\n\t\tswitch (type) {\n\t\t\tcase 'c':\n\t\t\tcase 'h':\n\t\t\tcase 'uh':\n\t\t\tcase 'd':\n\t\t\tcase 'u':\n\t\t\tcase 'l':\n\t\t\tcase 'ul':\n\t\t\t\treturn (BPEntryType.NUMBER);\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\t\treturn (BPEntryType.FLOAT);\n\t\t\tcase 's':\n\t\t\t\treturn (BPEntryType.STRING);\n\t\t\tcase 'R':\n\t\t\tcase 'I':\n\t\t\tcase 'G':\n\t\t\tcase 'U':\n\t\t\tcase 'H':\n\t\t\t\treturn (BPEntryType.ARRAY);\n\t\t\tcase 'J':\n\t\t\t\treturn (BPEntryType.JSON);\n\t\t\tdefault:\n\t\t\t\treturn (BPEntryType.UNEXPECTED);\n\t\t}\n\t}\n\n\tprivate validate(e: BPEntry) {\n\n\t\tswitch (this.entryType(e.type)) {\n\t\t\tcase BPEntryType.NUMBER:\n\t\t\tcase BPEntryType.FLOAT:\n\t\t\t\t// Be nice and try to convert to a number\n\t\t\t\tif (typeof e.value !== 'number') {\n\t\t\t\t\tconst num = Number(e.value);\n\t\t\t\t\tif (Number.isNaN(num))\n\t\t\t\t\t\tthrow new TypeError('Expected number but got ' + typeof e.value);\n\t\t\t\t\te.value = num;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase BPEntryType.STRING:\n\t\t\t\tif (typeof e.value == 'string')\n\t\t\t\t\treturn;\n\t\t\t\tthrow new TypeError('Expected string but got ' + typeof e.value);\n\t\t\tcase BPEntryType.JSON:\n\t\t\t\tif (typeof e.value === 'object')\n\t\t\t\t\treturn;\n\t\t\t\tthrow new TypeError('Expected object but got ' + typeof e.value);\n\t\t\tcase BPEntryType.ARRAY:\n\t\t\t\tif (Array.isArray(e.value))\n\t\t\t\t\treturn;\n\t\t\t\tthrow new TypeError('Expected an Array but got ' + typeof e.value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid entry type: ' + e.type);\n\t\t}\n\t}\n\n\tset(val: BPEntry) {\n\n\t\tthis.validate(val);\n\n\t\tif (val.name in this.entries)\n\t\t\tthrow new Error('value [' + val.name + '] already set');\n\n\t\tconst e: BPJsonEntry = {\n\t\t\tt: val.type,\n\t\t\tv: val.value\n\t\t};\n\n\t\tthis.entries[val.name] = e;\n\t\tthis.entryCount++;\n\t}\n\n\tremove(name: string) {\n\t\tconst entry: BPJsonEntry = {\n\t\t\tt: name,\n\t\t\tv: \"\"\n\t\t}\n\t\tif (!(entry.t in this.entries))\n\t\t\treturn;\n\n\t\tconst filteredEntries: Record<string, BPJsonEntry> = {};\n\t\tfor (const e in this.entries) {\n\t\t\tif (e !== entry.t) {\n\t\t\t\tfilteredEntries[e] = this.entries[e];\n\t\t\t}\n\t\t}\n\t\tthis.entries = filteredEntries;\n\t\tthis.entryCount--;\n\t}\n\n\tadd(val: BPEntry) {\n\n\t\tval.name = this.entryCount.toString();\n\t\tthis.set(val);\n\t}\n\n\tgetJsonOut(ch: Channel) {\n\n\t\tif (this.vpkt == undefined)\n\t\t\tthrow new Error('vpkt not set!');\n\n\t\tconst bp: BPJsonOut = {\n\t\t\tv: this.version,\n\t\t\ts: this.source,\n\t\t\tf: this.flags,\n\t\t\tp: this.vpkt,\n\t\t\tI: ch.parent.id,\n\t\t\tX: ch.uniqueIndex,\n\t\t\tc: this.entryCount,\n\t\t\te: this.entries\n\t\t}\n\t\treturn bp;\n\t}\n\n\tasync send(ch: Channel | undefined, vpkt: BP, callBridgeInput = true): Promise<string | void> {\n\n\t\tif (!ch || !ch.isopen)\n\t\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED);\n\n\t\tthis.vpkt = vpkt;\n\n\t\tconst response = await ch.send(this);\n\n\t\tif (callBridgeInput)\n\t\t\tch.bridgeInput(this);\n\n\t\treturn (response);\n\t}\n\n\t// NOTE: this is only for incoming network BridgePackets\n\tdeliver() {\n\n\t\tif (!this.ch)\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, 'Bridge packet missing channel');\n\n\t\tif (this.ch.isopen === false)\n\t\t\treturn; /* this event was delivered, but we are not open to receive it */\n\n\t\tthis.ch.bridgeInput(this);\n\t}\n\n\t// NOTE: this is for local device->channel packets\n\tsendToChannel(ch: Channel, vpkt: BP) {\n\n\t\tthis.vpkt = vpkt;\n\t\t// We got a packet from a device that isn't an error - reset the error event state\n\t\tch.clearErrorEvent();\n\t\tch.bridgeInput(this);\n\t}\n\n\tgetNumber(name: string | number): number {\n\t\tif (!(name in this.entries))\n\t\t\tthrow new Error(`BP entry '${name}' does not exist.`);\n\n\t\tconst type = this.entryType(this.entries[name].t);\n\t\tif (type != BPEntryType.FLOAT && type != BPEntryType.NUMBER)\n\t\t\tthrow new Error(`BP entry '${name}' is not a number.`);\n\n\t\tif (typeof this.entries[name].v !== 'number')\n\t\t\tthrow new Error(`BP entry '${name}' has an unexpected value!`);\n\n\t\treturn (this.entries[name].v as number);\n\t}\n\tgetArray(name: string | number): number[] {\n\t\tif (!(name in this.entries))\n\t\t\tthrow new Error(`BP entry '${name}' does not exist.`);\n\n\t\tconst type = this.entryType(this.entries[name].t);\n\t\tif (type != BPEntryType.ARRAY)\n\t\t\tthrow new Error(`BP entry '${name}' is not an array.`);\n\n\t\tif (!Array.isArray(this.entries[name].v))\n\t\t\tthrow new Error(`BP entry '${name}' has an unexpected value!`);\n\n\t\treturn (this.entries[name].v as number[]);\n\t}\n\tgetObject(name: string | number): Record<string, unknown> {\n\t\tif (!(name in this.entries))\n\t\t\tthrow new Error(`BP entry '${name}' does not exist.`);\n\n\t\tconst type = this.entryType(this.entries[name].t);\n\t\tif (type != BPEntryType.JSON)\n\t\t\tthrow new Error(`BP entry '${name}' is not an object.`);\n\n\t\tif (typeof this.entries[name].v !== 'object')\n\t\t\tthrow new Error(`BP entry '${name}' has an unexpected value!`);\n\n\t\treturn (this.entries[name].v as Record<string, unknown>);\n\t}\n\tgetString(name: string | number): string {\n\t\tif (!(name in this.entries))\n\t\t\tthrow new Error(`BP entry '${name}' does not exist.`);\n\n\t\tconst type = this.entryType(this.entries[name].t);\n\t\tif (type != BPEntryType.STRING)\n\t\t\tthrow new Error(`BP entry '${name}' is not a string.`);\n\n\t\tif (this.entries[name].v === null)\n\t\t\tthrow new Error(`BP entry '${name}' is null.`);\n\n\t\tif (typeof this.entries[name].v !== 'string')\n\t\t\tthrow new Error(`BP entry '${name}' has an unexpected value!`);\n\n\t\treturn (this.entries[name].v as string);\n\t}\n\tgetBoolean(name: string | number): boolean | PUNK.BOOL {\n\t\tif (!(name in this.entries))\n\t\t\tthrow new Error(`BP entry '${name}' does not exist.`);\n\n\t\tconst type = this.entryType(this.entries[name].t);\n\t\tif (type != BPEntryType.NUMBER)\n\t\t\tthrow new Error(`BP entry '${name}' is not a boolean.`);\n\n\t\tif (typeof this.entries[name].v !== 'number')\n\t\t\tthrow new Error(`BP entry '${name}' has an unexpected value!`);\n\n\t\tif (this.entries[name].v === 0)\n\t\t\treturn false;\n\n\t\tif (this.entries[name].v === 1)\n\t\t\treturn true;\n\n\t\tif (this.entries[name].v === PUNK.BOOL)\n\t\t\treturn PUNK.BOOL;\n\n\t\tthrow new Error(`BP entry '${name}' has an unexpected value!`);\n\t}\n}\n\nexport { BridgePacket };","/** @internal */\nexport const ChannelClassName = {\n\t0: 'PhidgetNone',\n\t1: 'PhidgetAccelerometer',\n\t35: 'PhidgetBLDCMotor',\n\t14: 'PhidgetCapacitiveTouch',\n\t2: 'PhidgetCurrentInput',\n\t38: 'PhidgetCurrentOutput',\n\t3: 'PhidgetDataAdapter',\n\t4: 'PhidgetDCMotor',\n\t36: 'PhidgetDictionary',\n\t5: 'PhidgetDigitalInput',\n\t6: 'PhidgetDigitalOutput',\n\t7: 'PhidgetDistanceSensor',\n\t8: 'PhidgetEncoder',\n\t32: 'PhidgetFirmwareUpgrade',\n\t9: 'PhidgetFrequencyCounter',\n\t33: 'PhidgetGeneric',\n\t10: 'PhidgetGPS',\n\t12: 'PhidgetGyroscope',\n\t13: 'PhidgetHub',\n\t15: 'PhidgetHumiditySensor',\n\t16: 'PhidgetIR',\n\t11: 'PhidgetLCD',\n\t17: 'PhidgetLightSensor',\n\t18: 'PhidgetMagnetometer',\n\t19: 'PhidgetMeshDongle',\n\t34: 'PhidgetMotorPositionController',\n\t39: 'PhidgetMotorVelocityController',\n\t37: 'PhidgetPHSensor',\n\t20: 'PhidgetPowerGuard',\n\t21: 'PhidgetPressureSensor',\n\t22: 'PhidgetRCServo',\n\t23: 'PhidgetResistanceInput',\n\t24: 'PhidgetRFID',\n\t25: 'PhidgetSoundSensor',\n\t26: 'PhidgetSpatial',\n\t27: 'PhidgetStepper',\n\t28: 'PhidgetTemperatureSensor',\n\t29: 'PhidgetVoltageInput',\n\t30: 'PhidgetVoltageOutput',\n\t31: 'PhidgetVoltageRatioInput',\n}\n\n","/** @internal */\nexport const DeviceClassName = {\n\t0: 'PhidgetNone',\n\t1: 'PhidgetAccelerometer',\n\t2: 'PhidgetAdvancedServo',\n\t3: 'PhidgetAnalog',\n\t4: 'PhidgetBridge',\n\t25: 'PhidgetDataAdapter',\n\t24: 'PhidgetDictionary',\n\t5: 'PhidgetEncoder',\n\t23: 'PhidgetFirmwareUpgrade',\n\t6: 'PhidgetFrequencyCounter',\n\t22: 'PhidgetGeneric',\n\t7: 'PhidgetGPS',\n\t8: 'PhidgetHub',\n\t9: 'PhidgetInterfaceKit',\n\t10: 'PhidgetIR',\n\t11: 'PhidgetLED',\n\t12: 'PhidgetMeshDongle',\n\t13: 'PhidgetMotorControl',\n\t14: 'PhidgetPHSensor',\n\t15: 'PhidgetRFID',\n\t16: 'PhidgetServo',\n\t17: 'PhidgetSpatial',\n\t18: 'PhidgetStepper',\n\t19: 'PhidgetTemperatureSensor',\n\t20: 'PhidgetTextLCD',\n\t21: 'PhidgetVINT',\n}\n\n","import * as Enum from './Enumerations.gen';\nimport { Phidget } from './Phidget';\nimport { PhidgetConnection } from './Connection';\n\n/**\n * The core Phidget class deals with functionality common to all Phidgets, such as opening and closing them, or setting Attach, Detach and Event handlers.\n * \n * This class is also used to specify the associations between the Phidget software objects and their corresponding physical devices, and makes it possible to determine which Phidget is which in cases where it might otherwise be ambiguous.\n * \n * This class contains various functions such as **Release**, **Retain**, and **getParent** designed to be used with the **Phidget Manager**. These specialized functions may be safely ignored if your application does not require a **Manager**. You can check the **Manager API** for more information.\n * @public\n */\nabstract class PhidgetBase {\n\t/**\n\t * Pass to <code>setDeviceSerialNumber()</code> to open any serial number.\n\t */\n\tstatic get ANY_SERIAL_NUMBER() { return -1; }\n\t/**\n\t * Pass to <code>setHubPort()</code> to open any hub port.\n\t */\n\tstatic get ANY_HUB_PORT() { return -1; }\n\t/**\n\t * Pass to <code>setChannel()</code> to open any channel.\n\t */\n\tstatic get ANY_CHANNEL() { return -1; }\n\t/**\n\t * Pass to <code>setDeviceLabel()</code> to open any label.\n\t */\n\tstatic get ANY_LABEL() { return null; }\n\t/**\n\t * Pass to <code>open()</code> for an infinite timeout.\n\t */\n\tstatic get INFINITE_TIMEOUT() { return 0; }\n\t/**\n\t * Pass to <code>open()</code> for the default timeout.\n\t */\n\tstatic get DEFAULT_TIMEOUT() { return 2500; }\n\t/**\n\t * Pass to <code>setHubPortSpeed()</code> to set the Hub Port speed automatically when supported by both the hub port and the VINT device.\n\t */\n\tstatic get AUTO_HUBPORTSPEED() { return 0; }\n\t/**\n\t * Gets the attached status of channel. A Phidget is attached after it has been opened and the Phidget library finds and connects to the corresponding hardware device.\n\t * \n\t * *   Most API calls are only valid on attached Phidgets.\n\t * @throws {@link PhidgetError}\n\t */\n\tget attached() { return this.getAttached(); }\n\t/**\n\t * get: Gets the channel index of the channel on the device.  \n\t *   \n\t * set: Specifies the channel index to be opened. The default channel is 0. Set to `ANY_CHANNEL` to open any channel on the specified device.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget channel() { return this.getChannel(); }\n\tset channel(channel: number) { this.setChannel(channel); }\n\t/**\n\t * Returns true if this represents a channel, false if this represents a device. Mostly for use alongside `getParent()` to distinguish channel handles from device handles.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isChannel() { return this.getIsChannel(); }\n\t/**\n\t * Gets the channel class of the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget channelClass() { return this.getChannelClass(); }\n\t/**\n\t * Gets the name of the channel class the channel belongs to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget channelClassName() { return this.getChannelClassName(); }\n\t/**\n\t * Gets the channel's name. This name serves as a description of the specific nature of the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget channelName() { return this.getChannelName(); }\n\t/**\n\t * Gets the subclass for this channel. Allows for identifying channels with specific characteristics without needing to know the exact device and channel index.\n\t * @throws {@link PhidgetError}\n\t */\n\tget channelSubclass() { return this.getChannelSubclass(); }\n\t/**\n\t * Gets the connection associated with this Phidget.\n\t * @throws {@link PhidgetError}\n\t */\n\tget connection() { return this.getConnection(); }\n\t/**\n\t * Gets the device class for the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceClass() { return this.getDeviceClass(); }\n\t/**\n\t * Gets the name of the device class for the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceClassName() { return this.getDeviceClassName(); }\n\t/**\n\t * Gets the string which will match the filename of the firmware upgrade file\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget deviceFirmwareUpgradeString() { return this.getDeviceFirmwareUpgradeString(); }\n\t/**\n\t * Gets the Device ID for the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceID() { return this.getDeviceID(); }\n\t/**\n\t * get: Gets the label of the Phidget which this channel is a part of. A device label is a custom string used to more easily identify a Phidget. Labels are written to a Phidget using `writeDeviceLabel()`, or by right-clicking the device and setting a label in the Phidget Control Panel for Windows.  \n\t *   \n\t * set: Specifies the label of the Phidget to be opened. Leave un-set to open any label. A device label is a custom string used to more easily identify a Phidget. Labels are written to a Phidget using `writeDeviceLabel()`, or by right-clicking the device and setting a label in the Phidget Control Panel for Windows.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceLabel() { return this.getDeviceLabel(); }\n\tset deviceLabel(deviceLabel: string) { this.setDeviceLabel(deviceLabel); }\n\t/**\n\t * Gets the name of the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceName() { return this.getDeviceName(); }\n\t/**\n\t * get: Gets the serial number of the Phidget which this channel is a part of.  \n\t * If the channel is part of a VINT device, this will be the serial number of the VINT Hub the device is attached to.  \n\t *   \n\t * set: Specifies the serial number of the Phidget to be opened. Leave un-set, or set to `ANY_SERIAL_NUMBER` to open any serial number.  \n\t * If the channel is part of a VINT device, this will be the serial number of the VINT Hub the device is attached to.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceSerialNumber() { return this.getDeviceSerialNumber(); }\n\tset deviceSerialNumber(deviceSerialNumber: number) { this.setDeviceSerialNumber(deviceSerialNumber); }\n\t/**\n\t * Gets the SKU (part number) of the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceSKU() { return this.getDeviceSKU(); }\n\t/**\n\t * Gets the firmware version of the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deviceVersion() { return this.getDeviceVersion(); }\n\t/**\n\t * Gets the vint id for the Phidget which this channel is a part of.\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget deviceVINTID() { return this.getDeviceVINTID(); }\n\t/**\n\t * Gets the hub that this channel is attached to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget hub() { return this.getHub(); }\n\t/**\n\t * get: Gets the hub port index of the VINT Hub port that the channel is attached to.  \n\t *   \n\t * set: Specifies the hub port index of the VINT Hub port to open this channel on. Leave un-set, or set to `ANY_HUB_PORT` to open the channel on any VINT Hub port  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget hubPort() { return this.getHubPort(); }\n\tset hubPort(hubPort: number) { this.setHubPort(hubPort); }\n\t/**\n\t * Gets the number of VINT ports present on the VINT Hub that the channel is attached to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget hubPortCount() { return this.getHubPortCount(); }\n\t/**\n\t * get: Gets whether this channel is a VINT Hub port channel, or part of a VINT device attached to a hub port.  \n\t *   \n\t * set: Specifies whether this channel should be opened on a VINT Hub port directly, or on a VINT device attached to a hub port.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isHubPortDevice() { return this.getIsHubPortDevice(); }\n\tset isHubPortDevice(isHubPortDevice: boolean) { this.setIsHubPortDevice(isHubPortDevice); }\n\t/**\n\t * Configures the communication speed for this VINT device. Both the `hubPortSupportsSetSpeed` and `VINTDeviceSupportsSetSpeed` must be true in order to set the hub port speed.Available speeds are: 100000, 160000, 250000, 400000, 500000, 800000 and 1000000. Setting any other speed will select the nearest lower supported speed. The upper speed is bound by the lesser of `maxHubPortSpeed` and `maxVINTDeviceSpeed`. Set the speed to `AUTO_HUBPORTSPEED` to enable Auto Set Speed on Hubs that support it (enabled by default).\n\t * @throws {@link PhidgetError}\n\t */\n\tget hubPortSpeed() { return this.getHubPortSpeed(); }\n\t/**\n\t * The max communication speed of a high-speed capable VINT Port.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxHubPortSpeed() { return this.getMaxHubPortSpeed(); }\n\t/**\n\t * Indicates that the communication speed of this VINT port can be set automatically.\n\t * @throws {@link PhidgetError}\n\t */\n\tget hubPortSupportsAutoSetSpeed() { return this.getHubPortSupportsAutoSetSpeed(); }\n\t/**\n\t * Indicates that the communication speed of this VINT port can be set.\n\t * @throws {@link PhidgetError}\n\t */\n\tget hubPortSupportsSetSpeed() { return this.getHubPortSupportsSetSpeed(); }\n\t/**\n\t * Gets a key which identifies this device or channel uniquely. This can be useful for correlating attach/detach events from the **Manager**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget key() { return this.getKey(); }\n\t/**\n\t * get: Returns true when this channel is attached directly on the local machine, or false otherwise.  \n\t *   \n\t * set: Set to True if the channel is to be opened locally, and not over a network. If both this and `isRemote` are set to False (the default), the channel will be opened either locally or remotely, on whichever matching channel is found first.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isLocal() { return this.getIsLocal(); }\n\tset isLocal(isLocal: boolean) { this.setIsLocal(isLocal); }\n\t/**\n\t * Returns true if `open()` has been called on this channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isOpen() { return this.getIsOpen(); }\n\t/**\n\t * Gets the handle of the parent device of the given Phidget handle.\n\t * \n\t * For example, this would refer to the device the channel is a part of, or the Hub that a device is plugged into.\n\t * \n\t * This is useful when used alongside a **Phidget Manager** to create device trees like the one in the Phidget Control Panel.\n\t * \n\t * *   This can be used to travel up the device tree and get device information at each step.\n\t * *   The root device will return a null handle\n\t * *   Parent handles always refer to devices. See `getIsChannel()`\n\t * @throws {@link PhidgetError}\n\t */\n\tget parent() { return this.getParent(); }\n\t/**\n\t * get: Returns true when this channel is attached via a Phidget network server, or false otherwise.  \n\t *   \n\t * set:\n\t * \n\t * Set to True if the channel is to be opened remotely, rather than locally. If both this and `isLocal` are set to False (the default), the channel will be opened either locally or remotely, on whichever matching channel is found first.\n\t * \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isRemote() { return this.getIsRemote(); }\n\tset isRemote(isRemote: boolean) { this.setIsRemote(isRemote); }\n\t/**\n\t * The max communication speed of a high-speed capable VINT Device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVINTDeviceSpeed() { return this.getMaxVINTDeviceSpeed(); }\n\t/**\n\t * Indicates that the communication speed of this VINT device can be set automatically.\n\t * @throws {@link PhidgetError}\n\t */\n\tget VINTDeviceSupportsAutoSetSpeed() { return this.getVINTDeviceSupportsAutoSetSpeed(); }\n\t/**\n\t * Indicates that the communication speed of this VINT device can be set.\n\t * @throws {@link PhidgetError}\n\t */\n\tget VINTDeviceSupportsSetSpeed() { return this.getVINTDeviceSupportsSetSpeed(); }\n\n\t/**\n\t * Gets the attached status of channel. A Phidget is attached after it has been opened and the Phidget library finds and connects to the corresponding hardware device.\n\t * \n\t * *   Most API calls are only valid on attached Phidgets.\n\t * @returns True if the channel is attached\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getAttached(): boolean;\n\t/**\n\t * Gets the channel index of the channel on the device.\n\t * @returns The channel index\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getChannel(): number;\n\t/**\n\t * Specifies the channel index to be opened. The default channel is 0. Set to `ANY_CHANNEL` to open any channel on the specified device.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param channel - The channel index\n\t */\n\tabstract setChannel(channel: number): void;\n\t/**\n\t * Gets the channel class of the channel.\n\t * @returns The channel class\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getChannelClass(): Enum.ChannelClass;\n\t/**\n\t * Gets the name of the channel class the channel belongs to.\n\t * @returns The name of the channel's class\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getChannelClassName(): string;\n\t/**\n\t * Gets the channel's name. This name serves as a description of the specific nature of the channel.\n\t * @returns The channel's name\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getChannelName(): string;\n\t/**\n\t * Gets the subclass for this channel. Allows for identifying channels with specific characteristics without needing to know the exact device and channel index.\n\t * @returns The channel's subclass\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getChannelSubclass(): Enum.ChannelSubclass;\n\t/**\n\t * Closes a Phidget channel that has been opened.`close()` will release the channel on the Phidget device.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract close(): Promise<void>;\n\t/**\n\t * Gets the connection associated with this Phidget.\n\t * @returns The connection\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getConnection(): (PhidgetConnection | null);\n\t/**\n\t * Gets the number of channels of the specified channel class on the device. Pass `phidget22.ChannelClass.NONE` to get the total number of channels.\n\t * @returns The Channel Count\n\t * @throws {@link PhidgetError}\n\t * @param cls - The Channel Class\n\t */\n\tabstract getDeviceChannelCount(cls: Enum.ChannelClass): number;\n\t/**\n\t * Gets the device class for the Phidget which this channel is a part of.\n\t * @returns The class of the device the channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceClass(): Enum.DeviceClass;\n\t/**\n\t * Gets the name of the device class for the Phidget which this channel is a part of.\n\t * @returns The class name of the device the channel is a part of.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceClassName(): string;\n\t/**\n\t * Gets the string which will match the filename of the firmware upgrade file\n\t * @returns The firmware upgrade string\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tabstract getDeviceFirmwareUpgradeString(): string;\n\t/**\n\t * Gets the Device ID for the Phidget which this channel is a part of.\n\t * @returns The device id of the device the channel is a part of\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceID(): Enum.DeviceID;\n\t/**\n\t * Gets the label of the Phidget which this channel is a part of. A device label is a custom string used to more easily identify a Phidget. Labels are written to a Phidget using `writeDeviceLabel()`, or by right-clicking the device and setting a label in the Phidget Control Panel for Windows.\n\t * @returns The device label\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceLabel(): string;\n\t/**\n\t * Specifies the label of the Phidget to be opened. Leave un-set to open any label. A device label is a custom string used to more easily identify a Phidget. Labels are written to a Phidget using `writeDeviceLabel()`, or by right-clicking the device and setting a label in the Phidget Control Panel for Windows.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param deviceLabel - The device label\n\t */\n\tabstract setDeviceLabel(deviceLabel?: string): void;\n\t/**\n\t * Gets the name of the Phidget which this channel is a part of.\n\t * @returns The name of the device the channel is a part of\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceName(): string;\n\t/**\n\t * Gets the serial number of the Phidget which this channel is a part of.  \n\t * If the channel is part of a VINT device, this will be the serial number of the VINT Hub the device is attached to.\n\t * @returns The device serial number\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceSerialNumber(): number;\n\t/**\n\t * Specifies the serial number of the Phidget to be opened. Leave un-set, or set to `ANY_SERIAL_NUMBER` to open any serial number.  \n\t * If the channel is part of a VINT device, this will be the serial number of the VINT Hub the device is attached to.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param deviceSerialNumber - The device serial number\n\t */\n\tabstract setDeviceSerialNumber(deviceSerialNumber: number): void;\n\t/**\n\t * Gets the SKU (part number) of the Phidget which this channel is a part of.\n\t * @returns The SKU of the device the channel is a part of\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceSKU(): string;\n\t/**\n\t * Gets the firmware version of the Phidget which this channel is a part of.\n\t * @returns The version of the device the channel is a part of\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeviceVersion(): number;\n\t/**\n\t * Gets the vint id for the Phidget which this channel is a part of.\n\t * @returns The vint id of the channels device\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tabstract getDeviceVINTID(): number;\n\t/**\n\t * Gets the hub that this channel is attached to.\n\t * @returns The hub the channels device is attached to\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getHub(): Phidget;\n\t/**\n\t * Gets the hub port index of the VINT Hub port that the channel is attached to.\n\t * @returns The hub port index\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getHubPort(): number;\n\t/**\n\t * Specifies the hub port index of the VINT Hub port to open this channel on. Leave un-set, or set to `ANY_HUB_PORT` to open the channel on any VINT Hub port  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param hubPort - The hub port index\n\t */\n\tabstract setHubPort(hubPort: number): void;\n\t/**\n\t * Gets the number of VINT ports present on the VINT Hub that the channel is attached to.\n\t * @returns The number of ports on the VINT Hub\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getHubPortCount(): number;\n\t/**\n\t * Configures the communication speed for this VINT device. Both the `hubPortSupportsSetSpeed` and `VINTDeviceSupportsSetSpeed` must be true in order to set the hub port speed.Available speeds are: 100000, 160000, 250000, 400000, 500000, 800000 and 1000000. Setting any other speed will select the nearest lower supported speed. The upper speed is bound by the lesser of `maxHubPortSpeed` and `maxVINTDeviceSpeed`. Set the speed to `AUTO_HUBPORTSPEED` to enable Auto Set Speed on Hubs that support it (enabled by default).\n\t * @returns The VINT Device communication speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getHubPortSpeed(): number;\n\t/**\n\t * Configures the communication speed for this VINT device. Both the `hubPortSupportsSetSpeed` and `VINTDeviceSupportsSetSpeed` must be true in order to set the hub port speed.Available speeds are: 100000, 160000, 250000, 400000, 500000, 800000 and 1000000. Setting any other speed will select the nearest lower supported speed. The upper speed is bound by the lesser of `maxHubPortSpeed` and `maxVINTDeviceSpeed`. Set the speed to `AUTO_HUBPORTSPEED` to enable Auto Set Speed on Hubs that support it (enabled by default).\n\t * @throws {@link PhidgetError}\n\t * @param hubPortSpeed - The VINT Device communication speed\n\t */\n\tabstract setHubPortSpeed(hubPortSpeed: number): Promise<void>;\n\t/**\n\t * The max communication speed of a high-speed capable VINT Port.\n\t * @returns The VINT Port max speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxHubPortSpeed(): number;\n\t/**\n\t * Indicates that the communication speed of this VINT port can be set automatically.\n\t * @returns The VINT Port supports auto set speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getHubPortSupportsAutoSetSpeed(): boolean;\n\t/**\n\t * Indicates that the communication speed of this VINT port can be set.\n\t * @returns The VINT Port supports set speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getHubPortSupportsSetSpeed(): boolean;\n\t/**\n\t * Returns true if this represents a channel, false if this represents a device. Mostly for use alongside `getParent()` to distinguish channel handles from device handles.\n\t * @returns True if the handle is for a channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getIsChannel(): boolean;\n\t/**\n\t * Gets whether this channel is a VINT Hub port channel, or part of a VINT device attached to a hub port.\n\t * @returns The hub port mode (True if the channel is a hub port itself)\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getIsHubPortDevice(): boolean;\n\t/**\n\t * Specifies whether this channel should be opened on a VINT Hub port directly, or on a VINT device attached to a hub port.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param isHubPortDevice - The hub port mode (True if the channel is a hub port itself)\n\t */\n\tabstract setIsHubPortDevice(isHubPortDevice: boolean): void;\n\t/**\n\t * Returns true when this channel is attached directly on the local machine, or false otherwise.\n\t * @returns True if the channel is attached to a local device\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getIsLocal(): boolean;\n\t/**\n\t * Set to True if the channel is to be opened locally, and not over a network. If both this and `isRemote` are set to False (the default), the channel will be opened either locally or remotely, on whichever matching channel is found first.  \n\t *   \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param isLocal - True if the channel is attached to a local device\n\t */\n\tabstract setIsLocal(isLocal: boolean): void;\n\t/**\n\t * Returns true if `open()` has been called on this channel.\n\t * @returns True if the channel is opened.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getIsOpen(): boolean;\n\t/**\n\t * Returns true when this channel is attached via a Phidget network server, or false otherwise.\n\t * @returns True if the channel is attached to a network device\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getIsRemote(): boolean;\n\t/**\n\t * Set to True if the channel is to be opened remotely, rather than locally. If both this and `isLocal` are set to False (the default), the channel will be opened either locally or remotely, on whichever matching channel is found first.\n\t * \n\t * If setting this property, it must be set before the channel is opened. The behaviour of setting this property while the channel is open is undefined.\n\t * @throws {@link PhidgetError}\n\t * @param isRemote - True if the channel is attached to a network device\n\t */\n\tabstract setIsRemote(isRemote: boolean): void;\n\t/**\n\t * Gets a key which identifies this device or channel uniquely. This can be useful for correlating attach/detach events from the **Manager**.\n\t * @returns The key\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getKey(): string;\n\t/**\n\t * Opens the Phidget channel. The specific channel to be opened can be specified by setting any of the following properties:\n\t * \n\t * *   DeviceSerialNumber\n\t * *   DeviceLabel\n\t * *   Channel\n\t * *   HubPort\n\t * *   IsHubPortDevice\n\t * *   ServerName\n\t * *   IsLocal\n\t * *   IsRemote\n\t * \n\t * `open()` will return immediately, with the attachment process proceeding asynchronously. Use the Attach event or Attached property to determine when the channel is ready to use.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract open(): Promise<void>;\n\t/**\n\t * Opens the Phidget channel and waits a defined amount of time for the device to attach.The specific channel to be opened can be specified by setting any of the following properties:\n\t * \n\t * *   DeviceSerialNumber\n\t * *   DeviceLabel\n\t * *   Channel\n\t * *   HubPort\n\t * *   IsHubPortDevice\n\t * *   ServerName\n\t * *   IsLocal\n\t * *   IsRemote\n\t * \n\t * `open()` will block until the channel is attached or a timeout occurs. A timeout value of 0 will wait forever.\n\t * @throws {@link PhidgetError}\n\t * @param timeout - Timeout in milliseconds\n\t */\n\tabstract open(timeout: number): Promise<void>;\n\t/**\n\t * Gets the handle of the parent device of the given Phidget handle.\n\t * \n\t * For example, this would refer to the device the channel is a part of, or the Hub that a device is plugged into.\n\t * \n\t * This is useful when used alongside a **Phidget Manager** to create device trees like the one in the Phidget Control Panel.\n\t * \n\t * *   This can be used to travel up the device tree and get device information at each step.\n\t * *   The root device will return a null handle\n\t * *   Parent handles always refer to devices. See `getIsChannel()`\n\t * @returns The handle of the parent\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getParent(): (Phidget | null);\n\t/**\n\t * Reboots the device into the regular firmware.\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tabstract reboot(): Promise<void>;\n\t/**\n\t * Reboots the device into firmware upgrade mode.\n\t * @throws {@link PhidgetError}\n\t * @param upgradeTimeout - The reboot timeout\n\t * @internal\n\t */\n\tabstract rebootFirmwareUpgrade(upgradeTimeout: number): Promise<void>;\n\t/**\n\t * The max communication speed of a high-speed capable VINT Device.\n\t * @returns The VINT Device max commuinication speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxVINTDeviceSpeed(): number;\n\t/**\n\t * Indicates that the communication speed of this VINT device can be set automatically.\n\t * @returns The VINT Device supports auto set speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVINTDeviceSupportsAutoSetSpeed(): boolean;\n\t/**\n\t * Indicates that the communication speed of this VINT device can be set.\n\t * @returns The VINT Device supports set speed\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVINTDeviceSupportsSetSpeed(): boolean;\n\t/**\n\t * Writes a label to the device in the form of a string in the device flash memory. This label can then be used to identify the device, and will persist across power cycles.  \n\t *   \n\t * The label can be at most 10 UTF-16 code units. Most unicode characters take up a single code unit, but some, such as emoji, can take several.  \n\t *   \n\t * Some older devices can not have their labels set from Windows. For these devices the label should be set from Linux or macOS.  \n\t *   \n\t * Note: You should be careful when writing labels in your code, because the label is stored in flash which can only be re-written around 10,000 times before it will no longer write. If your program is complex, be sure to test it thoroughly before using WriteLabel to avoid accidentally burning out the flash.\n\t * @throws {@link PhidgetError}\n\t * @param deviceLabel - The device label\n\t */\n\tabstract writeDeviceLabel(deviceLabel: string): Promise<void>;\n}\nexport { PhidgetBase };\n","﻿/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { logdebug, loginfo, logerr, logEventException, logwarn } from './Logging';\nimport { PhidgetError } from './PhidgetError';\nimport { ErrorCode, DeviceClass, ChannelClass, ErrorEventCode, ChannelSubclass } from './Enumerations.gen';\nimport { UserPhidgets, scanChannels, tm, LibraryVersion, startScanningUserPhidgets, stopScanningUserPhidgets } from './phidget22';\nimport { BridgePacket, PUNK } from './BridgePacket';\nimport { ChannelClassName } from './ChannelClassName.gen';\nimport { DeviceClassName } from './DeviceClassName.gen';\nimport { BP } from './BridgePackets.gen';\nimport { Channel } from './Channel';\nimport { Device } from './Device';\nimport { PhidgetBase } from './Phidget.gen';\n\n/** @public */\nabstract class Phidget extends PhidgetBase {\n\t/** @internal */\n\tprotected _fromManager: boolean;\n\t/** @internal */\n\t_isattached: boolean;\n\n\t/**\n\t * **Attach** event\n\t * \n\t * ---\n\t * Occurs when the channel is attached to a physical channel on a Phidget.\n\t * \n\t * `Attach` must be registered prior to calling `open()`, and will be called when the \n\t * Phidget library matches the channel with a physical channel on a Phidget. `Attach` \n\t * may be called more than once if the channel is detached during its lifetime.\n\t * \n\t * `Attach` is the recommended place to configuration properties of the channel such \n\t * as the data interval or change trigger.\n\t */\n\tonAttach: ((this: Phidget, ch: Phidget) => void | Promise<void>) | null;\n\n\t/**\n\t * **Detach** event\n\t * \n\t * ---\n\t * Occurs when the channel is detached from a Phidget device channel.Detach typically occurs \n\t * when the Phidget device is removed from the system.\n\t */\n\tonDetach: ((this: Phidget, ch: Phidget) => void) | null;\n\n\t/**\n\t* **Error** event\n\t*  * `code` - The error code\n\t*  * `msg` - The error description\n\t* ---\n\t* Error is called when an error condition has been detected.\n\t*\n\t* See the documentation for your specific channel class to see what error events it might throw.\n\t* @param code - The error code\n\t* @param description - The error description\n\t*/\n\tonError: ((this: Phidget, code: ErrorEventCode, description: string) => void) | null;\n\n\t/**\n\t* **PropertyChange** event\n\t*  * `propertyName` - The name of the property that has changed\n\t* ---\n\t* Occurs when a property is changed externally from the user channel, usually from a network client attached to the same channel.\n\t* @param propertyName - The name of the property that has changed\n\t*/\n\tonPropertyChange: ((this: Phidget, propertyName: string) => void) | null;\n\n\t/**\n\t * The channel name\n\t */\n\tpublic name!: string;\n\n\t/**\n\t * Gets the version of the Phidget library being used by the program in human readable form.\n\t * @returns The Phidget library version.\n\t * @throws {@link PhidgetError}\n\t*/\n\tstatic get libraryVersion() { return this.getLibraryVersion(); }\n\n\t/**\n\t * Gets the version of the Phidget library being used by the program in human readable form.\n\t * @returns The Phidget library version.\n\t * @throws {@link PhidgetError}\n\t*/\n\tstatic getLibraryVersion() { return LibraryVersion; }\n\n\t/** @internal */\n\tconstructor(chOrDev?: Channel | Device) {\n\t\tsuper();\n\n\t\tthis.onAttach = null;\n\t\tthis.onDetach = null;\n\t\tthis.onError = null;\n\t\tthis.onPropertyChange = null;\n\n\t\tif (chOrDev !== undefined) {\n\t\t\tthis._fromManager = true;\n\t\t\tthis._isattached = true;\n\t\t} else {\n\t\t\tthis._fromManager = false;\n\t\t\tthis._isattached = false;\n\t\t}\n\t}\n}\n\n/** @public */\nabstract class PhidgetChannel extends Phidget {\n\t// Guaranteed to be filled in by subclasses\n\t/** @internal */\n\t_class!: ChannelClass;\n\n\t/** @internal */\n\t_isopen: boolean;\n\t/** @internal */\n\t_attaching: boolean;\n\n\t/** @internal */\n\tprivate _useropen: boolean;\n\t/** @internal */\n\tprivate _detaching: boolean;\n\n\t/** @internal */\n\t_ch?: Channel;\n\n\t/** @internal */\n\t_openTimeout?: number;\n\t/** @internal */\n\t_openTime?: number;\n\t/** @internal */\n\t_openTimeoutTimer?: NodeJS.Timeout;\n\n\t/** @internal */\n\t_channel: number;\n\t/** @internal */\n\t_deviceLabel: string | null;\n\t/** @internal */\n\t_serialNumber: number;\n\t/** @internal */\n\t_hubPort: number;\n\t/** @internal */\n\t_isHubPort: boolean;\n\t/** @internal */\n\t_isLocal: boolean;\n\t/** @internal */\n\t_isRemote: boolean;\n\n\t/** @internal */\n\tprivate _rejectOpen?: ((reason: PhidgetError) => void);\n\t/** @internal */\n\t_resolveOpen?: (() => void);\n\t/** @internal */\n\t_onInitialState?: (() => void);\n\n\t// Required\n\t/** @internal */\n\tabstract _initAfterOpen(): void;\n\t/** @internal */\n\tabstract _setDefaults(): Promise<void>;\n\t/** @internal */\n\tabstract _fireInitialEvents(): void;\n\t/** @internal */\n\tabstract _hasInitialState(): boolean;\n\t/** @internal */\n\tabstract _bridgeInput(bp: BridgePacket): void;\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tabstract data: any;\n\n\t// Optional\n\t/** @internal */\n\t_errorHandler?(code: ErrorEventCode): void;\n\n\t/** @internal */\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\n\t\tthis._attaching = false;\t/* in the process of being attached to a server channel */\n\t\tthis._useropen = false;\t/* user called open: registered to attached to a channel */\n\t\tthis._isopen = false;\t/* user opened, and attached to a channel */\n\t\tthis._detaching = false;\n\n\t\tthis._isHubPort = false;\n\t\tthis._channel = Phidget.ANY_CHANNEL;\n\t\tthis._deviceLabel = Phidget.ANY_LABEL;\n\t\tthis._serialNumber = Phidget.ANY_SERIAL_NUMBER;\n\t\tthis._hubPort = Phidget.ANY_HUB_PORT;\n\t\tthis._isLocal = false;\n\t\tthis._isRemote = false;\n\n\t\tthis._ch = ch;\n\t}\n\n\t/** @internal */\n\t_cancelOpenTimeout() {\n\t\t// Cancel open timeout\n\t\tif (this._openTimeoutTimer != undefined) {\n\t\t\tclearTimeout(this._openTimeoutTimer);\n\t\t\tdelete this._openTimeoutTimer;\n\t\t}\n\t\tdelete this._openTimeout;\n\t\tdelete this._openTime;\n\t}\n\n\t/** @internal */\n\tasync _wasOpened(ch: Channel) {\n\t\tthis._ch = ch;\n\t\tthis._isopen = true;\n\t\tthis._isattached = true;\n\t\tthis._cancelOpenTimeout();\n\n\t\tif (this.onAttach) {\n\t\t\ttry {\n\t\t\t\tawait this.onAttach(this);\n\t\t\t} catch (err) { logEventException(err); }\n\t\t}\n\n\t\tif (this._resolveOpen)\n\t\t\tthis._resolveOpen();\n\t}\n\n\t/** @internal */\n\tasync _close(fromDetach = false) {\n\n\t\tthis._cancelOpenTimeout();\n\n\t\t/*\n\t\t * If we are called because the device is detaching, do not deregister, and\n\t\t * flag as user opened.\n\t\t */\n\t\tif (fromDetach) {\n\t\t\tthis._useropen = true;\n\t\t} else {\n\t\t\tif (UserPhidgets.includes(this))\n\t\t\t\tUserPhidgets.splice(UserPhidgets.indexOf(this), 1);\n\t\t\tif (UserPhidgets.length === 0)\n\t\t\t\tawait stopScanningUserPhidgets();\n\t\t}\n\n\t\tif (this._isopen) {\n\t\t\ttry {\n\t\t\t\tif (this._ch)\n\t\t\t\t\tawait this._ch.close();\n\t\t\t} catch (err) {\n\t\t\t\t// We don't actually want to throw an exception since we are just closing anyway, but log the error\n\t\t\t\tlogwarn(\"Error while closing channel\", err);\n\t\t\t}\n\t\t\tthis._detaching = true;\n\t\t\tthis._isattached = false;\n\t\t\tif (this.onDetach) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onDetach(this);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tthis._detaching = false;\n\t\t\tthis._isopen = false;\n\t\t\tdelete this._ch;\n\t\t} else {\n\t\t\tif (this._rejectOpen != undefined)\n\t\t\t\tthis._rejectOpen(new PhidgetError(ErrorCode.CLOSED, \"Closed while waiting for open\"));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_FIREPropertyChange(prop: string, bp?: BridgePacket) {\n\t\tif (this.onPropertyChange && this._isAttachedDone && (bp === undefined || bp.local !== true)) {\n\t\t\ttry {\n\t\t\t\tthis.onPropertyChange(prop);\n\t\t\t} catch (err) { logEventException(err); }\n\t\t}\n\t}\n\n\t/** @internal */\n\t_handleSetStatus(bp: BridgePacket) {\n\n\t\tfor (const e in bp.entries) {\n\n\t\t\t// Not used\n\t\t\tif (e === '_class_version_')\n\t\t\t\tcontinue;\n\n\t\t\t// Dealt with below\n\t\t\tif (e === 'dataIntervalDbl')\n\t\t\t\tcontinue;\n\n\t\t\tif (!(e in this.data)) {\n\t\t\t\tloginfo(\"Unknown property: \" + e + \" in setstatus packet. Probably server is newer than client.\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.data[e] = bp.entries[e].v;\n\t\t}\n\n\t\t// If floating point data interval exists, use it as the data interval\n\t\tif (bp.entries.dataIntervalDbl !== undefined)\n\t\t\tthis.data.dataInterval = bp.entries.dataIntervalDbl.v;\n\n\t\t// If min/max data rate are missing from the bp (because old server), create them\n\t\tif (this.data.minDataInterval != undefined && bp.entries.maxDataRate === undefined)\n\t\t\tthis.data.maxDataRate = (1000.0 / this.data.minDataInterval);\n\t\tif (this.data.maxDataInterval != undefined && bp.entries.minDataRate === undefined)\n\t\t\tthis.data.minDataRate = (1000.0 / this.data.maxDataInterval);\n\t}\n\n\t/** @internal */\n\t_assertAttached() {\n\n\t\t// Attached but maybe not open - good for Manager channels\n\t\tif (!this._ch || (!this._isattached && !this._detaching))\n\t\t\tthrow (new PhidgetError(ErrorCode.NOT_ATTACHED));\n\t}\n\n\t/** @internal */\n\t_assertOpen() {\n\n\t\t// Attached AND opened - we can interact with the device\n\t\tif (!this._ch || !this._isopen || (!this._isattached && !this._detaching))\n\t\t\tthrow (new PhidgetError(ErrorCode.NOT_ATTACHED));\n\t}\n\n\t/** @internal */\n\tget _isAttachedDone() {\n\t\tif (this._isattached && !this._attaching)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\t/** @internal */\n\tget _isAttachedOrDetaching() {\n\t\tif (this._isattached || this._detaching)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\ttoString() {\n\n\t\tif (this._ch)\n\t\t\treturn (this._ch.toString());\n\t\treturn (this.constructor.name);\n\t}\n\n\t/******************************\n\t *******  Phidget API  ********\n\t ******************************/\n\n\tgetConnection() {\n\t\tif (this._ch)\n\t\t\treturn (this._ch.conn);\n\t\treturn null;\n\t}\n\n\tgetKey() {\n\t\tthis._assertAttached();\n\t\treturn 'ch' + this._ch!.id + \"_\" + this._ch!.conn._id;\n\t}\n\n\tasync open(timeout = 0): Promise<void> {\n\t\tif (this._useropen)\n\t\t\treturn;\n\n\t\tthis._useropen = true;\n\t\tthis._openTime = tm();\n\t\tif (!isNaN(timeout) && timeout > 0)\n\t\t\tthis._openTimeout = timeout;\n\t\telse\n\t\t\tdelete this._openTimeout;\n\n\t\tUserPhidgets.push(this);\n\n\t\t// Open a channel from the manager\n\t\tif (this._fromManager === true) {\n\t\t\t// Set all matching parameters\n\t\t\tthis.setChannel(this.getChannel());\n\t\t\tthis.setHubPort(this.getHubPort());\n\t\t\tthis.setDeviceSerialNumber(this.getDeviceSerialNumber());\n\t\t\tthis.setIsHubPortDevice(this.getIsHubPortDevice());\n\t\t\tthis.setIsLocal(this.getIsLocal());\n\t\t\tthis.setIsRemote(this.getIsRemote());\n\t\t\t// Reset 'fromManager' params\n\t\t\tthis._fromManager = false;\n\t\t\tthis._isattached = false;\n\t\t\tdelete this._ch;\n\t\t}\n\n\t\t// Create here because scanChannels may call resolveOpen immediately\n\t\tconst openPromise = new Promise<void>((resolve, reject) => {\n\t\t\tthis._resolveOpen = resolve;\n\t\t\tthis._rejectOpen = reject;\n\t\t});\n\n\t\ttry {\n\t\t\t// Do an immediate scan so an already connected channel will open quickly\n\t\t\tawait scanChannels(this);\n\t\t} catch (err) {\n\t\t\t// If this fails, it's ok - it's going to keep scanning\n\t\t\tlogerr(\"Problem during open scan\", err);\n\t\t}\n\n\t\t// Make sure we are scanning for future-connected channels\n\t\tawait startScanningUserPhidgets();\n\n\t\t// If we specified a Timeout, run it\n\t\tif (this._openTimeout) {\n\t\t\tthis._openTimeoutTimer = setTimeout(() => {\n\t\t\t\tdelete this._openTimeoutTimer;\n\t\t\t\tconst reject = this._rejectOpen;\n\t\t\t\tdelete this._rejectOpen;\n\t\t\t\tthis.close().then(() => {\n\t\t\t\t\tif (reject)\n\t\t\t\t\t\treject(new PhidgetError(ErrorCode.TIMEOUT, \"Open timed out\"));\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tlogwarn(\"Error calling close after open timeout\", err);\n\t\t\t\t\tif (reject)\n\t\t\t\t\t\treject(new PhidgetError(ErrorCode.TIMEOUT, \"Open timed out\"));\n\t\t\t\t});\n\t\t\t}, this._openTimeout);\n\t\t}\n\n\t\treturn openPromise;\n\t}\n\n\tasync close() {\n\t\tif (this._useropen) {\n\t\t\tlogdebug(\"closing phidget\");\n\t\t\tthis._useropen = false;\n\t\t\tawait this._close();\n\t\t}\n\t}\n\n\tgetAttached() {\n\t\treturn (this._isattached);\n\t}\n\n\tgetIsOpen() {\n\t\treturn (this._useropen);\n\t}\n\n\tgetChannel() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._channel);\n\n\t\treturn (this._ch!.index);\n\t}\n\tsetChannel(ch: number) {\n\t\tthis._channel = ch;\n\t}\n\n\tgetChannelClass() {\n\t\treturn (this._class);\n\t}\n\n\tgetChannelClassName() {\n\t\treturn (ChannelClassName[this._class]);\n\t}\n\n\tgetChannelName() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.name);\n\t}\n\n\tgetChannelSubclass() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.subclass);\n\t}\n\n\tgetDeviceClass() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.parent.class);\n\t}\n\n\tgetDeviceClassName() {\n\t\tthis._assertAttached();\n\t\treturn (DeviceClassName[this._ch!.parent.class]);\n\t}\n\n\tgetDeviceID() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.parent.deviceID);\n\t}\n\n\tgetDeviceLabel() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._deviceLabel ? this._deviceLabel : '');\n\t\treturn (this._ch!.parent.label);\n\t}\n\n\tsetDeviceLabel(label: string) {\n\t\tthis._deviceLabel = label;\n\t}\n\n\tgetDeviceName(): string {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.parent.name);\n\t}\n\n\tgetDeviceSerialNumber() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._serialNumber);\n\t\treturn (this._ch!.parent.serialNumber);\n\t}\n\tsetDeviceSerialNumber(sn: number) {\n\t\tif (!isNaN(sn))\n\t\t\tthis._serialNumber = sn;\n\t}\n\n\tgetDeviceSKU() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.parent.sku);\n\t}\n\n\tgetDeviceVersion() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.parent.version);\n\t}\n\n\tgetHub(): Phidget {\n\t\tthis._assertAttached();\n\n\t\tlet hub: Device | undefined = this._ch!.parent;\n\t\twhile (hub != undefined && hub.class !== DeviceClass.HUB)\n\t\t\thub = hub.parent;\n\n\t\tif (hub == undefined)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE, \"Hub not found\");\n\n\t\treturn (new PhidgetDevice(hub));\n\t}\n\n\tgetHubPort() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._hubPort);\n\t\treturn (this._ch!.parent.hubPort);\n\t}\n\n\tsetHubPort(hubPort: number) {\n\t\tif (!isNaN(hubPort))\n\t\t\tthis._hubPort = hubPort;\n\t}\n\n\tgetHubPortSpeed(): number {\n\t\tthis._assertAttached();\n\n\t\tif (this._ch!.parent.class !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\tif (this._ch!.parent.vintDeviceProps!.commSpeed == undefined || this._ch!.parent.vintDeviceProps!.commSpeed == PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._ch!.parent.vintDeviceProps!.commSpeed);\n\t}\n\tasync setHubPortSpeed(hubPortSpeed: number) {\n\t\tthis._assertAttached();\n\n\t\tif (this._ch!.parent.class !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: '0', type: 'u', value: hubPortSpeed });\n\t\tawait bp.send(this._ch, BP.SETVINTSPEED);\n\t}\n\n\tgetIsChannel() {\n\t\treturn (true);\n\t}\n\n\tgetIsHubPortDevice() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._isHubPort);\n\t\treturn (this._ch!.parent.isHubPort);\n\t}\n\n\tsetIsHubPortDevice(isHubPort: boolean) {\n\t\tthis._isHubPort = isHubPort;\n\t}\n\n\tgetIsLocal() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._isLocal);\n\t\treturn (this._ch!.parent.conn._isLocal);\n\t}\n\tsetIsLocal(isLocal: boolean) {\n\t\tthis._isLocal = isLocal;\n\t}\n\n\tgetIsRemote() {\n\t\tif (!this._isattached && !this._detaching)\n\t\t\treturn (this._isRemote);\n\t\treturn (this._ch!.parent.conn._isRemote);\n\t}\n\tsetIsRemote(isRemote: boolean) {\n\t\tthis._isRemote = isRemote;\n\t}\n\n\tgetParent(): Phidget {\n\t\tthis._assertAttached();\n\t\treturn (new PhidgetDevice(this._ch!.parent));\n\t}\n\n\tgetDeviceFirmwareUpgradeString() {\n\t\tthis._assertAttached();\n\t\treturn (this._ch!.parent.fwstr);\n\t}\n\n\tasync writeDeviceLabel(deviceLabel: string) {\n\t\tthis._assertOpen();\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: deviceLabel });\n\t\tawait bp.send(this._ch, BP.WRITELABEL);\n\t}\n\n\tgetDeviceChannelCount(cls?: ChannelClass): number {\n\t\tthis._assertAttached();\n\t\tlet count = 0;\n\t\tfor (const ch of this._ch!.parent.devDef.ch) {\n\t\t\t// NOTE: Unsupported on -net build\n\t\t\tif (cls != undefined && ch.c == undefined)\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t\tif (cls == undefined || ch.c === cls)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\n\n\tgetDeviceVINTID(): number {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\treturn (this._ch!.parent.vintID);\n\t}\n\n\tgetHubPortCount(): number {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT && this.deviceClass !== DeviceClass.HUB)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps!.length;\n\t}\n\n\tgetHubPortSupportsSetSpeed(): boolean {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portSuppSetSpeed;\n\t}\n\n\tgetHubPortSupportsAutoSetSpeed(): boolean {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portSuppAutoSetSpeed;\n\t}\n\n\tgetMaxHubPortSpeed(): number {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\tif ((this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portMaxSpeed === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portMaxSpeed;\n\t}\n\n\tgetVINTDeviceSupportsSetSpeed(): boolean {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\treturn this._ch!.parent.vintDeviceProps!.suppSetSpeed;\n\t}\n\n\tgetVINTDeviceSupportsAutoSetSpeed(): boolean {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\treturn this._ch!.parent.vintDeviceProps!.suppAutoSetSpeed;\n\t}\n\n\tgetMaxVINTDeviceSpeed(): number {\n\t\tthis._assertAttached();\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\tif (this._ch!.parent.vintDeviceProps!.maxSpeed === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\treturn this._ch!.parent.vintDeviceProps!.maxSpeed;\n\t}\n\n\tasync reboot(): Promise<void> {\n\t\tthis._assertOpen();\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.REBOOT, false);\n\t}\n\n\tasync rebootFirmwareUpgrade(upgradeTimeout: number): Promise<void> {\n\t\tthis._assertOpen();\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: upgradeTimeout });\n\t\tawait bp.send(this._ch, BP.REBOOTFIRMWAREUPGRADE, false);\n\t}\n}\n\n/** @public */\nclass PhidgetDevice extends Phidget {\n\t/** @internal */\n\t_device: Device;\n\n\t/** @internal */\n\tconstructor(dev: Device) {\n\t\tsuper(dev);\n\t\tthis._device = dev;\n\t\tthis.name = \"PhidgetDevice\";\n\t}\n\n\ttoString() {\n\t\treturn (this._device.toString());\n\t}\n\n\t/******************************\n\t *******  Phidget API  ********\n\t ******************************/\n\n\tgetConnection() {\n\t\treturn (this._device.conn);\n\t}\n\n\tgetKey(): string {\n\t\treturn 'dev' + this._device.id + \"_\" + this._device.conn._id;\n\t}\n\n\tgetAttached() {\n\t\treturn (true);\n\t}\n\t\n\tgetIsOpen() {\n\t\treturn (false);\n\t}\n\n\tgetDeviceClass() {\n\t\treturn (this._device.class);\n\t}\n\n\tgetDeviceClassName() {\n\t\treturn (DeviceClassName[this._device.class]);\n\t}\n\n\tgetDeviceID() {\n\t\treturn (this._device.deviceID);\n\t}\n\n\tgetDeviceLabel() {\n\t\treturn (this._device.label);\n\t}\n\n\tgetDeviceName(): string {\n\t\treturn (this._device.name);\n\t}\n\n\tgetDeviceSerialNumber() {\n\t\treturn (this._device.serialNumber);\n\t}\n\n\tgetDeviceSKU() {\n\t\treturn (this._device.sku);\n\t}\n\n\tgetDeviceVersion() {\n\t\treturn (this._device.version);\n\t}\n\n\tgetHub(): Phidget {\n\t\tlet hub: Device | undefined = this._device;\n\t\twhile (hub != undefined && hub.class !== DeviceClass.HUB)\n\t\t\thub = hub.parent;\n\n\t\tif (hub == undefined)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE, \"Hub not found\");\n\n\t\treturn (new PhidgetDevice(hub));\n\t}\n\n\tgetHubPort() {\n\t\treturn (this._device.hubPort);\n\t}\n\n\tgetHubPortSpeed() {\n\t\tif (this._device.class !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\tif (this._device.vintDeviceProps!.commSpeed == undefined || this._device.vintDeviceProps!.commSpeed == PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._device.vintDeviceProps!.commSpeed);\n\t}\n\n\tgetIsChannel() {\n\t\treturn (false);\n\t}\n\n\tgetIsHubPortDevice() {\n\t\treturn (this._device.isHubPort);\n\t}\n\n\tgetIsLocal() {\n\t\treturn (this._device.conn._isLocal);\n\t}\n\n\tgetIsRemote() {\n\t\treturn (this._device.conn._isRemote);\n\t}\n\n\tgetParent(): Phidget | null {\n\t\tconst parent = this._device.parent;\n\n\t\tif (!parent)\n\t\t\treturn null;\n\n\t\treturn (new PhidgetDevice(parent));\n\t}\n\n\tgetDeviceFirmwareUpgradeString() {\n\t\treturn this._device.fwstr;\n\t}\n\n\tgetDeviceChannelCount(cls?: ChannelClass): number {\n\t\tlet count = 0;\n\t\tfor (const ch of this._device.devDef.ch) {\n\t\t\t// NOTE: Unsupported on -net build\n\t\t\tif (cls != undefined && ch.c == undefined)\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t\tif (cls == undefined || ch.c === cls)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\n\n\tgetDeviceVINTID(): number {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\treturn this._device.vintID;\n\t}\n\n\tgetHubPortCount(): number {\n\t\tif (this.deviceClass !== DeviceClass.VINT && this.deviceClass !== DeviceClass.HUB)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\t\t\t\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps!.length;\n\t}\n\n\tgetHubPortSupportsSetSpeed(): boolean {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portSuppSetSpeed;\n\t}\n\n\tgetHubPortSupportsAutoSetSpeed(): boolean {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portSuppAutoSetSpeed;\n\t}\n\n\tgetMaxHubPortSpeed(): number {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\tif ((this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portMaxSpeed === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.hub as PhidgetDevice)._device.hubPortProps![this.hubPort].portMaxSpeed;\n\t}\n\n\tgetVINTDeviceSupportsSetSpeed(): boolean {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\treturn this._device.vintDeviceProps!.suppSetSpeed;\n\t}\n\n\tgetVINTDeviceSupportsAutoSetSpeed(): boolean {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\treturn this._device.vintDeviceProps!.suppAutoSetSpeed;\n\t}\n\n\tgetMaxVINTDeviceSpeed(): number {\n\t\tif (this.deviceClass !== DeviceClass.VINT)\n\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\n\n\t\tif (this._device.vintDeviceProps!.maxSpeed === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this._device.vintDeviceProps!.maxSpeed;\n\t}\n\n\t// These channel API calls are unexpected on a PhidgetDevice\n\tgetChannel(): number {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetChannel(_channel: number): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\tgetChannelClass(): ChannelClass {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\tgetChannelClassName(): string {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\tgetChannelName(): string {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\tgetChannelSubclass(): ChannelSubclass {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\tclose(): Promise<void> {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetDeviceLabel(_deviceLabel: string): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetDeviceSerialNumber(_deviceSerialNumber: number): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetHubPort(_hubPort: number): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetHubPortSpeed(_hubPortSpeed: number): Promise<void> {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetIsHubPortDevice(_isHubPortDevice: boolean): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetIsLocal(_isLocal: boolean): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsetIsRemote(_isRemote: boolean): void {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\topen(_timeout?: number): Promise<void> {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\twriteDeviceLabel(_deviceLabel: string): Promise<void> {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\treboot(): Promise<void> {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\trebootFirmwareUpgrade(_upgradeTimeout: number): Promise<void> {\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n}\n\n// Export\nexport { Phidget, PhidgetChannel, PhidgetDevice };\n","﻿import { PhidgetError } from './PhidgetError';\nimport { ErrorCode, DeviceClass, ChannelClass, ErrorEventCode, ChannelSubclass } from './Enumerations.gen';\nimport { BP } from './BridgePackets.gen';\nimport { logdebug, logerr, logEventException, logwarn } from './Logging';\nimport { BridgePacket } from './BridgePacket';\nimport { Phidget, PhidgetChannel } from './Phidget';\nimport { Device } from './Device';\nimport { PhidgetConnection } from './Connection';\nimport { type PhidgetUniqueChannel } from './Devices.gen';\n\n/** @internal */\nexport interface ChannelData {\n\tid: string;\n\tchDef: PhidgetUniqueChannel;\n\tuniqueIndex: number;\n\tindex: number;\n}\n\n/** @internal */\nabstract class Channel {\n\tparent: Device;\n\tconn: PhidgetConnection;\n\tisopen: boolean;\n\tid: string;\n\tuniqueIndex: number;\n\tindex: number;\n\tchDef: PhidgetUniqueChannel;\n\n\tuserphid?: PhidgetChannel;\n\tprotected detaching?: boolean;\n\n\tprivate lastErrorEventCode: ErrorEventCode | null = null;\n\tprivate lastErrorEventDesc = '';\n\tprivate lastErrorEventTime = 0;\n\n\t// Override in subclasses\n\tabstract open(userphid: PhidgetChannel): Promise<void>;\n\tabstract close(): Promise<void>;\n\tabstract send(bp: BridgePacket): Promise<string | void>;\n\tabstract name: string;\n\tabstract class: ChannelClass;\n\n\tget subclass() { return (this.chDef.s ?? ChannelSubclass.NONE); }\n\tget isHubPort() { return this.parent.isHubPort; }\n\n\tconstructor(conn: PhidgetConnection, dev: Device, data: ChannelData) {\n\t\tthis.conn = conn;\n\t\tthis.parent = dev;\n\t\tthis.id = data.id;\n\t\tthis.chDef = data.chDef;\n\t\tthis.uniqueIndex = data.uniqueIndex;\n\t\tthis.index = data.index;\n\t\tthis.isopen = false;\n\t}\n\n\tmatch(userphid: PhidgetChannel) {\n\n\t\tif (userphid._attaching || userphid._isattached)\n\t\t\treturn (false);\n\n\t\tif (userphid._class !== this.class)\n\t\t\treturn (false);\n\n\t\tif (userphid._serialNumber !== Phidget.ANY_SERIAL_NUMBER) {\n\t\t\tif (userphid._serialNumber != this.parent.serialNumber)\n\t\t\t\treturn (false);\n\t\t}\n\n\t\tif (userphid._channel !== Phidget.ANY_CHANNEL) {\n\t\t\tif (userphid._channel != this.index)\n\t\t\t\treturn (false);\n\t\t}\n\n\t\tif (userphid._hubPort !== Phidget.ANY_HUB_PORT) {\n\t\t\tif (userphid._hubPort != this.parent.hubPort)\n\t\t\t\treturn (false);\n\t\t}\n\n\t\tif (userphid._isHubPort !== this.isHubPort)\n\t\t\treturn (false);\n\n\t\tif (userphid._deviceLabel !== Phidget.ANY_LABEL) {\n\t\t\tif (userphid._deviceLabel !== this.parent.label)\n\t\t\t\treturn (false);\n\t\t}\n\n\t\tif (userphid._isLocal && this.conn._isRemote)\n\t\t\treturn false;\n\n\t\tif (userphid._isRemote && this.conn._isLocal)\n\t\t\treturn false;\n\n\t\tlogdebug(\"matched:\" + userphid + \" -> \" + this);\n\t\treturn (true);\n\t}\n\n\tasync tryMatchOpen(userphid: PhidgetChannel): Promise<boolean> {\n\n\t\tif (this.match(userphid)) {\n\t\t\ttry {\n\t\t\t\tawait this.open(userphid);\n\t\t\t\treturn true; // success\n\t\t\t} catch (err) {\n\t\t\t\tif (userphid.onError) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (err instanceof PhidgetError) {\n\t\t\t\t\t\t\tlet code: ErrorEventCode;\n\t\t\t\t\t\t\tswitch (err.errorCode) {\n\t\t\t\t\t\t\t\tcase ErrorCode.BUSY:\n\t\t\t\t\t\t\t\t\tcode = ErrorEventCode.BUSY;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase ErrorCode.BAD_VERSION:\n\t\t\t\t\t\t\t\t\tcode = ErrorEventCode.BAD_VERSION;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tcode = ErrorEventCode.FAILURE;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuserphid.onError(code, err.message);\n\t\t\t\t\t\t} else if (err instanceof Error) {\n\t\t\t\t\t\t\tuserphid.onError(ErrorEventCode.FAILURE, err.message);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuserphid.onError(ErrorEventCode.FAILURE, \"Error during open\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t} else {\n\t\t\t\t\tlogerr(\"Error opening channel\", err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tdetach() {\n\n\t\tif (this.isopen) {\n\t\t\t/*\n\t\t\t * Flag that we are closing because of a device detach.\n\t\t\t * This prevents Channel.close() from executing against a detached device.\n\t\t\t */\n\t\t\tif (this.userphid) {\n\t\t\t\tthis.detaching = true;\n\t\t\t\t// NOTE: We expect this to resolve right away because of detaching being set\n\t\t\t\tthis.userphid._close(true).then(() => {\n\t\t\t\t\tthis.isopen = false;\n\t\t\t\t\tdelete this.userphid;\n\t\t\t\t\tdelete this.detaching;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tthis.isopen = false;\n\t\t\t\t\tdelete this.userphid;\n\t\t\t\t\tdelete this.detaching;\n\t\t\t\t\tlogwarn(\"Error closing during detach\", err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\ttoString() {\n\n\t\tif (this.parent.class === DeviceClass.VINT) {\n\t\t\tif (this.isHubPort)\n\t\t\t\treturn (this.name + ' Ch:' + this.index + ' -> ' + this.parent.sku + ' Port:' + this.parent.hubPort + ' Serial#:' + this.parent.serialNumber);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\treturn (this.name + ' Ch:' + this.index + ' -> ' + this.parent.sku + ' -> ' + this.parent.parent!.sku + ' Port:' + this.parent.hubPort + ' Serial#:' + this.parent.serialNumber);\n\t\t}\n\n\t\treturn (this.name + ' Ch:' + this.index + ' -> ' + this.parent.sku + ' Serial#:' + this.parent.serialNumber);\n\t}\n\n\tsupportedBridgePacket(bp: BP) {\n\t\tif (this.chDef.p == undefined || this.chDef.p.includes(bp))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tbridgeInput(bp: BridgePacket) {\n\n\t\tif (!this.userphid)\n\t\t\treturn;\n\n\t\tswitch (bp.vpkt) {\n\n\t\t\tcase BP.SETSTATUS:\n\t\t\t\tthis.userphid._handleSetStatus(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.ERROREVENT:\n\t\t\t\tif (this.userphid._errorHandler)\n\t\t\t\t\tthis.userphid._errorHandler(bp.getNumber(0) as ErrorEventCode);\n\t\t\t\tif (this.userphid.onError) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.userphid.onError(bp.getNumber(0) as ErrorEventCode, bp.getString(1) as string);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase BP.DEVICELABELCHANGE:\n\t\t\t\tthis.parent.label = bp.getString(0) as string;\n\t\t\t\tthis.userphid._FIREPropertyChange('DeviceLabel', bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.VINTSPEEDCHANGE:\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tthis.parent.vintDeviceProps!.commSpeed = bp.getNumber(0);\n\t\t\t\tthis.userphid._FIREPropertyChange('HubPortSpeed', bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.REBOOT:\n\t\t\tcase BP.REBOOTFIRMWAREUPGRADE:\n\t\t\t\t// These are handled in send() - just need to not pass them on to the channel class.\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETVINTSPEED:\n\t\t\t\tif (this.conn._isRemote)\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tthis.parent.vintDeviceProps!.commSpeed = bp.getNumber(0);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.WRITELABEL:\n\t\t\t\tif (this.conn._isRemote)\n\t\t\t\t\tthis.parent.label = bp.getString(0) as string;\n\t\t\t\tbreak;\n\n\t\t\tdefault: {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tif (!this.supportedBridgePacket(bp.vpkt!))\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\n\t\t\t\tthis.userphid._bridgeInput(bp);\n\n\t\t\t\t// If we are waiting for initial state completion and have initial state, complete it here\n\t\t\t\tif (this.userphid._onInitialState && this.userphid._hasInitialState())\n\t\t\t\t\tthis.userphid._onInitialState();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsendErrorEvent(bp: BridgePacket) {\n\n\t\tconst code = bp.getNumber(0) as ErrorEventCode;\n\t\tconst desc = bp.getString(1) as string;\n\t\tconst now = Date.now();\n\n\t\t// Limit error events to 1/second\n\t\tif (this.lastErrorEventCode === code && this.lastErrorEventDesc === desc) {\n\t\t\tif ((now - this.lastErrorEventTime) < 1000)\n\t\t\t\treturn;\n\t\t}\n\n\t\tthis.lastErrorEventCode = code;\n\t\tthis.lastErrorEventDesc = desc;\n\t\tthis.lastErrorEventTime = now;\n\n\t\tbp.vpkt = BP.ERROREVENT;\n\t\tthis.bridgeInput(bp);\n\t}\n\n\tclearErrorEvent() {\n\n\t\tthis.lastErrorEventCode = null;\n\t}\n}\n\nexport { Channel };","import { BridgePacket } from \"../BridgePacket\";\r\nimport { Channel, type ChannelData } from \"../Channel\";\r\nimport { NetworkConnectionBase, P22MSG, P22SMSG } from \"./NetworkConnection\";\r\nimport { NetworkDevice } from \"./NetworkDevice\";\r\nimport { PhidgetChannel } from \"../Phidget\";\r\nimport { ChannelClass } from \"../Enumerations.gen\";\r\n\r\n/** @internal */\r\nexport interface NetworkChannelData extends ChannelData {\r\n\tcpversion: number;\r\n\tname: string;\r\n\tclass: ChannelClass;\r\n}\r\n\r\n/** @internal */\r\nclass NetworkChannel extends Channel {\r\n\tdeclare conn: NetworkConnectionBase;\r\n\tdeclare parent: NetworkDevice;\r\n\tprivate cpversion: number;\r\n\tname: string;\r\n\tclass: ChannelClass;\r\n\r\n\tconstructor(conn: NetworkConnectionBase, dev: NetworkDevice, data: NetworkChannelData) {\r\n\t\tsuper(conn, dev, data);\r\n\t\tthis.cpversion = data.cpversion;\r\n\t\tthis.name = data.name;\r\n\t\tthis.class = data.class;\r\n\t}\r\n\r\n\tasync open(userphid: PhidgetChannel) {\r\n\t\t// Network Connection\r\n\t\tconst devInfo = {\r\n\t\t\tphid: this.parent.id,\r\n\t\t\tchannel: this.id,\r\n\t\t\tclass: this.class,\r\n\t\t\tindex: this.uniqueIndex,\r\n\t\t\tversion: this.cpversion\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tuserphid._attaching = true;\r\n\t\t\tconst status = await this.conn._sendRequest(0, 0, 0, P22MSG.Device, P22SMSG.Open, devInfo);\r\n\t\t\tuserphid._attaching = false;\r\n\t\t\tthis.isopen = true;\r\n\t\t\tthis.userphid = userphid;\r\n\r\n\t\t\t/* deliver the status data */\r\n\t\t\tconst bp = new BridgePacket(this.conn, status);\r\n\t\t\tbp.deliver();\r\n\r\n\t\t\tawait userphid._wasOpened(this);\r\n\t\t} catch (err) {\r\n\t\t\tuserphid._attaching = false;\r\n\t\t\tuserphid._isattached = false;\r\n\t\t\tthrow (err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Currently only expected to be called from Phidget.close().\r\n\t * We do not notify the Phidget.\r\n\t */\r\n\tasync close() {\r\n\r\n\t\tif (this.detaching)\r\n\t\t\treturn;\r\n\r\n\t\tconst closePkt = {\r\n\t\t\tphid: this.parent.id,\r\n\t\t\tindex: this.uniqueIndex,\r\n\t\t};\r\n\t\tawait this.conn._sendRequest(0, 0, 0, P22MSG.Device, P22SMSG.Close, closePkt);\r\n\t}\r\n\r\n\tasync send(bp: BridgePacket): Promise<string | void> {\r\n\t\t// We know it's a NetworkChannel\r\n\t\tconst pkt = bp.getJsonOut(this);\r\n\t\tconst response = await this.conn._sendRequest(0, 0, 0, P22MSG.Device, P22SMSG.BridgePkt, pkt);\r\n\t\treturn response;\r\n\t}\r\n}\r\n\r\nexport { NetworkChannel };","import { ChannelClass, ChannelSubclass, DeviceClass, DeviceID } from \"./Enumerations.gen\";\nimport { BP } from \"./BridgePackets.gen\";\n\n/** @internal */\nexport const enum DeviceUID {\n\t_NOTHING = 0,\n\t_IFKIT488 = 1,\n\t_1000_OLD1 = 2,\n\t_1000_OLD2 = 3,\n\t_1000_NO_ECHO = 4,\n\t_1000 = 5,\n\t_1001_OLD1 = 6,\n\t_1001_OLD2 = 7,\n\t_1001_NO_ECHO = 8,\n\t_1001 = 9,\n\t_1002 = 10,\n\t_1008 = 11,\n\t_1011 = 12,\n\t_1012_NO_ECHO = 13,\n\t_1012_BITBUG = 14,\n\t_1012 = 15,\n\t_1013_NO_ECHO = 16,\n\t_1013 = 17,\n\t_1014_NO_ECHO = 18,\n\t_1014 = 19,\n\t_1014_3_USB = 20,\n\t_1014_3_VINT = 21,\n\t_1015 = 22,\n\t_1016 = 23,\n\t_1017 = 24,\n\t_1017_2_USB = 25,\n\t_1017_2_VINT = 26,\n\t_1018 = 27,\n\t_1018_3 = 28,\n\t_1023_OLD = 29,\n\t_1023 = 30,\n\t_1023_2OUTPUT_NO_ECHO = 31,\n\t_1023_2OUTPUT = 32,\n\t_1024 = 33,\n\t_1024_V2_USB = 34, // Unreleased\n\t_1024_V2_VINT = 35, // Unreleased\n\t_1030 = 36,\n\t_1031 = 37,\n\t_1032 = 38,\n\t_1040 = 39,\n\t_1041 = 40,\n\t_1042 = 41,\n\t_1043 = 42,\n\t_1044 = 43,\n\t_1044_1 = 44,\n\t_1044_1_510 = 45,\n\t_1045 = 46,\n\t_1046_GAINBUG = 47,\n\t_1046 = 48,\n\t_1046_1 = 49,\n\t_1047 = 50,\n\t_1047_2 = 51,\n\t_1047_2_300 = 52,\n\t_1048 = 53,\n\t_1048_1_2 = 54,\n\t_1049 = 55,\n\t_1051_OLD = 56,\n\t_1051 = 57,\n\t_1051_AD22100 = 58,\n\t_1051_TERMINAL_BLOCKS = 59,\n\t_1052_OLD = 60,\n\t_1052_v1 = 61,\n\t_1052_v2 = 62,\n\t_1053 = 63,\n\t_1054 = 64,\n\t_1055 = 65,\n\t_1055_1_USB = 66,\n\t_1055_1_VINT = 67,\n\t_1056 = 68,\n\t_1056_NEG_GAIN = 69,\n\t_1057 = 70,\n\t_1057_3 = 71,\n\t_1058 = 72,\n\t_1059 = 73,\n\t_1060 = 74,\n\t_1061 = 75,\n\t_1061_PGOOD_FLAG = 76,\n\t_1061_CURSENSE_FIX = 77,\n\t_RCC0004 = 78,\n\t_1062 = 79,\n\t_1063 = 80,\n\t_1064 = 81,\n\t_1065 = 82,\n\t_1066 = 83,\n\t_1067 = 84,\n\t_1067_1 = 85,\n\t_1202_IFKIT_NO_ECHO = 86,\n\t_1202_IFKIT = 87,\n\t_1202_TEXTLCD = 88,\n\t_1202_IFKIT_FAST = 89,\n\t_1202_TEXTLCD_BRIGHTNESS = 90,\n\t_1204 = 91,\n\t_1215 = 92,\n\t_1219 = 93,\n\t_DIGITALINPUT_PORT = 94,\n\t_DIGITALOUTPUT_PORT = 95,\n\t_DIGITALOUTPUT_PORT_FAILSAFE = 96,\n\t_VOLTAGEINPUT_PORT = 97,\n\t_VOLTAGEINPUT_PORT_5V25 = 98,\n\t_VOLTAGEINPUT_PORT_V2 = 99, // Unreleased\n\t_VOLTAGERATIOINPUT_PORT = 100,\n\t_VOLTAGERATIOINPUT_PORT_V2 = 101, // Unreleased\n\t_ADP1000 = 102,\n\t_ADP1001_USB = 103, // Unreleased\n\t_ADP1001_VINT = 104, // Unreleased\n\t_ADP_RS485_422_USB = 105, // Unreleased\n\t_ADP_RS485_422_VINT = 106, // Unreleased\n\t_ADP_SERIAL_USB = 107, // Unreleased\n\t_ADP_SERIAL_VINT = 108, // Unreleased\n\t_DAQ1000 = 109,\n\t_DAQ1000_5V25 = 110,\n\t_OUT1000 = 111,\n\t_OUT1000_Failsafe = 112,\n\t_OUT1001 = 113,\n\t_OUT1001_Failsafe = 114,\n\t_OUT1002 = 115,\n\t_OUT1002_Failsafe = 116,\n\t_CURLOOP = 117, // Unreleased\n\t_DAQ1200 = 118,\n\t_OUT1100 = 119,\n\t_OUT1100_Failsafe = 120,\n\t_OUT1100_Failsafe_Frequency = 121,\n\t_DAQ1300 = 122,\n\t_DAQ1301 = 123,\n\t_DAQ1400 = 124,\n\t_DAQ1400_120 = 125,\n\t_DAQ1500 = 126,\n\t_VCP1100 = 127,\n\t_VCP1100_1_OLDPROTO = 128, // Unreleased\n\t_DCC1000 = 129,\n\t_DCC1000_POSITIONCONTROL = 130,\n\t_DCC1000_POSITIONCONTROL_FAILSAFE = 131,\n\t_DCC1004 = 132, // Unreleased\n\t_DCC1005 = 133, // Unreleased\n\t_DCC1001 = 134,\n\t_DCC1001_Failsafe = 135,\n\t_DCC1002 = 136,\n\t_DCC1002_Failsafe = 137,\n\t_DCC1003 = 138,\n\t_DCC1003_Failsafe = 139,\n\t_DCC1100 = 140,\n\t_DCC1100_Failsafe = 141,\n\t_DCC1101 = 142, // Unreleased\n\t_DST1000 = 143,\n\t_DST1001 = 144,\n\t_DST1002 = 145,\n\t_DST1200 = 146,\n\t_ENC1000 = 147,\n\t_HIN1101 = 148,\n\t_HIN1000 = 149,\n\t_HIN1001 = 150,\n\t_HIN1100 = 151,\n\t_HUM1000 = 152,\n\t_HUM1001 = 153,\n\t_LCD1100 = 154,\n\t_LED1000 = 155,\n\t_LUX1000 = 156,\n\t_HUM1100 = 157,\n\t_MOT1100_OLD = 158, // Unreleased\n\t_MOT1100 = 159,\n\t_MOT0100_USB = 160,\n\t_MOT0100_VINT = 161,\n\t_MOT1101 = 162,\n\t_VINTACCEL = 163, // Unreleased\n\t_MOT1102 = 164,\n\t_MOT1102_1 = 165,\n\t_MOT0108 = 166, // Unreleased\n\t_MOT0109 = 167,\n\t_MOT0110_USB = 168,\n\t_MOT0110_VINT = 169,\n\t_PRE1000 = 170,\n\t_RCC1000 = 171,\n\t_RCC1000_Failsafe = 172,\n\t_RCC1000_1 = 173,\n\t_REL1000 = 174,\n\t_REL1000_Failsafe = 175,\n\t_REL1100 = 176,\n\t_REL1100_Failsafe = 177,\n\t_REL1100_Failsafe_Frequency = 178,\n\t_REL1101 = 179,\n\t_REL1101_Failsafe = 180,\n\t_REL1101_1 = 181,\n\t_TP_DIAGNOSER_0 = 182, // Unreleased\n\t_SAF1000 = 183,\n\t_SAF1000_Failsafe = 184,\n\t_SND1000 = 185,\n\t_STC1000 = 186,\n\t_STC1000_Failsafe = 187,\n\t_STC1001 = 188,\n\t_STC1001_Failsafe = 189,\n\t_STC1002 = 190,\n\t_STC1002_Failsafe = 191,\n\t_STC1003 = 192,\n\t_STC1003_Failsafe = 193,\n\t_STC1003_1 = 194,\n\t_STC1005_0 = 195,\n\t_STC1004_0 = 196, // Unreleased\n\t_TMP1000 = 197,\n\t_TMP1100 = 198,\n\t_TMP1101 = 199,\n\t_TMP1101_1 = 200,\n\t_TMP1200 = 201,\n\t_TMP1200_1 = 202,\n\t_TMP1300 = 203, // Unreleased\n\t_VCP1000 = 204,\n\t_VCP1001 = 205,\n\t_VCP1001_110 = 206,\n\t_VCP1002 = 207,\n\t_VCP1002_110 = 208,\n\t_HUB0000 = 209,\n\t_HUB0001_OLDPROTO = 210, // Unreleased\n\t_HUB0000_PHIDUSB = 211,\n\t_HUB0000_1 = 212, // Unreleased\n\t_HUB0001 = 213,\n\t_HUB0001_AUTOSETSPEED = 214,\n\t_HUB0002 = 215, // Unreleased\n\t_HUB0007 = 216, // Unreleased\n\t_MESHHUB = 217, // Unreleased\n\t_MESHDONGLE = 218, // Unreleased\n\t_HUB0004 = 219,\n\t_HUB0004_BADPORT = 220,\n\t_LIGHTNINGHUB = 221, // Unreleased\n\t_HUB5000 = 222,\n\t_HUB5000_PHIDUSB = 223,\n\t_FIRMWARE_UPGRADE_M3_USB = 224,\n\t_FIRMWARE_UPGRADE_STM32F_USB = 225,\n\t_FIRMWARE_UPGRADE_STM32G_USB = 226,\n\t_FIRMWARE_UPGRADE_STM32L_USB = 227,\n\t_FIRMWARE_UPGRADE_STM32F0 = 228,\n\t_FIRMWARE_UPGRADE_STM32G0_BLBug = 229,\n\t_FIRMWARE_UPGRADE_STM32G0 = 230,\n\t_FIRMWARE_UPGRADE_STM32F3 = 231,\n\t_FIRMWARE_UPGRADE_STM8S = 232,\n\t_FIRMWARE_UPGRADE_M3_SPI = 233,\n\t_GENERIC_HIDUSB = 234, // Unreleased\n\t_GENERIC_PHIDUSB = 235, // Unreleased\n\t_USBSWITCH = 236, // Unreleased\n\t_GENERICVINT = 237, // Unreleased\n\t_DICTIONARY = 238,\n\t_UNKNOWNUSB = 239,\n\t_UNKNOWNVINT = 240,\n\t_UNKNOWNSPI = 241,\n\t_TEXTLED_4x8 = 242, // Unreleased\n\t_TEXTLED_1x8 = 243, // Unreleased\n\t_INTERFACEKIT_2_8_8 = 244, // Unreleased\n\t_POWER = 245, // Unreleased\n\t_INTERFACEKIT_0_5_7_LCD = 246, // Unreleased\n\t_INTERFACEKIT_0_32_32 = 247, // Unreleased\n\t_WEIGHTSENSOR = 248, // Unreleased\n}\n\n/** @internal */\nexport const enum DeviceChannelUID {\n\t_NOTHING = 0,\n\t_ifkit488_VOLTAGERATIOINPUT_000 = 1,\n\t_ifkit488_DIGITALINPUT_000 = 2,\n\t_ifkit488_DIGITALOUTPUT_000 = 3,\n\t_1000_RCSERVO_OLD1_200 = 4,\n\t_1000_RCSERVO_OLD2_200 = 5,\n\t_1000_RCSERVO_300 = 6,\n\t_1000_RCSERVO_313 = 7,\n\t_1001_RCSERVO_OLD1_200 = 8,\n\t_1001_RCSERVO_OLD2_200 = 9,\n\t_1001_RCSERVO_313 = 10,\n\t_1001_RCSERVO_400 = 11,\n\t_1002_VOLTAGEOUTPUT_100 = 12,\n\t_1008_ACCELEROMETER_000 = 13,\n\t_1011_VOLTAGEINPUT_000 = 14,\n\t_1011_VOLTAGERATIOINPUT_000 = 15,\n\t_1011_DIGITALINPUT_000 = 16,\n\t_1011_DIGITALOUTPUT_000 = 17,\n\t_1012_DIGITALINPUT_000 = 18,\n\t_1012_DIGITALOUTPUT_000 = 19,\n\t_1012_DIGITALINPUT_601 = 20,\n\t_1012_DIGITALOUTPUT_601 = 21,\n\t_1012_DIGITALINPUT_602 = 22,\n\t_1012_DIGITALOUTPUT_602 = 23,\n\t_1013_VOLTAGEINPUT_000 = 24,\n\t_1013_VOLTAGERATIOINPUT_000 = 25,\n\t_1013_DIGITALINPUT_000 = 26,\n\t_1013_DIGITALOUTPUT_000 = 27,\n\t_1018_VOLTAGEINPUT_821 = 28,\n\t_1018_VOLTAGERATIOINPUT_821 = 29,\n\t_1018_DIGITALINPUT_821 = 30,\n\t_1018_DIGITALOUTPUT_821 = 31,\n\t_1014_DIGITALOUTPUT_000 = 32,\n\t_1014_DIGITALOUTPUT_704 = 33,\n\t_1014_DIGITALOUTPUT_800_USB = 34,\n\t_1014_DIGITALOUTPUT_800_VINT = 35,\n\t_1015_CAPACITIVETOUCH_000 = 36,\n\t_1016_CAPACITIVETOUCH_000 = 37,\n\t_1017_DIGITALOUTPUT_000 = 38,\n\t_1017_DIGITALOUTPUT_200_USB = 39,\n\t_1017_DIGITALOUTPUT_200_VINT = 40,\n\t_1018_VOLTAGEINPUT_900 = 41,\n\t_1018_VOLTAGERATIOINPUT_900 = 42,\n\t_1018_DIGITALINPUT_900 = 43,\n\t_1018_DIGITALOUTPUT_900 = 44,\n\t_1018_VOLTAGEINPUT_1000 = 45,\n\t_1018_VOLTAGERATIOINPUT_1000 = 46,\n\t_1018_DIGITALINPUT_1000 = 47,\n\t_1018_DIGITALOUTPUT_1000 = 48,\n\t_1023_RFID_000 = 49,\n\t_1023_RFID_104 = 50,\n\t_1023_RFID_200 = 51,\n\t_1023_DIGITALOUTPUT_5V_200 = 52,\n\t_1023_DIGITALOUTPUT_LED_200 = 53,\n\t_1023_DIGITALOUTPUT_ONBOARD_LED_200 = 54,\n\t_1023_RFID_201 = 55,\n\t_1023_DIGITALOUTPUT_5V_201 = 56,\n\t_1023_DIGITALOUTPUT_LED_201 = 57,\n\t_1023_DIGITALOUTPUT_ONBOARD_LED_201 = 58,\n\t_1024_RFID_100 = 59,\n\t_1024_DIGITALOUTPUT_5V_100 = 60,\n\t_1024_DIGITALOUTPUT_LED_100 = 61,\n\t_1024_DIGITALOUTPUT_ONBOARD_LED_100 = 62,\n\t_1024_RFID_200_USB = 63,\n\t_1024_DIGITALOUTPUT_5V_200_USB = 64,\n\t_1024_DIGITALOUTPUT_LED_200_USB = 65,\n\t_1024_DIGITALOUTPUT_ONBOARD_LED_200_USB = 66,\n\t_1024_RFID_200_VINT = 67,\n\t_1024_DIGITALOUTPUT_5V_200_VINT = 68,\n\t_1024_DIGITALOUTPUT_LED_200_VINT = 69,\n\t_1024_DIGITALOUTPUT_ONBOARD_LED_200_VINT = 70,\n\t_1030_DIGITALOUTPUT_100 = 71,\n\t_1031_DIGITALOUTPUT_100 = 72,\n\t_1032_DIGITALOUTPUT_200 = 73,\n\t_1040_GPS_000 = 74,\n\t_1041_ACCELEROMETER_200 = 75,\n\t_1042_ACCELEROMETER_300 = 76,\n\t_1042_GYROSCOPE_300 = 77,\n\t_1042_MAGNETOMETER_300 = 78,\n\t_1042_SPATIAL_300 = 79,\n\t_1043_ACCELEROMETER_300 = 80,\n\t_1044_ACCELEROMETER_400 = 81,\n\t_1044_GYROSCOPE_400 = 82,\n\t_1044_MAGNETOMETER_400 = 83,\n\t_1044_SPATIAL_400 = 84,\n\t_1044_ACCELEROMETER_500 = 85,\n\t_1044_GYROSCOPE_500 = 86,\n\t_1044_MAGNETOMETER_500 = 87,\n\t_1044_SPATIAL_500 = 88,\n\t_1044_ACCELEROMETER_510 = 89,\n\t_1044_GYROSCOPE_510 = 90,\n\t_1044_MAGNETOMETER_510 = 91,\n\t_1044_SPATIAL_510 = 92,\n\t_1045_TEMPERATURESENSOR_IR_100 = 93,\n\t_1045_TEMPERATURESENSOR_IC_100 = 94,\n\t_1046_VOLTAGERATIOINPUT_100 = 95,\n\t_1046_VOLTAGERATIOINPUT_102 = 96,\n\t_1046_VOLTAGERATIOINPUT_200 = 97,\n\t_1047_ENCODER_100 = 98,\n\t_1047_DIGITALINPUT_100 = 99,\n\t_1047_ENCODER_200 = 100,\n\t_1047_DIGITALINPUT_200 = 101,\n\t_1047_ENCODER_300 = 102,\n\t_1047_DIGITALINPUT_300 = 103,\n\t_1048_TEMPERATURESENSOR_THERMOCOUPLE_100 = 104,\n\t_1048_TEMPERATURESENSOR_IC_100 = 105,\n\t_1048_VOLTAGEINPUT_100 = 106,\n\t_1048_TEMPERATURESENSOR_THERMOCOUPLE_200 = 107,\n\t_1048_TEMPERATURESENSOR_IC_200 = 108,\n\t_1048_VOLTAGEINPUT_200 = 109,\n\t_1049_ACCELEROMETER_000 = 110,\n\t_1051_TEMPERATURESENSOR_THERMOCOUPLE_000 = 111,\n\t_1051_TEMPERATURESENSOR_IC_000 = 112,\n\t_1051_TEMPERATURESENSOR_THERMOCOUPLE_200 = 113,\n\t_1051_TEMPERATURESENSOR_IC_200 = 114,\n\t_1051_VOLTAGEINPUT_200 = 115,\n\t_1051_TEMPERATURESENSOR_THERMOCOUPLE_300 = 116,\n\t_1051_TEMPERATURESENSOR_IC_300 = 117,\n\t_1051_VOLTAGEINPUT_300 = 118,\n\t_1051_TEMPERATURESENSOR_THERMOCOUPLE_400 = 119,\n\t_1051_TEMPERATURESENSOR_IC_400 = 120,\n\t_1051_VOLTAGEINPUT_400 = 121,\n\t_1052_ENCODER_000 = 122,\n\t_1052_DIGITALINPUT_000 = 123,\n\t_1052_ENCODER_101 = 124,\n\t_1052_DIGITALINPUT_101 = 125,\n\t_1052_ENCODER_110 = 126,\n\t_1052_DIGITALINPUT_110 = 127,\n\t_1053_ACCELEROMETER_300 = 128,\n\t_1054_FREQUENCYCOUNTER_000 = 129,\n\t_1055_IR_100 = 130,\n\t_1055_IR_200_USB = 131,\n\t_1055_IR_200_VINT = 132,\n\t_1056_ACCELEROMETER_000 = 133,\n\t_1056_GYROSCOPE_000 = 134,\n\t_1056_MAGNETOMETER_000 = 135,\n\t_1056_SPATIAL_000 = 136,\n\t_1056_ACCELEROMETER_200 = 137,\n\t_1056_GYROSCOPE_200 = 138,\n\t_1056_MAGNETOMETER_200 = 139,\n\t_1056_SPATIAL_200 = 140,\n\t_1057_ENCODER_300 = 141,\n\t_1057_ENCODER_400 = 142,\n\t_1058_VOLTAGEINPUT_100 = 143,\n\t_1058_PHADAPTER_100 = 144,\n\t_1059_ACCELEROMETER_400 = 145,\n\t_1060_DCMOTOR_100 = 146,\n\t_1060_DIGITALINPUT_100 = 147,\n\t_1061_RCSERVO_100 = 148,\n\t_1061_CURRENTINPUT_100 = 149,\n\t_1061_RCSERVO_200 = 150,\n\t_1061_CURRENTINPUT_200 = 151,\n\t_1061_RCSERVO_300 = 152,\n\t_1061_CURRENTINPUT_300 = 153,\n\t_RCC0004_RCSERVO_400 = 154,\n\t_1062_STEPPER_100 = 155,\n\t_1063_STEPPER_100 = 156,\n\t_1063_DIGITALINPUT_100 = 157,\n\t_1063_CURRENTINPUT_100 = 158,\n\t_1064_DCMOTOR_100 = 159,\n\t_1064_CURRENTINPUT_100 = 160,\n\t_1065_DCMOTOR_100 = 161,\n\t_1065_DIGITALINPUT_100 = 162,\n\t_1065_ENCODER_100 = 163,\n\t_1065_VOLTAGEINPUT_100 = 164,\n\t_1065_VOLTAGEINPUT_SUPPLY_100 = 165,\n\t_1065_VOLTAGERATIOINPUT_100 = 166,\n\t_1065_CURRENTINPUT_100 = 167,\n\t_1066_RCSERVO_100 = 168,\n\t_1066_CURRENTINPUT_100 = 169,\n\t_1067_STEPPER_200 = 170,\n\t_1067_STEPPER_300 = 171,\n\t_1202_VOLTAGEINPUT_000 = 172,\n\t_1202_VOLTAGERATIOINPUT_000 = 173,\n\t_1202_DIGITALINPUT_000 = 174,\n\t_1202_DIGITALOUTPUT_000 = 175,\n\t_1202_VOLTAGEINPUT_120 = 176,\n\t_1202_VOLTAGERATIOINPUT_120 = 177,\n\t_1202_DIGITALINPUT_120 = 178,\n\t_1202_DIGITALOUTPUT_120 = 179,\n\t_1202_TEXTLCD_000 = 180,\n\t_1202_VOLTAGEINPUT_300 = 181,\n\t_1202_VOLTAGERATIOINPUT_300 = 182,\n\t_1202_DIGITALINPUT_300 = 183,\n\t_1202_DIGITALOUTPUT_300 = 184,\n\t_1202_TEXTLCD_200 = 185,\n\t_1204_TEXTLCD_000 = 186,\n\t_1215_TEXTLCD_000 = 187,\n\t_1219_TEXTLCD_000 = 188,\n\t_1219_DIGITALINPUT_000 = 189,\n\t_1219_DIGITALOUTPUT_000 = 190,\n\t_HUB_DIGITALINPUT_100 = 191,\n\t_HUB_DIGITALOUTPUT_100 = 192,\n\t_HUB_DIGITALOUTPUT_110 = 193,\n\t_HUB_VOLTAGEINPUT_100 = 194,\n\t_HUB_VOLTAGEINPUT_110 = 195,\n\t_HUB_VOLTAGEINPUT_200 = 196,\n\t_HUB_VOLTAGERATIOINPUT_100 = 197,\n\t_HUB_VOLTAGERATIOINPUT_200 = 198,\n\t_ADP1000_PHSENSOR_100 = 199,\n\t_ADP1000_VOLTAGEINPUT_100 = 200,\n\t_ADP1001_DATAADAPTER_100_USB = 201,\n\t_ADP1001_DIGITALINPUT_DSR_100_USB = 202,\n\t_ADP1001_DIGITALINPUT_DCD_100_USB = 203,\n\t_ADP1001_DIGITALINPUT_RI_100_USB = 204,\n\t_ADP1001_DIGITALOUTPUT_DTR_100_USB = 205,\n\t_ADP1001_DATAADAPTER_100_VINT = 206,\n\t_ADP1001_DIGITALINPUT_DSR_100_VINT = 207,\n\t_ADP1001_DIGITALINPUT_DCD_100_VINT = 208,\n\t_ADP1001_DIGITALINPUT_RI_100_VINT = 209,\n\t_ADP1001_DIGITALOUTPUT_DTR_100_VINT = 210,\n\t_ADP_RS485_422_DATAADAPTER_100_USB = 211,\n\t_ADP_RS485_422_DATAADAPTER_100_VINT = 212,\n\t_ADP_SERIAL_DATAADAPTER_100_USB = 213,\n\t_ADP_SERIAL_DIGITALINPUT_100_USB = 214,\n\t_ADP_SERIAL_DIGITALOUTPUT_100_USB = 215,\n\t_ADP_SERIAL_DATAADAPTER_100_VINT = 216,\n\t_ADP_SERIAL_DIGITALINPUT_100_VINT = 217,\n\t_ADP_SERIAL_DIGITALOUTPUT_100_VINT = 218,\n\t_DAQ1000_VOLTAGERATIOINPUT_100 = 219,\n\t_DAQ1000_VOLTAGEINPUT_100 = 220,\n\t_DAQ1000_VOLTAGERATIOINPUT_110 = 221,\n\t_DAQ1000_VOLTAGEINPUT_110 = 222,\n\t_OUT1000_VOLTAGEOUTPUT_100 = 223,\n\t_OUT1000_VOLTAGEOUTPUT_110 = 224,\n\t_OUT1001_VOLTAGEOUTPUT_100 = 225,\n\t_OUT1001_VOLTAGEOUTPUT_110 = 226,\n\t_OUT1002_VOLTAGEOUTPUT_100 = 227,\n\t_OUT1002_VOLTAGEOUTPUT_110 = 228,\n\t_CURLOOP_CURRENTOUTPUT_100 = 229,\n\t_DAQ1200_DIGITALINPUT_100 = 230,\n\t_OUT1100_DIGITALOUTPUT_100 = 231,\n\t_OUT1100_DIGITALOUTPUT_110 = 232,\n\t_OUT1100_DIGITALOUTPUT_120 = 233,\n\t_DAQ1300_DIGITALINPUT_100 = 234,\n\t_DAQ1301_DIGITALINPUT_100 = 235,\n\t_DAQ1400_VOLTAGEINPUT_100 = 236,\n\t_DAQ1400_CURRENTINPUT_100 = 237,\n\t_DAQ1400_DIGITALINPUT_100 = 238,\n\t_DAQ1400_FREQUENCYCOUNTER_100 = 239,\n\t_DAQ1400_VOLTAGEINPUT_120 = 240,\n\t_DAQ1400_CURRENTINPUT_120 = 241,\n\t_DAQ1400_DIGITALINPUT_120 = 242,\n\t_DAQ1400_FREQUENCYCOUNTER_120 = 243,\n\t_DAQ1500_VOLTAGERATIOINPUT_100 = 244,\n\t_VCP1100_CURRENTINPUT_100 = 245,\n\t_DCC1000_DCMOTOR_100 = 246,\n\t_DCC1000_ENCODER_100 = 247,\n\t_DCC1000_VOLTAGERATIOINPUT_100 = 248,\n\t_DCC1000_TEMPERATURESENSOR_IC_100 = 249,\n\t_DCC1000_CURRENTINPUT_100 = 250,\n\t_DCC1000_DCMOTOR_200 = 251,\n\t_DCC1000_ENCODER_200 = 252,\n\t_DCC1000_VOLTAGERATIOINPUT_200 = 253,\n\t_DCC1000_TEMPERATURESENSOR_IC_200 = 254,\n\t_DCC1000_CURRENTINPUT_200 = 255,\n\t_DCC1000_MOTORPOSITIONCONTROLLER_200 = 256,\n\t_DCC1000_DCMOTOR_210 = 257,\n\t_DCC1000_ENCODER_210 = 258,\n\t_DCC1000_VOLTAGERATIOINPUT_210 = 259,\n\t_DCC1000_TEMPERATURESENSOR_IC_210 = 260,\n\t_DCC1000_CURRENTINPUT_210 = 261,\n\t_DCC1000_MOTORPOSITIONCONTROLLER_210 = 262,\n\t_DCC1004_ENCODER_100 = 263,\n\t_DCC1004_DCMOTOR_100 = 264,\n\t_DCC1004_TEMPERATURESENSOR_IC_100 = 265,\n\t_DCC1004_CURRENTINPUT_100 = 266,\n\t_DCC1004_VOLTAGEINPUT_100 = 267,\n\t_DCC1004_MOTORPOSITIONCONTROLLER_100 = 268,\n\t_DCC1004_MOTORVELOCITYCONTROLLER_100 = 269,\n\t_DCC1005_DCMOTOR_100 = 270,\n\t_DCC1005_ENCODER_100 = 271,\n\t_DCC1005_TEMPERATURESENSOR_IC_100 = 272,\n\t_DCC1005_CURRENTINPUT_100 = 273,\n\t_DCC1005_MOTORPOSITIONCONTROLLER_100 = 274,\n\t_DCC1001_DCMOTOR_100 = 275,\n\t_DCC1001_ENCODER_100 = 276,\n\t_DCC1001_MOTORPOSITIONCONTROLLER_100 = 277,\n\t_DCC1001_DCMOTOR_120 = 278,\n\t_DCC1001_ENCODER_120 = 279,\n\t_DCC1001_MOTORPOSITIONCONTROLLER_120 = 280,\n\t_DCC1002_DCMOTOR_100 = 281,\n\t_DCC1002_ENCODER_100 = 282,\n\t_DCC1002_MOTORPOSITIONCONTROLLER_100 = 283,\n\t_DCC1002_DCMOTOR_110 = 284,\n\t_DCC1002_ENCODER_110 = 285,\n\t_DCC1002_MOTORPOSITIONCONTROLLER_110 = 286,\n\t_DCC1003_DCMOTOR_100 = 287,\n\t_DCC1003_DCMOTOR_110 = 288,\n\t_DCC1100_BLDCMOTOR_100 = 289,\n\t_DCC1100_TEMPERATURESENSOR_IC_100 = 290,\n\t_DCC1100_MOTORPOSITIONCONTROLLER_100 = 291,\n\t_DCC1100_BLDCMOTOR_120 = 292,\n\t_DCC1100_TEMPERATURESENSOR_IC_120 = 293,\n\t_DCC1100_MOTORPOSITIONCONTROLLER_120 = 294,\n\t_DCC1101_ENCODER_100 = 295,\n\t_DCC1101_BLDCMOTOR_100 = 296,\n\t_DCC1101_TEMPERATURESENSOR_IC_100 = 297,\n\t_DCC1101_CURRENTINPUT_100 = 298,\n\t_DCC1101_VOLTAGEINPUT_100 = 299,\n\t_DCC1101_MOTORPOSITIONCONTROLLER_100 = 300,\n\t_DCC1101_MOTORVELOCITYCONTROLLER_100 = 301,\n\t_DST1000_DISTANCESENSOR_100 = 302,\n\t_DST1001_DISTANCESENSOR_100 = 303,\n\t_DST1002_DISTANCESENSOR_100 = 304,\n\t_DST1200_DISTANCESENSOR_100 = 305,\n\t_ENC1000_ENCODER_100 = 306,\n\t_HIN1101_ENCODER_100 = 307,\n\t_HIN1101_DIGITALINPUT_100 = 308,\n\t_HIN1000_CAPACITIVETOUCH_100 = 309,\n\t_HIN1001_CAPACITIVETOUCH_BUTTONS_100 = 310,\n\t_HIN1001_CAPACITIVETOUCH_WHEEL_100 = 311,\n\t_HIN1100_VOLTAGERATIOINPUT_100 = 312,\n\t_HIN1100_DIGITALINPUT_100 = 313,\n\t_HUM1000_HUMIDITYSENSOR_100 = 314,\n\t_HUM1000_TEMPERATURESENSOR_IC_100 = 315,\n\t_HUM1001_HUMIDITYSENSOR_100 = 316,\n\t_HUM1001_TEMPERATURESENSOR_IC_100 = 317,\n\t_LCD1100_LCD_100 = 318,\n\t_LED1000_DIGITALOUTPUT_100 = 319,\n\t_LUX1000_LIGHTSENSOR_100 = 320,\n\t_HUM1100_VOLTAGERATIOINPUT_100 = 321,\n\t_MOT1100_ACCELEROMETER_100 = 322,\n\t_MOT1100_ACCELEROMETER_200 = 323,\n\t_MOT0100_ACCELEROMETER_100_USB = 324,\n\t_MOT0100_ACCELEROMETER_100_VINT = 325,\n\t_MOT1101_ACCELEROMETER_100 = 326,\n\t_MOT1101_GYROSCOPE_100 = 327,\n\t_MOT1101_MAGNETOMETER_100 = 328,\n\t_MOT1101_SPATIAL_100 = 329,\n\t_VINTACCEL_ACCELEROMETER_100 = 330,\n\t_MOT1102_ACCELEROMETER_200 = 331,\n\t_MOT1102_GYROSCOPE_200 = 332,\n\t_MOT1102_MAGNETOMETER_200 = 333,\n\t_MOT1102_SPATIAL_200 = 334,\n\t_MOT1102_ACCELEROMETER_300 = 335,\n\t_MOT1102_GYROSCOPE_300 = 336,\n\t_MOT1102_MAGNETOMETER_300 = 337,\n\t_MOT1102_SPATIAL_300 = 338,\n\t_MOT0108_ACCELEROMETER_100 = 339,\n\t_MOT0108_GYROSCOPE_100 = 340,\n\t_MOT0108_MAGNETOMETER_100 = 341,\n\t_MOT0108_SPATIAL_100 = 342,\n\t_MOT0108_TEMPERATURESENSOR_100 = 343,\n\t_MOT0109_ACCELEROMETER_100 = 344,\n\t_MOT0109_GYROSCOPE_100 = 345,\n\t_MOT0109_MAGNETOMETER_100 = 346,\n\t_MOT0109_SPATIAL_100 = 347,\n\t_MOT0109_TEMPERATURESENSOR_100 = 348,\n\t_MOT0110_ACCELEROMETER_100_USB = 349,\n\t_MOT0110_GYROSCOPE_100_USB = 350,\n\t_MOT0110_MAGNETOMETER_100_USB = 351,\n\t_MOT0110_SPATIAL_100_USB = 352,\n\t_MOT0110_TEMPERATURESENSOR_100_USB = 353,\n\t_MOT0110_ACCELEROMETER_100_VINT = 354,\n\t_MOT0110_GYROSCOPE_100_VINT = 355,\n\t_MOT0110_MAGNETOMETER_100_VINT = 356,\n\t_MOT0110_SPATIAL_100_VINT = 357,\n\t_MOT0110_TEMPERATURESENSOR_100_VINT = 358,\n\t_PRE1000_PRESSURESENSOR_100 = 359,\n\t_RCC1000_RCSERVO_100 = 360,\n\t_RCC1000_RCSERVO_110 = 361,\n\t_RCC1000_RCSERVO_200 = 362,\n\t_REL1000_DIGITALOUTPUT_100 = 363,\n\t_REL1000_DIGITALOUTPUT_110 = 364,\n\t_REL1100_DIGITALOUTPUT_100 = 365,\n\t_REL1100_DIGITALOUTPUT_110 = 366,\n\t_REL1100_DIGITALOUTPUT_120 = 367,\n\t_REL1101_DIGITALOUTPUT_100 = 368,\n\t_REL1101_DIGITALOUTPUT_110 = 369,\n\t_REL1101_DIGITALOUTPUT_FREQ_200 = 370,\n\t_REL1101_DIGITALOUTPUT_200 = 371,\n\t_TP_DIAGNOSER_RESISTANCEINPUT_100 = 372,\n\t_SAF1000_POWERGUARD_100 = 373,\n\t_SAF1000_VOLTAGEINPUT_100 = 374,\n\t_SAF1000_TEMPERATURESENSOR_IC_100 = 375,\n\t_SAF1000_POWERGUARD_110 = 376,\n\t_SAF1000_VOLTAGEINPUT_110 = 377,\n\t_SAF1000_TEMPERATURESENSOR_IC_110 = 378,\n\t_SND1000_SOUNDSENSOR_100 = 379,\n\t_STC1000_STEPPER_100 = 380,\n\t_STC1000_STEPPER_110 = 381,\n\t_STC1001_STEPPER_100 = 382,\n\t_STC1001_STEPPER_110 = 383,\n\t_STC1002_STEPPER_100 = 384,\n\t_STC1002_STEPPER_110 = 385,\n\t_STC1003_STEPPER_100 = 386,\n\t_STC1003_STEPPER_110 = 387,\n\t_STC1003_STEPPER_200 = 388,\n\t_STC1003_VOLTAGEINPUT_200 = 389,\n\t_STC1005_STEPPER_100 = 390,\n\t_STC1005_VOLTAGEINPUT_100 = 391,\n\t_STC1004_STEPPER_100 = 392,\n\t_TMP1000_TEMPERATURESENSOR_IC_100 = 393,\n\t_TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100 = 394,\n\t_TMP1100_TEMPERATURESENSOR_IC_100 = 395,\n\t_TMP1100_VOLTAGEINPUT_100 = 396,\n\t_TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100 = 397,\n\t_TMP1101_TEMPERATURESENSOR_IC_100 = 398,\n\t_TMP1101_VOLTAGEINPUT_100 = 399,\n\t_TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200 = 400,\n\t_TMP1101_TEMPERATURESENSOR_IC_200 = 401,\n\t_TMP1101_VOLTAGEINPUT_200 = 402,\n\t_TMP1200_TEMPERATURESENSOR_RTD_100 = 403,\n\t_TMP1200_RESISTANCEINPUT_100 = 404,\n\t_TMP1200_TEMPERATURESENSOR_RTD_300 = 405,\n\t_TMP1200_RESISTANCEINPUT_300 = 406,\n\t_TMP1300_TEMPERATURESENSOR_IR_100 = 407,\n\t_TMP1300_TEMPERATURESENSOR_IC_100 = 408,\n\t_TMP1300_VOLTAGEINPUT_100 = 409,\n\t_VCP1000_VOLTAGEINPUT_100 = 410,\n\t_VCP1001_VOLTAGEINPUT_100 = 411,\n\t_VCP1001_VOLTAGEINPUT_110 = 412,\n\t_VCP1002_VOLTAGEINPUT_100 = 413,\n\t_VCP1002_VOLTAGEINPUT_110 = 414,\n\t_HUB0000_HUB_100 = 415,\n\t_HUB0000_HUB_300 = 416,\n\t_HUB0000_HUB_400 = 417,\n\t_HUB0001_HUB_100 = 418,\n\t_HUB0001_HUB_115 = 419,\n\t_HUB0002_HUB_100 = 420,\n\t_HUB0007_HUB_100 = 421,\n\t_MESHHUB_HUB_100 = 422,\n\t_MESHDONGLE_MESHDONGLE_100 = 423,\n\t_HUB0004_HUB_100 = 424,\n\t_HUB0004_HUB_200 = 425,\n\t_LIGHTNINGHUB_HUB_100 = 426,\n\t_HUB5000_HUB_100 = 427,\n\t_HUB5000_HUB_200 = 428,\n\t_M3_USB_FIRMWARE_UPGRADE_000 = 429,\n\t_STM32_USB_FIRMWARE_UPGRADE_100 = 430,\n\t_STM32_USB_FIRMWARE_UPGRADE_200 = 431,\n\t_STM32_USB_FIRMWARE_UPGRADE_300 = 432,\n\t_STM32F0_FIRMWARE_UPGRADE_100 = 433,\n\t_STM32G0_FIRMWARE_UPGRADE_110 = 434,\n\t_STM32G0_FIRMWARE_UPGRADE_114 = 435,\n\t_STM32F3_FIRMWARE_UPGRADE_120 = 436,\n\t_STM8S_FIRMWARE_UPGRADE_100 = 437,\n\t_M3_SPI_FIRMWARE_UPGRADE_000 = 438,\n\t_HIDUSB_GENERIC = 439,\n\t_PHIDUSB_GENERIC = 440,\n\t_USBSWITCH_DIGITALOUTPUT_IN1_100 = 441,\n\t_USBSWITCH_DIGITALOUTPUT_IN2_100 = 442,\n\t_USBSWITCH_DIGITALOUTPUT_IN3_100 = 443,\n\t_USBSWITCH_DIGITALOUTPUT_IN4_100 = 444,\n\t_USBSWITCH_DIGITALOUTPUT_A1_100 = 445,\n\t_USBSWITCH_DIGITALOUTPUT_A2_100 = 446,\n\t_USBSWITCH_DIGITALOUTPUT_A3_100 = 447,\n\t_USBSWITCH_DIGITALOUTPUT_A4_100 = 448,\n\t_VINT_GENERIC = 449,\n\t_DICTIONARY = 450,\n\t_USB_UNKNOWN = 451,\n\t_VINT_UNKNOWN = 452,\n\t_SPI_UNKNOWN = 453,\n}\n\n/** @internal */\nexport interface PhidgetUniqueDevice {\n\tuid?: DeviceUID, \t\t/* Device UID - Only in full gen */\n\td?: DeviceID, \t\t\t/* Device ID - Only in full gen */\n\tc: DeviceClass,\t\t\t/* Device Class */\n\tt?: string, \t\t\t/* Device Name - Only in full gen */\n\ts: string,\t\t\t\t/* Device SKU */\n\ti: number,\t\t\t\t/* Hardware ID */\n\tv: [number, number],\t/* Version Range */\n\tcn?: number[]\t\t\t/* USB Device Channel Counts - Only in full gen */\n\tn?: number,\t\t\t\t/* USB Interface - Default is 0 */\n\tch: PhidgetUniqueChannel[]\n}\n\n/** @internal */\nexport interface PhidgetUniqueChannel {\n\tuid?: DeviceChannelUID,\t/* Channel UID - Only in full gen */\n\tt?: string, \t\t\t/* Channel Name - Only in full gen */\n\tc?: ChannelClass,\t\t/* Channel Class - Only in full gen */\n\ts?: ChannelSubclass,\t/* Channel Subclass - Default is NONE */\n\tn?: number,\t\t\t\t/* Channel Count - Default is 1 */\n\ti?: number, \t\t\t/* Channel Index - Only in full gen */\n\te?: number, \t\t\t/* Exclusive access indicator - Default is none */\n\tp?: BP[], \t\t\t\t/* Supported Bridge Packets - Only in full gen */\n}\n\ninterface PhidgetUniqueDevices {\n\tVINT: PhidgetUniqueDevice[],\n\tUSB: PhidgetUniqueDevice[],\n\tMESH: PhidgetUniqueDevice[],\n\tSPI: PhidgetUniqueDevice[],\n\tLIGHTNING: PhidgetUniqueDevice[],\n\tVIRTUAL: PhidgetUniqueDevice[],\n}\n\n/** @internal */\nexport const PhidgetDevices: PhidgetUniqueDevices = {\n\tVINT: [\n\t\t{\n\t\t\tuid: DeviceUID._1014_3_VINT,\n\t\t\td: 9 /* DeviceID.PN_1014 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/4\",\n\t\t\ts: \"1014\",\n\t\t\ti: 64 /* VintID */,\n\t\t\tv: [800, 900],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT,\n\t\t\t\t\tt: \"Power Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1017_2_VINT,\n\t\t\td: 12 /* DeviceID.PN_1017 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/8\",\n\t\t\ts: \"1017\",\n\t\t\ti: 135 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT,\n\t\t\t\t\tt: \"Signal Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1055_1_VINT,\n\t\t\td: 32 /* DeviceID.PN_1055 */,\n\t\t\tc: 10 /* DeviceClass.IR */,\n\t\t\tt: \"PhidgetIR\",\n\t\t\ts: \"1055\",\n\t\t\ti: 77 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1055_IR_200_VINT,\n\t\t\t\t\tt: \"IR Receiver Transmitter\",\n\t\t\t\t\tc: 16 /* ChannelClass.IR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.REPEAT,\n\t\t\t\t\t\tBP.TRANSMIT,\n\t\t\t\t\t\tBP.TRANSMITREPEAT,\n\t\t\t\t\t\tBP.TRANSMITRAW,\n\t\t\t\t\t\tBP.CODE,\n\t\t\t\t\t\tBP.LEARN,\n\t\t\t\t\t\tBP.RAWDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DIGITALINPUT_PORT,\n\t\t\td: 95 /* DeviceID.DIGITAL_INPUT_PORT */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Hub Port - Digital Input Mode\",\n\t\t\ts: \"DIGITALINPUT_PORT\",\n\t\t\ti: 1 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DIGITALOUTPUT_PORT,\n\t\t\td: 96 /* DeviceID.DIGITAL_OUTPUT_PORT */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Hub Port - Digital Output Mode\",\n\t\t\ts: \"DIGITALOUTPUT_PORT\",\n\t\t\ti: 2 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DIGITALOUTPUT_PORT_FAILSAFE,\n\t\t\td: 96 /* DeviceID.DIGITAL_OUTPUT_PORT */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Hub Port - Digital Output Mode\",\n\t\t\ts: \"DIGITALOUTPUT_PORT\",\n\t\t\ti: 2 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB_DIGITALOUTPUT_110,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VOLTAGEINPUT_PORT,\n\t\t\td: 97 /* DeviceID.VOLTAGE_INPUT_PORT */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Hub Port - Voltage Input Mode\",\n\t\t\ts: \"VOLTAGEINPUT_PORT\",\n\t\t\ti: 3 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VOLTAGEINPUT_PORT_5V25,\n\t\t\td: 97 /* DeviceID.VOLTAGE_INPUT_PORT */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Hub Port - Voltage Input Mode\",\n\t\t\ts: \"VOLTAGEINPUT_PORT\",\n\t\t\ti: 3 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB_VOLTAGEINPUT_110,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VOLTAGERATIOINPUT_PORT,\n\t\t\td: 98 /* DeviceID.VOLTAGE_RATIO_INPUT_PORT */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Hub Port - Voltage Ratio Mode\",\n\t\t\ts: \"VOLTAGERATIOINPUT_PORT\",\n\t\t\ti: 4 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._ADP1000,\n\t\t\td: 49 /* DeviceID.PN_ADP1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"pH Adapter Phidget\",\n\t\t\ts: \"ADP1000\",\n\t\t\ti: 29 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._ADP1000_PHSENSOR_100,\n\t\t\t\t\tt: \"PH Sensor Input\",\n\t\t\t\t\tc: 37 /* ChannelClass.PH_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONTEMPERATURE,\n\t\t\t\t\t\tBP.PHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._ADP1000_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1000,\n\t\t\td: 51 /* DeviceID.PN_DAQ1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"8x Voltage Input Phidget\",\n\t\t\ts: \"DAQ1000\",\n\t\t\ti: 50 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1000_5V25,\n\t\t\td: 51 /* DeviceID.PN_DAQ1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"8x Voltage Input Phidget\",\n\t\t\ts: \"DAQ1000\",\n\t\t\ti: 50 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1000,\n\t\t\td: 75 /* DeviceID.PN_OUT1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"12-bit Voltage Output Phidget\",\n\t\t\ts: \"OUT1000\",\n\t\t\ti: 41 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1000_Failsafe,\n\t\t\td: 75 /* DeviceID.PN_OUT1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"12-bit Voltage Output Phidget\",\n\t\t\ts: \"OUT1000\",\n\t\t\ti: 41 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1001,\n\t\t\td: 76 /* DeviceID.PN_OUT1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Isolated 12-bit Voltage Output Phidget\",\n\t\t\ts: \"OUT1001\",\n\t\t\ti: 42 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1001_Failsafe,\n\t\t\td: 76 /* DeviceID.PN_OUT1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Isolated 12-bit Voltage Output Phidget\",\n\t\t\ts: \"OUT1001\",\n\t\t\ti: 42 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1002,\n\t\t\td: 77 /* DeviceID.PN_OUT1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Isolated 16-bit Voltage Output Phidget\",\n\t\t\ts: \"OUT1002\",\n\t\t\ti: 43 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1002_Failsafe,\n\t\t\td: 77 /* DeviceID.PN_OUT1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Isolated 16-bit Voltage Output Phidget\",\n\t\t\ts: \"OUT1002\",\n\t\t\ti: 43 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1200,\n\t\t\td: 52 /* DeviceID.PN_DAQ1200 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Digital Input Phidget\",\n\t\t\ts: \"DAQ1200\",\n\t\t\ti: 28 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1200_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1100,\n\t\t\td: 78 /* DeviceID.PN_OUT1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Digital Output Phidget\",\n\t\t\ts: \"OUT1100\",\n\t\t\ti: 25 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1100_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1100_Failsafe,\n\t\t\td: 78 /* DeviceID.PN_OUT1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Digital Output Phidget\",\n\t\t\ts: \"OUT1100\",\n\t\t\ti: 25 /* VintID */,\n\t\t\tv: [110, 120],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1100_DIGITALOUTPUT_110,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._OUT1100_Failsafe_Frequency,\n\t\t\td: 78 /* DeviceID.PN_OUT1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Digital Output Phidget\",\n\t\t\ts: \"OUT1100\",\n\t\t\ti: 25 /* VintID */,\n\t\t\tv: [120, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._OUT1100_DIGITALOUTPUT_120,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 18 /* ChannelSubClass.DIGITAL_OUTPUT_FREQUENCY */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETFREQUENCY,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1300,\n\t\t\td: 53 /* DeviceID.PN_DAQ1300 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Isolated Digital Input Phidget\",\n\t\t\ts: \"DAQ1300\",\n\t\t\ti: 32 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1300_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input Isolated\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1301,\n\t\t\td: 54 /* DeviceID.PN_DAQ1301 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x Isolated Digital Input Phidget\",\n\t\t\ts: \"DAQ1301\",\n\t\t\ti: 54 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1301_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input Isolated\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1400,\n\t\t\td: 55 /* DeviceID.PN_DAQ1400 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Versatile Input Phidget\",\n\t\t\ts: \"DAQ1400\",\n\t\t\ti: 34 /* VintID */,\n\t\t\tv: [100, 120],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_CURRENTINPUT_100,\n\t\t\t\t\tt: \"Current Input\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.INPUTMODECHANGE,\n\t\t\t\t\t\tBP.SETINPUTMODE,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100,\n\t\t\t\t\tt: \"Frequency Input\",\n\t\t\t\t\tc: 9 /* ChannelClass.FREQUENCY_COUNTER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.INPUTMODECHANGE,\n\t\t\t\t\t\tBP.FREQUENCYDATA,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETINPUTMODE,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.FREQUENCYCHANGE,\n\t\t\t\t\t\tBP.COUNTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1400_120,\n\t\t\td: 55 /* DeviceID.PN_DAQ1400 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Versatile Input Phidget\",\n\t\t\ts: \"DAQ1400\",\n\t\t\ti: 34 /* VintID */,\n\t\t\tv: [120, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_CURRENTINPUT_120,\n\t\t\t\t\tt: \"Current Input\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_DIGITALINPUT_120,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.INPUTMODECHANGE,\n\t\t\t\t\t\tBP.SETINPUTMODE,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120,\n\t\t\t\t\tt: \"Frequency Input\",\n\t\t\t\t\tc: 9 /* ChannelClass.FREQUENCY_COUNTER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.POWERSUPPLYCHANGE,\n\t\t\t\t\t\tBP.INPUTMODECHANGE,\n\t\t\t\t\t\tBP.FREQUENCYDATA,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETINPUTMODE,\n\t\t\t\t\t\tBP.SETPOWERSUPPLY,\n\t\t\t\t\t\tBP.FREQUENCYCHANGE,\n\t\t\t\t\t\tBP.COUNTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DAQ1500,\n\t\t\td: 56 /* DeviceID.PN_DAQ1500 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Wheatstone Bridge Phidget\",\n\t\t\ts: \"DAQ1500\",\n\t\t\ti: 24 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Bridge Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 65 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_BRIDGE */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBRIDGEGAIN,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VCP1100,\n\t\t\td: 105 /* DeviceID.PN_VCP1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"30A Current Sensor Phidget\",\n\t\t\ts: \"VCP1100\",\n\t\t\ti: 64 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VCP1100_CURRENTINPUT_100,\n\t\t\t\t\tt: \"Current Input\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1000,\n\t\t\td: 57 /* DeviceID.PN_DCC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"DC Motor Phidget\",\n\t\t\ts: \"DCC1000\",\n\t\t\ti: 47 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETCURRENTREGULATORGAIN,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ts: 96 /* ChannelSubClass.ENCODER_MODE_SETTABLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Voltage Ratio\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_CURRENTINPUT_100,\n\t\t\t\t\tt: \"Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1000_POSITIONCONTROL,\n\t\t\td: 57 /* DeviceID.PN_DCC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"DC Motor Phidget\",\n\t\t\ts: \"DCC1000\",\n\t\t\ti: 47 /* VintID */,\n\t\t\tv: [200, 210],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_DCMOTOR_200,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETCURRENTREGULATORGAIN,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_ENCODER_200,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ts: 96 /* ChannelSubClass.ENCODER_MODE_SETTABLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200,\n\t\t\t\t\tt: \"Voltage Ratio\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_CURRENTINPUT_200,\n\t\t\t\t\tt: \"Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETCURRENTREGULATORGAIN,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1000_POSITIONCONTROL_FAILSAFE,\n\t\t\td: 57 /* DeviceID.PN_DCC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"DC Motor Phidget\",\n\t\t\ts: \"DCC1000\",\n\t\t\ti: 47 /* VintID */,\n\t\t\tv: [210, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_DCMOTOR_210,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETCURRENTREGULATORGAIN,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_ENCODER_210,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ts: 96 /* ChannelSubClass.ENCODER_MODE_SETTABLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210,\n\t\t\t\t\tt: \"Voltage Ratio\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_CURRENTINPUT_210,\n\t\t\t\t\tt: \"Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETCURRENTREGULATORGAIN,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1001,\n\t\t\td: 110 /* DeviceID.PN_DCC1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"2A DC Motor Phidget\",\n\t\t\ts: \"DCC1001\",\n\t\t\ti: 68 /* VintID */,\n\t\t\tv: [100, 120],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1001_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1001_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1001_Failsafe,\n\t\t\td: 110 /* DeviceID.PN_DCC1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"2A DC Motor Phidget\",\n\t\t\ts: \"DCC1001\",\n\t\t\ti: 68 /* VintID */,\n\t\t\tv: [120, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1001_DCMOTOR_120,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1001_ENCODER_120,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1002,\n\t\t\td: 117 /* DeviceID.PN_DCC1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4A DC Motor Phidget\",\n\t\t\ts: \"DCC1002\",\n\t\t\ti: 70 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1002_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1002_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1002_Failsafe,\n\t\t\td: 117 /* DeviceID.PN_DCC1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4A DC Motor Phidget\",\n\t\t\ts: \"DCC1002\",\n\t\t\ti: 70 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1002_DCMOTOR_110,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1002_ENCODER_110,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1003,\n\t\t\td: 120 /* DeviceID.PN_DCC1003 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"2x DC Motor Phidget\",\n\t\t\ts: \"DCC1003\",\n\t\t\ti: 73 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1003_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1003_Failsafe,\n\t\t\td: 120 /* DeviceID.PN_DCC1003 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"2x DC Motor Phidget\",\n\t\t\ts: \"DCC1003\",\n\t\t\ti: 73 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1003_DCMOTOR_110,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1100,\n\t\t\td: 108 /* DeviceID.PN_DCC1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Brushless DC Motor Phidget\",\n\t\t\ts: \"DCC1100\",\n\t\t\ti: 65 /* VintID */,\n\t\t\tv: [100, 120],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1100_BLDCMOTOR_100,\n\t\t\t\t\tt: \"Brushless DC Motor Controller\",\n\t\t\t\t\tc: 35 /* ChannelClass.BLDC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTALLVELOCITY,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.SETSTALLVELOCITY,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DCC1100_Failsafe,\n\t\t\td: 108 /* DeviceID.PN_DCC1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Brushless DC Motor Phidget\",\n\t\t\ts: \"DCC1100\",\n\t\t\ti: 65 /* VintID */,\n\t\t\tv: [120, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1100_BLDCMOTOR_120,\n\t\t\t\t\tt: \"Brushless DC Motor Controller\",\n\t\t\t\t\tc: 35 /* ChannelClass.BLDC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTALLVELOCITY,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.BRAKINGSTRENGTHCHANGE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120,\n\t\t\t\t\tt: \"Position Controller\",\n\t\t\t\t\tc: 34 /* ChannelClass.MOTOR_POSITION_CONTROLLER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\te: 0 /* Exclusive */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETDEADBAND,\n\t\t\t\t\t\tBP.SETKP,\n\t\t\t\t\t\tBP.SETKD,\n\t\t\t\t\t\tBP.SETKI,\n\t\t\t\t\t\tBP.SETSTALLVELOCITY,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DST1000,\n\t\t\td: 58 /* DeviceID.PN_DST1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Distance Phidget\",\n\t\t\ts: \"DST1000\",\n\t\t\ti: 45 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DST1000_DISTANCESENSOR_100,\n\t\t\t\t\tt: \"Distance Sensor 200mm\",\n\t\t\t\t\tc: 7 /* ChannelClass.DISTANCE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.DISTANCECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DST1001,\n\t\t\td: 121 /* DeviceID.PN_DST1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Distance Phidget 650mm\",\n\t\t\ts: \"DST1001\",\n\t\t\ti: 121 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DST1001_DISTANCESENSOR_100,\n\t\t\t\t\tt: \"Distance Sensor 650mm\",\n\t\t\t\t\tc: 7 /* ChannelClass.DISTANCE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.DISTANCECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DST1002,\n\t\t\td: 126 /* DeviceID.PN_DST1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Distance Phidget 1300mm\",\n\t\t\ts: \"DST1002\",\n\t\t\ti: 126 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DST1002_DISTANCESENSOR_100,\n\t\t\t\t\tt: \"Distance Sensor 1300mm\",\n\t\t\t\t\tc: 7 /* ChannelClass.DISTANCE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.DISTANCECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._DST1200,\n\t\t\td: 59 /* DeviceID.PN_DST1200 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Sonar Phidget\",\n\t\t\ts: \"DST1200\",\n\t\t\ti: 46 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DST1200_DISTANCESENSOR_100,\n\t\t\t\t\tt: \"Sonar Distance Sensor\",\n\t\t\t\t\tc: 7 /* ChannelClass.DISTANCE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSONARQUIETMODE,\n\t\t\t\t\t\tBP.DISTANCECHANGE,\n\t\t\t\t\t\tBP.SONARUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._ENC1000,\n\t\t\td: 60 /* DeviceID.PN_ENC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Quadrature Encoder Phidget\",\n\t\t\ts: \"ENC1000\",\n\t\t\ti: 18 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._ENC1000_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ts: 96 /* ChannelSubClass.ENCODER_MODE_SETTABLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HIN1101,\n\t\t\td: 109 /* DeviceID.PN_HIN1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Phidget Dial\",\n\t\t\ts: \"HIN1101\",\n\t\t\ti: 67 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1101_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1101_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HIN1000,\n\t\t\td: 61 /* DeviceID.PN_HIN1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Touch Keypad Phidget\",\n\t\t\ts: \"HIN1000\",\n\t\t\ti: 36 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100,\n\t\t\t\t\tt: \"Capacitive Touch Sensor\",\n\t\t\t\t\tc: 14 /* ChannelClass.CAPACITIVE_TOUCH */,\n\t\t\t\t\tn: 7 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSITIVITY,\n\t\t\t\t\t\tBP.TOUCHINPUTVALUECHANGE,\n\t\t\t\t\t\tBP.TOUCHINPUTEND,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HIN1001,\n\t\t\td: 62 /* DeviceID.PN_HIN1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Touch Wheel Phidget\",\n\t\t\ts: \"HIN1001\",\n\t\t\ti: 56 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100,\n\t\t\t\t\tt: \"Capacitive Touch Sensor\",\n\t\t\t\t\tc: 14 /* ChannelClass.CAPACITIVE_TOUCH */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSITIVITY,\n\t\t\t\t\t\tBP.TOUCHINPUTVALUECHANGE,\n\t\t\t\t\t\tBP.TOUCHINPUTEND,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100,\n\t\t\t\t\tt: \"Capacitive Scroll Wheel\",\n\t\t\t\t\tc: 14 /* ChannelClass.CAPACITIVE_TOUCH */,\n\t\t\t\t\ti: 4 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSITIVITY,\n\t\t\t\t\t\tBP.TOUCHINPUTVALUECHANGE,\n\t\t\t\t\t\tBP.TOUCHINPUTEND,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HIN1100,\n\t\t\td: 63 /* DeviceID.PN_HIN1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Thumbstick Phidget\",\n\t\t\ts: \"HIN1100\",\n\t\t\ti: 37 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Thumbstick Axis\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HIN1100_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Thumbstick Button\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUM1000,\n\t\t\td: 69 /* DeviceID.PN_HUM1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Humidity Phidget\",\n\t\t\ts: \"HUM1000\",\n\t\t\ti: 20 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100,\n\t\t\t\t\tt: \"Humidity Sensor\",\n\t\t\t\t\tc: 15 /* ChannelClass.HUMIDITY_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.HUMIDITYCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUM1001,\n\t\t\td: 127 /* DeviceID.PN_HUM1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Humidity Phidget\",\n\t\t\ts: \"HUM1001\",\n\t\t\ti: 127 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100,\n\t\t\t\t\tt: \"Humidity Sensor\",\n\t\t\t\t\tc: 15 /* ChannelClass.HUMIDITY_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.HUMIDITYCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._LCD1100,\n\t\t\td: 70 /* DeviceID.PN_LCD1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Graphic LCD Phidget\",\n\t\t\ts: \"LCD1100\",\n\t\t\ti: 40 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._LCD1100_LCD_100,\n\t\t\t\t\tt: \"Graphic LCD\",\n\t\t\t\t\tc: 11 /* ChannelClass.LCD */,\n\t\t\t\t\ts: 80 /* ChannelSubClass.LCD_GRAPHIC */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBACKLIGHT,\n\t\t\t\t\t\tBP.SETCONTRAST,\n\t\t\t\t\t\tBP.SETFRAMEBUFFER,\n\t\t\t\t\t\tBP.SETSLEEP,\n\t\t\t\t\t\tBP.SETCHARACTERBITMAP,\n\t\t\t\t\t\tBP.CLEAR,\n\t\t\t\t\t\tBP.COPY,\n\t\t\t\t\t\tBP.DRAWLINE,\n\t\t\t\t\t\tBP.DRAWPIXEL,\n\t\t\t\t\t\tBP.DRAWRECT,\n\t\t\t\t\t\tBP.FLUSH,\n\t\t\t\t\t\tBP.SETFONTSIZE,\n\t\t\t\t\t\tBP.SAVEFRAMEBUFFER,\n\t\t\t\t\t\tBP.WRITEBITMAP,\n\t\t\t\t\t\tBP.WRITETEXT,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._LED1000,\n\t\t\td: 71 /* DeviceID.PN_LED1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"32x Isolated LED Phidget\",\n\t\t\ts: \"LED1000\",\n\t\t\ti: 39 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._LED1000_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 17 /* ChannelSubClass.DIGITAL_OUTPUT_LEDDRIVER */,\n\t\t\t\t\tn: 32 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETLEDCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETLEDFORWARDVOLTAGE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._LUX1000,\n\t\t\td: 72 /* DeviceID.PN_LUX1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Light Phidget\",\n\t\t\ts: \"LUX1000\",\n\t\t\ti: 33 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._LUX1000_LIGHTSENSOR_100,\n\t\t\t\t\tt: \"Light Sensor\",\n\t\t\t\t\tc: 17 /* ChannelClass.LIGHT_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ILLUMINANCECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUM1100,\n\t\t\td: 136 /* DeviceID.PN_HUM1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Soil Moisture Phidget\",\n\t\t\ts: \"HUM1100\",\n\t\t\ti: 136 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Moisture Sensor\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT1100,\n\t\t\td: 73 /* DeviceID.PN_MOT1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Accelerometer Phidget\",\n\t\t\ts: \"MOT1100\",\n\t\t\ti: 51 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1100_ACCELEROMETER_200,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT0100_VINT,\n\t\t\td: 146 /* DeviceID.PN_MOT0100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"PhidgetAccelerometer\",\n\t\t\ts: \"MOT0100\",\n\t\t\ti: 146 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT1101,\n\t\t\td: 74 /* DeviceID.PN_MOT1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Spatial Phidget\",\n\t\t\ts: \"MOT1101\",\n\t\t\ti: 52 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1101_ACCELEROMETER_100,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1101_GYROSCOPE_100,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1101_MAGNETOMETER_100,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1101_SPATIAL_100,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT1102,\n\t\t\td: 137 /* DeviceID.PN_MOT1102 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Spatial Phidget\",\n\t\t\ts: \"MOT1102\",\n\t\t\ti: 137 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_ACCELEROMETER_200,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_GYROSCOPE_200,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_MAGNETOMETER_200,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_SPATIAL_200,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHMMAGGAIN,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SETAHRSPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT1102_1,\n\t\t\td: 137 /* DeviceID.PN_MOT1102 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Spatial Phidget\",\n\t\t\ts: \"MOT1102\",\n\t\t\ti: 140 /* VintID */,\n\t\t\tv: [300, 400],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_ACCELEROMETER_300,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_GYROSCOPE_300,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_MAGNETOMETER_300,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT1102_SPATIAL_300,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHMMAGGAIN,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SETAHRSPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT0110_VINT,\n\t\t\td: 141 /* DeviceID.PN_MOT0110 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"PhidgetSpatial Precision 3/3/3\",\n\t\t\ts: \"MOT0110\",\n\t\t\ti: 141 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_SPATIAL_100_VINT,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SETAHRSPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._PRE1000,\n\t\t\td: 79 /* DeviceID.PN_PRE1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Barometer Phidget\",\n\t\t\ts: \"PRE1000\",\n\t\t\ti: 17 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._PRE1000_PRESSURESENSOR_100,\n\t\t\t\t\tt: \"Barometer\",\n\t\t\t\t\tc: 21 /* ChannelClass.PRESSURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.PRESSURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._RCC1000,\n\t\t\td: 80 /* DeviceID.PN_RCC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x RC Servo Phidget\",\n\t\t\ts: \"RCC1000\",\n\t\t\ti: 49 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._RCC1000_RCSERVO_100,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._RCC1000_Failsafe,\n\t\t\td: 80 /* DeviceID.PN_RCC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x RC Servo Phidget\",\n\t\t\ts: \"RCC1000\",\n\t\t\ti: 49 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._RCC1000_RCSERVO_110,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._RCC1000_1,\n\t\t\td: 80 /* DeviceID.PN_RCC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x RC Servo Phidget\",\n\t\t\ts: \"RCC1000\",\n\t\t\ti: 58 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._RCC1000_RCSERVO_200,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1000,\n\t\t\td: 81 /* DeviceID.PN_REL1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Relay Phidget\",\n\t\t\ts: \"REL1000\",\n\t\t\ti: 44 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1000_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"Power Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1000_Failsafe,\n\t\t\td: 81 /* DeviceID.PN_REL1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Relay Phidget\",\n\t\t\ts: \"REL1000\",\n\t\t\ti: 44 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1000_DIGITALOUTPUT_110,\n\t\t\t\t\tt: \"Power Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1100,\n\t\t\td: 82 /* DeviceID.PN_REL1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Isolated Solid State Relay Phidget\",\n\t\t\ts: \"REL1100\",\n\t\t\ti: 26 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1100_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"Digital Output Isolated\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1100_Failsafe,\n\t\t\td: 82 /* DeviceID.PN_REL1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Isolated Solid State Relay Phidget\",\n\t\t\ts: \"REL1100\",\n\t\t\ti: 26 /* VintID */,\n\t\t\tv: [110, 120],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1100_DIGITALOUTPUT_110,\n\t\t\t\t\tt: \"Digital Output Isolated\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1100_Failsafe_Frequency,\n\t\t\td: 82 /* DeviceID.PN_REL1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Isolated Solid State Relay Phidget\",\n\t\t\ts: \"REL1100\",\n\t\t\ti: 26 /* VintID */,\n\t\t\tv: [120, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1100_DIGITALOUTPUT_120,\n\t\t\t\t\tt: \"Digital Output Isolated\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 18 /* ChannelSubClass.DIGITAL_OUTPUT_FREQUENCY */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETFREQUENCY,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1101,\n\t\t\td: 83 /* DeviceID.PN_REL1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x Isolated Solid State Relay Phidget\",\n\t\t\ts: \"REL1101\",\n\t\t\ti: 27 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1101_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"Digital Output Isolated\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1101_Failsafe,\n\t\t\td: 83 /* DeviceID.PN_REL1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x Isolated Solid State Relay Phidget\",\n\t\t\ts: \"REL1101\",\n\t\t\ti: 27 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1101_DIGITALOUTPUT_110,\n\t\t\t\t\tt: \"Digital Output Isolated\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._REL1101_1,\n\t\t\td: 83 /* DeviceID.PN_REL1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"16x Isolated Solid State Relay Phidget\",\n\t\t\ts: \"REL1101\",\n\t\t\ti: 130 /* VintID */,\n\t\t\tv: [100, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200,\n\t\t\t\t\tt: \"Digital Output Isolated Frequency Control\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 18 /* ChannelSubClass.DIGITAL_OUTPUT_FREQUENCY */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETFREQUENCY,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._REL1101_DIGITALOUTPUT_200,\n\t\t\t\t\tt: \"Digital Output Isolated\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 16 /* ChannelSubClass.DIGITAL_OUTPUT_DUTY_CYCLE */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 8 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._SAF1000,\n\t\t\td: 84 /* DeviceID.PN_SAF1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Programmable Power Guard Phidget\",\n\t\t\ts: \"SAF1000\",\n\t\t\ti: 38 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SAF1000_POWERGUARD_100,\n\t\t\t\t\tt: \"Power Supply Protector\",\n\t\t\t\t\tc: 20 /* ChannelClass.POWER_GUARD */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETOVERVOLTAGE,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SAF1000_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Sensor\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._SAF1000_Failsafe,\n\t\t\td: 84 /* DeviceID.PN_SAF1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Programmable Power Guard Phidget\",\n\t\t\ts: \"SAF1000\",\n\t\t\ti: 38 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SAF1000_POWERGUARD_110,\n\t\t\t\t\tt: \"Power Supply Protector\",\n\t\t\t\t\tc: 20 /* ChannelClass.POWER_GUARD */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETOVERVOLTAGE,\n\t\t\t\t\t\tBP.SETFANMODE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SAF1000_VOLTAGEINPUT_110,\n\t\t\t\t\tt: \"Voltage Sensor\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._SND1000,\n\t\t\td: 85 /* DeviceID.PN_SND1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Sound Phidget\",\n\t\t\ts: \"SND1000\",\n\t\t\ti: 35 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SND1000_SOUNDSENSOR_100,\n\t\t\t\t\tt: \"Sound Sensor\",\n\t\t\t\t\tc: 25 /* ChannelClass.SOUND_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPLRANGE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.DBCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1000,\n\t\t\td: 86 /* DeviceID.PN_STC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Stepper Phidget\",\n\t\t\ts: \"STC1000\",\n\t\t\ti: 48 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1000_STEPPER_100,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1000_Failsafe,\n\t\t\td: 86 /* DeviceID.PN_STC1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Stepper Phidget\",\n\t\t\ts: \"STC1000\",\n\t\t\ti: 48 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1000_STEPPER_110,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1001,\n\t\t\td: 115 /* DeviceID.PN_STC1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"2.5A Stepper Phidget\",\n\t\t\ts: \"STC1001\",\n\t\t\ti: 69 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1001_STEPPER_100,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1001_Failsafe,\n\t\t\td: 115 /* DeviceID.PN_STC1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"2.5A Stepper Phidget\",\n\t\t\ts: \"STC1001\",\n\t\t\ti: 69 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1001_STEPPER_110,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1002,\n\t\t\td: 118 /* DeviceID.PN_STC1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"8A Stepper Phidget\",\n\t\t\ts: \"STC1002\",\n\t\t\ti: 71 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1002_STEPPER_100,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1002_Failsafe,\n\t\t\td: 118 /* DeviceID.PN_STC1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"8A Stepper Phidget\",\n\t\t\ts: \"STC1002\",\n\t\t\ti: 71 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1002_STEPPER_110,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1003,\n\t\t\td: 119 /* DeviceID.PN_STC1003 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4A Stepper Phidget\",\n\t\t\ts: \"STC1003\",\n\t\t\ti: 72 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1003_STEPPER_100,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1003_Failsafe,\n\t\t\td: 119 /* DeviceID.PN_STC1003 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4A Stepper Phidget\",\n\t\t\ts: \"STC1003\",\n\t\t\ti: 72 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1003_STEPPER_110,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1003_1,\n\t\t\td: 119 /* DeviceID.PN_STC1003 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4A Stepper Phidget\",\n\t\t\ts: \"STC1003\",\n\t\t\ti: 142 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1003_STEPPER_200,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1003_VOLTAGEINPUT_200,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._STC1005_0,\n\t\t\td: 149 /* DeviceID.PN_STC1005 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4A Stepper Phidget\",\n\t\t\ts: \"STC1005\",\n\t\t\ti: 147 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1005_STEPPER_100,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETHOLDINGCURRENTLIMIT,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STC1005_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._TMP1000,\n\t\t\td: 87 /* DeviceID.PN_TMP1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Temperature Phidget\",\n\t\t\ts: \"TMP1000\",\n\t\t\ti: 19 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._TMP1100,\n\t\t\td: 88 /* DeviceID.PN_TMP1100 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Isolated Thermocouple Phidget\",\n\t\t\ts: \"TMP1100\",\n\t\t\ti: 55 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1100_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._TMP1101,\n\t\t\td: 89 /* DeviceID.PN_TMP1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Thermocouple Phidget\",\n\t\t\ts: \"TMP1101\",\n\t\t\ti: 21 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 4 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1101_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._TMP1101_1,\n\t\t\td: 89 /* DeviceID.PN_TMP1101 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"4x Thermocouple Phidget\",\n\t\t\ts: \"TMP1101\",\n\t\t\ti: 143 /* VintID */,\n\t\t\tv: [200, 300],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 4 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1101_VOLTAGEINPUT_200,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._TMP1200,\n\t\t\td: 90 /* DeviceID.PN_TMP1200 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"RTD Phidget\",\n\t\t\ts: \"TMP1200\",\n\t\t\ti: 16 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100,\n\t\t\t\t\tt: \"RTD input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 32 /* ChannelSubClass.TEMPERATURE_SENSOR_RTD */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.RTDWIRESETUPCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETRTDTYPE,\n\t\t\t\t\t\tBP.SETRTDWIRESETUP,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1200_RESISTANCEINPUT_100,\n\t\t\t\t\tt: \"Resistance Input\",\n\t\t\t\t\tc: 23 /* ChannelClass.RESISTANCE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.RTDWIRESETUPCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETRTDWIRESETUP,\n\t\t\t\t\t\tBP.RESISTANCECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._TMP1200_1,\n\t\t\td: 90 /* DeviceID.PN_TMP1200 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"RTD Phidget\",\n\t\t\ts: \"TMP1200\",\n\t\t\ti: 78 /* VintID */,\n\t\t\tv: [300, 400],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300,\n\t\t\t\t\tt: \"RTD input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 32 /* ChannelSubClass.TEMPERATURE_SENSOR_RTD */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.RTDWIRESETUPCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETRTDTYPE,\n\t\t\t\t\t\tBP.SETRTDWIRESETUP,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._TMP1200_RESISTANCEINPUT_300,\n\t\t\t\t\tt: \"Resistance Input\",\n\t\t\t\t\tc: 23 /* ChannelClass.RESISTANCE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.RTDWIRESETUPCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETRTDWIRESETUP,\n\t\t\t\t\t\tBP.RESISTANCECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VCP1000,\n\t\t\td: 92 /* DeviceID.PN_VCP1000 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"20-bit (+-40V) Voltage Input Phidget\",\n\t\t\ts: \"VCP1000\",\n\t\t\ti: 53 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VCP1000_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VCP1001,\n\t\t\td: 93 /* DeviceID.PN_VCP1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"10-bit (+-40V) Voltage Input Phidget\",\n\t\t\ts: \"VCP1001\",\n\t\t\ti: 31 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VCP1001_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VCP1001_110,\n\t\t\td: 93 /* DeviceID.PN_VCP1001 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"10-bit (+-40V) Voltage Input Phidget\",\n\t\t\ts: \"VCP1001\",\n\t\t\ti: 31 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VCP1001_VOLTAGEINPUT_110,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VCP1002,\n\t\t\td: 94 /* DeviceID.PN_VCP1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"10-bit (+-1V) Voltage Input Phidget\",\n\t\t\ts: \"VCP1002\",\n\t\t\ti: 30 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VCP1002_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._VCP1002_110,\n\t\t\td: 94 /* DeviceID.PN_VCP1002 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"10-bit (+-1V) Voltage Input Phidget\",\n\t\t\ts: \"VCP1002\",\n\t\t\ti: 30 /* VintID */,\n\t\t\tv: [110, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VCP1002_VOLTAGEINPUT_110,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETVOLTAGERANGE,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32F0,\n\t\t\td: 102 /* DeviceID.FIRMWARE_UPGRADE_STM32F0 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"VINT Firmware Upgrade (STM32F0)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32F0\",\n\t\t\ti: 4093 /* VintID */,\n\t\t\tv: [100, 110],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DEVICEINFO,\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32G0_BLBug,\n\t\t\td: 143 /* DeviceID.FIRMWARE_UPGRADE_STM32G0 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"VINT Firmware Upgrade (STM32G0)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32G0\",\n\t\t\ti: 4093 /* VintID */,\n\t\t\tv: [110, 114],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DEVICEINFO,\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32G0,\n\t\t\td: 143 /* DeviceID.FIRMWARE_UPGRADE_STM32G0 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"VINT Firmware Upgrade (STM32G0)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32G0\",\n\t\t\ti: 4093 /* VintID */,\n\t\t\tv: [114, 120],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DEVICEINFO,\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32F3,\n\t\t\td: 145 /* DeviceID.FIRMWARE_UPGRADE_STM32F3 */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"VINT Firmware Upgrade (STM32F3)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32F3\",\n\t\t\ti: 4093 /* VintID */,\n\t\t\tv: [120, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DEVICEINFO,\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM8S,\n\t\t\td: 103 /* DeviceID.FIRMWARE_UPGRADE_STM8S */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"VINT Firmware Upgrade (STM8S)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM8S\",\n\t\t\ti: 4094 /* VintID */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DEVICEINFO,\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._UNKNOWNVINT,\n\t\t\td: 125 /* DeviceID.UNKNOWN */,\n\t\t\tc: 21 /* DeviceClass.VINT */,\n\t\t\tt: \"Unsupported VINT Phidget\",\n\t\t\ts: \" \",\n\t\t\ti: 4080 /* VintID */,\n\t\t\tv: [0, 9999],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._VINT_UNKNOWN,\n\t\t\t\t\tt: \"Unsupported VINT Channel\",\n\t\t\t\t\tc: 33 /* ChannelClass.GENERIC */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDPACKET,\n\t\t\t\t\t\tBP.SENDCHPACKET,\n\t\t\t\t\t\tBP.SENDDEVPACKET,\n\t\t\t\t\t\tBP.READCHPACKET,\n\t\t\t\t\t\tBP.READDEVPACKET,\n\t\t\t\t\t\tBP.PACKET,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t],\n\tUSB: [\n\t\t{\n\t\t\tuid: DeviceUID._IFKIT488,\n\t\t\td: 1 /* DeviceID.PN_INTERFACE_KIT488 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 4/8/8\",\n\t\t\ts: \"ifkit488\",\n\t\t\ti: 33281 /* USB ProductID */,\n\t\t\tv: [0, 101],\n\t\t\tcn: [0,4,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._ifkit488_VOLTAGERATIOINPUT_000,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._ifkit488_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._ifkit488_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1000_OLD1,\n\t\t\td: 2 /* DeviceID.PN_1000 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 1-Motor\",\n\t\t\ts: \"1000\",\n\t\t\ti: 33025 /* USB ProductID */,\n\t\t\tv: [200, 201],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1000_RCSERVO_OLD1_200,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1000_OLD2,\n\t\t\td: 2 /* DeviceID.PN_1000 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 1-Motor\",\n\t\t\ts: \"1000\",\n\t\t\ti: 57 /* USB ProductID */,\n\t\t\tv: [200, 201],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1000_RCSERVO_OLD2_200,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1000_NO_ECHO,\n\t\t\td: 2 /* DeviceID.PN_1000 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 1-Motor\",\n\t\t\ts: \"1000\",\n\t\t\ti: 57 /* USB ProductID */,\n\t\t\tv: [300, 313],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1000_RCSERVO_300,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1000,\n\t\t\td: 2 /* DeviceID.PN_1000 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 1-Motor\",\n\t\t\ts: \"1000\",\n\t\t\ti: 57 /* USB ProductID */,\n\t\t\tv: [313, 400],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1000_RCSERVO_313,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1001_OLD1,\n\t\t\td: 3 /* DeviceID.PN_1001 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 4-Motor\",\n\t\t\ts: \"1001\",\n\t\t\ti: 33028 /* USB ProductID */,\n\t\t\tv: [200, 201],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1001_RCSERVO_OLD1_200,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1001_OLD2,\n\t\t\td: 3 /* DeviceID.PN_1001 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 4-Motor\",\n\t\t\ts: \"1001\",\n\t\t\ti: 56 /* USB ProductID */,\n\t\t\tv: [200, 201],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1001_RCSERVO_OLD2_200,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1001_NO_ECHO,\n\t\t\td: 3 /* DeviceID.PN_1001 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 4-Motor\",\n\t\t\ts: \"1001\",\n\t\t\ti: 56 /* USB ProductID */,\n\t\t\tv: [300, 313],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1001_RCSERVO_313,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1001,\n\t\t\td: 3 /* DeviceID.PN_1001 */,\n\t\t\tc: 16 /* DeviceClass.SERVO */,\n\t\t\tt: \"PhidgetServo 4-Motor\",\n\t\t\ts: \"1001\",\n\t\t\ti: 56 /* USB ProductID */,\n\t\t\tv: [313, 400],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1001_RCSERVO_400,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1002,\n\t\t\td: 4 /* DeviceID.PN_1002 */,\n\t\t\tc: 3 /* DeviceClass.ANALOG */,\n\t\t\tt: \"PhidgetAnalog 4-Output\",\n\t\t\ts: \"1002\",\n\t\t\ti: 55 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1002_VOLTAGEOUTPUT_100,\n\t\t\t\t\tt: \"Voltage Output\",\n\t\t\t\t\tc: 30 /* ChannelClass.VOLTAGE_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1008,\n\t\t\td: 5 /* DeviceID.PN_1008 */,\n\t\t\tc: 1 /* DeviceClass.ACCELEROMETER */,\n\t\t\tt: \"PhidgetAccelerometer 2-Axis\",\n\t\t\ts: \"1008\",\n\t\t\ti: 113 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [2] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1008_ACCELEROMETER_000,\n\t\t\t\t\tt: \"2-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1011,\n\t\t\td: 7 /* DeviceID.PN_1011 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 2/2/2\",\n\t\t\ts: \"1011\",\n\t\t\ti: 54 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [2,2,2,2] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1011_VOLTAGEINPUT_000,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1011_VOLTAGERATIOINPUT_000,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1011_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1011_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1012_NO_ECHO,\n\t\t\td: 8 /* DeviceID.PN_1012 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/16/16\",\n\t\t\ts: \"1012\",\n\t\t\ti: 68 /* USB ProductID */,\n\t\t\tv: [0, 601],\n\t\t\tcn: [0,0,16,16] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1012_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1012_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1012_BITBUG,\n\t\t\td: 8 /* DeviceID.PN_1012 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/16/16\",\n\t\t\ts: \"1012\",\n\t\t\ti: 68 /* USB ProductID */,\n\t\t\tv: [601, 602],\n\t\t\tcn: [0,0,16,16] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1012_DIGITALINPUT_601,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1012_DIGITALOUTPUT_601,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1012,\n\t\t\td: 8 /* DeviceID.PN_1012 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/16/16\",\n\t\t\ts: \"1012\",\n\t\t\ti: 68 /* USB ProductID */,\n\t\t\tv: [602, 700],\n\t\t\tcn: [0,0,16,16] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1012_DIGITALINPUT_602,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1012_DIGITALOUTPUT_602,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 16 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1013_NO_ECHO,\n\t\t\td: 6 /* DeviceID.PN_1010_1013_1018_1019 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1013\",\n\t\t\ti: 69 /* USB ProductID */,\n\t\t\tv: [0, 821],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1013_VOLTAGEINPUT_000,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1013_VOLTAGERATIOINPUT_000,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1013_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1013_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1013,\n\t\t\td: 6 /* DeviceID.PN_1010_1013_1018_1019 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1013/1018/1019\",\n\t\t\ti: 69 /* USB ProductID */,\n\t\t\tv: [821, 900],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_VOLTAGEINPUT_821,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_VOLTAGERATIOINPUT_821,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_DIGITALINPUT_821,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_DIGITALOUTPUT_821,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1014_NO_ECHO,\n\t\t\td: 9 /* DeviceID.PN_1014 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/4\",\n\t\t\ts: \"1014\",\n\t\t\ti: 64 /* USB ProductID */,\n\t\t\tv: [0, 704],\n\t\t\tcn: [0,0,0,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1014_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Power Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1014,\n\t\t\td: 9 /* DeviceID.PN_1014 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/4\",\n\t\t\ts: \"1014\",\n\t\t\ti: 64 /* USB ProductID */,\n\t\t\tv: [704, 800],\n\t\t\tcn: [0,0,0,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1014_DIGITALOUTPUT_704,\n\t\t\t\t\tt: \"Power Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1014_3_USB,\n\t\t\td: 9 /* DeviceID.PN_1014 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/4\",\n\t\t\ts: \"1014\",\n\t\t\ti: 64 /* USB ProductID */,\n\t\t\tv: [800, 900],\n\t\t\tcn: [0,0,0,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1014_DIGITALOUTPUT_800_USB,\n\t\t\t\t\tt: \"Power Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1015,\n\t\t\td: 10 /* DeviceID.PN_1015 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetLinearTouch\",\n\t\t\ts: \"1015\",\n\t\t\ti: 118 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0,0,0,0,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1015_CAPACITIVETOUCH_000,\n\t\t\t\t\tt: \"Capacitive Slider Sensor\",\n\t\t\t\t\tc: 14 /* ChannelClass.CAPACITIVE_TOUCH */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TOUCHINPUTVALUECHANGE,\n\t\t\t\t\t\tBP.TOUCHINPUTEND,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1016,\n\t\t\td: 11 /* DeviceID.PN_1016 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetCircularTouch\",\n\t\t\ts: \"1016\",\n\t\t\ti: 119 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0,0,0,0,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1016_CAPACITIVETOUCH_000,\n\t\t\t\t\tt: \"Capacitive Scroll Sensor\",\n\t\t\t\t\tc: 14 /* ChannelClass.CAPACITIVE_TOUCH */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TOUCHINPUTVALUECHANGE,\n\t\t\t\t\t\tBP.TOUCHINPUTEND,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1017,\n\t\t\td: 12 /* DeviceID.PN_1017 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/8\",\n\t\t\ts: \"1017\",\n\t\t\ti: 129 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0,0,0,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1017_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Signal Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1017_2_USB,\n\t\t\td: 12 /* DeviceID.PN_1017 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 0/0/8\",\n\t\t\ts: \"1017\",\n\t\t\ti: 135 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [0,0,0,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1017_DIGITALOUTPUT_200_USB,\n\t\t\t\t\tt: \"Signal Relay\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.FAILSAFERESET,\n\t\t\t\t\t\tBP.SETFAILSAFETIME,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1018,\n\t\t\td: 6 /* DeviceID.PN_1010_1013_1018_1019 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1010/1018/1019\",\n\t\t\ti: 69 /* USB ProductID */,\n\t\t\tv: [900, 1000],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_VOLTAGEINPUT_900,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_VOLTAGERATIOINPUT_900,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_DIGITALINPUT_900,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_DIGITALOUTPUT_900,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1018_3,\n\t\t\td: 6 /* DeviceID.PN_1010_1013_1018_1019 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1010/1018/1019\",\n\t\t\ti: 69 /* USB ProductID */,\n\t\t\tv: [1000, 1100],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_VOLTAGEINPUT_1000,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_DIGITALINPUT_1000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1018_DIGITALOUTPUT_1000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1023_OLD,\n\t\t\td: 13 /* DeviceID.PN_1023 */,\n\t\t\tc: 15 /* DeviceClass.RFID */,\n\t\t\tt: \"PhidgetRFID\",\n\t\t\ts: \"1023\",\n\t\t\ti: 48 /* USB ProductID */,\n\t\t\tv: [0, 104],\n\t\t\tcn: [0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_RFID_000,\n\t\t\t\t\tt: \"RFID Reader\",\n\t\t\t\t\tc: 24 /* ChannelClass.RFID */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.TAG,\n\t\t\t\t\t\tBP.TAGLOST,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1023,\n\t\t\td: 13 /* DeviceID.PN_1023 */,\n\t\t\tc: 15 /* DeviceClass.RFID */,\n\t\t\tt: \"PhidgetRFID\",\n\t\t\ts: \"1023\",\n\t\t\ti: 48 /* USB ProductID */,\n\t\t\tv: [104, 200],\n\t\t\tcn: [0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_RFID_104,\n\t\t\t\t\tt: \"RFID Reader\",\n\t\t\t\t\tc: 24 /* ChannelClass.RFID */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.TAG,\n\t\t\t\t\t\tBP.TAGLOST,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1023_2OUTPUT_NO_ECHO,\n\t\t\td: 13 /* DeviceID.PN_1023 */,\n\t\t\tc: 15 /* DeviceClass.RFID */,\n\t\t\tt: \"PhidgetRFID\",\n\t\t\ts: \"1023\",\n\t\t\ti: 49 /* USB ProductID */,\n\t\t\tv: [200, 201],\n\t\t\tcn: [3] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_RFID_200,\n\t\t\t\t\tt: \"RFID Reader\",\n\t\t\t\t\tc: 24 /* ChannelClass.RFID */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETANTENNAON,\n\t\t\t\t\t\tBP.TAG,\n\t\t\t\t\t\tBP.TAGLOST,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_DIGITALOUTPUT_5V_200,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_DIGITALOUTPUT_LED_200,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_200,\n\t\t\t\t\tt: \"Onboard LED\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 2 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1023_2OUTPUT,\n\t\t\td: 13 /* DeviceID.PN_1023 */,\n\t\t\tc: 15 /* DeviceClass.RFID */,\n\t\t\tt: \"PhidgetRFID\",\n\t\t\ts: \"1023\",\n\t\t\ti: 49 /* USB ProductID */,\n\t\t\tv: [201, 300],\n\t\t\tcn: [3] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_RFID_201,\n\t\t\t\t\tt: \"RFID Reader\",\n\t\t\t\t\tc: 24 /* ChannelClass.RFID */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETANTENNAON,\n\t\t\t\t\t\tBP.TAG,\n\t\t\t\t\t\tBP.TAGLOST,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_DIGITALOUTPUT_5V_201,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_DIGITALOUTPUT_LED_201,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_201,\n\t\t\t\t\tt: \"Onboard LED\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 2 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1024,\n\t\t\td: 14 /* DeviceID.PN_1024 */,\n\t\t\tc: 15 /* DeviceClass.RFID */,\n\t\t\tt: \"PhidgetRFID Read-Write\",\n\t\t\ts: \"1024\",\n\t\t\ti: 52 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [3] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1024_RFID_100,\n\t\t\t\t\tt: \"RFID Reader/Writer\",\n\t\t\t\t\tc: 24 /* ChannelClass.RFID */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETANTENNAON,\n\t\t\t\t\t\tBP.WRITE,\n\t\t\t\t\t\tBP.TAG,\n\t\t\t\t\t\tBP.TAGLOST,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1024_DIGITALOUTPUT_5V_100,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1024_DIGITALOUTPUT_LED_100,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_100,\n\t\t\t\t\tt: \"Onboard LED\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ti: 2 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1030,\n\t\t\td: 15 /* DeviceID.PN_1030 */,\n\t\t\tc: 11 /* DeviceClass.LED */,\n\t\t\tt: \"PhidgetLED-64\",\n\t\t\ts: \"1030\",\n\t\t\ti: 74 /* USB ProductID */,\n\t\t\tv: [100, 300],\n\t\t\tcn: [64] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1030_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 17 /* ChannelSubClass.DIGITAL_OUTPUT_LEDDRIVER */,\n\t\t\t\t\tn: 64 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1031,\n\t\t\td: 16 /* DeviceID.PN_1031 */,\n\t\t\tc: 11 /* DeviceClass.LED */,\n\t\t\tt: \"PhidgetLED-64 Advanced\",\n\t\t\ts: \"1031\",\n\t\t\ti: 76 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [64] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1031_DIGITALOUTPUT_100,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 17 /* ChannelSubClass.DIGITAL_OUTPUT_LEDDRIVER */,\n\t\t\t\t\tn: 64 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETLEDCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETLEDFORWARDVOLTAGE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1032,\n\t\t\td: 17 /* DeviceID.PN_1032 */,\n\t\t\tc: 11 /* DeviceClass.LED */,\n\t\t\tt: \"PhidgetLED-64 Advanced\",\n\t\t\ts: \"1032\",\n\t\t\ti: 76 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [64] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1032_DIGITALOUTPUT_200,\n\t\t\t\t\tt: \"LED Driver\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\ts: 17 /* ChannelSubClass.DIGITAL_OUTPUT_LEDDRIVER */,\n\t\t\t\t\tn: 64 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETLEDCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETLEDFORWARDVOLTAGE,\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1040,\n\t\t\td: 18 /* DeviceID.PN_1040 */,\n\t\t\tc: 7 /* DeviceClass.GPS */,\n\t\t\tt: \"PhidgetGPS\",\n\t\t\ts: \"1040\",\n\t\t\ti: 121 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1040_GPS_000,\n\t\t\t\t\tt: \"GPS\",\n\t\t\t\t\tc: 10 /* ChannelClass.GPS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATA,\n\t\t\t\t\t\tBP.DATE,\n\t\t\t\t\t\tBP.TIME,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.HEADINGCHANGE,\n\t\t\t\t\t\tBP.POSITIONFIXSTATUSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1041,\n\t\t\td: 19 /* DeviceID.PN_1041 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial 0/0/3 Basic\",\n\t\t\ts: \"1041\",\n\t\t\ti: 127 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [3,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1041_ACCELEROMETER_200,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1042,\n\t\t\td: 20 /* DeviceID.PN_1042 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial 3/3/3 Basic\",\n\t\t\ts: \"1042\",\n\t\t\ti: 51 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [3,3,3,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1042_ACCELEROMETER_300,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1042_GYROSCOPE_300,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1042_MAGNETOMETER_300,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1042_SPATIAL_300,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1043,\n\t\t\td: 21 /* DeviceID.PN_1043 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial Precision 0/0/3 High Resolution\",\n\t\t\ts: \"1043\",\n\t\t\ti: 127 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [3,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1043_ACCELEROMETER_300,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1044,\n\t\t\td: 22 /* DeviceID.PN_1044 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial Precision 3/3/3 High Resolution\",\n\t\t\ts: \"1044\",\n\t\t\ti: 51 /* USB ProductID */,\n\t\t\tv: [400, 500],\n\t\t\tcn: [3,3,3,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_ACCELEROMETER_400,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_GYROSCOPE_400,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_MAGNETOMETER_400,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_SPATIAL_400,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1044_1,\n\t\t\td: 22 /* DeviceID.PN_1044 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial Precision 3/3/3 High Resolution\",\n\t\t\ts: \"1044\",\n\t\t\ti: 51 /* USB ProductID */,\n\t\t\tv: [500, 510],\n\t\t\tcn: [3,3,3,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_ACCELEROMETER_500,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_GYROSCOPE_500,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_MAGNETOMETER_500,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_SPATIAL_500,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHMMAGGAIN,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1044_1_510,\n\t\t\td: 22 /* DeviceID.PN_1044 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial Precision 3/3/3 High Resolution\",\n\t\t\ts: \"1044\",\n\t\t\ti: 51 /* USB ProductID */,\n\t\t\tv: [510, 600],\n\t\t\tcn: [3,3,3,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_ACCELEROMETER_510,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_GYROSCOPE_510,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_MAGNETOMETER_510,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1044_SPATIAL_510,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHMMAGGAIN,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SETAHRSPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1045,\n\t\t\td: 23 /* DeviceID.PN_1045 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor IR\",\n\t\t\ts: \"1045\",\n\t\t\ti: 60 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [2,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1045_TEMPERATURESENSOR_IR_100,\n\t\t\t\t\tt: \"Temperature Sensor (IR)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1045_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1046_GAINBUG,\n\t\t\td: 24 /* DeviceID.PN_1046 */,\n\t\t\tc: 4 /* DeviceClass.BRIDGE */,\n\t\t\tt: \"PhidgetBridge 4-Input\",\n\t\t\ts: \"1046\",\n\t\t\ti: 59 /* USB ProductID */,\n\t\t\tv: [100, 102],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1046_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Bridge Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 65 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_BRIDGE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETBRIDGEGAIN,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1046,\n\t\t\td: 24 /* DeviceID.PN_1046 */,\n\t\t\tc: 4 /* DeviceClass.BRIDGE */,\n\t\t\tt: \"PhidgetBridge 4-Input\",\n\t\t\ts: \"1046\",\n\t\t\ti: 59 /* USB ProductID */,\n\t\t\tv: [102, 200],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1046_VOLTAGERATIOINPUT_102,\n\t\t\t\t\tt: \"Bridge Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 65 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_BRIDGE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETBRIDGEGAIN,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1046_1,\n\t\t\td: 24 /* DeviceID.PN_1046 */,\n\t\t\tc: 4 /* DeviceClass.BRIDGE */,\n\t\t\tt: \"PhidgetBridge 4-Input\",\n\t\t\ts: \"1046\",\n\t\t\ti: 59 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1046_VOLTAGERATIOINPUT_200,\n\t\t\t\t\tt: \"Bridge Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 65 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_BRIDGE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETBRIDGEGAIN,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1047,\n\t\t\td: 25 /* DeviceID.PN_1047 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder HighSpeed 4-Input\",\n\t\t\ts: \"1047\",\n\t\t\ti: 79 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [4,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1047_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1047_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1047_2,\n\t\t\td: 25 /* DeviceID.PN_1047 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder HighSpeed 4-Input\",\n\t\t\ts: \"1047\",\n\t\t\ti: 79 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [4,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1047_ENCODER_200,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1047_DIGITALINPUT_200,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1047_2_300,\n\t\t\td: 25 /* DeviceID.PN_1047 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder HighSpeed 4-Input\",\n\t\t\ts: \"1047\",\n\t\t\ti: 79 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [4,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1047_ENCODER_300,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1047_DIGITALINPUT_300,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1048,\n\t\t\td: 26 /* DeviceID.PN_1048 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor 4-Input\",\n\t\t\ts: \"1048\",\n\t\t\ti: 50 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [5,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1048_TEMPERATURESENSOR_IC_100,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 4 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1048_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1048_1_2,\n\t\t\td: 26 /* DeviceID.PN_1048 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor 4-Input\",\n\t\t\ts: \"1048\",\n\t\t\ti: 50 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [5,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 4 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1048_VOLTAGEINPUT_200,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1049,\n\t\t\td: 27 /* DeviceID.PN_1049 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial 0/0/3\",\n\t\t\ts: \"1049\",\n\t\t\ti: 127 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [3,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1049_ACCELEROMETER_000,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1051_OLD,\n\t\t\td: 28 /* DeviceID.PN_1051 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor 1-Input\",\n\t\t\ts: \"1051\",\n\t\t\ti: 112 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [2,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_000,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_IC_000,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1051,\n\t\t\td: 28 /* DeviceID.PN_1051 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor 1-Input\",\n\t\t\ts: \"1051\",\n\t\t\ti: 112 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [2,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_IC_200,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_VOLTAGEINPUT_200,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1051_AD22100,\n\t\t\td: 28 /* DeviceID.PN_1051 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor 1-Input\",\n\t\t\ts: \"1051\",\n\t\t\ti: 112 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [2,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_IC_300,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_VOLTAGEINPUT_300,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1051_TERMINAL_BLOCKS,\n\t\t\td: 28 /* DeviceID.PN_1051 */,\n\t\t\tc: 19 /* DeviceClass.TEMPERATURE_SENSOR */,\n\t\t\tt: \"PhidgetTemperatureSensor 1-Input\",\n\t\t\ts: \"1051\",\n\t\t\ti: 112 /* USB ProductID */,\n\t\t\tv: [400, 500],\n\t\t\tcn: [2,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400,\n\t\t\t\t\tt: \"Thermocouple Input\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ts: 33 /* ChannelSubClass.TEMPERATURE_SENSOR_THERMOCOUPLE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETTHERMOCOUPLETYPE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_TEMPERATURESENSOR_IC_400,\n\t\t\t\t\tt: \"Temperature Sensor (IC)\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 1 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1051_VOLTAGEINPUT_400,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1052_OLD,\n\t\t\td: 29 /* DeviceID.PN_1052 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder\",\n\t\t\ts: \"1052\",\n\t\t\ti: 75 /* USB ProductID */,\n\t\t\tv: [0, 101],\n\t\t\tcn: [1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1052_ENCODER_000,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1052_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1052_v1,\n\t\t\td: 29 /* DeviceID.PN_1052 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder\",\n\t\t\ts: \"1052\",\n\t\t\ti: 75 /* USB ProductID */,\n\t\t\tv: [101, 110],\n\t\t\tcn: [1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1052_ENCODER_101,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1052_DIGITALINPUT_101,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1052_v2,\n\t\t\td: 29 /* DeviceID.PN_1052 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder\",\n\t\t\ts: \"1052\",\n\t\t\ti: 75 /* USB ProductID */,\n\t\t\tv: [110, 300],\n\t\t\tcn: [1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1052_ENCODER_110,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1052_DIGITALINPUT_110,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1053,\n\t\t\td: 30 /* DeviceID.PN_1053 */,\n\t\t\tc: 1 /* DeviceClass.ACCELEROMETER */,\n\t\t\tt: \"PhidgetAccelerometer 2-Axis\",\n\t\t\ts: \"1053\",\n\t\t\ti: 113 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [2] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1053_ACCELEROMETER_300,\n\t\t\t\t\tt: \"2-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1054,\n\t\t\td: 31 /* DeviceID.PN_1054 */,\n\t\t\tc: 6 /* DeviceClass.FREQUENCY_COUNTER */,\n\t\t\tt: \"PhidgetFrequencyCounter\",\n\t\t\ts: \"1054\",\n\t\t\ti: 53 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [2] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1054_FREQUENCYCOUNTER_000,\n\t\t\t\t\tt: \"Frequency Input\",\n\t\t\t\t\tc: 9 /* ChannelClass.FREQUENCY_COUNTER */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.FREQUENCYDATA,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETFILTERTYPE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.FREQUENCYCHANGE,\n\t\t\t\t\t\tBP.COUNTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1055,\n\t\t\td: 32 /* DeviceID.PN_1055 */,\n\t\t\tc: 10 /* DeviceClass.IR */,\n\t\t\tt: \"PhidgetIR\",\n\t\t\ts: \"1055\",\n\t\t\ti: 77 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1055_IR_100,\n\t\t\t\t\tt: \"IR Receiver Transmitter\",\n\t\t\t\t\tc: 16 /* ChannelClass.IR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.REPEAT,\n\t\t\t\t\t\tBP.TRANSMIT,\n\t\t\t\t\t\tBP.TRANSMITREPEAT,\n\t\t\t\t\t\tBP.TRANSMITRAW,\n\t\t\t\t\t\tBP.CODE,\n\t\t\t\t\t\tBP.LEARN,\n\t\t\t\t\t\tBP.RAWDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1055_1_USB,\n\t\t\td: 32 /* DeviceID.PN_1055 */,\n\t\t\tc: 10 /* DeviceClass.IR */,\n\t\t\tt: \"PhidgetIR\",\n\t\t\ts: \"1055\",\n\t\t\ti: 77 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1055_IR_200_USB,\n\t\t\t\t\tt: \"IR Receiver Transmitter\",\n\t\t\t\t\tc: 16 /* ChannelClass.IR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.REPEAT,\n\t\t\t\t\t\tBP.TRANSMIT,\n\t\t\t\t\t\tBP.TRANSMITREPEAT,\n\t\t\t\t\t\tBP.TRANSMITRAW,\n\t\t\t\t\t\tBP.CODE,\n\t\t\t\t\t\tBP.LEARN,\n\t\t\t\t\t\tBP.RAWDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1056,\n\t\t\td: 33 /* DeviceID.PN_1056 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial 3/3/3\",\n\t\t\ts: \"1056\",\n\t\t\ti: 51 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [3,3,3,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_ACCELEROMETER_000,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_GYROSCOPE_000,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_MAGNETOMETER_000,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_SPATIAL_000,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1056_NEG_GAIN,\n\t\t\td: 33 /* DeviceID.PN_1056 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial 3/3/3\",\n\t\t\ts: \"1056\",\n\t\t\ti: 51 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [3,3,3,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_ACCELEROMETER_200,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_GYROSCOPE_200,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_MAGNETOMETER_200,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1056_SPATIAL_200,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1057,\n\t\t\td: 34 /* DeviceID.PN_1057 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder HighSpeed\",\n\t\t\ts: \"1057\",\n\t\t\ti: 128 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1057_ENCODER_300,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1057_3,\n\t\t\td: 34 /* DeviceID.PN_1057 */,\n\t\t\tc: 5 /* DeviceClass.ENCODER */,\n\t\t\tt: \"PhidgetEncoder HighSpeed\",\n\t\t\ts: \"1057\",\n\t\t\ti: 128 /* USB ProductID */,\n\t\t\tv: [400, 500],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1057_ENCODER_400,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETENABLED,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETIOMODE,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1058,\n\t\t\td: 35 /* DeviceID.PN_1058 */,\n\t\t\tc: 14 /* DeviceClass.PH_SENSOR */,\n\t\t\tt: \"PhidgetPHSensor\",\n\t\t\ts: \"1058\",\n\t\t\ti: 116 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1058_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1058_PHADAPTER_100,\n\t\t\t\t\tt: \"PH Input\",\n\t\t\t\t\tc: 37 /* ChannelClass.PH_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETCORRECTIONTEMPERATURE,\n\t\t\t\t\t\tBP.PHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1059,\n\t\t\td: 36 /* DeviceID.PN_1059 */,\n\t\t\tc: 1 /* DeviceClass.ACCELEROMETER */,\n\t\t\tt: \"PhidgetAccelerometer 3-Axis\",\n\t\t\ts: \"1059\",\n\t\t\ti: 126 /* USB ProductID */,\n\t\t\tv: [400, 500],\n\t\t\tcn: [3] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1059_ACCELEROMETER_400,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1060,\n\t\t\td: 37 /* DeviceID.PN_1060 */,\n\t\t\tc: 13 /* DeviceClass.MOTOR_CONTROL */,\n\t\t\tt: \"PhidgetMotorControl LV\",\n\t\t\ts: \"1060\",\n\t\t\ti: 88 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [2,4,0,0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1060_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1060_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1061,\n\t\t\td: 38 /* DeviceID.PN_1061 */,\n\t\t\tc: 2 /* DeviceClass.ADVANCED_SERVO */,\n\t\t\tt: \"PhidgetAdvancedServo 8-Motor\",\n\t\t\ts: \"1061\",\n\t\t\ti: 58 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1061_RCSERVO_100,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1061_CURRENTINPUT_100,\n\t\t\t\t\tt: \"RC Servo Motor Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1061_PGOOD_FLAG,\n\t\t\td: 38 /* DeviceID.PN_1061 */,\n\t\t\tc: 2 /* DeviceClass.ADVANCED_SERVO */,\n\t\t\tt: \"PhidgetAdvancedServo 8-Motor\",\n\t\t\ts: \"1061\",\n\t\t\ti: 58 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1061_RCSERVO_200,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1061_CURRENTINPUT_200,\n\t\t\t\t\tt: \"RC Servo Motor Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1061_CURSENSE_FIX,\n\t\t\td: 38 /* DeviceID.PN_1061 */,\n\t\t\tc: 2 /* DeviceClass.ADVANCED_SERVO */,\n\t\t\tt: \"PhidgetAdvancedServo 8-Motor\",\n\t\t\ts: \"1061\",\n\t\t\ti: 58 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1061_RCSERVO_300,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1061_CURRENTINPUT_300,\n\t\t\t\t\tt: \"RC Servo Motor Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._RCC0004,\n\t\t\td: 124 /* DeviceID.PN_RCC0004 */,\n\t\t\tc: 2 /* DeviceClass.ADVANCED_SERVO */,\n\t\t\tt: \"PhidgetAdvancedServo 8-Motor\",\n\t\t\ts: \"RCC0004\",\n\t\t\ti: 58 /* USB ProductID */,\n\t\t\tv: [400, 500],\n\t\t\tcn: [8,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._RCC0004_RCSERVO_400,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.SETVOLTAGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1062,\n\t\t\td: 39 /* DeviceID.PN_1062 */,\n\t\t\tc: 18 /* DeviceClass.STEPPER */,\n\t\t\tt: \"PhidgetStepper Unipolar 4-Motor\",\n\t\t\ts: \"1062\",\n\t\t\ti: 122 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1062_STEPPER_100,\n\t\t\t\t\tt: \"Unipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1063,\n\t\t\td: 40 /* DeviceID.PN_1063 */,\n\t\t\tc: 18 /* DeviceClass.STEPPER */,\n\t\t\tt: \"PhidgetStepper Bipolar 1-Motor\",\n\t\t\ts: \"1063\",\n\t\t\ti: 123 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [1,4,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1063_STEPPER_100,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1063_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 4 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1063_CURRENTINPUT_100,\n\t\t\t\t\tt: \"Bipolar Stepper Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1064,\n\t\t\td: 41 /* DeviceID.PN_1064 */,\n\t\t\tc: 13 /* DeviceClass.MOTOR_CONTROL */,\n\t\t\tt: \"PhidgetMotorControl HC\",\n\t\t\ts: \"1064\",\n\t\t\ti: 89 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [2,0,0,0,0,2] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1064_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1064_CURRENTINPUT_100,\n\t\t\t\t\tt: \"DC Motor Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1065,\n\t\t\td: 42 /* DeviceID.PN_1065 */,\n\t\t\tc: 13 /* DeviceClass.MOTOR_CONTROL */,\n\t\t\tt: \"PhidgetMotorControl 1-Motor\",\n\t\t\ts: \"1065\",\n\t\t\ti: 62 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [1,2,1,3,2,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_DCMOTOR_100,\n\t\t\t\t\tt: \"DC Motor Controller\",\n\t\t\t\t\tc: 4 /* ChannelClass.DC_MOTOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETBRAKINGDUTYCYCLE,\n\t\t\t\t\t\tBP.SETBACKEMFSENSINGSTATE,\n\t\t\t\t\t\tBP.DUTYCYCLECHANGE,\n\t\t\t\t\t\tBP.BACKEMFCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_DIGITALINPUT_100,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_ENCODER_100,\n\t\t\t\t\tt: \"Encoder Input\",\n\t\t\t\t\tc: 8 /* ChannelClass.ENCODER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_VOLTAGEINPUT_100,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_VOLTAGEINPUT_SUPPLY_100,\n\t\t\t\t\tt: \"Supply Voltage Sensor\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ti: 2 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_VOLTAGERATIOINPUT_100,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1065_CURRENTINPUT_100,\n\t\t\t\t\tt: \"DC Motor Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1066,\n\t\t\td: 43 /* DeviceID.PN_1066 */,\n\t\t\tc: 2 /* DeviceClass.ADVANCED_SERVO */,\n\t\t\tt: \"PhidgetAdvancedServo 1-Motor\",\n\t\t\ts: \"1066\",\n\t\t\ti: 130 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1066_RCSERVO_100,\n\t\t\t\t\tt: \"RC Servo Motor Controller\",\n\t\t\t\t\tc: 22 /* ChannelClass.RC_SERVO */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETMINPULSEWIDTH,\n\t\t\t\t\t\tBP.SETMAXPULSEWIDTH,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETSPEEDRAMPINGSTATE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.TARGETPOSITIONREACHED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1066_CURRENTINPUT_100,\n\t\t\t\t\tt: \"RC Servo Motor Current Sensor\",\n\t\t\t\t\tc: 2 /* ChannelClass.CURRENT_INPUT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.CURRENTCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1067,\n\t\t\td: 44 /* DeviceID.PN_1067 */,\n\t\t\tc: 18 /* DeviceClass.STEPPER */,\n\t\t\tt: \"PhidgetStepper Bipolar HC\",\n\t\t\ts: \"1067\",\n\t\t\ti: 123 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1067_STEPPER_200,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1067_1,\n\t\t\td: 44 /* DeviceID.PN_1067 */,\n\t\t\tc: 18 /* DeviceClass.STEPPER */,\n\t\t\tt: \"PhidgetStepper Bipolar HC\",\n\t\t\ts: \"1067\",\n\t\t\ti: 123 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1067_STEPPER_300,\n\t\t\t\t\tt: \"Bipolar Stepper Controller\",\n\t\t\t\t\tc: 27 /* ChannelClass.STEPPER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETTARGETPOSITION,\n\t\t\t\t\t\tBP.SETVELOCITYLIMIT,\n\t\t\t\t\t\tBP.SETACCELERATION,\n\t\t\t\t\t\tBP.SETCURRENTLIMIT,\n\t\t\t\t\t\tBP.SETENGAGED,\n\t\t\t\t\t\tBP.SETCONTROLMODE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.POSITIONCHANGE,\n\t\t\t\t\t\tBP.VELOCITYCHANGE,\n\t\t\t\t\t\tBP.STOPPED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1202_IFKIT_NO_ECHO,\n\t\t\td: 45 /* DeviceID.PN_1202_1203 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1202/1203\",\n\t\t\ti: 125 /* USB ProductID */,\n\t\t\tv: [0, 120],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_VOLTAGEINPUT_000,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_VOLTAGERATIOINPUT_000,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1202_IFKIT,\n\t\t\td: 45 /* DeviceID.PN_1202_1203 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1202/1203\",\n\t\t\ti: 125 /* USB ProductID */,\n\t\t\tv: [120, 200],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_VOLTAGEINPUT_120,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_VOLTAGERATIOINPUT_120,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_DIGITALINPUT_120,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_DIGITALOUTPUT_120,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1202_TEXTLCD,\n\t\t\td: 45 /* DeviceID.PN_1202_1203 */,\n\t\t\tc: 20 /* DeviceClass.TEXT_LCD */,\n\t\t\tt: \"PhidgetTextLCD 20X2\",\n\t\t\ts: \"1202/1203\",\n\t\t\ti: 125 /* USB ProductID */,\n\t\t\tv: [0, 200],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tn: 1 /* USB Interface */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_TEXTLCD_000,\n\t\t\t\t\tt: \"Text LCD\",\n\t\t\t\t\tc: 11 /* ChannelClass.LCD */,\n\t\t\t\t\ts: 81 /* ChannelSubClass.LCD_TEXT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBACKLIGHT,\n\t\t\t\t\t\tBP.SETCONTRAST,\n\t\t\t\t\t\tBP.SETCURSORBLINK,\n\t\t\t\t\t\tBP.SETCURSORON,\n\t\t\t\t\t\tBP.SETCHARACTERBITMAP,\n\t\t\t\t\t\tBP.CLEAR,\n\t\t\t\t\t\tBP.FLUSH,\n\t\t\t\t\t\tBP.WRITETEXT,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1202_IFKIT_FAST,\n\t\t\td: 45 /* DeviceID.PN_1202_1203 */,\n\t\t\tc: 9 /* DeviceClass.INTERFACE_KIT */,\n\t\t\tt: \"PhidgetInterfaceKit 8/8/8\",\n\t\t\ts: \"1202/1203\",\n\t\t\ti: 125 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [8,8,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_VOLTAGEINPUT_300,\n\t\t\t\t\tt: \"Voltage Input\",\n\t\t\t\t\tc: 29 /* ChannelClass.VOLTAGE_INPUT */,\n\t\t\t\t\ts: 48 /* ChannelSubClass.VOLTAGE_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGECHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_VOLTAGERATIOINPUT_300,\n\t\t\t\t\tt: \"Voltage Ratio Input\",\n\t\t\t\t\tc: 31 /* ChannelClass.VOLTAGE_RATIO_INPUT */,\n\t\t\t\t\ts: 64 /* ChannelSubClass.VOLTAGE_RATIO_INPUT_SENSOR_PORT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.MINDATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSENSORTYPE,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSENSORVALUECHANGETRIGGER,\n\t\t\t\t\t\tBP.VOLTAGERATIOCHANGE,\n\t\t\t\t\t\tBP.SENSORCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_DIGITALINPUT_300,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_DIGITALOUTPUT_300,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1202_TEXTLCD_BRIGHTNESS,\n\t\t\td: 45 /* DeviceID.PN_1202_1203 */,\n\t\t\tc: 20 /* DeviceClass.TEXT_LCD */,\n\t\t\tt: \"PhidgetTextLCD 20X2\",\n\t\t\ts: \"1202/1203\",\n\t\t\ti: 125 /* USB ProductID */,\n\t\t\tv: [200, 9999],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tn: 1 /* USB Interface */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1202_TEXTLCD_200,\n\t\t\t\t\tt: \"Text LCD\",\n\t\t\t\t\tc: 11 /* ChannelClass.LCD */,\n\t\t\t\t\ts: 81 /* ChannelSubClass.LCD_TEXT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBACKLIGHT,\n\t\t\t\t\t\tBP.SETCONTRAST,\n\t\t\t\t\t\tBP.SETCURSORBLINK,\n\t\t\t\t\t\tBP.SETCURSORON,\n\t\t\t\t\t\tBP.SETCHARACTERBITMAP,\n\t\t\t\t\t\tBP.CLEAR,\n\t\t\t\t\t\tBP.FLUSH,\n\t\t\t\t\t\tBP.WRITETEXT,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1204,\n\t\t\td: 46 /* DeviceID.PN_1204 */,\n\t\t\tc: 20 /* DeviceClass.TEXT_LCD */,\n\t\t\tt: \"PhidgetTextLCD Adapter\",\n\t\t\ts: \"1204\",\n\t\t\ti: 61 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [2] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1204_TEXTLCD_000,\n\t\t\t\t\tt: \"Text LCD\",\n\t\t\t\t\tc: 11 /* ChannelClass.LCD */,\n\t\t\t\t\ts: 81 /* ChannelSubClass.LCD_TEXT */,\n\t\t\t\t\tn: 2 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBACKLIGHT,\n\t\t\t\t\t\tBP.SETCONTRAST,\n\t\t\t\t\t\tBP.SETCURSORBLINK,\n\t\t\t\t\t\tBP.SETCURSORON,\n\t\t\t\t\t\tBP.SETSCREENSIZE,\n\t\t\t\t\t\tBP.SETCHARACTERBITMAP,\n\t\t\t\t\t\tBP.CLEAR,\n\t\t\t\t\t\tBP.FLUSH,\n\t\t\t\t\t\tBP.INITIALIZE,\n\t\t\t\t\t\tBP.WRITETEXT,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1215,\n\t\t\td: 47 /* DeviceID.PN_1215__1218 */,\n\t\t\tc: 20 /* DeviceClass.TEXT_LCD */,\n\t\t\tt: \"PhidgetTextLCD 20X2\",\n\t\t\ts: \"1215/1216/1217/1218\",\n\t\t\ti: 82 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1215_TEXTLCD_000,\n\t\t\t\t\tt: \"Text LCD\",\n\t\t\t\t\tc: 11 /* ChannelClass.LCD */,\n\t\t\t\t\ts: 81 /* ChannelSubClass.LCD_TEXT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBACKLIGHT,\n\t\t\t\t\t\tBP.SETCONTRAST,\n\t\t\t\t\t\tBP.SETCURSORBLINK,\n\t\t\t\t\t\tBP.SETCURSORON,\n\t\t\t\t\t\tBP.SETCHARACTERBITMAP,\n\t\t\t\t\t\tBP.CLEAR,\n\t\t\t\t\t\tBP.FLUSH,\n\t\t\t\t\t\tBP.WRITETEXT,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._1219,\n\t\t\td: 48 /* DeviceID.PN_1219__1222 */,\n\t\t\tc: 20 /* DeviceClass.TEXT_LCD */,\n\t\t\tt: \"PhidgetTextLCD 20X2 with InterfaceKit 0/8/8\",\n\t\t\ts: \"1219/1220/1221/1222\",\n\t\t\ti: 83 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [1,8,8] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1219_TEXTLCD_000,\n\t\t\t\t\tt: \"Text LCD\",\n\t\t\t\t\tc: 11 /* ChannelClass.LCD */,\n\t\t\t\t\ts: 81 /* ChannelSubClass.LCD_TEXT */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETBACKLIGHT,\n\t\t\t\t\t\tBP.SETCONTRAST,\n\t\t\t\t\t\tBP.SETCURSORBLINK,\n\t\t\t\t\t\tBP.SETCURSORON,\n\t\t\t\t\t\tBP.SETCHARACTERBITMAP,\n\t\t\t\t\t\tBP.CLEAR,\n\t\t\t\t\t\tBP.FLUSH,\n\t\t\t\t\t\tBP.WRITETEXT,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1219_DIGITALINPUT_000,\n\t\t\t\t\tt: \"Digital Input\",\n\t\t\t\t\tc: 5 /* ChannelClass.DIGITAL_INPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.STATECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._1219_DIGITALOUTPUT_000,\n\t\t\t\t\tt: \"Digital Output\",\n\t\t\t\t\tc: 6 /* ChannelClass.DIGITAL_OUTPUT */,\n\t\t\t\t\tn: 8 /* Count */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETSTATE,\n\t\t\t\t\t\tBP.SETDUTYCYCLE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT0100_USB,\n\t\t\td: 146 /* DeviceID.PN_MOT0100 */,\n\t\t\tc: 1 /* DeviceClass.ACCELEROMETER */,\n\t\t\tt: \"PhidgetAccelerometer\",\n\t\t\ts: \"MOT0100\",\n\t\t\ti: 146 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [3] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT0109,\n\t\t\td: 140 /* DeviceID.PN_MOT0109 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial Precision 3/3/3\",\n\t\t\ts: \"MOT0109\",\n\t\t\ti: 140 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [3,3,3,1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0109_ACCELEROMETER_100,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0109_GYROSCOPE_100,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0109_MAGNETOMETER_100,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0109_SPATIAL_100,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALPRECISION,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHMMAGGAIN,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SETAHRSPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._MOT0110_USB,\n\t\t\td: 141 /* DeviceID.PN_MOT0110 */,\n\t\t\tc: 17 /* DeviceClass.SPATIAL */,\n\t\t\tt: \"PhidgetSpatial Precision 3/3/3\",\n\t\t\ts: \"MOT0110\",\n\t\t\ti: 141 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [3,3,3,1,1] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB,\n\t\t\t\t\tt: \"3-Axis Accelerometer\",\n\t\t\t\t\tc: 1 /* ChannelClass.ACCELEROMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ACCELERATIONCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_GYROSCOPE_100_USB,\n\t\t\t\t\tt: \"3-Axis Gyroscope\",\n\t\t\t\t\tc: 12 /* ChannelClass.GYROSCOPE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.ANGULARRATEUPDATE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB,\n\t\t\t\t\tt: \"3-Axis Magnetometer\",\n\t\t\t\t\tc: 18 /* ChannelClass.MAGNETOMETER */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.FIELDSTRENGTHCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_SPATIAL_100_USB,\n\t\t\t\t\tt: \"Spatial\",\n\t\t\t\t\tc: 26 /* ChannelClass.SPATIAL */,\n\t\t\t\t\ts: 112 /* ChannelSubClass.SPATIAL_AHRS */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.HEATINGENABLEDCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SETHEATINGENABLED,\n\t\t\t\t\t\tBP.ZERO,\n\t\t\t\t\t\tBP.SETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SAVECORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.RESETCORRECTIONPARAMETERS,\n\t\t\t\t\t\tBP.SETAHRSPARAMETERS,\n\t\t\t\t\t\tBP.ZEROSPATIALALGORITHM,\n\t\t\t\t\t\tBP.SPATIALDATA,\n\t\t\t\t\t\tBP.SPATIALALGDATA,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB,\n\t\t\t\t\tt: \"Temperature Sensor\",\n\t\t\t\t\tc: 28 /* ChannelClass.TEMPERATURE_SENSOR */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DATAINTERVALCHANGE,\n\t\t\t\t\t\tBP.SETDATAINTERVAL,\n\t\t\t\t\t\tBP.SETCHANGETRIGGER,\n\t\t\t\t\t\tBP.TEMPERATURECHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB0000,\n\t\t\td: 64 /* DeviceID.PN_HUB0000 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port USB VINT Hub Phidget\",\n\t\t\ts: \"HUB0000\",\n\t\t\ti: 63 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB0000_HUB_100,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB0000_PHIDUSB,\n\t\t\td: 64 /* DeviceID.PN_HUB0000 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port USB VINT Hub Phidget\",\n\t\t\ts: \"HUB0000\",\n\t\t\ti: 63 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB0000_HUB_300,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB0001,\n\t\t\td: 142 /* DeviceID.PN_HUB0001 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port USB VINT Hub Phidget\",\n\t\t\ts: \"HUB0001\",\n\t\t\ti: 67 /* USB ProductID */,\n\t\t\tv: [100, 115],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB0001_HUB_100,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB0001_AUTOSETSPEED,\n\t\t\td: 142 /* DeviceID.PN_HUB0001 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port USB VINT Hub Phidget\",\n\t\t\ts: \"HUB0001\",\n\t\t\ti: 67 /* USB ProductID */,\n\t\t\tv: [115, 200],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB0001_HUB_115,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETPORTAUTOSETSPEED,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB5000,\n\t\t\td: 123 /* DeviceID.PN_HUB5000 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port Network VINT Hub Phidget\",\n\t\t\ts: \"HUB5000\",\n\t\t\ti: 66 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB5000_HUB_100,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB5000_PHIDUSB,\n\t\t\td: 123 /* DeviceID.PN_HUB5000 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port Network VINT Hub Phidget\",\n\t\t\ts: \"HUB5000\",\n\t\t\ti: 66 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB5000_HUB_200,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_M3_USB,\n\t\t\td: 101 /* DeviceID.FIRMWARE_UPGRADE_USB */,\n\t\t\tc: 23 /* DeviceClass.FIRMWARE_UPGRADE */,\n\t\t\tt: \"USB Firmware Upgrade (NXP M3)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_M3\",\n\t\t\ti: 152 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._M3_USB_FIRMWARE_UPGRADE_000,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32F_USB,\n\t\t\td: 101 /* DeviceID.FIRMWARE_UPGRADE_USB */,\n\t\t\tc: 23 /* DeviceClass.FIRMWARE_UPGRADE */,\n\t\t\tt: \"USB Firmware Upgrade (STM32)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32_USB\",\n\t\t\ti: 156 /* USB ProductID */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_100,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32G_USB,\n\t\t\td: 101 /* DeviceID.FIRMWARE_UPGRADE_USB */,\n\t\t\tc: 23 /* DeviceClass.FIRMWARE_UPGRADE */,\n\t\t\tt: \"USB Firmware Upgrade (STM32G)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32G_USB\",\n\t\t\ti: 156 /* USB ProductID */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_STM32L_USB,\n\t\t\td: 101 /* DeviceID.FIRMWARE_UPGRADE_USB */,\n\t\t\tc: 23 /* DeviceClass.FIRMWARE_UPGRADE */,\n\t\t\tt: \"USB Firmware Upgrade (STM32L)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_STM32L_USB\",\n\t\t\ti: 156 /* USB ProductID */,\n\t\t\tv: [300, 400],\n\t\t\tcn: [0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._UNKNOWNUSB,\n\t\t\td: 125 /* DeviceID.UNKNOWN */,\n\t\t\tc: 22 /* DeviceClass.GENERIC */,\n\t\t\tt: \"Unsupported USB Phidget\",\n\t\t\ts: \" \",\n\t\t\ti: 175 /* USB ProductID */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._USB_UNKNOWN,\n\t\t\t\t\tt: \"Unsupported USB Channel\",\n\t\t\t\t\tc: 33 /* ChannelClass.GENERIC */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDPACKET,\n\t\t\t\t\t\tBP.SENDCHPACKET,\n\t\t\t\t\t\tBP.SENDDEVPACKET,\n\t\t\t\t\t\tBP.READCHPACKET,\n\t\t\t\t\t\tBP.READDEVPACKET,\n\t\t\t\t\t\tBP.PACKET,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t],\n\tMESH: [\n\t],\n\tSPI: [\n\t\t{\n\t\t\tuid: DeviceUID._HUB0004,\n\t\t\td: 67 /* DeviceID.PN_HUB0004 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port PhidgetSBC VINT Hub Phidget\",\n\t\t\ts: \"HUB0004\",\n\t\t\ti: 1 /* id */,\n\t\t\tv: [100, 200],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB0004_HUB_100,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._HUB0004_BADPORT,\n\t\t\td: 67 /* DeviceID.PN_HUB0004 */,\n\t\t\tc: 8 /* DeviceClass.HUB */,\n\t\t\tt: \"6-Port PhidgetSBC VINT Hub Phidget\",\n\t\t\ts: \"HUB0004\",\n\t\t\ti: 1 /* id */,\n\t\t\tv: [200, 300],\n\t\t\tcn: [6,4] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._HUB0004_HUB_200,\n\t\t\t\t\tt: \"VINT Hub\",\n\t\t\t\t\tc: 13 /* ChannelClass.HUB */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SETFIRMWAREUPGRADEFLAG,\n\t\t\t\t\t\tBP.SETPORTMODE,\n\t\t\t\t\t\tBP.SETPORTPOWER,\n\t\t\t\t\t\tBP.SETCALIBRATIONVALUES,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._FIRMWARE_UPGRADE_M3_SPI,\n\t\t\td: 104 /* DeviceID.FIRMWARE_UPGRADE_SPI */,\n\t\t\tc: 23 /* DeviceClass.FIRMWARE_UPGRADE */,\n\t\t\tt: \"SPI Firmware Upgrade (M3)\",\n\t\t\ts: \"FIRMWARE_UPGRADE_M3\",\n\t\t\ti: 2 /* id */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._M3_SPI_FIRMWARE_UPGRADE_000,\n\t\t\t\t\tt: \"Firmware Upgrade\",\n\t\t\t\t\tc: 32 /* ChannelClass.FIRMWARE_UPGRADE */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDFIRMWARE,\n\t\t\t\t\t\tBP.PROGRESSCHANGE,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tuid: DeviceUID._UNKNOWNSPI,\n\t\t\td: 125 /* DeviceID.UNKNOWN */,\n\t\t\tc: 22 /* DeviceClass.GENERIC */,\n\t\t\tt: \"Unsupported SPI Phidget\",\n\t\t\ts: \" \",\n\t\t\ti: 65535 /* id */,\n\t\t\tv: [0, 9999],\n\t\t\tcn: [0,0,0] /* Channel Counts */,\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._SPI_UNKNOWN,\n\t\t\t\t\tt: \"Unsupported SPI Channel\",\n\t\t\t\t\tc: 33 /* ChannelClass.GENERIC */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.SENDPACKET,\n\t\t\t\t\t\tBP.SENDCHPACKET,\n\t\t\t\t\t\tBP.SENDDEVPACKET,\n\t\t\t\t\t\tBP.READCHPACKET,\n\t\t\t\t\t\tBP.READDEVPACKET,\n\t\t\t\t\t\tBP.PACKET,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t],\n\tLIGHTNING: [\n\t],\n\tVIRTUAL: [\n\t\t{\n\t\t\tuid: DeviceUID._DICTIONARY,\n\t\t\td: 111 /* DeviceID.PN_DICTIONARY */,\n\t\t\tc: 24 /* DeviceClass.DICTIONARY */,\n\t\t\tt: \"Dictionary\",\n\t\t\ts: \"Dictionary\",\n\t\t\ti: 0 /* id */,\n\t\t\tv: [100, 200],\n\t\t\tch: [\n\t\t\t\t{\n\t\t\t\t\tuid: DeviceChannelUID._DICTIONARY,\n\t\t\t\t\tt: \"Dictionary\",\n\t\t\t\t\tc: 36 /* ChannelClass.DICTIONARY */,\n\t\t\t\t\ti: 0 /* Index */,\n\t\t\t\t\tp: /* Supported Packets */ [\n\t\t\t\t\t\tBP.DICTIONARYADD,\n\t\t\t\t\t\tBP.DICTIONARYUPDATE,\n\t\t\t\t\t\tBP.DICTIONARYSET,\n\t\t\t\t\t\tBP.DICTIONARYREMOVE,\n\t\t\t\t\t\tBP.DICTIONARYREMOVEALL,\n\t\t\t\t\t\tBP.DICTIONARYGET,\n\t\t\t\t\t\tBP.DICTIONARYSCAN,\n\t\t\t\t\t\tBP.DICTIONARYADDED,\n\t\t\t\t\t\tBP.DICTIONARYUPDATED,\n\t\t\t\t\t\tBP.DICTIONARYREMOVED,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t],\n}\n\n","﻿import { PhidgetDevices, type PhidgetUniqueDevice } from './Devices.gen';\nimport { PhidgetError } from './PhidgetError';\nimport { DeviceClass, DeviceID, ErrorCode, HubPortMode } from './Enumerations.gen';\nimport { PhidgetConnection } from './Connection';\n\ninterface USBFindData {\n\ttype: 'USB',\n\tproductID: number,\n\tinterfaceNum: number,\n\tversion: number,\n}\ninterface VINTFindData {\n\ttype: 'VINT',\n\tversion: number,\n\tvintID: number,\n}\ninterface FindData {\n\ttype: 'MESH' | 'SPI' | 'VIRTUAL',\n\tproductID: number,\n\tversion: number,\n}\nexport function findPhidgetUniqueDevice(data: VINTFindData | USBFindData | FindData): PhidgetUniqueDevice {\n\n\tconst typeDevs = PhidgetDevices[data.type] as PhidgetUniqueDevice[];\n\tfor (const d of typeDevs) {\n\t\tif (d.v[0] > data.version || d.v[1] <= data.version)\n\t\t\tcontinue;\n\t\tif (data.type === 'VINT') {\n\t\t\tif (d.i !== data.vintID)\n\t\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (d.i !== data.productID)\n\t\t\t\tcontinue;\n\t\t\tif (data.type === 'USB' && (d.n ?? 0) !== data.interfaceNum)\n\t\t\t\tcontinue;\n\t\t}\n\t\treturn d;\n\t}\n\tthrow (new PhidgetError(ErrorCode.UNEXPECTED, \"Couldn't find device in device list!!\"));\n}\n\n/** @internal */\nexport interface BaseDeviceData {\n\tdevDef: PhidgetUniqueDevice,\n\tversion: number,\n\tlabel: string,\n\tserialNumber: number,\n\tfwstr: string,\n\tid: string,\n\tparent?: Device\n}\n/** @internal */\nexport interface VINTDeviceData extends BaseDeviceData {\n\ttype: 'VINT',\n\tvintDeviceProps: VINTDeviceProperties;\n}\n/** @internal */\nexport interface HubDeviceData extends BaseDeviceData {\n\ttype: 'HUB',\n\thubPortProps: VINTPortProperties[];\n}\n/** @internal */\nexport interface OtherDeviceData extends BaseDeviceData {\n\ttype: 'OTHER'\n}\n/** @internal */\nexport type DeviceData = VINTDeviceData | HubDeviceData | OtherDeviceData;\n\n/** @internal */\nexport interface VINTPortProperties {\n\tportProto: number,\n\tportSuppSetSpeed: boolean,\n\tportSuppAutoSetSpeed: boolean,\n\tportMaxSpeed: number,\n\n\tportSpeed?: number,\n\tportMode?: HubPortMode,\n\tportPowered?: boolean\n}\n\n/** @internal */\nexport interface VINTDeviceProperties {\n\tvintProto: number,\n\tsuppSetSpeed: boolean,\n\tsuppAutoSetSpeed: boolean,\n\tmaxSpeed: number,\n\thubPort: number,\n\tisHubPort: boolean,\n\tuniqueIndex: number,\n\n\tcommSpeed?: number,\n}\n\n/** @internal */\nabstract class Device {\n\tconn: PhidgetConnection;\n\tdevDef: PhidgetUniqueDevice;\n\tversion: number;\n\tlabel: string;\n\tserialNumber: number;\n\tfwstr: string;\n\tid: string;\n\n\tparent?: Device;\n\tget parentId() { return this.parent?.id ?? '0'; }\n\n\t// Only for VINT Devices\n\tvintDeviceProps?: VINTDeviceProperties;\n\n\t// Only for VINT Hubs\n\thubPortProps?: VINTPortProperties[];\n\n\t// Override\n\tabstract deviceID: DeviceID;\n\tabstract name: string;\n\n\tget vintID() { return this.devDef.i; }\n\tget sku() { return this.devDef.s; }\n\tget class() { return this.devDef.c; }\n\n\tget hubPort() { return this.vintDeviceProps?.hubPort ?? 0; }\n\tget isHubPort() { return this.vintDeviceProps?.isHubPort ?? false; }\n\tget index() { return this.vintDeviceProps?.uniqueIndex ?? 0; }\n\n\n\tconstructor(conn: PhidgetConnection, data: DeviceData) {\n\t\tthis.conn = conn;\n\t\tthis.devDef = data.devDef;\n\t\tthis.version = data.version;\n\t\tthis.label = data.label;\n\t\tthis.serialNumber = data.serialNumber;\n\t\tthis.fwstr = data.fwstr;\n\t\tthis.id = data.id;\n\t\tthis.parent = data.parent;\n\n\t\tif (data.type === 'VINT')\n\t\t\tthis.vintDeviceProps = data.vintDeviceProps;\n\n\t\tif (data.type === 'HUB')\n\t\t\tthis.hubPortProps = data.hubPortProps;\n\t}\n\n\ttoString() {\n\t\tif (this.class === DeviceClass.VINT) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\treturn (this.sku + ' (' + this.name + ') v' + this.version + ' -> ' + this.parent!.sku + ' Port:' + this.hubPort + ' Serial#:' + this.serialNumber + (this.conn._isRemote ? \" NET\" : \" USB\"));\n\t\t}\n\t\treturn (this.sku + ' (' + this.name + ') v' + this.version + ' Serial#:' + this.serialNumber + (this.conn._isRemote ? \" NET\" : \" USB\"));\n\t}\n}\n\nexport { Device };","import { Device, DeviceData } from \"../Device\";\r\nimport { DeviceID, ErrorCode } from \"../Enumerations.gen\";\r\nimport { PhidgetError } from \"../PhidgetError\";\r\nimport { NetworkConnectionBase } from \"./NetworkConnection\";\r\n\r\n/** @internal */\r\nexport type NetworkDeviceData = DeviceData & {\r\n\tdeviceID: DeviceID;\r\n\tname: string;\r\n}\r\n\r\n/** @internal */\r\nclass NetworkDevice extends Device {\r\n\tdeclare conn: NetworkConnectionBase;\r\n\tdeviceID: DeviceID;\r\n\tname: string;\r\n\r\n\tconstructor(conn: NetworkConnectionBase, data: NetworkDeviceData) {\r\n\t\tsuper(conn, data);\r\n\t\tthis.deviceID = data.deviceID;\r\n\t\tthis.name = data.name;\r\n\t}\r\n\r\n\tfindPhidgetUniqueChannel(uniqueIndex: number) {\r\n\r\n\t\tlet index = 0;\r\n\t\tfor (const c of this.devDef.ch) {\r\n\t\t\tif (uniqueIndex < index + (c.n ?? 1))\r\n\t\t\t\treturn c;\r\n\t\t\tindex += (c.n ?? 1);\r\n\t\t}\r\n\t\tthrow (new PhidgetError(ErrorCode.UNEXPECTED, \"Couldn't find channel in channel list!!\"));\r\n\t}\r\n}\r\n\r\nexport { NetworkDevice };","import { PhidgetConnection, ConnType } from '../Connection';\r\nimport { tm } from '../phidget22';\r\nimport { Request } from './Request';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { ChannelClass, DeviceClass, DeviceID, ErrorCode } from '../Enumerations.gen';\r\nimport { logdebug, logerr, logEventException, loginfo, logwarn } from '../Logging';\r\nimport { type BPJsonIn, type BPJsonOut, BridgePacket, PUNK } from '../BridgePacket';\r\nimport { NetworkChannel, NetworkChannelData } from './NetworkChannel';\r\nimport { NetworkDevice, NetworkDeviceData } from './NetworkDevice';\r\nimport { findPhidgetUniqueDevice } from '../Device';\r\n/*\r\n * 1.1 - added keepalive support.\r\n * 2.0 - changed bridge packet ID numbers. Method packets are not forwarded to all clients.\r\n * 2.1 - added fwstr to SMSG_DEVATTACH packet\r\n * 2.2 - stop requiring class version to match on channel open\r\n * 2.3 - support VINT2 hubs - extra fields in SMSG_DEVATTACH, etc.\r\n */\r\nconst NET_MAJOR = 2;\r\nconst NET_MINOR = 3;\r\n\r\nconst NET_IDENT = \"phidgetclient\";\r\n\r\n/** @internal */\r\nexport const enum P22MSG {\r\n\tConnect = 10,\r\n\tCommand = 20,\r\n\tDevice = 30\r\n}\r\n\r\n/** @internal */\r\nexport const enum P22SMSG {\r\n\t/* Connect */\r\n\tHandShakeC0 = 10,\r\n\tHandShakeS0 = 11,\r\n\tAuthC0 = 30,\r\n\tAuthS0 = 31,\r\n\tAuthC1 = 32,\r\n\tAuthS1 = 33,\r\n\t/* Command */\r\n\tReply = 40,\r\n\tKeepAlive = 41,\r\n\t/* Device */\r\n\tAttach = 50,\r\n\tDetach = 55,\r\n\tOpen = 60,\r\n\tClose = 65,\r\n\tBridgePkt = 70,\r\n\tChannel = 80\r\n}\r\n\r\n/** @internal */\r\nexport const enum NR {\r\n\tMagic = 0x50484930,\r\n\tRequest = 0x01,\r\n\tReply = 0x02,\r\n\tEvent = 0x04\r\n}\r\n\r\n/** @internal */\r\ntype NET_PROTOCOL = \"www\" | \"www,nodejs\" | \"phid22device\";\r\n\r\n// P22SMSG.HandShakeC0 (MSG_CONNECT, SMSG_HANDSHAKEC0) client -> server\r\n/** @internal */\r\ninterface P22SMSG_HandShakeC0_Data {\r\n\ttype: NET_PROTOCOL,\r\n\tpmajor: number,\r\n\tpminor: number,\r\n\r\n\t// NOTE: these are used to set up a datagram port - not used by the JS library as of yet\r\n\tdgram?: number,\r\n\tport?: number\r\n}\r\n// P22SMSG.HandShakeS0 (MSG_CONNECT, SMSG_HANDSHAKES0) server -> client\r\n/** @internal */\r\ninterface P22SMSG_HandShakeS0_Data {\r\n\ttype: NET_PROTOCOL,\r\n\tpmajor: number,\r\n\tpminor: number,\r\n\tresult: ErrorCode\r\n}\r\n// P22SMSG.AuthC0 (MSG_CONNECT, SMSG_AUTHC0) client -> server\r\n/** @internal */\r\ninterface P22SMSG_AuthC0_Data {\r\n\tident: string,\r\n\tnonceC: string\r\n}\r\n// P22SMSG.AuthS0 (MSG_CONNECT, SMSG_AUTHS0) server -> client\r\n/** @internal */\r\ninterface P22SMSG_AuthS0_Data {\r\n\tsrvname: string,\r\n\tnonceC: string,\r\n\tnonceS: string,\r\n\tsalt: string,\r\n\tcount: number,\r\n\tresult: ErrorCode\r\n}\r\n// P22SMSG.AuthC1 (MSG_CONNECT, SMSG_AUTHC1) client -> server\r\n/** @internal */\r\ninterface P22SMSG_AuthC1_Data {\r\n\tnonceC: string,\r\n\tnonceS: string,\r\n\tproof: string\r\n}\r\n// P22SMSG.AuthS1 (MSG_CONNECT, SMSG_AUTHS1) - NOTE: Unused\r\n//interface P22SMSG_AuthS1_Data {}\r\n\r\n// P22SMSG.Reply (MSG_COMMAND, SMSG_REPLY) server -> client\r\n/** @internal */\r\ninterface P22SMSG_Reply_Data {\r\n\tE: ErrorCode,\r\n\tR?: string\r\n}\r\n// P22SMSG.KeepAlive (MSG_COMMAND, SMSG_KEEPALIVE) server <-> client\r\n// No data is sent, just header\r\n\r\n// P22SMSG.Attach (MSG_DEVICE, SMSG_DEVATTACH) server -> client\r\n/** @internal */\r\nexport interface P22SMSG_Attach_Data {\r\n\ttype: \"USB\" | \"VINT\" | \"MESH\" | \"SPI\" | \"VIRTUAL\",\r\n\tphid: string,\t// NOTE: uint64 converted to string\r\n\tparent: string,\t// NOTE: uint64 converted to string\r\n\tvendorID: number,\r\n\tproductID: number,\r\n\tinterfaceNum: number,\r\n\tversion: number,\r\n\tserialNumber: number,\r\n\tlabel: string,\r\n\tindex: number,\r\n\tdeviceID: DeviceID,\r\n\tvintID: number,\r\n\thubPort: number,\r\n\tisHubPort: number,\r\n\tname: string,\r\n\tdesc: string,\r\n\r\n\t// Version 2.1+\r\n\r\n\tfwstr?: string,\r\n\r\n\t// Version 2.3+\r\n\r\n\t// PHIDCLASS_HUB specific\r\n\thubPortsInfo?: {\r\n\t\tportProto: number[],\r\n\t\tportSuppSetSpeed: number[],\r\n\t\tportMaxSpeed: number[]\r\n\t},\r\n\r\n\t// PHIDTYPE_VINT specific\r\n\tvintProto?: number,\r\n\tsuppSetSpeed?: number,\r\n\tmaxSpeed?: number,\r\n\tcommSpeed?: number\r\n}\r\n\r\n// P22SMSG.Detach (MSG_DEVICE, SMSG_DEVDETACH) server -> client\r\n/** @internal */\r\ninterface P22SMSG_Detach_Data {\r\n\tphid: string,\t// NOTE: uint64 converted to string\r\n\tparent: string\t// NOTE: uint64 converted to string\r\n}\r\n\r\n// P22SMSG.Open (MSG_DEVICE, SMSG_DEVOPEN) client -> server\r\n/** @internal */\r\ninterface P22SMSG_Open_Data {\r\n\tphid: string,\t\t// NOTE: uint64 converted to string\r\n\tchannel: string,\t// NOTE: uint64 converted to string\r\n\tclass: ChannelClass,\r\n\tindex: number,\r\n\tversion: number\r\n}\r\n\r\n// P22SMSG.Close (MSG_DEVICE, SMSG_DEVCLOSE) client -> server\r\n/** @internal */\r\ninterface P22SMSG_Close_Data {\r\n\tphid: string,\t// NOTE: uint64 converted to string\r\n\tindex: number\r\n}\r\n\r\n// P22SMSG.BridgePkt (MSG_DEVICE, SMSG_DEVBRIDGEPKT) server <-> client\r\n/** @internal */\r\ntype P22SMSG_BridgePacket_IN = BPJsonIn;\r\n/** @internal */\r\ntype P22SMSG_BridgePacket_OUT = BPJsonOut;\r\n\r\n// P22SMSG.Channel (MSG_DEVICE, SMSG_DEVCHANNEL) server -> client\r\n/** @internal */\r\ninterface P22SMSG_Channel_Data {\r\n\tparent: string,\r\n\tchid: string,\r\n\tclass: ChannelClass,\r\n\tuniqueIndex: number,\r\n\tindex: number,\r\n\tversion: number,\r\n\tname: string,\t// unique channel name\r\n\tchannelname: string // Channel class name\r\n}\r\n\r\nexport interface NetworkConnectionOptions {\r\n\thostname?: string,\r\n\tport?: number,\r\n\tname?: string,\r\n\tpasswd?: string,\r\n\tonConnect?: () => void | Promise<void>,\r\n\tonDisconnect?: () => void | Promise<void>,\r\n\tonAuthenticationNeeded?: () => string,\r\n\tonError?: (code: ErrorCode, msg: string) => void | Promise<void>\r\n}\r\n\r\ntype AuthHandler = ((data: object) => void);\r\n\r\nexport abstract class NetworkConnectionBase extends PhidgetConnection {\r\n\t/** @internal */\r\n\tdeclare _channels: Map<string, NetworkChannel>;\r\n\t/** @internal */\r\n\tdeclare _devices: Map<string, NetworkDevice>;\r\n\t/** @internal */\r\n\tprotected _hostname: string;\r\n\t/** @internal */\r\n\tprotected _port: number;\r\n\t/** @internal */\r\n\tprotected _protocol!: NET_PROTOCOL;\r\n\t/** @internal */\r\n\tprotected _uri: string;\r\n\t/** @internal */\r\n\tprotected _generation;\r\n\t/** @internal */\r\n\tprotected _timeout;\r\n\t/** @internal */\r\n\tprivate _nonceC?: string;\r\n\t/** @internal */\r\n\tprivate _passwd: string;\r\n\t/** @internal */\r\n\tprivate _reqseq;\r\n\t/** @internal */\r\n\tprivate _requests: Map<number, {\r\n\t\tgeneration: number,\r\n\t\ttime: number,\r\n\t\tonReply: (res: P22SMSG_Reply_Data | P22SMSG_BridgePacket_IN) => void,\r\n\t\tonTimeout: () => void,\r\n\t\tonError: (code: ErrorCode, msg: string) => void\r\n\t}>;\r\n\t/** @internal */\r\n\tprivate _handleAbandonedRequestsInterval?: NodeJS.Timer;\r\n\t/** @internal */\r\n\tprivate _connectionMaintainer?: NodeJS.Timeout;\r\n\t/** @internal */\r\n\tprivate _keepAliveTimeout?: NodeJS.Timeout;\r\n\t/** @internal */\r\n\tprivate _onauthdata?: AuthHandler;\r\n\t/** @internal */\r\n\treadonly _type: ConnType;\r\n\t/** @internal */\r\n\tprotected _opened: boolean;\r\n\r\n\t// override in subclass\r\n\t/** @internal */\r\n\tprotected abstract _createSalt(len: number): string;\r\n\t/** @internal */\r\n\tprotected abstract _closesocket(): void;\r\n\t/** @internal */\r\n\tprotected abstract _send(req: Request, data: string): void;\r\n\t/** @internal */\r\n\tprotected abstract _hash(challenge: string): string;\r\n\r\n\t/** @internal */\r\n\tprotected _resolveConnect?: (() => void);\r\n\r\n\t// events\r\n\r\n\t/**\r\n\t * **AuthenticationNeeded** event\r\n\t * \r\n\t * ---\r\n\t * Called when the server requires a password, and none has been provided, or the provided password is wrong.\r\n\t * \r\n\t * Return the correct password to connect, or return null to cancel.\r\n\t */\r\n\tpublic onAuthenticationNeeded: ((this: NetworkConnectionBase) => string) | null;\r\n\t/**\r\n\t * **Connect** event\r\n\t * \r\n\t * ---\r\n\t * Called when connection to the server is established.\r\n\t */\r\n\tpublic onConnect: ((this: NetworkConnectionBase) => void) | null;\r\n\t/**\r\n\t * **Disconnect** event\r\n\t * \r\n\t * ---\r\n\t * Called when the connection to the server is closed.\r\n\t */\r\n\tpublic onDisconnect: ((this: NetworkConnectionBase) => void) | null;\r\n\r\n\t/**\r\n\t * The Connection object manages a connection to a Phidget Server.\r\n\t *\r\n\t * Once a connection has been successfully established via the connect() call, \r\n\t * this connection will be maintained until close() is called. If the underlying \r\n\t * connection is ever closed - because the server was shut down, or because of \r\n\t * network issue, the Connection object will try to re-establish the connection automatically.\r\n\t * \r\n\t * @param options - The options parameter is optional, and supports the following properties:\r\n\t * *   `hostname`: The server hostname or IP address. **Default**: `'localhost'`\r\n\t * *   `port`: The server port. **Default**: `5661` (Node.js) / `8989` (Browser)\r\n\t * *   `name`: A name for the connection. **Default**: Connection URI\r\n\t * *   `passwd`: Password for the Phidget Server. **Default**: `''`\r\n\t * *   `onConnect()`: Function that will be called on connection to server\r\n\t * *   `onDisconnect()`: Function that will be called on disconnection from server\r\n\t * *   `onAuthenticationNeeded()`: Function that will be called if a password is needed\r\n\t * *   `onError(code, msg)`: Function that will be called if an error occurs\r\n\t */\r\n\tconstructor(options: NetworkConnectionOptions);\r\n\t/**\r\n\t * The Connection object manages a connection to a Phidget Server.\r\n\t *\r\n\t * Once a connection has been successfully established via the connect() call, \r\n\t * this connection will be maintained until close() is called. If the underlying \r\n\t * connection is ever closed - because the server was shut down, or because of \r\n\t * network issue, the Connection object will try to re-establish the connection automatically.\r\n\t * \r\n\t * @param uri - Connection URI\r\n\t * @param options - The options parameter is optional, and supports the following properties:\r\n\t * *   `name`: A name for the connection. **Default**: Connection URI\r\n\t * *   `passwd`: Password for the Phidget Server. **Default**: `''`\r\n\t * *   `onConnect()`: Function that will be called on connection to server\r\n\t * *   `onDisconnect()`: Function that will be called on disconnection from server\r\n\t * *   `onAuthenticationNeeded()`: Function that will be called if a password is needed\r\n\t * *   `onError(code, msg)`: Function that will be called if an error occurs\r\n\t */\r\n\tconstructor(uri: string, options?: NetworkConnectionOptions);\r\n\t/**\r\n\t * The Connection object manages a connection to a Phidget Server.\r\n\t *\r\n\t * Once a connection has been successfully established via the connect() call, \r\n\t * this connection will be maintained until close() is called. If the underlying \r\n\t * connection is ever closed - because the server was shut down, or because of \r\n\t * network issue, the Connection object will try to re-establish the connection automatically.\r\n\t * \r\n\t * @param port - The server port.\r\n\t * @param hostname - The server hostname or IP address.\r\n\t * @param options - The options parameter is optional, and supports the following properties:\r\n\t * *   `name`: A name for the connection. **Default**: Connection URI\r\n\t * *   `passwd`: Password for the Phidget Server. **Default**: `''`\r\n\t * *   `onConnect()`: Function that will be called on connection to server\r\n\t * *   `onDisconnect()`: Function that will be called on disconnection from server\r\n\t * *   `onAuthenticationNeeded()`: Function that will be called if a password is needed\r\n\t * *   `onError(code, msg)`: Function that will be called if an error occurs\r\n\t */\r\n\tconstructor(port: number, hostname?: string, options?: NetworkConnectionOptions);\r\n\t/** @internal */\r\n\tconstructor(optsOrUriOrPort?: NetworkConnectionOptions | string | number, optsOrHostname?: NetworkConnectionOptions | string, opts?: NetworkConnectionOptions);\r\n\tconstructor(optsOrUriOrPort?: NetworkConnectionOptions | string | number, optsOrHostname?: NetworkConnectionOptions | string, opts?: NetworkConnectionOptions) {\r\n\t\tlet options: NetworkConnectionOptions = {};\r\n\t\tlet uri = '';\r\n\t\tlet hostname = '';\r\n\t\tlet port = 0;\r\n\r\n\t\tif (optsOrUriOrPort != undefined && typeof optsOrUriOrPort === 'object') {\r\n\t\t\toptions = optsOrUriOrPort;\r\n\t\t} else if (optsOrUriOrPort != undefined && typeof optsOrUriOrPort === 'string') {\r\n\t\t\turi = optsOrUriOrPort;\r\n\t\t\tif (optsOrHostname != undefined && typeof optsOrHostname === 'object')\r\n\t\t\t\toptions = optsOrHostname;\r\n\t\t} else if (optsOrUriOrPort != undefined && typeof optsOrUriOrPort === 'number') {\r\n\t\t\tport = optsOrUriOrPort;\r\n\t\t\tif (optsOrHostname != undefined && typeof optsOrHostname === 'string') {\r\n\t\t\t\thostname = optsOrHostname;\r\n\t\t\t\tif (opts != undefined && typeof opts === 'object')\r\n\t\t\t\t\toptions = opts;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!options.name)\r\n\t\t\toptions.name = uri;\r\n\r\n\t\tsuper(options);\r\n\t\tthis._type = ConnType.REMOTE;\r\n\t\tthis._generation = 0;\r\n\t\tthis._timeout = 8000;\r\n\t\tthis._reqseq = 10;\r\n\t\tthis._requests = new Map();\r\n\r\n\t\tthis._opened = false;\r\n\r\n\t\tthis._uri = uri;\r\n\r\n\t\tif (options.hostname && hostname === '') {\r\n\t\t\tif (typeof options.hostname === 'string')\r\n\t\t\t\thostname = options.hostname;\r\n\t\t}\r\n\t\tif (hostname === '')\r\n\t\t\thostname = 'localhost';\r\n\t\tthis._hostname = hostname;\r\n\r\n\t\tif (options.port && port === 0) {\r\n\t\t\tif (typeof options.port === 'number')\r\n\t\t\t\tport = options.port;\r\n\t\t\tif (typeof options.port === 'string')\r\n\t\t\t\tport = Number(options.port);\r\n\t\t}\r\n\t\tthis._port = port;\r\n\r\n\t\tif (options.onConnect && typeof options.onConnect === 'function')\r\n\t\t\tthis.onConnect = options.onConnect;\r\n\t\telse\r\n\t\t\tthis.onConnect = null;\r\n\r\n\t\tif (options.onDisconnect && typeof options.onDisconnect === 'function')\r\n\t\t\tthis.onDisconnect = options.onDisconnect;\r\n\t\telse\r\n\t\t\tthis.onDisconnect = null;\r\n\r\n\t\tif (options.onAuthenticationNeeded && typeof options.onAuthenticationNeeded === 'function')\r\n\t\t\tthis.onAuthenticationNeeded = options.onAuthenticationNeeded;\r\n\t\telse\r\n\t\t\tthis.onAuthenticationNeeded = null;\r\n\r\n\t\tif (options.passwd)\r\n\t\t\tthis._passwd = options.passwd;\r\n\t\telse\r\n\t\t\tthis._passwd = '';\r\n\r\n\t\tthis._handleAbandonedRequestsInterval = setInterval(this._handleAbandonedRequests.bind(this), 2000);\r\n\t}\r\n\r\n\tdelete() {\r\n\r\n\t\t// I'd rather do this in the close() function, but startInterval would need to move to connect()\r\n\t\tif (this._handleAbandonedRequestsInterval != undefined) {\r\n\t\t\tclearInterval(this._handleAbandonedRequestsInterval);\r\n\t\t\tdelete this._handleAbandonedRequestsInterval;\r\n\t\t}\r\n\r\n\t\tsuper.delete();\r\n\t}\r\n\r\n\t/** Sets the keepalive timeout, in ms. Default is 8000. */\r\n\tpublic setKeepAlive(timeout: number) {\r\n\r\n\t\tif (typeof timeout !== 'number' || isNaN(timeout))\r\n\t\t\tthrow 'invalid keep alive:' + timeout;\r\n\r\n\t\tthis._timeout = timeout;\r\n\t}\r\n\r\n\tpublic close() {\r\n\r\n\t\tlogdebug(\"Network Connection close() called\");\r\n\t\tthis._opened = false;\r\n\t\tif (this._connectionMaintainer != undefined)\r\n\t\t\tclearTimeout(this._connectionMaintainer);\r\n\t\tdelete this._connectionMaintainer;\r\n\t\tthis._detachAllDevices();\r\n\t\tthis._closesocket();\r\n\t}\r\n\r\n\t//////////////\r\n\t// Internal //\r\n\t//////////////\r\n\r\n\t/*\r\n\t * Creates the request if necessary, and routes the message to the correct handler.\r\n\t */\r\n\t/** @internal */\r\n\tprotected _onmessage(msg: string | undefined, req: Request) {\r\n\t\tlet json;\r\n\r\n\t\tif (msg !== undefined) {\r\n\t\t\t/* Turn id terms into strings because otherwise the uint64s may be rounded */\r\n\t\t\tconst tmp1 = msg.replace(/(\"[OI]\"|\"phid\"|\"chid\"|\"parent\"):([0-9]+)/g, \"$1:\\\"$2\\\"\");\r\n\t\t\t/* Turn nan as produced by printf into \"NaN\" */\r\n\t\t\tconst tmp2 = tmp1.replace(/([:[,])[-+]?nan(\\([\\w]*\\))?/ig, \"$1\\\"**NAN**\\\"\");\r\n\t\t\t/* Turn nan as produced by printf into null */\r\n\t\t\t//const tmp2 = tmp1.replace(/([:[,])[-+]?nan(\\([\\w]*\\))?/ig, \"$1null\");\r\n\t\t\tif (tmp1 !== tmp2) {\r\n\t\t\t\tjson = JSON.parse(tmp2, (key, value) => {\r\n\t\t\t\t\tif (key == 'v') {\r\n\t\t\t\t\t\tif (value === \"**NAN**\")\r\n\t\t\t\t\t\t\treturn NaN;\r\n\t\t\t\t\t\tif (Array.isArray(value))\r\n\t\t\t\t\t\t\treturn value.map(val => {\r\n\t\t\t\t\t\t\t\tif (val === \"**NAN**\")\r\n\t\t\t\t\t\t\t\t\treturn NaN;\r\n\t\t\t\t\t\t\t\treturn val;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tjson = JSON.parse(tmp2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (this.connected)\r\n\t\t\t\tthis._ondatamessage(json, req);\r\n\t\t\telse\r\n\t\t\t\tthis._onauthmessage(json);\r\n\t\t} catch (err) {\r\n\t\t\t// Any async errors are sent to the error event\r\n\t\t\tif (this.onError && err instanceof PhidgetError) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.onError(err.errorCode, err.message);\r\n\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\tloginfo(\"Error handling message from server\", err);\r\n\t\t\t} else {\r\n\t\t\t\tlogerr(\"Error handling message from server\", err);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Try to handle getting no reply back from the server gracefully.\r\n\t */\r\n\t/** @internal */\r\n\tprivate _handleAbandonedRequests() {\r\n\t\tfor (const r of this._requests.entries()) {\r\n\t\t\t/* throw away requests left from a previous connection */\r\n\t\t\tif (r[1].generation != this._generation) {\r\n\t\t\t\tr[1].onError(ErrorCode.CONNECTION_RESET, \"Connection Reset\");\r\n\t\t\t\tthis._requests.delete(r[0]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t/* Timeout requests after 5 seconds */\r\n\t\t\tif (tm() - r[1].time > 5000) {\r\n\t\t\t\tr[1].onTimeout();\r\n\t\t\t\tthis._requests.delete(r[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _getNextRequestSequence() {\r\n\r\n\t\tif (this._reqseq >= 65535)\r\n\t\t\tthis._reqseq = 10;\r\n\r\n\t\tthis._reqseq++;\r\n\t\treturn (this._reqseq);\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_sendRequest(flags: number, reqseq: number, repseq: number, type: P22MSG.Device, stype: P22SMSG.Open, data: P22SMSG_Open_Data): Promise<BPJsonIn>;\r\n\t/** @internal */\r\n\t_sendRequest(flags: number, reqseq: number, repseq: number, type: P22MSG.Device, stype: P22SMSG.BridgePkt, data: P22SMSG_BridgePacket_OUT): Promise<string | void>;\r\n\t/** @internal */\r\n\t_sendRequest(flags: number, reqseq: number, repseq: number, type: P22MSG.Device, stype: P22SMSG.Close, data: P22SMSG_Close_Data): Promise<void>;\r\n\t/** @internal */\r\n\t_sendRequest(flags: number, reqseq: number, repseq: number, type: P22MSG, stype: P22SMSG, data: P22SMSG_Open_Data | P22SMSG_BridgePacket_OUT | P22SMSG_Close_Data): Promise<BPJsonIn | string | void> {\r\n\r\n\t\tif (reqseq === 0)\r\n\t\t\treqseq = this._getNextRequestSequence();\r\n\r\n\t\treturn (new Promise((resolve, reject) => {\r\n\t\t\tthis._requests.set(reqseq, {\r\n\t\t\t\tgeneration: this._generation,\r\n\t\t\t\ttime: tm(),\r\n\t\t\t\tonReply: function (res: P22SMSG_Reply_Data | P22SMSG_BridgePacket_IN) {\r\n\t\t\t\t\tif ('E' in res) {\r\n\t\t\t\t\t\tif (res.E !== ErrorCode.SUCCESS) {\r\n\t\t\t\t\t\t\tif (res.R != undefined)\r\n\t\t\t\t\t\t\t\treject(new PhidgetError(res.E, res.R));\r\n\t\t\t\t\t\t\treject(new PhidgetError(res.E));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (res.R != undefined)\r\n\t\t\t\t\t\t\t\tresolve(res.R);\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresolve(res as BPJsonIn);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonTimeout: function () {\r\n\t\t\t\t\treject(new PhidgetError(ErrorCode.TIMEOUT));\r\n\t\t\t\t},\r\n\t\t\t\tonError: function (code, msg) {\r\n\t\t\t\t\treject(new PhidgetError(code, msg));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t/* de-quote the IDs so the C library can parse them as uint64s */\r\n\t\t\tconst json = JSON.stringify(data);\r\n\t\t\tconst data2 = json.replace(/(\"[OI]\"|\"phid\"|\"channel\"):\"([0-9]+)\"/g, \"$1:$2\");\r\n\r\n\t\t\tconst req = new Request(data2.length, flags, reqseq, repseq, type, stype);\r\n\t\t\tthis._send(req, data2);\r\n\t\t}));\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_sendReply(repseq: number, type: P22MSG, stype: P22SMSG, reply?: P22SMSG_Reply_Data) {\r\n\t\tconst NRF_REPLY = 0x0002;\r\n\t\tconst reqseq = this._getNextRequestSequence();\r\n\r\n\t\tlet data = '';\r\n\t\tif (reply != undefined)\r\n\t\t\tdata = JSON.stringify(reply);\r\n\r\n\t\tconst req = new Request(data.length, NRF_REPLY, reqseq, repseq, type, stype);\r\n\t\tthis._send(req, data);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _maintainConnection() {\r\n\r\n\t\tlogdebug(\"Maintaining network connection..\");\r\n\r\n\t\tconst nextMaintainer = () => {\r\n\t\t\t// NOTE: connect() will have started up a new connection maintainer so we check for it here\r\n\t\t\tif (!this._connectionMaintainer && this._opened) {\r\n\t\t\t\tlogdebug(\".. Check again in 4 seconds.\");\r\n\t\t\t\tthis._connectionMaintainer = setTimeout(this._maintainConnection.bind(this), 4000);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove any existing maintainer\r\n\t\tif (this._connectionMaintainer)\r\n\t\t\tdelete this._connectionMaintainer;\r\n\r\n\t\tif (this.connected) {\r\n\t\t\tlogdebug(\".. already connected ..\");\r\n\t\t\tnextMaintainer();\r\n\t\t} else {\r\n\t\t\tlogdebug(\".. trying to connect ..\");\r\n\t\t\tthis.connect().then(() => {\r\n\t\t\t\tlogdebug(\".. connected!\");\r\n\t\t\t\tnextMaintainer();\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tif (this.onError && err instanceof PhidgetError) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.onError(err.errorCode, err.message);\r\n\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t}\r\n\t\t\t\tlogerr(\"Error connecting\", err);\r\n\t\t\t\tlogdebug(\".. failed to connect! ..\");\r\n\t\t\t\tnextMaintainer();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _doclose() {\r\n\r\n\t\tthis._detachAllDevices();\r\n\t\tthis._closesocket();\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _onauthmessage(data: Record<string, unknown>) {\r\n\r\n\t\tif (this._onauthdata == undefined)\r\n\t\t\tthrow new Error('packet recieved while not connected and authdata is not defined');\r\n\r\n\t\tthis._onauthdata(data);\r\n\t}\r\n\r\n\t// NOTE: This is async, but it sends any errors on to the onError event, so it should never reject\r\n\t/** @internal */\r\n\tprivate _ondatamessage(data: Record<string, unknown>, req: Request) {\r\n\t\tconst request = this._requests.get(req.repseq);\r\n\r\n\t\tif (request) {\r\n\t\t\tthis._requests.delete(req.repseq);\r\n\t\t\trequest.onReply(data as unknown as P22SMSG_Reply_Data | P22SMSG_BridgePacket_IN);\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Replies do not require additional processing, but there must have been a request\r\n\t\t * object registered.\r\n\t\t */\r\n\t\tif (req.flgs & NR.Reply) {\r\n\t\t\t// If the request object is missing, it was probably removed by the timeout handling.\r\n\t\t\tif (request === undefined)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, 'No handler registered for reply: ' + req);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (req.type) {\r\n\t\t\tcase P22MSG.Command:\r\n\t\t\t\tthis._handleCommand(req);\r\n\t\t\t\tbreak;\r\n\t\t\tcase P22MSG.Device:\r\n\t\t\t\tthis._handleDevice(req, data)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID, 'Unknown request type:' + req.type);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _handleCommand(req: Request) {\r\n\r\n\t\tswitch (req.stype) {\r\n\t\t\tcase P22SMSG.KeepAlive:\r\n\t\t\t\tlogdebug(\"Got a keepalive message\");\r\n\t\t\t\tif (this._keepAliveTimeout != undefined) {\r\n\t\t\t\t\tlogdebug(\"Cleaning previous keepalive timeout\");\r\n\t\t\t\t\tclearTimeout(this._keepAliveTimeout);\r\n\t\t\t\t}\r\n\t\t\t\tthis._keepAliveTimeout = setTimeout(() => {\r\n\t\t\t\t\tlogdebug(\"Keepalive timeout passed\");\r\n\t\t\t\t\tdelete this._keepAliveTimeout;\r\n\t\t\t\t\tif (this.connected) {\r\n\t\t\t\t\t\tif (this.onError) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tthis.onError(ErrorCode.KEEP_ALIVE, \"KeepAlive timeout. Closing connection to server.\");\r\n\t\t\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlogerr(\"KeepAlive timeout. Closing connection to server.\");\r\n\t\t\t\t\t\tthis._doclose();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this._timeout);\r\n\t\t\t\tthis._sendReply(req.reqseq, P22MSG.Command, P22SMSG.KeepAlive);\r\n\t\t\t\treturn;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, 'Unknown command subrequest:' + req.stype);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _handleDevice(req: Request, data: Record<string, unknown>) {\r\n\r\n\t\tswitch (req.stype) {\r\n\t\t\tcase P22SMSG.Attach:\r\n\t\t\t\tthis._handleDeviceAttach(data as unknown as P22SMSG_Attach_Data);\r\n\t\t\t\treturn;\r\n\t\t\tcase P22SMSG.Detach:\r\n\t\t\t\tthis._handleDeviceDetach(data as unknown as P22SMSG_Detach_Data);\r\n\t\t\t\treturn;\r\n\t\t\tcase P22SMSG.BridgePkt:\r\n\t\t\t\tthis._handleBridgePacket(req, data as unknown as P22SMSG_BridgePacket_IN);\r\n\t\t\t\treturn;\r\n\t\t\tcase P22SMSG.Channel:\r\n\t\t\t\tthis._handleChannel(data as unknown as P22SMSG_Channel_Data);\r\n\t\t\t\treturn;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, 'Unknown device subrequest:' + req.stype);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _handleDeviceAttach(data: P22SMSG_Attach_Data) {\r\n\t\tconst devDef = findPhidgetUniqueDevice(data);\r\n\t\tlet devData: NetworkDeviceData;\r\n\t\tconst baseData = {\r\n\t\t\tversion: data.version,\r\n\t\t\tlabel: data.label,\r\n\t\t\tserialNumber: data.serialNumber,\r\n\t\t\tdevDef: devDef,\r\n\t\t\tfwstr: data.fwstr ?? devDef.s, // fallback on SKU string for very old network server\r\n\t\t\tid: data.phid,\r\n\t\t\tparent: this._getDevice(data.parent) ?? undefined,\r\n\t\t\tdeviceID: data.deviceID,\r\n\t\t\tname: data.name\r\n\t\t};\r\n\r\n\t\tif (data.type === 'VINT') {\r\n\t\t\tdevData = {\r\n\t\t\t\t...baseData,\r\n\t\t\t\ttype: 'VINT' as const,\r\n\t\t\t\tvintDeviceProps: {\r\n\t\t\t\t\tvintProto: data.vintProto ?? 1,\r\n\t\t\t\t\tsuppSetSpeed: data.suppSetSpeed ? !!data.suppSetSpeed : false,\r\n\t\t\t\t\t// AutoSetSpeed support flag is not sent over the network - just allow it, and if not supported, we'll get that info from the server.\r\n\t\t\t\t\tsuppAutoSetSpeed: data.suppSetSpeed ? !!data.suppSetSpeed : false,\r\n\t\t\t\t\tmaxSpeed: data.maxSpeed ?? PUNK.UINT32,\r\n\t\t\t\t\tcommSpeed: data.commSpeed ?? PUNK.UINT32,\r\n\t\t\t\t\thubPort: data.hubPort,\r\n\t\t\t\t\tisHubPort: !!data.isHubPort,\r\n\t\t\t\t\tuniqueIndex: data.index\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else if (devDef.c === DeviceClass.HUB) {\r\n\r\n\t\t\tlet hubPortCnt;\r\n\t\t\tif (data.hubPortsInfo)\r\n\t\t\t\thubPortCnt = data.hubPortsInfo.portProto.length;\r\n\t\t\telse\r\n\t\t\t\thubPortCnt = devDef.cn ? devDef.cn[0] : 6; // Not ideal, but should be fine\r\n\r\n\t\t\tconst hubPortProps = [];\r\n\t\t\tfor (let i = 0; i < hubPortCnt; i++) {\r\n\t\t\t\tif (data.hubPortsInfo) {\r\n\t\t\t\t\thubPortProps.push({\r\n\t\t\t\t\t\tportProto: data.hubPortsInfo.portProto[i],\r\n\t\t\t\t\t\tportSuppSetSpeed: !!data.hubPortsInfo.portSuppSetSpeed[i],\r\n\t\t\t\t\t\t// AutoSetSpeed support flag is not sent over the network - just allow it, and if not supported, we'll get that info from the server.\r\n\t\t\t\t\t\tportSuppAutoSetSpeed: !!data.hubPortsInfo.portSuppSetSpeed[i],\r\n\t\t\t\t\t\tportMaxSpeed: data.hubPortsInfo.portMaxSpeed[i],\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Defaults if talking to an old server\r\n\t\t\t\t\thubPortProps.push({\r\n\t\t\t\t\t\tportProto: 1,\r\n\t\t\t\t\t\tportSuppSetSpeed: false,\r\n\t\t\t\t\t\tportSuppAutoSetSpeed: false,\r\n\t\t\t\t\t\tportMaxSpeed: 100000,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdevData = {\r\n\t\t\t\t...baseData,\r\n\t\t\t\ttype: 'HUB' as const,\r\n\t\t\t\thubPortProps: hubPortProps\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tdevData = {\r\n\t\t\t\t...baseData,\r\n\t\t\t\ttype: 'OTHER' as const\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst dev = new NetworkDevice(this, devData);\r\n\t\tthis._deviceAttach(dev);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _handleDeviceDetach(data: P22SMSG_Detach_Data) {\r\n\t\tconst dev = this._getDevice(data.phid);\r\n\t\tif (dev)\r\n\t\t\tthis._deviceDetach(dev);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _handleChannel(data: P22SMSG_Channel_Data) {\r\n\r\n\t\tconst dev = this._devices.get(data.parent);\r\n\t\tif (!dev)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, 'missing channel parent');\r\n\r\n\t\tconst chDef = dev.findPhidgetUniqueChannel(data.uniqueIndex);\r\n\t\tconst chData: NetworkChannelData = {\r\n\t\t\tid: data.chid,\r\n\t\t\tchDef: chDef,\r\n\t\t\tuniqueIndex: data.uniqueIndex,\r\n\t\t\tindex: data.index,\r\n\t\t\tcpversion: data.version,\r\n\t\t\tname: data.name,\r\n\t\t\tclass: data.class\r\n\t\t};\r\n\t\tconst ch = new NetworkChannel(this, dev, chData);\r\n\t\tthis._channelAttach(ch);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprivate _handleBridgePacket(req: Request, data: P22SMSG_BridgePacket_IN) {\r\n\t\tconst bp = new BridgePacket(this, data);\r\n\t\tlet reply: P22SMSG_Reply_Data | undefined;\r\n\t\ttry {\r\n\t\t\tbp.deliver();\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof PhidgetError) {\r\n\t\t\t\treply = {\r\n\t\t\t\t\tE: err.errorCode,\r\n\t\t\t\t\tR: err.message\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treply = {\r\n\t\t\t\t\tE: ErrorCode.UNEXPECTED,\r\n\t\t\t\t\tR: '' + err\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Send a reply if this is not an event */\r\n\t\tif (!bp.isEvent())\r\n\t\t\tthis._sendReply(req.reqseq, req.type, req.stype, reply);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _handshake(): Promise<void> {\r\n\r\n\t\treturn (new Promise<void>((resolve, reject) => {\r\n\r\n\t\t\tconst pkt: P22SMSG_HandShakeC0_Data = {\r\n\t\t\t\ttype: this._protocol,\r\n\t\t\t\tpmajor: NET_MAJOR,\r\n\t\t\t\tpminor: NET_MINOR\r\n\t\t\t};\r\n\t\t\tconst json = JSON.stringify(pkt);\r\n\t\t\tconst req = new Request(json.length, 0, 0, 0, P22MSG.Connect, P22SMSG.HandShakeC0);\r\n\t\t\tthis._send(req, json);\r\n\r\n\t\t\tthis._onauthdata = <AuthHandler>HandShakeS0;\r\n\r\n\t\t\tfunction HandShakeS0(this: NetworkConnectionBase, data: P22SMSG_HandShakeS0_Data) {\r\n\t\t\t\tif (data.result !== ErrorCode.SUCCESS) {\r\n\t\t\t\t\treject(new PhidgetError(data.result, 'server rejected handshake'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* start authentication */\r\n\t\t\t\tthis._nonceC = this._createSalt(16);\r\n\t\t\t\tconst pkt: P22SMSG_AuthC0_Data = {\r\n\t\t\t\t\tident: NET_IDENT,\r\n\t\t\t\t\tnonceC: this._nonceC\r\n\t\t\t\t};\r\n\t\t\t\tconst json = JSON.stringify(pkt);\r\n\t\t\t\tconst req = new Request(json.length, 0, 0, 0, P22MSG.Connect, P22SMSG.AuthC0);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._send(req, json);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._onauthdata = <AuthHandler>AuthS0;\r\n\t\t\t}\r\n\r\n\t\t\tfunction AuthS0(this: NetworkConnectionBase, data: P22SMSG_AuthS0_Data) {\r\n\t\t\t\tif (data.result !== ErrorCode.SUCCESS) {\r\n\t\t\t\t\treject(new PhidgetError(data.result, 'authentication failed'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._nonceC != data.nonceC) {\r\n\t\t\t\t\treject(new PhidgetError(ErrorCode.UNEXPECTED, 'Authentication Failure: nonce do not match (' +\r\n\t\t\t\t\t\tthis._nonceC + ') vs (' + data.nonceC + ')'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst challenge = NET_IDENT + this._passwd + this._nonceC + data.nonceS + data.salt;\r\n\t\t\t\tconst proof = this._hash(challenge);\r\n\t\t\t\tconst pkt: P22SMSG_AuthC1_Data = { nonceC: this._nonceC, nonceS: data.nonceS, proof: proof };\r\n\t\t\t\tconst json = JSON.stringify(pkt);\r\n\t\t\t\tconst req = new Request(json.length, 0, 0, 0, P22MSG.Connect, P22SMSG.AuthC1);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._send(req, json);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._onauthdata = <AuthHandler>AuthReply;\r\n\t\t\t}\r\n\r\n\t\t\tfunction AuthReply(this: NetworkConnectionBase, data: P22SMSG_Reply_Data) {\r\n\t\t\t\tdelete this._onauthdata;\r\n\r\n\t\t\t\tif (data.E != ErrorCode.SUCCESS) {\r\n\t\t\t\t\tif (this.onAuthenticationNeeded) {\r\n\t\t\t\t\t\tlet pass;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tpass = this.onAuthenticationNeeded();\r\n\t\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t\t\tif (pass != undefined && typeof pass === 'string') {\r\n\t\t\t\t\t\t\tthis._passwd = pass;\r\n\t\t\t\t\t\t\t// Run connect again, with the password now - but in it's own 'thread'\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tthis.connect().then(() => resolve()).catch(err => reject(err));\r\n\t\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogwarn(\"A password is required for this server. Handle the onAuthenticationNeeded event to return a password.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treject(new PhidgetError(data.E, 'authentication failed: server rejected proof'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.connected = true; // prevent packets from being missed\r\n\r\n\t\t\t\tif (this.onConnect) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.onConnect();\r\n\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ensure that no previous connection maintainer is running before we start a new one\r\n\t\t\t\tif (this._connectionMaintainer != undefined)\r\n\t\t\t\t\tclearTimeout(this._connectionMaintainer);\r\n\t\t\t\tdelete this._connectionMaintainer;\r\n\t\t\t\tthis._maintainConnection();\r\n\r\n\t\t\t\t// Connected!\r\n\t\t\t\tresolve();\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n}\r\n\r\nexport function DecodeUTF8(bytes: Uint8Array) {\r\n\tlet s = '';\r\n\tlet i = 0;\r\n\twhile (i < bytes.length) {\r\n\t\tlet c = bytes[i++];\r\n\t\tif (c > 127) {\r\n\t\t\tif (c > 191 && c < 224) {\r\n\t\t\t\tif (i >= bytes.length) throw 'UTF-8 decode: incomplete 2-byte sequence';\r\n\t\t\t\tc = (c & 31) << 6 | bytes[i] & 63;\r\n\t\t\t} else if (c > 223 && c < 240) {\r\n\t\t\t\tif (i + 1 >= bytes.length) throw 'UTF-8 decode: incomplete 3-byte sequence';\r\n\t\t\t\tc = (c & 15) << 12 | (bytes[i] & 63) << 6 | bytes[++i] & 63;\r\n\t\t\t} else if (c > 239 && c < 248) {\r\n\t\t\t\tif (i + 2 >= bytes.length) throw 'UTF-8 decode: incomplete 4-byte sequence';\r\n\t\t\t\tc = (c & 7) << 18 | (bytes[i] & 63) << 12 | (bytes[++i] & 63) << 6 | bytes[++i] & 63;\r\n\t\t\t} else throw 'UTF-8 decode: unknown multibyte start 0x' + c.toString(16) + ' at index ' + (i - 1);\r\n\t\t\t++i;\r\n\t\t}\r\n\r\n\t\tif (c <= 0xffff) s += String.fromCharCode(c);\r\n\t\telse if (c <= 0x10ffff) {\r\n\t\t\tc -= 0x10000;\r\n\t\t\ts += String.fromCharCode(c >> 10 | 0xd800)\r\n\t\t\ts += String.fromCharCode(c & 0x3FF | 0xdc00)\r\n\t\t} else throw 'UTF-8 decode: code point 0x' + c.toString(16) + ' exceeds UTF-16 reach';\r\n\t}\r\n\treturn s;\r\n}\r\n\r\nexport function EncodeUTF8(s: string) {\r\n\tlet i = 0;\r\n\tconst bytes = new Uint8Array(s.length * 4);\r\n\tfor (let ci = 0; ci != s.length; ci++) {\r\n\t\tlet c = s.charCodeAt(ci);\r\n\t\tif (c < 128) {\r\n\t\t\tbytes[i++] = c;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (c < 2048) {\r\n\t\t\tbytes[i++] = c >> 6 | 192;\r\n\t\t} else {\r\n\t\t\tif (c > 0xd7ff && c < 0xdc00) {\r\n\t\t\t\tif (++ci == s.length) throw 'UTF-8 encode: incomplete surrogate pair';\r\n\t\t\t\tconst c2 = s.charCodeAt(ci);\r\n\t\t\t\tif (c2 < 0xdc00 || c2 > 0xdfff) throw 'UTF-8 encode: second char code 0x' + c2.toString(16) + ' at index ' + ci + ' in surrogate pair out of range';\r\n\t\t\t\tc = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\r\n\t\t\t\tbytes[i++] = c >> 18 | 240;\r\n\t\t\t\tbytes[i++] = c >> 12 & 63 | 128;\r\n\t\t\t} else { // c <= 0xffff\r\n\t\t\t\tbytes[i++] = c >> 12 | 224;\r\n\t\t\t}\r\n\t\t\tbytes[i++] = c >> 6 & 63 | 128;\r\n\t\t}\r\n\t\tbytes[i++] = c & 63 | 128;\r\n\t}\r\n\treturn bytes.subarray(0, i);\r\n}","import sha256hash from './sha256';\r\nimport { DecodeUTF8, EncodeUTF8, NetworkConnectionBase, type NetworkConnectionOptions } from './NetworkConnection';\r\nimport { Request } from './Request';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { ErrorCode } from '../Enumerations.gen';\r\nimport { logerr, logEventException, loginfo } from '../Logging';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class NetworkConnection extends NetworkConnectionBase {\r\n\t/** @internal */\r\n\tprivate _ws?: WebSocket;\r\n\t/** @internal */\r\n\tprivate _connectTimeout?: NodeJS.Timeout;\r\n\r\n\tconstructor(options: NetworkConnectionOptions);\r\n\tconstructor(uri: string, options?: NetworkConnectionOptions);\r\n\tconstructor(port: number, hostname?: string, options?: NetworkConnectionOptions);\r\n\tconstructor(optsOrUriOrPort?: NetworkConnectionOptions | string | number, optsOrHostname?: NetworkConnectionOptions | string, opts?: NetworkConnectionOptions) {\r\n\t\tsuper(optsOrUriOrPort, optsOrHostname, opts);\r\n\r\n\t\tif (this._port === 0)\r\n\t\t\tthis._port = 8989;\r\n\r\n\t\tif (this._uri === '')\r\n\t\t\tthis._uri = 'ws://' + this._hostname + ':' + this._port + '/phidgets';\r\n\r\n\t\tthis._protocol = \"www\";\r\n\t}\r\n\r\n\t/**\r\n\t * Connects to the server. Once the initial connection has succeeded, \r\n\t * it will be maintained until close is called.\r\n\t * \r\n\t * It retryOnFail is true, the initial connect will retry on failure until a connection is established, \r\n\t * and connect() will not resolve until the connection is established.\r\n\t * Thisis allows connect to be called before the network server is running.\r\n\t * \r\n\t * If retryOnFail is false (the default), connect() will throw an exception \r\n\t * if the connection can not be established.\r\n\t * \r\n\t * @param retryOnFail - Keep trying to connect if the initial attempt fails. Defaults to false.\r\n\t */\r\n\tconnect(retryOnFail = false): Promise<void> {\r\n\t\treturn (new Promise<void>((resolve, reject) => {\r\n\r\n\t\t\tthis._opened = true;\r\n\r\n\t\t\tif (this.connected === true) {\r\n\t\t\t\tresolve();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (retryOnFail) {\r\n\t\t\t\tthis._resolveConnect = resolve;\r\n\t\t\t\tthis._maintainConnection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._ws) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._ws.close();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Ignored\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._ws;\r\n\t\t\t}\r\n\r\n\t\t\tlet hasCompleted = false;\r\n\t\t\ttry {\r\n\t\t\t\tthis._ws = new WebSocket(this._uri);\r\n\t\t\t\tthis._ws.binaryType = 'arraybuffer';\r\n\r\n\t\t\t\tthis._ws.onopen = () => {\r\n\t\t\t\t\tthis._handshake().then(() => {\r\n\t\t\t\t\t\t// Resolve a retry on fail connect - on the first connection success\r\n\t\t\t\t\t\tif (this._resolveConnect) {\r\n\t\t\t\t\t\t\tthis._resolveConnect();\r\n\t\t\t\t\t\t\tdelete this._resolveConnect;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this._connectTimeout !== undefined) {\r\n\t\t\t\t\t\t\tclearTimeout(this._connectTimeout);\r\n\t\t\t\t\t\t\tdelete this._connectTimeout;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tif (this._connectTimeout !== undefined) {\r\n\t\t\t\t\t\t\tclearTimeout(this._connectTimeout);\r\n\t\t\t\t\t\t\tdelete this._connectTimeout;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!hasCompleted) {\r\n\t\t\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._ws.onclose = () => {\r\n\t\t\t\t\tthis._doclose();\r\n\t\t\t\t\tif (!hasCompleted) {\r\n\t\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\t\treject(new PhidgetError(ErrorCode.CONNECTION_RESET, \"Socket closed\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._ws.onmessage = (event: MessageEvent) => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst array = new Uint8Array(event.data);\r\n\t\t\t\t\t\tconst req = new Request(array);\r\n\t\t\t\t\t\tlet msg;\r\n\t\t\t\t\t\tif (req.len > 0) {\r\n\t\t\t\t\t\t\tconst tmp1 = new Uint8Array(event.data, req.hdrlen, req.len);\r\n\t\t\t\t\t\t\tmsg = DecodeUTF8(tmp1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._onmessage(msg, req);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconst msg = \"Error handling data from server - resetting connection\";\r\n\t\t\t\t\t\tconst perr = new PhidgetError(ErrorCode.UNEXPECTED, msg, e);\r\n\r\n\t\t\t\t\t\tthis._doclose();\r\n\r\n\t\t\t\t\t\tif (hasCompleted) {\r\n\t\t\t\t\t\t\tif (this.onError) {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tthis.onError(perr.errorCode, perr.message);\r\n\t\t\t\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t\t\t\t\tloginfo(perr.message);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlogerr(msg, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\t\t\treject(perr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._ws.onerror = () => {\r\n\t\t\t\t\tconst msg = \"websocket error - check that server is available\";\r\n\r\n\t\t\t\t\tthis._doclose();\r\n\r\n\t\t\t\t\tif (!hasCompleted) {\r\n\t\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\t\treject(new PhidgetError(ErrorCode.CONNECTION_REFUSED, msg));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.onError) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthis.onError(ErrorCode.CONNECTION_REFUSED, msg);\r\n\t\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t\t\tloginfo(msg);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogerr(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Guarantee that connect() will resolve or reject within timeout\r\n\t\t\t\tthis._connectTimeout = setTimeout(() => {\r\n\t\t\t\t\tdelete this._connectTimeout;\r\n\t\t\t\t\tthis._doclose();\r\n\t\t\t\t\tif (!hasCompleted) {\r\n\t\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\t\treject(new PhidgetError(ErrorCode.TIMEOUT, \"Connection Timed Out\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this._timeout);\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (this._connectTimeout !== undefined) {\r\n\t\t\t\t\tclearTimeout(this._connectTimeout);\r\n\t\t\t\t\tdelete this._connectTimeout;\r\n\t\t\t\t}\r\n\t\t\t\tif (!hasCompleted) {\r\n\t\t\t\t\thasCompleted = true;\r\n\t\t\t\t\treject(new PhidgetError(ErrorCode.UNEXPECTED, 'Error in connect', err));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _closesocket() {\r\n\r\n\t\tif (this.connected === true) {\r\n\t\t\tif (this.onDisconnect) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.onDisconnect();\r\n\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.connected = false;\r\n\r\n\t\tif (this._connectTimeout !== undefined) {\r\n\t\t\tclearTimeout(this._connectTimeout);\r\n\t\t\tdelete this._connectTimeout;\r\n\t\t}\r\n\t\tif (this._ws != undefined) {\r\n\t\t\ttry {\r\n\t\t\t\t// Deregister events to make sure we don't get any after a close/connect cycle\r\n\t\t\t\tthis._ws.onopen = null;\r\n\t\t\t\tthis._ws.onclose = null;\r\n\t\t\t\tthis._ws.onmessage = null;\r\n\t\t\t\tthis._ws.onerror = null;\r\n\t\t\t\tthis._ws.close();\r\n\t\t\t} catch {\r\n\t\t\t\t// Ignored\r\n\t\t\t}\r\n\t\t\tdelete this._ws;\r\n\t\t}\r\n\r\n\t\tthis._generation++;\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _send(req: Request, data: string) {\r\n\t\ttry {\r\n\t\t\tif (!this._ws || this._ws.readyState != WebSocket.OPEN)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, 'invalid websocket state');\r\n\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\t// NOTE: I'm not exactly sure why it's neccesssary to convert to UTF8 for websocket but not Node socket..\r\n\t\t\t\tconst dataArr = EncodeUTF8(data);\r\n\t\t\t\treq.len = dataArr.length;\r\n\t\t\t\tthis._ws.send(req.buffer);\r\n\t\t\t\tthis._ws.send(dataArr);\r\n\t\t\t} else {\r\n\t\t\t\tthis._ws.send(req.buffer);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tlet msg;\r\n\t\t\tif (typeof e === 'string')\r\n\t\t\t\tmsg = e;\r\n\t\t\telse if (e instanceof Error)\r\n\t\t\t\tmsg = e.message;\r\n\t\t\telse\r\n\t\t\t\tmsg = 'Error in connect';\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, msg);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _hash(challenge: string) {\r\n\t\tconst digest = sha256hash(challenge);\r\n\r\n\t\tlet bin = '';\r\n\t\tfor (let i = 0; i < digest.length; i += 2) {\r\n\t\t\tconst b = parseInt(digest.substring(i, i + 2), 16);\r\n\t\t\tbin += String.fromCharCode(b);\r\n\t\t}\r\n\r\n\t\treturn (btoa(bin));\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _createSalt(len: number) {\r\n\t\tconst buf = new Uint8Array(len);\r\n\t\tcrypto.getRandomValues(buf);\r\n\t\treturn (btoa(String.fromCharCode(...buf)).substring(len));\r\n\t}\r\n}","import { Device, DeviceData } from \"../Device\";\r\nimport { DeviceID } from \"../Enumerations.gen\";\r\nimport { type BridgePacket } from \"../BridgePacket\";\r\nimport { type LocalChannel } from \"./LocalChannel\";\r\nimport { USBConnectionBase } from \"./USBConnection\";\r\nimport { PhidgetUSBDevice } from \"./PhidgetUSBDevice\";\r\nimport { PhidgetUniqueDevice } from \"../Devices.gen\";\r\n\r\nexport const PHIDGET_MAXCHANNELS = 64;\t    /* Max number of channels on any device (current winner LED-64) */\r\nexport const MAX_OUT_PACKET_SIZE = 128;\r\n\r\n// Either a USB Device or a VINT Device, connected locally via WebUSB\r\n/** @internal */\r\nabstract class LocalDevice extends Device {\r\n\tdeclare conn: USBConnectionBase;\r\n\tdeclare parent?: PhidgetUSBDevice;\r\n\tdeclare devDef: Required<PhidgetUniqueDevice>;\r\n\tdeviceID: DeviceID;\r\n\tname: string;\r\n\tchannels: Record<number, LocalChannel>;\r\n\r\n\t// subclass\r\n\tabstract dataInput(buffer: DataView): void;\r\n\tabstract bridgeInput(ch: LocalChannel, arg1: BridgePacket): Promise<void>;\r\n\tabstract open(full?: boolean): Promise<void>;\r\n\tabstract close(force?: boolean, full?: boolean): Promise<void>;\r\n\tabstract lock(): Promise<void>;\r\n\tabstract unlock(): void;\r\n\tinitAfterCreate?(): Promise<void>;\r\n\r\n\tconstructor(conn: USBConnectionBase, data: DeviceData) {\r\n\t\tsuper(conn, data);\r\n\t\tthis.deviceID = this.devDef.d;\r\n\t\tthis.name = this.devDef.t;\r\n\t\tthis.channels = {};\r\n\t}\r\n\r\n\tgetChannel(index: number): LocalChannel | null {\r\n\t\tif (this.channels[index] != undefined && this.channels[index].isopen)\r\n\t\t\treturn this.channels[index];\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// NOTE: Export as a LocalDevice because USBDevice already exists as part of WebUSB\r\nexport { LocalDevice };","﻿export function GetBigInt64(view: DataView, offset: number) {\r\n\tif (\"getBigInt64\" in DataView.prototype) {\r\n\t\treturn Number(view.getBigInt64(offset));\r\n\t} else {\r\n\t\tconst isNegative = (view.getUint8(offset) & 0x80) > 0;\r\n\t\tlet uint64 = 0;\r\n\t\tlet carrying = true;\r\n\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\tlet uint32 = view.getUint32(offset + (4 - (i * 4)));\r\n\t\t\tif (isNegative) {\r\n\t\t\t\tif (carrying) {\r\n\t\t\t\t\tif (uint32 !== 0x00000000) {\r\n\t\t\t\t\t\tuint32 = (~(uint32 - 1)) & 0xFFFFFFFF;\r\n\t\t\t\t\t\tcarrying = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuint32 = (~uint32) & 0xFFFFFFFF;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tuint64 += uint32 * (2 ** (8 * i));\r\n\t\t}\r\n\t\treturn (isNegative ? -uint64 : uint64);\r\n\t}\r\n}\r\n\r\nexport function SetBigInt64(view: DataView, offset: number, value: number) {\r\n\t//this oddly seems necessary, otherwise (temp >> 32) === temp somehow when used with setInt32()...\r\n\tconst temp = value >> 2;\r\n\tview.setInt32(offset, temp >> 30);\r\n\tview.setUint32(offset + 4, value & 0xFFFFFFFF);\r\n}\r\n\r\nexport function StringToWordByteArray(buff: string) {\r\n\tconst wordarray = new Uint16Array(buff.length);\r\n\tlet i = 0;\r\n\tfor (i = 0; i < buff.length; i++) {\r\n\t\twordarray[i] = buff.charCodeAt(i);\r\n\t}\r\n\treturn wordarray;\r\n}\r\n\r\nexport function WordByteArrayToString(bytearray: Uint16Array) {\r\n\treturn String.fromCharCode(...bytearray);\r\n}\r\n\r\nexport function RoundDouble(num: number, decimals: number) {\r\n\treturn Math.round(num * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n}\r\n\r\nexport function UpperPowerOfTwo(v: number) {\r\n\tv--;\r\n\tv |= v >> 1;\r\n\tv |= v >> 2;\r\n\tv |= v >> 4;\r\n\tv |= v >> 8;\r\n\tv |= v >> 16;\r\n\tv++;\r\n\treturn v;\r\n}\r\n\r\nexport const PhidgetSleep = (delay: number) => new Promise((resolve) => setTimeout(resolve, delay));","﻿\r\nimport { ErrorCode } from '../Enumerations.gen';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { PhidgetSleep } from '../Utils';\r\nimport { logverbose, logwarn } from '../Logging';\r\nimport { HubDevice } from './device/HubDevice';\r\n\r\nconst MAX_PACKET_IDS = 128;\r\n\r\nconst PACKETTRACKER_INUSE = 0x01;\r\nconst PACKETTRACKER_SIGNALLED = 0x02;\r\nconst PACKETTRACKER_SENT = 0x04;\r\nconst PACKETTRACKER_ABANDONNED = 0x08;\r\n\r\nclass PacketTrackers {\r\n\tpacketTracker: Map<number, PacketTracker>;\r\n\tcounter: number[];\r\n\r\n\tconstructor() {\r\n\t\tthis.packetTracker = new Map<number, PacketTracker>();\r\n\t\tthis.counter = [];\r\n\t}\r\n\r\n\tsetPacketsReturnCode(child: number, res: ErrorCode) {\r\n\t\tfor (const pt of this.packetTracker.values()) {\r\n\t\t\tif (!(pt.state & PACKETTRACKER_INUSE))\r\n\t\t\t\treturn;\r\n\t\t\tif (!(pt.state & PACKETTRACKER_SENT))\r\n\t\t\t\treturn;\r\n\t\t\tif (pt.childIndex !== child)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (pt.state & PACKETTRACKER_ABANDONNED) {\r\n\t\t\t\tpt.state = 0;\r\n\t\t\t} else {\r\n\t\t\t\tpt.returnCode = res;\r\n\t\t\t\tpt.state |= PACKETTRACKER_SIGNALLED;\r\n\t\t\t\tif (pt.signal)\r\n\t\t\t\t\tpt.signal();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPacketTrackerWait(device: HubDevice, min: number, max: number, childIndex: number, timeout: number) {\r\n\t\tconst tm = Date.now() + timeout;\r\n\r\n\t\tfor (; ;) {\r\n\t\t\tconst tracker = this.getPacketTracker(device, min, max, childIndex);\r\n\t\t\tif (tracker !== null)\r\n\t\t\t\treturn tracker;\r\n\r\n\t\t\tif (Date.now() > tm)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.TIMEOUT);\r\n\r\n\t\t\tawait PhidgetSleep(2);\r\n\t\t\tlogverbose(\"getPacketTrackerWait tm after sleep: \" + Date.now());\r\n\t\t}\r\n\t}\r\n\r\n\tgetPacketTracker(device: HubDevice, min: number, max: number, childIndex: number) {\r\n\t\tlet i, j;\r\n\r\n\t\tif (device === null)\r\n\t\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED);\r\n\t\tif (device.packetTrackers === null)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\tif (min < 0)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\tif (max >= MAX_PACKET_IDS)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\r\n\t\tif (device.packetTrackers.counter[childIndex] == undefined)\r\n\t\t\tdevice.packetTrackers.counter[childIndex] = 0;\r\n\r\n\t\tfor (j = min; j <= max; j++) {\r\n\t\t\t// cycle through the valid packet IDs\r\n\t\t\ti = j + device.packetTrackers.counter[childIndex];\r\n\t\t\tif (i > max)\r\n\t\t\t\ti -= (max - min);\r\n\t\t\tif (i < min || i > max)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Calculated an invalid packetTracker\");\r\n\r\n\t\t\tlet pt = device.packetTrackers.packetTracker.get(i);\r\n\t\t\tif (pt == undefined) {\r\n\t\t\t\tpt = new PacketTracker();\r\n\t\t\t\tdevice.packetTrackers.packetTracker.set(i, pt);\r\n\t\t\t}\r\n\r\n\t\t\tif (pt.state & PACKETTRACKER_INUSE)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tpt.state |= PACKETTRACKER_INUSE;\r\n\t\t\tpt.returnCode = ErrorCode.UNKNOWN_VALUE;\r\n\t\t\tpt.len = 0;\r\n\t\t\tpt.childIndex = childIndex;\r\n\t\t\tdevice.packetTrackers.counter[childIndex]++;\r\n\t\t\tif (device.packetTrackers.counter[childIndex] > (max - min))\r\n\t\t\t\tdevice.packetTrackers.counter[childIndex] = 0;\r\n\r\n\t\t\treturn { pt: pt, id: i };\r\n\t\t}\r\n\r\n\t\t//All trackers in use - wait\r\n\t\treturn null;\r\n\t}\r\n\r\n\tasync waitForPendingPackets(child: number) {\r\n\t\tlet stillSomeLeft;\r\n\t\tconst timetm = Date.now() + 10;\r\n\r\n\t\tdo {\r\n\t\t\tstillSomeLeft = 0;\r\n\t\t\tfor (const pt of this.packetTracker.values()) {\r\n\t\t\t\tif (pt.childIndex !== child)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tif (!(pt.state & PACKETTRACKER_INUSE))\r\n\t\t\t\t\treturn;\r\n\t\t\t\tif (!(pt.state & PACKETTRACKER_SIGNALLED))\r\n\t\t\t\t\treturn;\r\n\t\t\t\tstillSomeLeft++;\r\n\t\t\t}\r\n\t\t\tif (stillSomeLeft) {\r\n\t\t\t\tif (Date.now() > timetm) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tawait PhidgetSleep(10);\r\n\t\t\t}\r\n\t\t} while (stillSomeLeft);\r\n\t}\r\n}\r\n\r\nclass PacketTracker {\r\n\tstate: number;\r\n\treturnCode: ErrorCode;\r\n\tchildIndex: number;\r\n\tlen: number;\r\n\tsignal?: () => void;\r\n\r\n\tconstructor() {\r\n\t\tthis.state = 0;\r\n\t\tthis.returnCode = ErrorCode.SUCCESS;\r\n\t\tthis.childIndex = 0;\r\n\t\tthis.len = 0;\r\n\t}\r\n\r\n\tsetPacketLength(len: number) {\r\n\t\tthis.len = len;\r\n\t}\r\n\r\n\tsetPacketReturnCode(res: ErrorCode) {\r\n\t\tif ((this.state & PACKETTRACKER_INUSE) === 0 || this.state & PACKETTRACKER_SIGNALLED)\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID);\r\n\t\tthis.returnCode = res;\r\n\t\tthis.state |= PACKETTRACKER_SIGNALLED;\r\n\t\tif (this.signal)\r\n\t\t\tthis.signal();\r\n\t}\r\n\r\n\tget signalled() {\r\n\t\treturn (this.state & PACKETTRACKER_SIGNALLED ? true : false);\r\n\t}\r\n\r\n\tset sent(val: boolean) {\r\n\t\tif (val)\r\n\t\t\tthis.state |= PACKETTRACKER_SENT;\r\n\t\telse\r\n\t\t\tthis.state &= ~PACKETTRACKER_SENT;\r\n\t}\r\n\r\n\tasync waitForPendingPacket(timeout: number) {\r\n\r\n\t\tif (!(this.state & PACKETTRACKER_INUSE))\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"PacketTracker not INUSE\");\r\n\r\n\t\tif (this.state & PACKETTRACKER_SIGNALLED)\r\n\t\t\treturn this.returnCode;\r\n\r\n\t\tif (timeout === 0)\r\n\t\t\tthrow new PhidgetError(ErrorCode.TIMEOUT);\r\n\r\n\t\tlogverbose(\"waiting for PendingPacket: \" + timeout + \"ms...\");\r\n\r\n\t\tawait new Promise<void>((resolve, reject) => {\r\n\r\n\t\t\tconst timer = setTimeout(() => {\r\n\t\t\t\tlogwarn(\"PacketTracker \" + this.childIndex + \" waitForPendingPacket timeout (\" + timeout + \"ms).\");\r\n\t\t\t\tdelete this.signal;\r\n\t\t\t\treject(new PhidgetError(ErrorCode.TIMEOUT));\r\n\t\t\t}, timeout);\r\n\r\n\t\t\tthis.signal = () => {\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t\tdelete this.signal;\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tlogverbose(\"no longer waiting for PendingPacket\");\r\n\r\n\t\t// Return the result\r\n\t\treturn this.returnCode;\r\n\t}\r\n\r\n\treleasePacketTracker(force: boolean) {\r\n\t\tif (force) {\r\n\t\t\tthis.state = 0;\r\n\t\t} else {\r\n\t\t\t//Don't release a packet tracker if it's sent and not signalled\r\n\t\t\tif ((this.state & (PACKETTRACKER_INUSE | PACKETTRACKER_SIGNALLED | PACKETTRACKER_SENT)) !== (PACKETTRACKER_INUSE | PACKETTRACKER_SENT)) {\r\n\t\t\t\tthis.state = 0;\r\n\t\t\t} else {\r\n\t\t\t\tlogverbose(\"Refusing to release sent but non-signalled packet tracker, Port \" + this.childIndex);\r\n\t\t\t\t//Abandon - this can be released later\r\n\t\t\t\tthis.state |= PACKETTRACKER_ABANDONNED;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { PacketTracker, PacketTrackers };","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isArray = require('../internals/is-array');\n\nvar un$Reverse = uncurryThis([].reverse);\nvar test = [1, 2];\n\n// `Array.prototype.reverse` method\n// https://tc39.es/ecma262/#sec-array.prototype.reverse\n// fix for Safari 12.0 bug\n// https://bugs.webkit.org/show_bug.cgi?id=188794\n$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {\n  reverse: function reverse() {\n    // eslint-disable-next-line no-self-assign -- dirty hack\n    if (isArray(this)) this.length = this.length;\n    return un$Reverse(this);\n  }\n});\n","require('../../../modules/es.array.reverse');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').reverse;\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/reverse');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.reverse;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.reverse) ? method : own;\n};\n","var parent = require('../../es/instance/reverse');\n\nmodule.exports = parent;\n","module.exports = require(\"core-js-pure/stable/instance/reverse\");","import { Channel } from './Channel';\nimport { DeviceChannelUID } from './Devices.gen';\nimport * as Enum from './Enumerations.gen';\n/** @internal */\nexport function supportedEncoderIOMode(ch: Channel, val: number) {\n\n\tif (val < Enum.EncoderIOMode.PUSH_PULL || val > Enum.EncoderIOMode.OPEN_COLLECTOR_10K)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.EncoderIOMode.PUSH_PULL:\n\t\tcase Enum.EncoderIOMode.LINE_DRIVER_2K2:\n\t\tcase Enum.EncoderIOMode.LINE_DRIVER_10K:\n\t\tcase Enum.EncoderIOMode.OPEN_COLLECTOR_2K2:\n\t\tcase Enum.EncoderIOMode.OPEN_COLLECTOR_10K:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedErrorCode(_ch: Channel, val: number) {\n\n\tif (val < Enum.ErrorCode.SUCCESS || val > Enum.ErrorCode.HALLSENSOR)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedErrorEventCode(_ch: Channel, val: number) {\n\n\tif (val < Enum.ErrorEventCode.BAD_VERSION || val > Enum.ErrorEventCode.ESTOP)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedDeviceID(ch: Channel, val: number) {\n\n\tif (val < Enum.DeviceID.NONE || val > Enum.DeviceID.PN_STC1005)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DeviceID.UNKNOWN:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._USB_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._SPI_UNKNOWN:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.DIGITAL_INPUT_PORT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.DIGITAL_OUTPUT_PORT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.VOLTAGE_INPUT_PORT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.VOLTAGE_RATIO_INPUT_PORT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DICTIONARY:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DICTIONARY:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_313:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1002:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1002_VOLTAGEOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1008:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1008_ACCELEROMETER_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1010_1013_1018_1019:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_1000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1011:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALOUTPUT_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1012:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_602:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_602:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1014:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_704:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_USB:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1015:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1015_CAPACITIVETOUCH_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1016:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1016_CAPACITIVETOUCH_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1017:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_USB:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1023:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1023_RFID_000:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_104:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_201:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1024:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1024_RFID_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1030:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1030_DIGITALOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1031:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1031_DIGITALOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1032:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1032_DIGITALOUTPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1040:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1040_GPS_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1041:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1041_ACCELEROMETER_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1042:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1042_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1042_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._1042_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._1042_SPATIAL_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1043:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1043_ACCELEROMETER_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1044:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_400:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_400:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_500:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_500:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_510:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_510:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_510:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_510:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1045:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IC_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1046:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_102:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1047:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1048:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1049:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1049_ACCELEROMETER_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1051:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_300:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_400:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1052:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_000:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_101:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_101:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1053:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1053_ACCELEROMETER_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1054:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1054_FREQUENCYCOUNTER_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1055:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1055_IR_100:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_USB:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1056:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_000:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_000:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1057:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1058:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1058_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1058_PHADAPTER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1059:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1059_ACCELEROMETER_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1060:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1060_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1060_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1061:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1062:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1062_STEPPER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1063:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1063_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1063_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1063_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1064:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1064_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1064_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1065:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1065_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1065_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_SUPPLY_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1066:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1066_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1066_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1067:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1202_1203:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1204:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1215__1218:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1215_TEXTLCD_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_1219__1222:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1219_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALOUTPUT_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_ADP1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DAQ1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DAQ1200:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DAQ1300:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DAQ1301:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DAQ1400:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DAQ1500:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DCC1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DCC1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DCC1002:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DCC1003:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DCC1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DST1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DST1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DST1002:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_DST1200:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_ENC1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.FIRMWARE_UPGRADE_SPI:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._M3_SPI_FIRMWARE_UPGRADE_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.FIRMWARE_UPGRADE_STM32F0:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.FIRMWARE_UPGRADE_STM32F3:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.FIRMWARE_UPGRADE_STM32G0:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.FIRMWARE_UPGRADE_STM8S:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.FIRMWARE_UPGRADE_USB:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._M3_USB_FIRMWARE_UPGRADE_000:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HIN1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HIN1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HIN1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HIN1101:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUB0000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_300:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUB0001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_115:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUB0004:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUB5000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUM1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUM1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_HUM1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_INTERFACE_KIT488:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALOUTPUT_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_LCD1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_LED1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_LUX1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_MOT0100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_MOT0109:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MOT0109_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_MOT0110:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_MOT1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_MOT1101:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_MOT1102:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_OUT1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_OUT1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_OUT1002:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_OUT1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_PRE1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_RCC0004:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._RCC0004_RCSERVO_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_RCC1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_REL1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_REL1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_REL1101:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_SAF1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_SND1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_STC1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_STC1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_STC1002:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_STC1003:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_STC1005:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_TMP1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_TMP1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_TMP1101:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_TMP1200:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_VCP1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_VCP1001:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_VCP1002:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceID.PN_VCP1100:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedLogLevel(_ch: Channel, val: number) {\n\n\tif (val < Enum.LogLevel.CRITICAL || val > Enum.LogLevel.VERBOSE)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedDeviceClass(ch: Channel, val: number) {\n\n\tif (val < Enum.DeviceClass.NONE || val > Enum.DeviceClass.DATA_ADAPTER)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DeviceClass.ACCELEROMETER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1008_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1053_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1059_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.ADVANCED_SERVO:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_300:\n\t\t\t\tcase DeviceChannelUID._RCC0004_RCSERVO_400:\n\t\t\t\tcase DeviceChannelUID._1066_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1066_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.ANALOG:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1002_VOLTAGEOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.BRIDGE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_102:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.DATA_ADAPTER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.DICTIONARY:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DICTIONARY:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.ENCODER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_000:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_101:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_101:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_110:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.FIRMWARE_UPGRADE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._M3_USB_FIRMWARE_UPGRADE_000:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300:\n\t\t\t\tcase DeviceChannelUID._M3_SPI_FIRMWARE_UPGRADE_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.FREQUENCY_COUNTER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1054_FREQUENCYCOUNTER_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.GENERIC:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HIDUSB_GENERIC:\n\t\t\t\tcase DeviceChannelUID._PHIDUSB_GENERIC:\n\t\t\t\tcase DeviceChannelUID._USB_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._SPI_UNKNOWN:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.GPS:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1040_GPS_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.HUB:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_300:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_400:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_115:\n\t\t\t\tcase DeviceChannelUID._HUB0002_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0007_HUB_100:\n\t\t\t\tcase DeviceChannelUID._MESHHUB_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_200:\n\t\t\t\tcase DeviceChannelUID._LIGHTNINGHUB_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.INTERFACE_KIT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_602:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_602:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_821:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_704:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_USB:\n\t\t\t\tcase DeviceChannelUID._1015_CAPACITIVETOUCH_000:\n\t\t\t\tcase DeviceChannelUID._1016_CAPACITIVETOUCH_000:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_USB:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_300:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN1_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN2_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN3_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN4_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A1_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A2_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A3_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A4_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.IR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1055_IR_100:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_USB:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.LED:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1030_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1031_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1032_DIGITALOUTPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.MESH_DONGLE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MESHDONGLE_MESHDONGLE_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.MOTOR_CONTROL:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1060_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1060_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1064_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1064_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1065_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_SUPPLY_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.PH_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1058_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1058_PHADAPTER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.RFID:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1023_RFID_000:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_104:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_201:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_USB:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.SERVO:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.SPATIAL:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1041_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1042_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1042_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._1042_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._1042_SPATIAL_300:\n\t\t\t\tcase DeviceChannelUID._1043_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_400:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_400:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_500:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_500:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_510:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_510:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_510:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_510:\n\t\t\t\tcase DeviceChannelUID._1049_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_000:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_000:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._MOT0108_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_TEMPERATURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.STEPPER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1062_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1063_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1063_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1063_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.TEMPERATURE_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_300:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_400:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.TEXT_LCD:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_200:\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1215_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALOUTPUT_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DeviceClass.VINT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._CURLOOP_CURRENTOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1101_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_BLDCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._VINTACCEL_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\t\tcase DeviceChannelUID._TP_DIAGNOSER_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._STC1004_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1300_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\t\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\t\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._VINT_GENERIC:\n\t\t\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedChannelClass(ch: Channel, val: number) {\n\n\tif (val < Enum.ChannelClass.NONE || val > Enum.ChannelClass.MOTOR_VELOCITY_CONTROLLER)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.ChannelClass.ACCELEROMETER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1008_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1041_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1042_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1043_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_510:\n\t\t\t\tcase DeviceChannelUID._1049_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1053_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1059_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._VINTACCEL_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT0108_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.BLDC_MOTOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1101_BLDCMOTOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.CAPACITIVE_TOUCH:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1015_CAPACITIVETOUCH_000:\n\t\t\t\tcase DeviceChannelUID._1016_CAPACITIVETOUCH_000:\n\t\t\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.CURRENT_INPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1063_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1064_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1066_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_CURRENTINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.CURRENT_OUTPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._CURLOOP_CURRENTOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.DATA_ADAPTER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.DC_MOTOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1060_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1064_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1065_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.DICTIONARY:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DICTIONARY:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.DIGITAL_INPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_602:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_101:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_110:\n\t\t\t\tcase DeviceChannelUID._1060_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1063_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_VINT:\n\t\t\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.DIGITAL_OUTPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_602:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_821:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_704:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_USB:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_USB:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_201:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1030_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1031_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1032_DIGITALOUTPUT_200:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_300:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_VINT:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN1_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN2_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN3_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN4_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A1_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A2_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A3_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A4_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.DISTANCE_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.ENCODER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_000:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_101:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\t\t\tcase DeviceChannelUID._1065_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1101_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.FIRMWARE_UPGRADE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._M3_USB_FIRMWARE_UPGRADE_000:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300:\n\t\t\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\t\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\t\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._M3_SPI_FIRMWARE_UPGRADE_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.FREQUENCY_COUNTER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1054_FREQUENCYCOUNTER_000:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.GENERIC:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HIDUSB_GENERIC:\n\t\t\t\tcase DeviceChannelUID._PHIDUSB_GENERIC:\n\t\t\t\tcase DeviceChannelUID._VINT_GENERIC:\n\t\t\t\tcase DeviceChannelUID._USB_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._SPI_UNKNOWN:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.GPS:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1040_GPS_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.GYROSCOPE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1042_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_400:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_500:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_510:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_000:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._MOT0108_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.HUB:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_300:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_400:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_115:\n\t\t\t\tcase DeviceChannelUID._HUB0002_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0007_HUB_100:\n\t\t\t\tcase DeviceChannelUID._MESHHUB_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_200:\n\t\t\t\tcase DeviceChannelUID._LIGHTNINGHUB_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.HUMIDITY_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.IR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1055_IR_100:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_USB:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.LCD:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_200:\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1215_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.LIGHT_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.MAGNETOMETER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1042_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_510:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT0108_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.MESH_DONGLE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._MESHDONGLE_MESHDONGLE_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.MOTOR_POSITION_CONTROLLER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.MOTOR_VELOCITY_CONTROLLER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.PH_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1058_PHADAPTER_100:\n\t\t\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.POWER_GUARD:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.PRESSURE_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.RC_SERVO:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_400:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._RCC0004_RCSERVO_400:\n\t\t\t\tcase DeviceChannelUID._1066_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.RESISTANCE_INPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TP_DIAGNOSER_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.RFID:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1023_RFID_000:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_104:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_200:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_201:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_100:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.SOUND_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.SPATIAL:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1042_SPATIAL_300:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_400:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_500:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_510:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_000:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\t\tcase DeviceChannelUID._MOT0108_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.STEPPER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1062_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1063_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_300:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1004_STEPPER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.TEMPERATURE_SENSOR:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_400:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\t\t\tcase DeviceChannelUID._DCC1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_TEMPERATURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IC_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.VOLTAGE_INPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_400:\n\t\t\t\tcase DeviceChannelUID._1058_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_SUPPLY_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DCC1004_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._TMP1300_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.VOLTAGE_OUTPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelClass.VOLTAGE_RATIO_INPUT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_102:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedChannelSubclass(ch: Channel, val: number) {\n\n\tif (val < Enum.ChannelSubclass.NONE || val > Enum.ChannelSubclass.SPATIAL_AHRS)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.ChannelSubclass.NONE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._ifkit488_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1000_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD1_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_OLD2_200:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_313:\n\t\t\t\tcase DeviceChannelUID._1001_RCSERVO_400:\n\t\t\t\tcase DeviceChannelUID._1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1008_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_601:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALINPUT_602:\n\t\t\t\tcase DeviceChannelUID._1012_DIGITALOUTPUT_602:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_821:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_704:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_USB:\n\t\t\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\t\t\tcase DeviceChannelUID._1015_CAPACITIVETOUCH_000:\n\t\t\t\tcase DeviceChannelUID._1016_CAPACITIVETOUCH_000:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_USB:\n\t\t\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_000:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_104:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_200:\n\t\t\t\tcase DeviceChannelUID._1023_RFID_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_5V_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_LED_201:\n\t\t\t\tcase DeviceChannelUID._1023_DIGITALOUTPUT_ONBOARD_LED_201:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_100:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1040_GPS_000:\n\t\t\t\tcase DeviceChannelUID._1041_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1042_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1042_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._1042_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._1042_SPATIAL_300:\n\t\t\t\tcase DeviceChannelUID._1043_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_400:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_400:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_400:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_500:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_500:\n\t\t\t\tcase DeviceChannelUID._1044_ACCELEROMETER_510:\n\t\t\t\tcase DeviceChannelUID._1044_GYROSCOPE_510:\n\t\t\t\tcase DeviceChannelUID._1044_MAGNETOMETER_510:\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._1045_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1047_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1047_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1049_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_300:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_IC_400:\n\t\t\t\tcase DeviceChannelUID._1051_VOLTAGEINPUT_400:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_000:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_101:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_101:\n\t\t\t\tcase DeviceChannelUID._1052_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._1052_DIGITALINPUT_110:\n\t\t\t\tcase DeviceChannelUID._1053_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._1054_FREQUENCYCOUNTER_000:\n\t\t\t\tcase DeviceChannelUID._1055_IR_100:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_USB:\n\t\t\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_000:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_000:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_000:\n\t\t\t\tcase DeviceChannelUID._1056_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._1056_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._1056_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._1056_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_300:\n\t\t\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\t\t\tcase DeviceChannelUID._1058_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1058_PHADAPTER_100:\n\t\t\t\tcase DeviceChannelUID._1059_ACCELEROMETER_400:\n\t\t\t\tcase DeviceChannelUID._1060_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1060_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._1061_RCSERVO_300:\n\t\t\t\tcase DeviceChannelUID._1061_CURRENTINPUT_300:\n\t\t\t\tcase DeviceChannelUID._RCC0004_RCSERVO_400:\n\t\t\t\tcase DeviceChannelUID._1062_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1063_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._1063_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1063_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1064_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1064_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._1065_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1065_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_SUPPLY_100:\n\t\t\t\tcase DeviceChannelUID._1065_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1066_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._1066_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._1067_STEPPER_300:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALINPUT_300:\n\t\t\t\tcase DeviceChannelUID._1202_DIGITALOUTPUT_300:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1219_DIGITALOUTPUT_000:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_VINT:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._CURLOOP_CURRENTOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\t\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\t\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\t\tcase DeviceChannelUID._DCC1101_BLDCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\t\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._VINTACCEL_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\t\tcase DeviceChannelUID._MOT0108_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0108_TEMPERATURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_ACCELEROMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_GYROSCOPE_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_MAGNETOMETER_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._TP_DIAGNOSER_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\t\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\t\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._STC1004_STEPPER_100:\n\t\t\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IR_100:\n\t\t\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IC_100:\n\t\t\t\tcase DeviceChannelUID._TMP1300_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_300:\n\t\t\t\tcase DeviceChannelUID._HUB0000_HUB_400:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0001_HUB_115:\n\t\t\t\tcase DeviceChannelUID._HUB0002_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0007_HUB_100:\n\t\t\t\tcase DeviceChannelUID._MESHHUB_HUB_100:\n\t\t\t\tcase DeviceChannelUID._MESHDONGLE_MESHDONGLE_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB0004_HUB_200:\n\t\t\t\tcase DeviceChannelUID._LIGHTNINGHUB_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_100:\n\t\t\t\tcase DeviceChannelUID._HUB5000_HUB_200:\n\t\t\t\tcase DeviceChannelUID._M3_USB_FIRMWARE_UPGRADE_000:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200:\n\t\t\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300:\n\t\t\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\t\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\t\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\t\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\t\tcase DeviceChannelUID._M3_SPI_FIRMWARE_UPGRADE_000:\n\t\t\t\tcase DeviceChannelUID._HIDUSB_GENERIC:\n\t\t\t\tcase DeviceChannelUID._PHIDUSB_GENERIC:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN1_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN2_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN3_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_IN4_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A1_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A2_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A3_100:\n\t\t\t\tcase DeviceChannelUID._USBSWITCH_DIGITALOUTPUT_A4_100:\n\t\t\t\tcase DeviceChannelUID._VINT_GENERIC:\n\t\t\t\tcase DeviceChannelUID._DICTIONARY:\n\t\t\t\tcase DeviceChannelUID._USB_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\t\tcase DeviceChannelUID._SPI_UNKNOWN:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.DIGITAL_OUTPUT_DUTY_CYCLE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.DIGITAL_OUTPUT_FREQUENCY:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.DIGITAL_OUTPUT_LEDDRIVER:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1030_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1031_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1032_DIGITALOUTPUT_200:\n\t\t\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.ENCODER_MODE_SETTABLE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_ENCODER_100:\n\t\t\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.LCD_GRAPHIC:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.LCD_TEXT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_200:\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1215_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_TEXTLCD_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.SPATIAL_AHRS:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_500:\n\t\t\t\tcase DeviceChannelUID._1044_SPATIAL_510:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\t\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\t\tcase DeviceChannelUID._MOT0108_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0109_SPATIAL_100:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\n\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.TEMPERATURE_SENSOR_RTD:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.TEMPERATURE_SENSOR_THERMOCOUPLE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.VOLTAGE_INPUT_SENSOR_PORT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.VOLTAGE_RATIO_INPUT_BRIDGE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_102:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ChannelSubclass.VOLTAGE_RATIO_INPUT_SENSOR_PORT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedMeshMode(_ch: Channel, val: number) {\n\n\tif (val < Enum.MeshMode.ROUTER || val > Enum.MeshMode.SLEEPY_END_DEVICE)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedPowerSupply(ch: Channel, val: number) {\n\n\tif (val < Enum.PowerSupply.OFF || val > Enum.PowerSupply.VOLTS_24)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.PowerSupply.OFF:\n\t\tcase Enum.PowerSupply.VOLTS_12:\n\t\tcase Enum.PowerSupply.VOLTS_24:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedRTDWireSetup(ch: Channel, val: number) {\n\n\tif (val < Enum.RTDWireSetup.WIRES_2 || val > Enum.RTDWireSetup.WIRES_4)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.RTDWireSetup.WIRES_2:\n\t\tcase Enum.RTDWireSetup.WIRES_3:\n\t\tcase Enum.RTDWireSetup.WIRES_4:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedInputMode(ch: Channel, val: number) {\n\n\tif (val < Enum.InputMode.NPN || val > Enum.InputMode.PNP)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.InputMode.NPN:\n\t\tcase Enum.InputMode.PNP:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedFanMode(ch: Channel, val: number) {\n\n\tif (val < Enum.FanMode.OFF || val > Enum.FanMode.AUTO)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.FanMode.OFF:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1005_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.FanMode.ON:\n\t\tcase Enum.FanMode.AUTO:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedMotorDriveType(ch: Channel, val: number) {\n\n\tif (val < Enum.MotorDriveType.COAST || val > Enum.MotorDriveType.ACTIVE)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.MotorDriveType.COAST:\n\t\tcase Enum.MotorDriveType.ACTIVE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_BLDCMOTOR_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedMotorPositionType(ch: Channel, val: number) {\n\n\tif (val < Enum.MotorPositionType.ENCODER || val > Enum.MotorPositionType.HALL)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.MotorPositionType.ENCODER:\n\t\tcase Enum.MotorPositionType.HALL:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tcase DeviceChannelUID._DCC1101_MOTORVELOCITYCONTROLLER_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedSpatialPrecision(_ch: Channel, val: number) {\n\n\tif (val < Enum.SpatialPrecision.HYBRID || val > Enum.SpatialPrecision.LOW)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedUnit(_ch: Channel, val: number) {\n\n\tif (val < Enum.Unit.NONE || val > Enum.Unit.WATT)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedBridgeGain(ch: Channel, val: number) {\n\n\tif (val < Enum.BridgeGain.GAIN_1X || val > Enum.BridgeGain.GAIN_128X)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.BridgeGain.GAIN_1X:\n\t\tcase Enum.BridgeGain.GAIN_64X:\n\t\tcase Enum.BridgeGain.GAIN_128X:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_102:\n\t\t\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.BridgeGain.GAIN_2X:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.BridgeGain.GAIN_4X:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.BridgeGain.GAIN_8X:\n\t\tcase Enum.BridgeGain.GAIN_16X:\n\t\tcase Enum.BridgeGain.GAIN_32X:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_102:\n\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedVoltageRatioSensorType(ch: Channel, val: number) {\n\n\tif (val < Enum.VoltageRatioSensorType.VOLTAGE_RATIO || val > Enum.VoltageRatioSensorType.PN_3522)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.VoltageRatioSensorType.PN_1101_SHARP2D120X:\n\t\tcase Enum.VoltageRatioSensorType.PN_1101_SHARP2Y0A21:\n\t\tcase Enum.VoltageRatioSensorType.PN_1101_SHARP2Y0A02:\n\t\tcase Enum.VoltageRatioSensorType.PN_1102:\n\t\tcase Enum.VoltageRatioSensorType.PN_1103:\n\t\tcase Enum.VoltageRatioSensorType.PN_1104:\n\t\tcase Enum.VoltageRatioSensorType.PN_1105:\n\t\tcase Enum.VoltageRatioSensorType.PN_1106:\n\t\tcase Enum.VoltageRatioSensorType.PN_1107:\n\t\tcase Enum.VoltageRatioSensorType.PN_1108:\n\t\tcase Enum.VoltageRatioSensorType.PN_1109:\n\t\tcase Enum.VoltageRatioSensorType.PN_1110:\n\t\tcase Enum.VoltageRatioSensorType.PN_1111:\n\t\tcase Enum.VoltageRatioSensorType.PN_1112:\n\t\tcase Enum.VoltageRatioSensorType.PN_1113:\n\t\tcase Enum.VoltageRatioSensorType.PN_1115:\n\t\tcase Enum.VoltageRatioSensorType.PN_1116:\n\t\tcase Enum.VoltageRatioSensorType.PN_1118_AC:\n\t\tcase Enum.VoltageRatioSensorType.PN_1118_DC:\n\t\tcase Enum.VoltageRatioSensorType.PN_1119_AC:\n\t\tcase Enum.VoltageRatioSensorType.PN_1119_DC:\n\t\tcase Enum.VoltageRatioSensorType.PN_1120:\n\t\tcase Enum.VoltageRatioSensorType.PN_1121:\n\t\tcase Enum.VoltageRatioSensorType.PN_1122_AC:\n\t\tcase Enum.VoltageRatioSensorType.PN_1122_DC:\n\t\tcase Enum.VoltageRatioSensorType.PN_1124:\n\t\tcase Enum.VoltageRatioSensorType.PN_1125_HUMIDITY:\n\t\tcase Enum.VoltageRatioSensorType.PN_1125_TEMPERATURE:\n\t\tcase Enum.VoltageRatioSensorType.PN_1126:\n\t\tcase Enum.VoltageRatioSensorType.PN_1128:\n\t\tcase Enum.VoltageRatioSensorType.PN_1129:\n\t\tcase Enum.VoltageRatioSensorType.PN_1131:\n\t\tcase Enum.VoltageRatioSensorType.PN_1134:\n\t\tcase Enum.VoltageRatioSensorType.PN_1136:\n\t\tcase Enum.VoltageRatioSensorType.PN_1137:\n\t\tcase Enum.VoltageRatioSensorType.PN_1138:\n\t\tcase Enum.VoltageRatioSensorType.PN_1139:\n\t\tcase Enum.VoltageRatioSensorType.PN_1140:\n\t\tcase Enum.VoltageRatioSensorType.PN_1141:\n\t\tcase Enum.VoltageRatioSensorType.PN_1146:\n\t\tcase Enum.VoltageRatioSensorType.PN_3120:\n\t\tcase Enum.VoltageRatioSensorType.PN_3121:\n\t\tcase Enum.VoltageRatioSensorType.PN_3122:\n\t\tcase Enum.VoltageRatioSensorType.PN_3123:\n\t\tcase Enum.VoltageRatioSensorType.PN_3130:\n\t\tcase Enum.VoltageRatioSensorType.PN_3520:\n\t\tcase Enum.VoltageRatioSensorType.PN_3521:\n\t\tcase Enum.VoltageRatioSensorType.PN_3522:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ifkit488_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGERATIOINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedLEDForwardVoltage(ch: Channel, val: number) {\n\n\tif (val < Enum.LEDForwardVoltage.VOLTS_1_7 || val > Enum.LEDForwardVoltage.VOLTS_5_6)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.LEDForwardVoltage.VOLTS_1_7:\n\t\tcase Enum.LEDForwardVoltage.VOLTS_2_75:\n\t\tcase Enum.LEDForwardVoltage.VOLTS_3_9:\n\t\tcase Enum.LEDForwardVoltage.VOLTS_5_0:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1031_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1032_DIGITALOUTPUT_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.LEDForwardVoltage.VOLTS_3_2:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._1030_DIGITALOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.LEDForwardVoltage.VOLTS_4_0:\n\t\tcase Enum.LEDForwardVoltage.VOLTS_4_8:\n\t\tcase Enum.LEDForwardVoltage.VOLTS_5_6:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedRCServoVoltage(ch: Channel, val: number) {\n\n\tif (val < Enum.RCServoVoltage.VOLTS_5_0 || val > Enum.RCServoVoltage.VOLTS_7_4)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.RCServoVoltage.VOLTS_6_0:\n\t\tcase Enum.RCServoVoltage.VOLTS_7_4:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\t\tcase DeviceChannelUID._RCC0004_RCSERVO_400:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedVoltageOutputRange(ch: Channel, val: number) {\n\n\tif (val < Enum.VoltageOutputRange.VOLTS_10 || val > Enum.VoltageOutputRange.VOLTS_5)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.VoltageOutputRange.VOLTS_10:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageOutputRange.VOLTS_5:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedVoltageRange(ch: Channel, val: number) {\n\n\tif (val < Enum.VoltageRange.MILLIVOLTS_10 || val > Enum.VoltageRange.AUTO)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.VoltageRange.MILLIVOLTS_10:\n\t\tcase Enum.VoltageRange.MILLIVOLTS_40:\n\t\tcase Enum.VoltageRange.MILLIVOLTS_200:\n\t\tcase Enum.VoltageRange.MILLIVOLTS_1000:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageRange.MILLIVOLTS_312_5:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageRange.MILLIVOLTS_400:\n\t\tcase Enum.VoltageRange.VOLTS_2:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageRange.VOLTS_5:\n\t\tcase Enum.VoltageRange.VOLTS_15:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageRange.VOLTS_40:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageRange.AUTO:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedVoltageSensorType(ch: Channel, val: number) {\n\n\tif (val < Enum.VoltageSensorType.VOLTAGE || val > Enum.VoltageSensorType.PN_VCP4114)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.VoltageSensorType.PN_1114:\n\t\tcase Enum.VoltageSensorType.PN_1117:\n\t\tcase Enum.VoltageSensorType.PN_1123:\n\t\tcase Enum.VoltageSensorType.PN_1127:\n\t\tcase Enum.VoltageSensorType.PN_1130_PH:\n\t\tcase Enum.VoltageSensorType.PN_1130_ORP:\n\t\tcase Enum.VoltageSensorType.PN_1132:\n\t\tcase Enum.VoltageSensorType.PN_1133:\n\t\tcase Enum.VoltageSensorType.PN_1135:\n\t\tcase Enum.VoltageSensorType.PN_1142:\n\t\tcase Enum.VoltageSensorType.PN_1143:\n\t\tcase Enum.VoltageSensorType.PN_3500:\n\t\tcase Enum.VoltageSensorType.PN_3501:\n\t\tcase Enum.VoltageSensorType.PN_3502:\n\t\tcase Enum.VoltageSensorType.PN_3503:\n\t\tcase Enum.VoltageSensorType.PN_3585:\n\t\tcase Enum.VoltageSensorType.PN_3586:\n\t\tcase Enum.VoltageSensorType.PN_3587:\n\t\tcase Enum.VoltageSensorType.PN_3588:\n\t\tcase Enum.VoltageSensorType.PN_3589:\n\t\tcase Enum.VoltageSensorType.PN_MOT2002_LOW:\n\t\tcase Enum.VoltageSensorType.PN_MOT2002_MED:\n\t\tcase Enum.VoltageSensorType.PN_MOT2002_HIGH:\n\t\tcase Enum.VoltageSensorType.PN_VCP4114:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.VoltageSensorType.PN_3507:\n\t\tcase Enum.VoltageSensorType.PN_3508:\n\t\tcase Enum.VoltageSensorType.PN_3509:\n\t\tcase Enum.VoltageSensorType.PN_3510:\n\t\tcase Enum.VoltageSensorType.PN_3511:\n\t\tcase Enum.VoltageSensorType.PN_3512:\n\t\tcase Enum.VoltageSensorType.PN_3513:\n\t\tcase Enum.VoltageSensorType.PN_3514:\n\t\tcase Enum.VoltageSensorType.PN_3515:\n\t\tcase Enum.VoltageSensorType.PN_3516:\n\t\tcase Enum.VoltageSensorType.PN_3517:\n\t\tcase Enum.VoltageSensorType.PN_3518:\n\t\tcase Enum.VoltageSensorType.PN_3519:\n\t\tcase Enum.VoltageSensorType.PN_3584:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1011_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1013_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_821:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_900:\n\t\t\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\t\tcase DeviceChannelUID._1065_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_000:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_120:\n\t\t\t\tcase DeviceChannelUID._1202_VOLTAGEINPUT_300:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedRFIDProtocol(ch: Channel, val: number) {\n\n\tif (val < Enum.RFIDProtocol.EM4100 || val > Enum.RFIDProtocol.PHIDGET_TAG)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.RFIDProtocol.ISO11785_FDX_B:\n\t\tcase Enum.RFIDProtocol.PHIDGET_TAG:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1024_RFID_100:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_USB:\n\t\t\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedSpatialAlgorithm(_ch: Channel, val: number) {\n\n\tif (val < Enum.SpatialAlgorithm.NONE || val > Enum.SpatialAlgorithm.IMU)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedRTDType(ch: Channel, val: number) {\n\n\tif (val < Enum.RTDType.PT100_3850 || val > Enum.RTDType.PT1000_3920)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.RTDType.PT100_3850:\n\t\tcase Enum.RTDType.PT1000_3850:\n\t\tcase Enum.RTDType.PT100_3920:\n\t\tcase Enum.RTDType.PT1000_3920:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedThermocoupleType(ch: Channel, val: number) {\n\n\tif (val < Enum.ThermocoupleType.J || val > Enum.ThermocoupleType.T)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.ThermocoupleType.J:\n\t\tcase Enum.ThermocoupleType.E:\n\t\tcase Enum.ThermocoupleType.T:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.ThermocoupleType.K:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_000:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_300:\n\t\t\t\tcase DeviceChannelUID._1051_TEMPERATURESENSOR_THERMOCOUPLE_400:\n\t\t\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedFrequencyFilterType(ch: Channel, val: number) {\n\n\tif (val < Enum.FrequencyFilterType.ZERO_CROSSING || val > Enum.FrequencyFilterType.LOGIC_LEVEL)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.FrequencyFilterType.ZERO_CROSSING:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1054_FREQUENCYCOUNTER_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.FrequencyFilterType.LOGIC_LEVEL:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1054_FREQUENCYCOUNTER_000:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\t\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedIRCodeEncoding(_ch: Channel, val: number) {\n\n\tif (val < Enum.IRCodeEncoding.UNKNOWN || val > Enum.IRCodeEncoding.RC6)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedIRCodeLength(_ch: Channel, val: number) {\n\n\tif (val < Enum.IRCodeLength.UNKNOWN || val > Enum.IRCodeLength.VARIABLE)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedStepperControlMode(_ch: Channel, val: number) {\n\n\tif (val < Enum.StepperControlMode.STEP || val > Enum.StepperControlMode.RUN)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedLCDFont(ch: Channel, val: number) {\n\n\tif (val < Enum.LCDFont.USER1 || val > Enum.LCDFont.DIMENSIONS_6X12)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.LCDFont.USER1:\n\t\tcase Enum.LCDFont.USER2:\n\t\tcase Enum.LCDFont.DIMENSIONS_6X10:\n\t\tcase Enum.LCDFont.DIMENSIONS_6X12:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.LCDFont.DIMENSIONS_5X8:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_200:\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1215_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedLCDScreenSize(ch: Channel, val: number) {\n\n\tif (val < Enum.LCDScreenSize.NO_SCREEN || val > Enum.LCDScreenSize.DIMENSIONS_64X128)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.LCDScreenSize.NO_SCREEN:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_1X8:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_2X8:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_1X16:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_2X16:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_4X16:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_4X20:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_2X24:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_1X40:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_2X40:\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_4X40:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_2X20:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1202_TEXTLCD_200:\n\t\t\t\tcase DeviceChannelUID._1204_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1215_TEXTLCD_000:\n\t\t\t\tcase DeviceChannelUID._1219_TEXTLCD_000:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.LCDScreenSize.DIMENSIONS_64X128:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedLCDPixelState(ch: Channel, val: number) {\n\n\tif (val < Enum.LCDPixelState.OFF || val > Enum.LCDPixelState.INVERT)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.LCDPixelState.OFF:\n\t\tcase Enum.LCDPixelState.ON:\n\t\tcase Enum.LCDPixelState.INVERT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterParity(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterParity.NONE || val > Enum.DataAdapterParity.ODD)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterParity.NONE:\n\t\tcase Enum.DataAdapterParity.EVEN:\n\t\tcase Enum.DataAdapterParity.ODD:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterStopBits(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterStopBits.ONE || val > Enum.DataAdapterStopBits.TWO)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterStopBits.ONE:\n\t\tcase Enum.DataAdapterStopBits.TWO:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterHandshakeMode(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterHandshakeMode.NONE || val > Enum.DataAdapterHandshakeMode.READY_TO_RECEIVE)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterHandshakeMode.NONE:\n\t\tcase Enum.DataAdapterHandshakeMode.REQUEST_TO_SEND:\n\t\tcase Enum.DataAdapterHandshakeMode.READY_TO_RECEIVE:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterProtocol(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterProtocol.RS485 || val > Enum.DataAdapterProtocol.RS232)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterProtocol.RS485:\n\t\tcase Enum.DataAdapterProtocol.RS422:\n\t\tcase Enum.DataAdapterProtocol.DMX512:\n\t\tcase Enum.DataAdapterProtocol.MODBUS_RTU:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DataAdapterProtocol.SPI:\n\t\tcase Enum.DataAdapterProtocol.I2C:\n\t\tcase Enum.DataAdapterProtocol.UART:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tcase Enum.DataAdapterProtocol.RS232:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterSPIMode(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterSPIMode.MODE_0 || val > Enum.DataAdapterSPIMode.MODE_3)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterSPIMode.MODE_0:\n\t\tcase Enum.DataAdapterSPIMode.MODE_1:\n\t\tcase Enum.DataAdapterSPIMode.MODE_2:\n\t\tcase Enum.DataAdapterSPIMode.MODE_3:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterEndianness(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterEndianness.MSB_FIRST || val > Enum.DataAdapterEndianness.LSB_FIRST)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterEndianness.MSB_FIRST:\n\t\tcase Enum.DataAdapterEndianness.LSB_FIRST:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedDataAdapterIOVoltage(ch: Channel, val: number) {\n\n\tif (val < Enum.DataAdapterIOVoltage.EXTERNAL || val > Enum.DataAdapterIOVoltage.VOLTS_5)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.DataAdapterIOVoltage.EXTERNAL:\n\t\tcase Enum.DataAdapterIOVoltage.VOLTS_1_8:\n\t\tcase Enum.DataAdapterIOVoltage.VOLTS_2_5:\n\t\tcase Enum.DataAdapterIOVoltage.VOLTS_3_3:\n\t\tcase Enum.DataAdapterIOVoltage.VOLTS_5:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedPacketErrorCode(ch: Channel, val: number) {\n\n\tif (val < Enum.PacketErrorCode.OK || val > Enum.PacketErrorCode.CORRUPT)\n\t\treturn false;\n\n\tswitch(val) {\n\t\tcase Enum.PacketErrorCode.OK:\n\t\tcase Enum.PacketErrorCode.UNKNOWN:\n\t\tcase Enum.PacketErrorCode.TIMEOUT:\n\t\tcase Enum.PacketErrorCode.FORMAT:\n\t\tcase Enum.PacketErrorCode.INVALID:\n\t\tcase Enum.PacketErrorCode.OVERRUN:\n\t\tcase Enum.PacketErrorCode.CORRUPT:\n\t\t\tswitch(ch.chDef.uid) {\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_USB:\n\t\t\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\n/** @internal */\nexport function supportedSPLRange(_ch: Channel, val: number) {\n\n\tif (val < Enum.SPLRange.DB_102 || val > Enum.SPLRange.DB_82)\n\t\treturn false;\n\n\treturn true;\n}\n\n/** @internal */\nexport function supportedHubPortMode(_ch: Channel, val: number) {\n\n\tif (val < Enum.HubPortMode.VINT || val > Enum.HubPortMode.VOLTAGE_RATIO_INPUT)\n\t\treturn false;\n\n\treturn true;\n}\n\n","﻿import { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\nimport { ErrorCode, ErrorEventCode } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { SetBigInt64, GetBigInt64, RoundDouble } from '../Utils';\nimport * as VintPacketType from './VintPacketType';\nimport { LocalChannel } from './LocalChannel';\nimport { MAX_OUT_PACKET_SIZE } from './LocalDevice';\nimport * as UserPhidgetClass from '../Classes.gen';\n\nexport const VINT_MAX_OUT_PACKETSIZE = 48;\n//const VINT_MAX_IN_PACKETSIZE = 48;\n\n/* Return codes for data sent PC -> hub -> device */\nexport const enum VINTStatusCode {\n\t/* Define status codes in the range 0xE0 - 0xFE */\n\tACK = 0xE0,\t\t            /* Success */\n\tNAK = 0xE1,\t\t            /* Not ready. Library should try to re-send. */\n\tINVALIDARG = 0xE2,\t\t    /* A provided argument contained an invalid value */\n\tINVALIDPACKETTYPE = 0xE3,\t/* The specified packet type is not used on this device */\n\tINVALIDSEQUENCE = 0xE4,\t\t/* The received packet was not sent in the required sequence */\n\tINVALIDCOMMAND = 0xE5,\t\t/* The requested action cannot be performed due to configuration/state of device */\n\tMALFORMED = 0xE6,\t\t    /* The packet length/contents did not match those specified in the documentation */\n\tNOSPACE = 0xE7,\t\t        /* There was not enough space in the hub queue for this packet */\n\tUNEXPECTED = 0xE8,\t    \t/* Generic unexpected status. Should not happen if firmware is properly written */\n\tNOTATTACHED = 0xE9,\t    \t/* VINT Device no longer attached. */\n\tTOOBIG = 0xEA,\t\t        /* Packet too long */\n\tFAILSAFE = 0xEB\t\t        /* The device's failsafe condition has tripped, and all packets but RESET will get this response. */\n}\n\nexport const VINTPacketDescription = {\n\t0xE0: \"Success\",\n\t0xE1: \"Not Ready\",\n\t0xE2: \"Invalid Argument\",\n\t0xE3: \"Invalid Packet Type\",\n\t0xE4: \"Invalid Sequence\",\n\t0xE5: \"Invalid Command\",\n\t0xE6: \"Malformed\",\n\t0xE7: \"No Space\",\n\t0xE8: \"Unexpected\",\n\t0xE9: \"Not Attached\",\n\t0xEA: \"Packet Too Big\",\n\t0xEB: \"Failsafe Tripped\"\n};\n\nexport const VINTPacketCode_to_PhidgetReturnCode = {\n\t0xE0: ErrorCode.SUCCESS,\n\t0xE1: ErrorCode.BUSY,\n\t0xE2: ErrorCode.INVALID_ARGUMENT,\n\t0xE3: ErrorCode.INVALID_PACKET,\n\t0xE4: ErrorCode.NOT_CONFIGURED,\n\t0xE5: ErrorCode.INVALID,\n\t0xE6: ErrorCode.INVALID,\n\t0xE7: ErrorCode.NO_SPACE,\n\t0xE8: ErrorCode.UNEXPECTED,\n\t0xE9: ErrorCode.NOT_ATTACHED,\n\t0xEA: ErrorCode.FILE_TOO_BIG,\n\t0xEB: ErrorCode.FAILSAFE\n};\n\nexport async function send1014_3_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tlet dutyCycle;\n\tconst buf = new DataView(new ArrayBuffer(2));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tdutyCycle = bp.getNumber(0);\n\t\t\t\t\tif (dutyCycle !== 0 && dutyCycle !== 1) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tbuf.setUint8(0, dutyCycle ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recv1014_3_VINT(ch: LocalChannel, buf: DataView) {\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function send1017_2_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tlet dutyCycle;\n\tconst buf = new DataView(new ArrayBuffer(2));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tdutyCycle = bp.getNumber(0);\n\t\t\t\t\tif (dutyCycle !== 0 && dutyCycle !== 1) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tbuf.setUint8(0, dutyCycle ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recv1017_2_VINT(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function send1024_V2_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(64));\n\tlet tagString;\n\tlet protocol;\n\tlet dutyCycle;\n\tlet len;\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.RFID);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETANTENNAON:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RFIDPacket.ANTENNA_ON, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.WRITE:\n\t\t\t\t\tprotocol = bp.getNumber(1);\n\t\t\t\t\tif (protocol < Enum.RFIDProtocol.EM4100 || protocol > Enum.RFIDProtocol.PHIDGET_TAG) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid protocol type\");\n\t\t\t\t\t}\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(1));\n\t\t\t\t\tbuf.setUint8(1, bp.getNumber(2));\n\n\t\t\t\t\ttagString = bp.getString(0);\n\t\t\t\t\tif (protocol === Enum.RFIDProtocol.EM4100 && tagString.charAt(1) === 'x') {\n\t\t\t\t\t\ttagString = tagString.slice(2);\n\t\t\t\t\t}\n\t\t\t\t\tif (tagString.length > (MAX_OUT_PACKET_SIZE - 3)) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < tagString.length; i++) {\n\t\t\t\t\t\tbuf.setUint8(2 + i, tagString.charCodeAt(i));\n\t\t\t\t\t}\n\t\t\t\t\tbuf.setUint8(2 + tagString.length, 0x00);   //append \\0 after string\n\n\t\t\t\t\tif (protocol === Enum.RFIDProtocol.EM4100) {\n\t\t\t\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\t\t\t\tconst toLower = String.fromCharCode(buf.getUint8(2 + i)).toLowerCase();\n\t\t\t\t\t\t\tbuf.setUint8(2 + i, toLower.charCodeAt(0));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlen = tagString.length + 2;\n\t\t\t\t\tuserphid._setLatestTagString(\"\");   //clear latest tag                    \n\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RFIDPacket.TAG_WRITE, new Uint8Array(buf.buffer, 0, len));\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait userphid._waitForTag(tagString, 600);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.TIMEOUT, \"Timed out waiting for tag to appear after writing. Try again.\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_VINT:\n\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_VINT:\n\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_ONBOARD_LED_200_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tdutyCycle = bp.getNumber(0);\n\t\t\t\t\tif (dutyCycle !== 0 && dutyCycle !== 1) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Duty cycle myust be 0 or 1.\");\n\t\t\t\t\t}\n\t\t\t\t\tbuf.setUint8(0, dutyCycle);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.OPENRESET:\n\t\t\t\tcase BP.CLOSERESET:\n\t\t\t\t\tbuf.setUint8(0, 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.ENABLE:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recv1024_V2_VINT(ch: LocalChannel, buf: DataView) {\n\tlet tagString;\n\tconst pkt = buf.getUint8(0);\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.RFID);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1024_RFID_200_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.RFIDPacket.TAG: {\n\t\t\t\t\ttagString = \"\";\n\n\t\t\t\t\tfor (let i = 2, byteChar = buf.getUint8(i); i < buf.byteLength && String.fromCharCode(byteChar) !== '\\0'; i++, byteChar = buf.getUint8(i)) {\n\t\t\t\t\t\ttagString += String.fromCharCode(byteChar);\n\t\t\t\t\t}\n\n\t\t\t\t\tuserphid._setLatestTagString(tagString);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 's', value: tagString });\n\t\t\t\t\tbp.set({ name: '1', type: 'd', value: buf.getUint8(1) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TAG);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.RFIDPacket.TAG_LOST: {\n\t\t\t\t\ttagString = \"\";\n\n\t\t\t\t\tfor (let i = 2, byteChar = buf.getUint8(i); i < buf.byteLength && String.fromCharCode(byteChar) !== '\\0'; i++, byteChar = buf.getUint8(i)) {\n\t\t\t\t\t\ttagString += String.fromCharCode(byteChar);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 's', value: tagString });\n\t\t\t\t\tbp.set({ name: '1', type: 'd', value: buf.getUint8(1) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TAGLOST);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_5V_200_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\tcase DeviceChannelUID._1024_DIGITALOUTPUT_LED_200_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function send1055_1_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recv1055_1_VINT(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDIGITALINPUT_PORT() {\n\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected command received.\");\n}\n\nexport function recvDIGITALINPUT_PORT(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100: {\n\t\t\tconst bp = new BridgePacket();\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE:\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: 1 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE2:\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDIGITALOUTPUT_PORT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new Uint16Array(1);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.set(bp.getBoolean(0) ? [1 << 15] : [0], 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, buf.byteLength));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.set([bp.getNumber(0) * (1 << 15)], 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, buf.byteLength));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.set(bp.getBoolean(0) ? [1 << 7] : [0], 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, buf.byteLength));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE: {\n\t\t\t\t\tbuf.set([bp.getNumber(0) * (1 << 15)], 0);\n\t\t\t\t\tconst buf8 = new Uint8Array(buf.buffer, 0, buf.byteLength);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, buf8.reverse());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.set([bp.getNumber(0)], 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, buf.byteLength));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDIGITALOUTPUT_PORT(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet received.\");\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110: {\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDIGITALOUTPUT_PORT_FAILSAFE(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDIGITALOUTPUT_PORT(ch, bp);\n}\n\nexport function recvDIGITALOUTPUT_PORT_FAILSAFE(ch: LocalChannel, buf: DataView) {\n\trecvDIGITALOUTPUT_PORT(ch, buf);\n}\n\nexport async function sendVOLTAGEINPUT_PORT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, (bp.getNumber(0) / 5) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageSensorType(ch, bp.getNumber(0)))\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVOLTAGEINPUT_PORT(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\tlet voltage;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110: {\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = (buf.getUint16(1) * 5.0) / (1 << 15);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 5) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVOLTAGEINPUT_PORT_5V25(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendVOLTAGEINPUT_PORT(ch, bp);\n}\n\nexport function recvVOLTAGEINPUT_PORT_5V25(ch: LocalChannel, buf: DataView) {\n\trecvVOLTAGEINPUT_PORT(ch, buf);\n}\n\nexport async function sendVOLTAGEINPUT_PORT_V2(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageSensorType(ch, bp.getNumber(0)))\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVOLTAGEINPUT_PORT_V2(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\tlet voltage;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_200: {\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tif (buf.byteLength == 6) {\n\t\t\t\t\t\tswitch (buf.getUint8(5)) {\n\t\t\t\t\t\t\tcase 1: { // VINT_PACKET_ERRORBYTE_OUTOFRANGEHIGH\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage is too high to be accurately measured\" });\n\t\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected error event code\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 6) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION:\n\t\t\t\t\tswitch (buf.getUint8(1)) {\n\t\t\t\t\t\tcase 1: { // VINT_PACKET_ERRORBYTE_OUTOFRANGEHIGH\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage is too high to be accurately measured\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected error event code\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVOLTAGERATIOINPUT_PORT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * 32768);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageRatioSensorType(ch, bp.getNumber(0)))\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVOLTAGERATIOINPUT_PORT(ch: LocalChannel, buf: DataView) {\n\tlet voltageRatio;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100: {\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\tvoltageRatio = buf.getUint16(1) / (1 << 15);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltageRatio, 5) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVOLTAGERATIOINPUT_PORT_V2(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageRatioSensorType(ch, bp.getNumber(0)))\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVOLTAGERATIOINPUT_PORT_V2(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\tlet voltageRatio;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_200: {\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\tif (buf.byteLength == 6) {\n\t\t\t\t\t\tswitch (buf.getUint8(5)) {\n\t\t\t\t\t\t\tcase 1: { // VINT_PACKET_ERRORBYTE_OUTOFRANGEHIGH\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Ratio is too high to be accurately measured\" });\n\t\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected error event code\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvoltageRatio = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltageRatio, 6) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.SATURATION:\n\t\t\t\t\tswitch (buf.getUint8(1)) {\n\t\t\t\t\t\tcase 1: { // VINT_PACKET_ERRORBYTE_OUTOFRANGEHIGH\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Ratio is too high to be accurately measured\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected error event code\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendADP1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PHPacket.SETPHCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCORRECTIONTEMPERATURE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 3));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PHPacket.SETCORRECTIONTEMPERATURE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE: {\n\t\t\t\t\tconst range = bp.getNumber(0);\n\t\t\t\t\tswitch (range) {\n\t\t\t\t\t\tcase Enum.VoltageRange.MILLIVOLTS_400:\n\t\t\t\t\t\tcase Enum.VoltageRange.VOLTS_2:\n\t\t\t\t\t\t\tbuf.setUint8(0, range);\n\t\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.PHRANGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid or unsupported voltage range for this device.\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETSENSORTYPE: {\n\t\t\t\t\tconst sensorType = bp.getNumber(0);\n\t\t\t\t\tif (!SEnum.supportedVoltageSensorType(ch, sensorType)) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid or unsupported voltage sensor type\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvADP1000(ch: LocalChannel, buf: DataView) {\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.PHPacket.PHCHANGE: {\n\t\t\t\t\tvoltage = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 5) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.PHCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PHPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 5) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendADP1001_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvADP1001_VINT(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP1001_DATAADAPTER_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DSR_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_DCD_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALINPUT_RI_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1001_DIGITALOUTPUT_DTR_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendADP_RS485_422_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvADP_RS485_422_VINT(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP_RS485_422_DATAADAPTER_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendADP_SERIAL_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvADP_SERIAL_VINT(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP_SERIAL_DATAADAPTER_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALINPUT_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP_SERIAL_DIGITALOUTPUT_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDAQ1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageRatioSensorType(ch, bp.getNumber(0))) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageSensorType(ch, bp.getNumber(0))) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDAQ1000(ch: LocalChannel, buf: DataView) {\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 4) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 4) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDAQ1000_5V25(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDAQ1000(ch, bp);\n}\n\nexport function recvDAQ1000_5V25(ch: LocalChannel, buf: DataView) {\n\trecvDAQ1000(ch, buf);\n}\n\nexport async function sendOUT1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETVOLTAGE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETVOLTAGE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvOUT1000(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.VOLTAGEERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.VOLTAGE_ERROR });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Error Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.VOLTAGEERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.VOLTAGE_ERROR });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Error Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendOUT1000_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendOUT1000(ch, bp);\n}\n\nexport function recvOUT1000_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvOUT1000(ch, buf);\n}\n\nexport async function sendOUT1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETVOLTAGE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETVOLTAGE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvOUT1001(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.VOLTAGEERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.VOLTAGE_ERROR });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Error Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.VOLTAGEERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.VOLTAGE_ERROR });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Error Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendOUT1001_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendOUT1001(ch, bp);\n}\n\nexport function recvOUT1001_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvOUT1001(ch, buf);\n}\n\nexport async function sendOUT1002(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETVOLTAGE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETVOLTAGE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageOutputPacket.SETMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvOUT1002(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.VOLTAGEERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.VOLTAGE_ERROR });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Error Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.VOLTAGEERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.VOLTAGE_ERROR });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Voltage Error Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendOUT1002_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendOUT1002(ch, bp);\n}\n\nexport function recvOUT1002_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvOUT1002(ch, buf);\n}\n\n// eslint-disable-next-line require-await\nexport async function sendCURLOOP(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._CURLOOP_CURRENTOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvCURLOOP(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._CURLOOP_CURRENTOUTPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDAQ1200() {\n\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected command received\");\n}\n\nexport function recvDAQ1200(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE: {\n\t\t\t\t\tconst state = buf.getUint8(1) & 0x1;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: state });\n\t\t\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendOUT1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFREQUENCY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETFREQUENCY, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvOUT1100(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet received.\");\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendOUT1100_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendOUT1100(ch, bp);\n}\n\nexport function recvOUT1100_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvOUT1100(ch, buf);\n}\n\nexport async function sendOUT1100_Failsafe_Frequency(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendOUT1100(ch, bp);\n}\n\nexport function recvOUT1100_Failsafe_Frequency(ch: LocalChannel, buf: DataView) {\n\trecvOUT1100(ch, buf);\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDAQ1300() {\n\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected command received.\");\n}\n\nexport function recvDAQ1300(ch: LocalChannel, buf: DataView) {\n\tlet state;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE: {\n\t\t\t\t\tstate = buf.getUint8(1) & 0x1;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: state });\n\t\t\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDAQ1301() {\n\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected command received.\");\n}\n\nexport function recvDAQ1301(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE: {\n\t\t\t\t\tconst state = buf.getUint8(1) & 0x1;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: state });\n\t\t\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDAQ1400(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETPOWERSUPPLY:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.ISA_SETPOWERSUPPLY, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETINPUTMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.ISA_SETINPUTMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETPOWERSUPPLY:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.ISA_SETPOWERSUPPLY, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETINPUTMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.ISA_SETINPUTMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.CurrentInputPacket.SETCURRENTCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETPOWERSUPPLY:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.ISA_SETPOWERSUPPLY, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETPOWERSUPPLY:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.ISA_SETPOWERSUPPLY, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageSensorType(ch, bp.getNumber(0))) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDAQ1400(ch: LocalChannel, buf: DataView) {\n\tlet ticksAtLastCount;\n\tlet counts;\n\tlet ticks;\n\tlet current;\n\tlet voltage;\n\tlet state;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.FrequencyCounterPacket.COUNTCHANGE: {\n\t\t\t\t\tticks = buf.getUint32(1) / 1000;\n\t\t\t\t\tcounts = buf.getUint32(5);\n\t\t\t\t\tticksAtLastCount = buf.getUint32(9) / 1000;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: ticks });\n\t\t\t\t\tbp.set({ name: '1', type: 'u', value: counts });\n\t\t\t\t\tbp.set({ name: '2', type: 'g', value: ticksAtLastCount });\n\t\t\t\t\tbp.sendToChannel(ch, BP.FREQUENCYDATA);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE: {\n\t\t\t\t\tstate = buf.getUint8(1) & 0x01;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: state });\n\t\t\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.CurrentInputPacket.CURRENTCHANGE: {\n\t\t\t\t\tcurrent = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\t//Don't return anything below 500uA (ch.data.minCurent) - we can't measure down to 0\n\t\t\t\t\tif (current < 0.0005) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Sensor value is ouside the valid range for this sensor.' });\n\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(current, 5) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.CURRENTCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.CurrentInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 8) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDAQ1400_120(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDAQ1400(ch, bp);\n}\n\nexport function recvDAQ1400_120(ch: LocalChannel, buf: DataView) {\n\trecvDAQ1400(ch, buf);\n}\n\nexport async function sendDAQ1500(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.BRIDGEENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (0x80000000));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRIDGEGAIN:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.BRIDGEGAIN, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDAQ1500(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\tconst voltageratio = buf.getInt32(1) / (0x80000000 - 1.0);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: voltageratio });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVCP1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 0x00010000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.CurrentInputPacket.SETCURRENTCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVCP1100(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.CurrentInputPacket.CURRENTCHANGE: {\n\t\t\t\t\tconst current = buf.getInt32(1) / 65536;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: current });\n\t\t\t\t\tbp.sendToChannel(ch, BP.CURRENTCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.CurrentInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await, @typescript-eslint/no-unused-vars\nexport async function sendVCP1100_1_OLDPROTO(_ch: LocalChannel, _bp: BridgePacket) {\n\tthrow new Error(\"Obsolete Device\");\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function recvVCP1100_1_OLDPROTO(_ch: LocalChannel, _buf: DataView) {\n\tthrow new Error(\"Obsolete Device\");\n}\n\nexport async function sendDCC1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (4095 / 3.3) * 0.045);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.CurrentInputPacket.SETCURRENTCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\t// TemperatureChangeTigger in Q8.8 format\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * 256);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\t\tif (!SEnum.supportedVoltageRatioSensorType(ch, bp.getNumber(0))) {\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.SETENCODERCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.IOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.ENABLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setInt32(0, (bp.getNumber(0) * 0.045 * 4095 / 3.3) + 2048);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFANMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.FAN, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTREGULATORGAIN:\n\t\t\t\t\tbuf.setUint32(0, (bp.getNumber(0) - 1) * 1804.070707 + 897);    //map 1-100 to 897-179500 (0.1%/A to 20%/A)\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTREGULATORGAIN, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setInt32(0, (bp.getNumber(0) * 0.045 * 4095 / 3.3) + 2048);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFANMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.FAN, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTREGULATORGAIN:\n\t\t\t\t\tbuf.setUint32(0, (bp.getNumber(0) - 1) * 1804.070707 + 897);    //map 1-100 to 897-179500 (0.1%/A to 20%/A)\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTREGULATORGAIN, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setInt32(0, (bp.getNumber(0) * 0.045 * 4095 / 3.3) + 2048);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTREGULATORGAIN:\n\t\t\t\t\tbuf.setUint32(0, (bp.getNumber(0) - 1) * 1804.070707 + 897);    //map 1-100 to 897-179500 (0.1%/A to 20%/A)\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTREGULATORGAIN, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFANMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.FAN, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENCODERIOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setInt32(0, (bp.getNumber(0) * 0.045 * 4095 / 3.3) + 2048);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTREGULATORGAIN:\n\t\t\t\t\tbuf.setUint32(0, (bp.getNumber(0) - 1) * 1804.070707 + 897);    //map 1-100 to 897-179500 (0.1%/A to 20%/A)\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTREGULATORGAIN, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFANMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.FAN, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENCODERIOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1000(ch: LocalChannel, buf: DataView) {\n\tlet dutyCycle, brakingDutyCycle, sign;\n\tlet temperature, current, voltageRatio;\n\tlet position;\n\tlet indexPosition;\n\tlet timeChange;\n\tlet indexTriggered;\n\tlet positionChange;\n\tlet userphid;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.CurrentInputPacket.CURRENTCHANGE: {\n\t\t\t\t\tcurrent = (buf.getUint16(1) - 2048) * 0.017908017;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(current, 4) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.CURRENTCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.CurrentInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(temperature, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\tvoltageRatio = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltageRatio, 5) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.EncoderPacket.ENCODERCHANGE: {\n\t\t\t\t\tpositionChange = buf.getInt32(1);\n\t\t\t\t\ttimeChange = buf.getUint32(5) * 1000 / 48;\n\t\t\t\t\tindexTriggered = buf.getUint8(9);\n\t\t\t\t\tif (indexTriggered) {\n\t\t\t\t\t\tindexPosition = buf.getUint32(10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexPosition = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: positionChange });\n\t\t\t\t\tbp.set({ name: '1', type: 'g', value: timeChange / 1000000.0 });\n\t\t\t\t\tbp.set({ name: '2', type: 'c', value: indexTriggered });\n\t\t\t\t\tbp.set({ name: '3', type: 'd', value: indexPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getUint16(3) / 65535;\n\t\t\t\t\tsign = buf.getUint8(6) ? -1 : 1;\n\t\t\t\t\tdutyCycle = buf.getUint16(1) / 65535 * sign;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDCC1000_POSITIONCONTROL(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDCC1000(ch, bp);\n}\n\nexport function recvDCC1000_POSITIONCONTROL(ch: LocalChannel, buf: DataView) {\n\trecvDCC1000(ch, buf);\n}\n\nexport async function sendDCC1000_POSITIONCONTROL_FAILSAFE(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDCC1000(ch, bp);\n}\n\nexport function recvDCC1000_POSITIONCONTROL_FAILSAFE(ch: LocalChannel, buf: DataView) {\n\trecvDCC1000(ch, buf);\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDCC1004(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_ENCODER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_CURRENTINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1004(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1004_DCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_ENCODER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_CURRENTINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDCC1005(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_ENCODER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_CURRENTINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1005(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1005_DCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_ENCODER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_CURRENTINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1005_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDCC1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.SETENCODERCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.IOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.ENABLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1001(ch: LocalChannel, buf: DataView) {\n\tlet dutyCycle, brakingDutyCycle;\n\tlet indexPosition;\n\tlet timeChange;\n\tlet position;\n\tlet indexTriggered;\n\tlet positionChange;\n\tlet userphid;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.EncoderPacket.ENCODERCHANGE: {\n\t\t\t\t\tpositionChange = buf.getInt32(1);\n\t\t\t\t\ttimeChange = buf.getUint32(5) * 1000 / 48;\n\t\t\t\t\tindexTriggered = buf.getUint8(9);\n\t\t\t\t\tif (indexTriggered) {\n\t\t\t\t\t\tindexPosition = buf.getUint32(10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexPosition = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: positionChange });\n\t\t\t\t\tbp.set({ name: '1', type: 'g', value: timeChange / 1000000.0 });\n\t\t\t\t\tbp.set({ name: '2', type: 'c', value: indexTriggered });\n\t\t\t\t\tbp.set({ name: '3', type: 'd', value: indexPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDCC1001_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDCC1001(ch, bp);\n}\n\nexport function recvDCC1001_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvDCC1001(ch, buf);\n}\n\nexport async function sendDCC1002(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.SETENCODERCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.IOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.ENABLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);    //have to multiply by 959 so save 10 bits for multiplication in firware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1002(ch: LocalChannel, buf: DataView) {\n\tlet dutyCycle, brakingDutyCycle;\n\tlet indexPosition;\n\tlet timeChange;\n\tlet position;\n\tlet indexTriggered;\n\tlet positionChange;\n\tlet userphid;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.EncoderPacket.ENCODERCHANGE: {\n\t\t\t\t\tpositionChange = buf.getInt32(1);\n\t\t\t\t\ttimeChange = buf.getUint32(5) * 1000 / 48;\n\t\t\t\t\tindexTriggered = buf.getUint8(9);\n\t\t\t\t\tif (indexTriggered) {\n\t\t\t\t\t\tindexPosition = buf.getUint32(10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexPosition = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: positionChange });\n\t\t\t\t\tbp.set({ name: '1', type: 'g', value: timeChange / 1000000.0 });\n\t\t\t\t\tbp.set({ name: '2', type: 'c', value: indexTriggered });\n\t\t\t\t\tbp.set({ name: '3', type: 'd', value: indexPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDCC1002_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDCC1002(ch, bp);\n}\n\nexport function recvDCC1002_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvDCC1002(ch, buf);\n}\n\nexport async function sendDCC1003(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplcation in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplcation in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplcation in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplcation in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1003(ch: LocalChannel, buf: DataView) {\n\tlet dutyCycle, brakingDutyCycle;\n\n\tconst pkt = buf.getUint8(0);\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as UserPhidgetClass.DCMotor);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5);\n\t\t\t\t\tbrakingDutyCycle = brakingDutyCycle / 959.0;\n\t\t\t\t\tdutyCycle = buf.getInt32(1);\n\t\t\t\t\tdutyCycle = dutyCycle / 959.0;\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5);\n\t\t\t\t\tbrakingDutyCycle = brakingDutyCycle / 959.0;\n\t\t\t\t\tdutyCycle = buf.getInt32(1);\n\t\t\t\t\tdutyCycle = dutyCycle / 959.0;\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDCC1003_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDCC1003(ch, bp);\n}\n\nexport function recvDCC1003_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvDCC1003(ch, buf);\n}\n\nexport async function sendDCC1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSTALLVELOCITY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));  //convert to commutations per second\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETSTALLVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDEADBAND:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETDEADBAND, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKP:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKP, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKD:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKD, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETKI:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETKI, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151); //have to multiply by 959 so save 10 bits for multiplication in firmware\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSTALLVELOCITY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));  //convert to commutations per second\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MotorPositionControllerPacket.SETSTALLVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\t// TemperatureChangeTrigger in Q8.8 format\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * 256);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setInt32(0, (bp.getNumber(0) * 0.045 * 4095 / 3.3) + 2048);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSTALLVELOCITY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));  //convert to commutations pre second\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETSTALLVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 8192);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0) * 2097151);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 2097151);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETBRAKINGSTRENGTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setInt32(0, (bp.getNumber(0) * 0.045 * 4095 / 3.3) + 2048);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSTALLVELOCITY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));  //convert to commutations pre second\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.BLDCMotorPacket.SETSTALLVELOCITY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1100(ch: LocalChannel, buf: DataView) {\n\tlet temperature, dutyCycle, brakingDutyCycle;\n\tlet position;\n\tlet userphid;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(temperature, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.BLDCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 9);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.BLDCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.BLDCMotorPacket.STALLDETECTED: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.MOTOR_STALL_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Dangerous motor stall detected. Velocity has been reduced in order to prevent damage.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.BLDCMotorPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tbrakingDutyCycle = buf.getInt32(5) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 9);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.BLDCMotor);\n\t\t\t\t\tif (userphid.data.brakingStrength !== brakingDutyCycle) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(brakingDutyCycle, 3) });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.BRAKINGSTRENGTHCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.BLDCMotorPacket.STALLDETECTED: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.MOTOR_STALL_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Dangerous motor stall detected. Velocity has been reduced in order to prevent damage.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.BLDCMotorPacket.STALLDETECTED: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.MOTOR_STALL_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Dangerous motor stall detected. Velocity has been reduced in order to prevent damage.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.MotorPositionControllerPacket.MOTORSTATUSUPDATE: {\n\t\t\t\t\tdutyCycle = buf.getInt32(1) / 940;\n\t\t\t\t\tposition = GetBigInt64(buf, 5);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.MotorPositionController);\n\t\t\t\t\tif (userphid.data.position !== position) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: '0', type: 'l', value: position });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(dutyCycle, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DUTYCYCLECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.BLDCMotorPacket.STALLDETECTED: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.MOTOR_STALL_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Dangerous motor stall detected. Velocity has been reduced in order to prevent damage.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDCC1100_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendDCC1100(ch, bp);\n}\n\nexport function recvDCC1100_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvDCC1100(ch, buf);\n}\n\n// eslint-disable-next-line require-await\nexport async function sendDCC1101(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1101_CURRENTINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDCC1101(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1101_CURRENTINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDST1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DistanceSensorPacket.SETDISTANCECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDST1000(ch: LocalChannel, buf: DataView) {\n\tlet distance;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.DISTANCECHANGE: {\n\t\t\t\t\tdistance = buf.getUint16(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: distance });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.SATURATION: {\n\t\t\t\t\t//SATURATION in the DST1001 is synonymous with OUTOFRANGE, which makes more sense in this context\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Sensor value is outside the valid range for this sensor.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDST1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DistanceSensorPacket.SETDISTANCECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDST1001(ch: LocalChannel, buf: DataView) {\n\tlet distance;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.DISTANCECHANGE: {\n\t\t\t\t\tdistance = buf.getUint16(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: distance });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.SATURATION: {\n\t\t\t\t\t//SATURATION in the DST1001 is synonymous with OUTOFRANGE, which makes more sense in this context\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Sensor value is outside the valid range for this sensor.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDST1002(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DistanceSensorPacket.SETDISTANCECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDST1002(ch: LocalChannel, buf: DataView) {\n\tlet distance;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.DISTANCECHANGE: {\n\t\t\t\t\tdistance = buf.getUint16(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: distance });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.SATURATION: {\n\t\t\t\t\t//SATURATION in the DST1001 is synonymous with OUTOFRANGE, which makes more sense in this context\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Sensor value is outside the valid range for this sensor.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendDST1200(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DistanceSensorPacket.SETDISTANCECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSONARQUIETMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 1 : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DistanceSensorPacket.SONAR_QUIETMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvDST1200(ch: LocalChannel, buf: DataView) {\n\tconst DISTANCE_MAX_REFLECTIONS = 8;\n\tconst reflections_distance = new Array(DISTANCE_MAX_REFLECTIONS);\n\tconst reflections_strength = new Array(DISTANCE_MAX_REFLECTIONS);\n\tlet reflections_count;\n\tlet distance;\n\tlet i;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.SONARREFLECTIONSUPDATE: {\n\t\t\t\t\treflections_count = buf.getUint8(1);\n\t\t\t\t\tfor (i = 0; i < DISTANCE_MAX_REFLECTIONS; i++) {\n\t\t\t\t\t\tif (i < reflections_count) {\n\t\t\t\t\t\t\treflections_distance[i] = buf.getUint16(2 * i + 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treflections_distance[i] = PUNK.UINT32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < DISTANCE_MAX_REFLECTIONS; i++) {\n\t\t\t\t\t\tif (i < reflections_count) {\n\t\t\t\t\t\t\treflections_strength[i] = buf.getUint16((2 * i) + (2 * reflections_count) + 2);\n\t\t\t\t\t\t\tif (reflections_strength[i] === 0x7FFF) {\n\t\t\t\t\t\t\t\treflections_strength[i] = PUNK.UINT32;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treflections_strength[i] = PUNK.UINT32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (reflections_count === 0) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"U\", value: reflections_distance });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"U\", value: reflections_strength });\n\t\t\t\t\t\tbp.set({ name: \"2\", type: \"u\", value: reflections_count });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.SONARUPDATE);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"U\", value: reflections_distance });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"U\", value: reflections_strength });\n\t\t\t\t\tbp.set({ name: \"2\", type: \"u\", value: reflections_count });\n\t\t\t\t\tbp.sendToChannel(ch, BP.SONARUPDATE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: reflections_distance[0] });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.DISTANCECHANGE: {\n\t\t\t\t\tdistance = buf.getUint32(1);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: distance });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DistanceSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendENC1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.SETENCODERCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.IOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.ENABLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvENC1000(ch: LocalChannel, buf: DataView) {\n\tlet indexPosition;\n\tlet indexTriggered;\n\tlet positionChange;\n\tlet timeChange;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.EncoderPacket.ENCODERCHANGE: {\n\t\t\t\t\tpositionChange = buf.getInt32(1);\n\t\t\t\t\ttimeChange = buf.getUint32(5) * 1000 / 16;  // Time comes back as counts at 16MHz, convert to ns\n\t\t\t\t\tindexTriggered = buf.getUint8(9);\n\t\t\t\t\tif (indexTriggered) {\n\t\t\t\t\t\tindexPosition = buf.getInt32(10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexPosition = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: positionChange });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timeChange / 1000000.0 });\n\t\t\t\t\tbp.set({ name: \"2\", type: \"c\", value: indexTriggered });\n\t\t\t\t\tbp.set({ name: \"3\", type: \"d\", value: indexPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHIN1101(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.SETENCODERCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETIOMODE:\n\t\t\t\t\tbuf.setInt32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.IOMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setInt8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.EncoderPacket.ENABLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHIN1101(ch: LocalChannel, buf: DataView) {\n\tlet positionChange;\n\tlet timeChange;\n\tlet state;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.EncoderPacket.ENCODERCHANGE: {\n\t\t\t\t\tpositionChange = buf.getInt32(1);\n\t\t\t\t\ttimeChange = buf.getInt32(5) * 1000 / 16;   //Time comes back as coutns at 16MHz, convert to ns\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: positionChange });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timeChange / 1000000.0 });\n\t\t\t\t\tbp.set({ name: \"2\", type: \"c\", value: 0 });\n\t\t\t\t\tbp.set({ name: \"3\", type: \"d\", value: 0 });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE: {\n\t\t\t\t\tstate = buf.getUint8(1) & 0x01;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: state });\n\t\t\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHIN1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\t// buf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\t// await ch.sendVINTDataPacket(VintPacketType.CapacitiveTouchPacket.TOUCHVALUECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSITIVITY:\n\t\t\t\t\tbuf.setUint8(0, ((1 - bp.getNumber(0)) * 80) + 20);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.CapacitiveTouchPacket.SENSITIVITY, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHIN1000(ch: LocalChannel, buf: DataView) {\n\tlet touched;\n\n\tconst pkt = buf.getUint8(0);\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.CapacitiveTouchPacket.TOUCHVALUECHANGE: {\n\t\t\t\t\ttouched = buf.getUint8(1) ? 1 : 0;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tif (touched) {\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: touched });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.TOUCHINPUTVALUECHANGE);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.TOUCHINPUTEND);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHIN1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.CapacitiveTouchPacket.TOUCHVALUECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSENSITIVITY:\n\t\t\t\t\tif (ch.index === 4) {\n\t\t\t\t\t\tbuf.setUint8(0, ((1 - bp.getNumber(0)) * 32) + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuf.setUint8(0, ((1 - bp.getNumber(0)) * 64) + 1);\n\t\t\t\t\t}\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.CapacitiveTouchPacket.SENSITIVITY, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHIN1001(ch: LocalChannel, buf: DataView) {\n\tlet value;\n\tlet touched;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.CapacitiveTouchPacket.TOUCHVALUECHANGE: {\n\t\t\t\t\ttouched = buf.getUint8(1) ? 1 : 0;\n\t\t\t\t\tif (ch.index < 4) {\n\t\t\t\t\t\tvalue = touched;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = buf.getUint16(2) / 65536.0;\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tif (touched) {\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: value });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.TOUCHINPUTVALUECHANGE);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.TOUCHINPUTEND);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHIN1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * 16384);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHIN1100(ch: LocalChannel, buf: DataView) {\n\tlet axis;\n\tlet value;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\taxis = RoundDouble((buf.getInt16(1) / 16384), 4);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: axis });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalInputPacket.STATECHANGE: {\n\t\t\t\t\tvalue = buf.getUint8(1) ? 1 : 0;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: value });\n\t\t\t\t\tbp.sendToChannel(ch, BP.STATECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHUM1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.HumiditySensorPacket.SETHUMIDITYCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHUM1000(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\tlet humidity;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.HumiditySensorPacket.HUMIDITYCHANGE: {\n\t\t\t\t\thumidity = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(humidity, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.HUMIDITYCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.HumiditySensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHUM1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.HumiditySensorPacket.SETHUMIDITYCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHUM1001(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\tlet humidity;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.HumiditySensorPacket.HUMIDITYCHANGE: {\n\t\t\t\t\thumidity = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(humidity, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.HUMIDITYCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.HumiditySensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendLCD1100_WRITETEXT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(48));\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.LCD);\n\n\tconst font: Enum.LCDFont = bp.getNumber(0) as Enum.LCDFont;\n\tlet xpos = bp.getNumber(1);\n\tconst ypos = bp.getNumber(2);\n\tconst chars = bp.getString(3);\n\n\tconst fontSize = userphid.getFontSize(font);\n\tconst frameBuffer = userphid.data.frameBuffer;\n\tconst width = userphid.data.width;\n\tconst height = userphid.data.height;\n\n\tlet numchars = chars.length;\n\n\t// Because FONT_User1 is stored in framebuffer 1\n\tif (font == frameBuffer) {\n\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid font/framebuffer combination.\");\n\t}\n\n\t//truncate text to end of line\n\tnumchars = Math.min((width - xpos), (fontSize.width * numchars)) / fontSize.width;\n\n\t// truncate text off bottom of screen\n\tif (ypos + fontSize.height > height) {\n\t\tnumchars = 0;\n\t}\n\n\t// numchars is 0 - so we don't actually send anything, but still need to return OK for async calls\n\tif (numchars === 0) {\n\t\treturn;\n\t}\n\n\t// Send packets\n\tlet numsent = 0;\n\twhile (numsent < numchars) {\n\t\t// number of letters to send\n\t\tconst count = Math.min(VINT_MAX_OUT_PACKETSIZE - 6, numchars - numsent);\n\n\t\t//font(1), xsize(1), ysize(1), xpos(1), ypos(1), num_chars(1), text(num_chars <= 8)\n\t\tbuf.setUint8(0, font);\n\t\tbuf.setUint8(1, fontSize.width);\n\t\tbuf.setUint8(2, fontSize.height);\n\t\tbuf.setUint8(3, xpos);\n\t\tbuf.setUint8(4, ypos);\n\t\tbuf.setUint8(5, count);\n\n\t\t//fill the rest of the packet with chars\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuf.setUint8(i + 6, chars.charCodeAt(numsent++));\n\n\t\t//increment horizontal position according to the number of chars written multiplied by the font symbol width\n\t\txpos += count * fontSize.width;\n\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.WRITETEXT, new Uint8Array(buf.buffer, 0, count + 6));\n\t}\n\n}\n\nexport async function sendLCD1100_WRITEBITMAP(ch: LocalChannel, bp: BridgePacket) {\n\n\tlet buf = new DataView(new ArrayBuffer(48));\n\tlet count = 0;\n\n\tconst bitmap = bp.getArray(4);\n\tconst xsize = bp.getNumber(2);\n\tconst ysize = bp.getNumber(3);\n\n\tbuf.setUint8(0, bp.getNumber(0));\n\tbuf.setUint8(1, bp.getNumber(1));\n\tbuf.setUint8(2, xsize);\n\tbuf.setUint8(3, ysize);\n\n\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.WRITEBITMAP, new Uint8Array(buf.buffer, 0, 4));\n\n\tlet x = 0;\n\tlet y = 0;\n\n\twhile (x < xsize) {\n\t\tbuf = new DataView(new ArrayBuffer(48));\n\t\t//create bit stream of pixels\n\t\tfor (let i = 0; i < VINT_MAX_OUT_PACKETSIZE * 8 && x < xsize; i++) {\n\t\t\tconst byteIdx = Math.floor(i / 8);\n\t\t\tcount = byteIdx + 1;\n\t\t\tconst bit = 1 << (7 - (i % 8)) & (bitmap[y * xsize + x] ? 0xFF : 0x00);\n\t\t\tconst newbyte = buf.getUint8(byteIdx) | bit;\n\t\t\tbuf.setUint8(byteIdx, newbyte);\n\n\t\t\ty++;\n\t\t\tif (y >= ysize) {\n\t\t\t\tx++;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\n\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.BITMAPDATA, new Uint8Array(buf.buffer, 0, count));\n\t}\n}\n\nexport async function sendLCD1100_SETCHARACTERBITMAP(ch: LocalChannel, bp: BridgePacket) {\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.LCD);\n\n\tconst font: Enum.LCDFont = bp.getNumber(0) as Enum.LCDFont;\n\tconst characterStr = bp.getString(1);\n\tconst bitmap = bp.getArray(2);\n\n\tif (font != Enum.LCDFont.USER1 && font != Enum.LCDFont.USER2)\n\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Font must be user font 1 or 2.\");\n\n\tconst frameBuffer = userphid.frameBuffer;\n\tconst maxchars = userphid.getMaxCharacters(font);\n\tconst fontSize = userphid.getFontSize(font);\n\tconst lcdw = userphid.width;\n\n\tif (characterStr.length != 1)\n\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Multibyte characters are unsupported.\");\n\n\tlet character = characterStr.charCodeAt(0);\n\n\t//Characters start at 1\n\tcharacter -= 1;\n\n\tif (character < 0 || character > maxchars)\n\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Character code must be between 0x00 and 0x\"\n\t\t\t+ maxchars.toString(16) + \" ('\" + String.fromCharCode(maxchars)\n\t\t\t+ \"'). Number of supported characters depends on the font size.\");\n\n\tif (frameBuffer != font) {\n\t\t//FrameBuffer in Q8.0 format\n\t\tconst buf = new DataView(new ArrayBuffer(1));\n\t\tbuf.setUint8(0, font);\n\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SETFRAMEBUFFER, new Uint8Array(buf.buffer, 0, 1));\n\t}\n\n\t//build and send initial packet\n\tconst buf = new DataView(new ArrayBuffer(4));\n\tbuf.setUint8(0, fontSize.width * (character % Math.floor(lcdw / fontSize.width))); //x position\n\tbuf.setUint8(1, fontSize.height * Math.floor(character / Math.floor(lcdw / fontSize.width))); //y position\n\tbuf.setUint8(2, fontSize.width); //width\n\tbuf.setUint8(3, fontSize.height); //height\n\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.WRITEBITMAP, new Uint8Array(buf.buffer, 0, 4));\n\n\tlet x = 0;\n\tlet y = 0;\n\twhile (x < fontSize.width) {\n\t\tconst buf = new DataView(new ArrayBuffer(VINT_MAX_OUT_PACKETSIZE));\n\t\tlet count;\n\n\t\t//create bit stream of pixels\n\t\tfor (let i = 0; i < VINT_MAX_OUT_PACKETSIZE * 8 && x < fontSize.width; i++) {\n\t\t\tconst byteIdx = Math.floor(i / 8);\n\t\t\tcount = byteIdx + 1;\n\t\t\tconst bit = 1 << (7 - (i % 8)) & (bitmap[y * fontSize.width + x] ? 0xFF : 0x00);\n\t\t\tconst newbyte = buf.getUint8(byteIdx) | bit;\n\t\t\tbuf.setUint8(byteIdx, newbyte);\n\t\t\ty++;\n\t\t\tif (y >= fontSize.height) {\n\t\t\t\tx++;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.BITMAPDATA, new Uint8Array(buf.buffer, 0, count));\n\t}\n\n\tif (frameBuffer != font) {\n\t\t//FrameBuffer in Q8.0 format\n\t\tconst buf = new DataView(new ArrayBuffer(1));\n\t\tbuf.setUint8(0, frameBuffer);\n\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SETFRAMEBUFFER, new Uint8Array(buf.buffer, 0, 1));\n\t}\n}\n\nexport async function sendLCD1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(48));\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.LCD);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\tawait userphid._transactionLock.acquire();\n\t\t\ttry {\n\t\t\t\tswitch (bp.vpkt) {\n\t\t\t\t\tcase BP.SAVEFRAMEBUFFER: {\n\t\t\t\t\t\tconst fb = bp.getNumber(0);\n\t\t\t\t\t\tif (fb < 0 || fb > 2) {\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Framebuffer must be 0, 1 or 2.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuf.setUint8(0, fb);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SAVEFRAMEBUFFER, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase BP.SETFRAMEBUFFER:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SETFRAMEBUFFER, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETBACKLIGHT:\n\t\t\t\t\t\t//Backlight in Q0.8 format\n\t\t\t\t\t\tif (bp.getNumber(0) >= 1) {\n\t\t\t\t\t\t\tbuf.setUint8(0, 0xFF);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SETBACKLIGHT, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCONTRAST:\n\t\t\t\t\t\tif (bp.getNumber(0) >= 1) {\n\t\t\t\t\t\t\tbuf.setUint8(0, 0xFF);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SETCONTRAST, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.DRAWPIXEL:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tbuf.setUint8(1, bp.getNumber(1));\n\t\t\t\t\t\tbuf.setUint8(2, bp.getNumber(2));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.DRAWPIXEL, new Uint8Array(buf.buffer, 0, 3));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.DRAWLINE:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tbuf.setUint8(1, bp.getNumber(1));\n\t\t\t\t\t\tbuf.setUint8(2, bp.getNumber(2));\n\t\t\t\t\t\tbuf.setUint8(3, bp.getNumber(3));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.DRAWLINE, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.DRAWRECT:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tbuf.setUint8(1, bp.getNumber(1));\n\t\t\t\t\t\tbuf.setUint8(2, bp.getNumber(2));\n\t\t\t\t\t\tbuf.setUint8(3, bp.getNumber(3));\n\t\t\t\t\t\tbuf.setUint8(4, bp.getNumber(4) ? 0xFF : 0x00);\n\t\t\t\t\t\tbuf.setUint8(5, bp.getNumber(5) ? 0xFF : 0x00);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.DRAWRECT, new Uint8Array(buf.buffer, 0, 6));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.WRITETEXT:\n\t\t\t\t\t\tawait sendLCD1100_WRITETEXT(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.WRITEBITMAP:\n\t\t\t\t\t\tawait sendLCD1100_WRITEBITMAP(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.FLUSH:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.FLUSH);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.CLEAR:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.CLEAR);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETSLEEP:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.SETSLEEP, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCHARACTERBITMAP:\n\t\t\t\t\t\tawait sendLCD1100_SETCHARACTERBITMAP(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.COPY:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tbuf.setUint8(1, bp.getNumber(1));\n\t\t\t\t\t\tbuf.setUint8(2, bp.getNumber(2));\n\t\t\t\t\t\tbuf.setUint8(3, bp.getNumber(3));\n\t\t\t\t\t\tbuf.setUint8(4, bp.getNumber(4));\n\t\t\t\t\t\tbuf.setUint8(5, bp.getNumber(5));\n\t\t\t\t\t\tbuf.setUint8(6, bp.getNumber(6));\n\t\t\t\t\t\tbuf.setUint8(7, bp.getNumber(7));\n\t\t\t\t\t\tbuf.setUint8(8, bp.getNumber(8) ? 0xFF : 0x00);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.COPY, new Uint8Array(buf.buffer, 0, 9));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.INITIALIZE:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LCDPacket.INIT);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETFONTSIZE:\n\t\t\t\t\t\tbreak;  //required or else it errors and does not get into the channel bridgeinput\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} finally {\n\t\t\t\tuserphid._transactionLock.release();\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvLCD1100() {\n\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet received.\");\n\n}\n\nexport async function sendLED1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETLEDFORWARDVOLTAGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tswitch (buf.getUint8(0)) {\n\t\t\t\t\t\tcase Enum.LEDForwardVoltage.VOLTS_3_2:\n\t\t\t\t\t\tcase Enum.LEDForwardVoltage.VOLTS_4_0:\n\t\t\t\t\t\tcase Enum.LEDForwardVoltage.VOLTS_4_8:\n\t\t\t\t\t\tcase Enum.LEDForwardVoltage.VOLTS_5_6:\n\t\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.LEDFORWARDVOLTAGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid or unsupported voltage for this device.\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETLEDCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.LEDCURRENTLIMIT, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvLED1000() {\n\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet received.\");\n}\n\nexport async function sendLUX1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 14));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.LightSensorPacket.SETILLUMINANCECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvLUX1000(ch: LocalChannel, buf: DataView) {\n\tlet illuminance;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.LightSensorPacket.ILLUMINANCECHANGE: {\n\t\t\t\t\tilluminance = buf.getInt32(1) / (1 << 14);\n\t\t\t\t\tilluminance = (illuminance < 100) ? RoundDouble(illuminance, 4) : RoundDouble(illuminance, 2);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: illuminance });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ILLUMINANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.LightSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendHUM1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * 0xFFFF);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvHUM1100(ch: LocalChannel, buf: DataView) {\n\tlet value;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE: {\n\t\t\t\t\tvalue = buf.getUint16(1) / 65535.0;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(value, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGERATIOCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT1100_OLD(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setInt16(0, bp.getNumber(0) * (1 << 12));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvMOT1100_OLD(ch: LocalChannel, buf: DataView) {\n\tlet timestamp;\n\tconst acc = [0, 0, 0];\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tacc[0] = buf.getInt16(1) / (1 << 12);\n\t\t\t\t\tacc[0] = RoundDouble(acc[0], 4);\n\t\t\t\t\tacc[1] = buf.getInt16(3) / (1 << 12);\n\t\t\t\t\tacc[1] = RoundDouble(acc[1], 4);\n\t\t\t\t\tacc[2] = buf.getInt16(5) / (1 << 12);\n\t\t\t\t\tacc[2] = RoundDouble(acc[2], 4);\n\t\t\t\t\ttimestamp = buf.getUint32(7);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: acc });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ACCELERATIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Acceleration Saturation.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvMOT1100(ch: LocalChannel, buf: DataView) {\n\tlet timestamp;\n\tconst acc = [0, 0, 0];\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tacc[0] = buf.getInt16(1) / (1 << 12);\n\t\t\t\t\tacc[0] = RoundDouble(acc[0], 4);\n\t\t\t\t\tacc[1] = buf.getInt16(3) / (1 << 12);\n\t\t\t\t\tacc[1] = RoundDouble(acc[1], 4);\n\t\t\t\t\tacc[2] = buf.getInt16(5) / (1 << 12);\n\t\t\t\t\tacc[2] = RoundDouble(acc[2], 4);\n\t\t\t\t\ttimestamp = buf.getUint32(7);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: acc });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ACCELERATIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Acceleration Saturation.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT1101(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.ZERO:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GyroscopePacket.ZERO);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\t\t\tawait sendMOT1101_SETCORRECTIONPARAMETERS(ch, bp);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.ZERO:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GyroscopePacket.ZERO);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\t\t\tawait sendMOT1101_SETCORRECTIONPARAMETERS(ch, bp);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvMOT1101(ch: LocalChannel, buf: DataView) {\n\tlet fireSaturation = 0;\n\tlet timestamp;\n\tconst compass = [0, 0, 0];\n\tconst accel = [0, 0, 0];\n\tconst gyro = [0, 0, 0];\n\n\tconst pkt = buf.getUint8(0);\n\tlet i;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\taccel[0] = RoundDouble((buf.getInt16(1) / (1 << 12)), 4);\n\t\t\t\t\taccel[1] = RoundDouble((buf.getInt16(3) / (1 << 12)), 4);\n\t\t\t\t\taccel[2] = RoundDouble((buf.getInt16(5) / (1 << 12)), 4);\n\t\t\t\t\ttimestamp = buf.getUint32(7);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ACCELERATIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXESUPDATE: {\n\t\t\t\t\tgyro[0] = RoundDouble((buf.getFloat32(1, true)), 5);\n\t\t\t\t\tgyro[1] = RoundDouble((buf.getFloat32(5, true)), 5);\n\t\t\t\t\tgyro[2] = RoundDouble((buf.getFloat32(9, true)), 5);\n\t\t\t\t\ttimestamp = buf.getUint32(13);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: gyro });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ANGULARRATEUPDATE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tcompass[0] = RoundDouble((buf.getInt16(1) / (1 << 12)), 4);\n\t\t\t\t\tcompass[1] = RoundDouble((buf.getInt16(3) / (1 << 12)), 4);\n\t\t\t\t\tcompass[2] = RoundDouble((buf.getInt16(5) / (1 << 12)), 4);\n\t\t\t\t\ttimestamp = buf.getUint32(7);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: compass });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.FIELDSTRENGTHCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE:\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\t//Positive or negative fixed point saturation\n\t\t\t\t\t\tif ((buf.getUint8(1 + (i * 2)) === 0x7F && buf.getUint8(2 + (i * 2)) === 0xFF) ||\n\t\t\t\t\t\t\t(buf.getUint8(1 + (i * 2)) === 0x80 && buf.getUint8(2 + (i * 2)) === 0x00)) {\n\t\t\t\t\t\t\tfireSaturation |= 0x04;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcompass[i] = RoundDouble((buf.getInt16(1 + (i * 2)) / (1 << 12)), 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\t//Positive or negative fixed point saturation\n\t\t\t\t\t\tif ((buf.getUint8(7 + (i * 2)) === 0x7F && buf.getUint8(8 + (i * 2)) === 0xFF) ||\n\t\t\t\t\t\t\t(buf.getUint8(7 + (i * 2)) === 0x80 && buf.getUint8(8 + (i * 2)) === 0x00)) {\n\t\t\t\t\t\t\tfireSaturation |= 0x01;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\taccel[i] = RoundDouble((buf.getInt16(7 + (i * 2)) / (1 << 12)), 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\tconst tmp = buf.getFloat32(13 + (i * 4), true);\n\t\t\t\t\t\tif (tmp === PUNK.FLT || tmp === -PUNK.FLT) {\n\t\t\t\t\t\t\tfireSaturation |= 0x02;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgyro[i] = RoundDouble(tmp, 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fireSaturation === 0) {\n\t\t\t\t\t\ttimestamp = buf.getUint32(25);\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"G\", value: gyro });\n\t\t\t\t\t\tbp.set({ name: \"2\", type: \"G\", value: compass });\n\t\t\t\t\t\tbp.set({ name: \"3\", type: \"g\", value: timestamp });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.SPATIALDATA);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet saturationError = true;\n\t\t\t\t\t\tif (fireSaturation & 0x01) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Acceleration Saturation Detected.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tsaturationError = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (fireSaturation & 0x02) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Gyroscope Saturation Detected.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tsaturationError = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (fireSaturation & 0x04) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Magnetometer Saturation Detected.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tsaturationError = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (saturationError) {\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected saturation flag. This is likely a firmware bug.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT1101_SETCORRECTIONPARAMETERS(ch: LocalChannel, bp: BridgePacket) {\n\tconst firmware_userMagnetometerTransform = [0, 0, 0, 0, 0, 0];\n\tconst firmware_userMagnetometerOffset = [0, 0, 0];\n\tconst firmware_userMagnetometerGain = [0, 0, 0];\n\n\tconst buf = new DataView(new ArrayBuffer(28));\n\n\t// Convert double values to 32-bit int to send to firmawre\n\tconst firmware_userMagField = bp.getNumber(0);\n\tfor (let i = 0; i < 3; i++) {\n\t\tfirmware_userMagnetometerOffset[i] = bp.getNumber((i + 1).toString());\n\t\tfirmware_userMagnetometerGain[i] = bp.getNumber((i + 4).toString());\n\t}\n\tfor (let i = 0; i < 6; i++) {\n\t\tfirmware_userMagnetometerTransform[i] = bp.getNumber((i + 7).toString());\n\t}\n\n\t// Pack and send 1st packet\n\tbuf.setFloat32(0, firmware_userMagField, true);\n\tfor (let i = 0; i < 3; i++) {\n\t\tbuf.setFloat32(4 + i * 4, firmware_userMagnetometerOffset[i], true);\n\t\tbuf.setFloat32(16 + i * 4, firmware_userMagnetometerGain[i], true);\n\t}\n\n\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SET_CORRECTION_PARAMETERS, new Uint8Array(buf.buffer));\n\n\tfor (let i = 0; i < 6; i++) {\n\t\tbuf.setFloat32(i * 4, firmware_userMagnetometerTransform[i], true);\n\t}\n\n\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SET_CORRECTION_PARAMETERS, new Uint8Array(buf.buffer, 0, 24));\n\n}\n\n// eslint-disable-next-line require-await\nexport async function sendVINTACCEL(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VINTACCEL_ACCELEROMETER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVINTACCEL(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VINTACCEL_ACCELEROMETER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT1102(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(24));\n\tlet userphid;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.ZERO:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GyroscopePacket.ZERO);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.Magnetometer);\n\t\t\tawait userphid.transactionLock.acquire();\n\t\t\ttry {\n\t\t\t\tswitch (bp.vpkt) {\n\t\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait sendMOT1102_SETCORRECTIONPARAMETERS(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tuserphid.transactionLock.release();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.Spatial);\n\t\t\tawait userphid._transactionLock.acquire();\n\t\t\ttry {\n\t\t\t\tswitch (bp.vpkt) {\n\t\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.ZERO:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GyroscopePacket.ZERO);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait sendMOT1102_SETCORRECTIONPARAMETERS(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.ZEROSPATIALALGORITHM:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.ZERO_AHRS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETSPATIALALGORITHM:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.AHRS_ALGORITHM, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETSPATIALALGORITHMMAGGAIN:\n\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.AHRS_MAG_GAIN, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETAHRSPARAMETERS:\n\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\t\tbuf.setFloat32(4, bp.getNumber(1), true);\n\t\t\t\t\t\tbuf.setFloat32(8, bp.getNumber(2), true);\n\t\t\t\t\t\tbuf.setFloat32(12, bp.getNumber(3), true);\n\t\t\t\t\t\tbuf.setFloat32(16, bp.getNumber(4), true);\n\t\t\t\t\t\tbuf.setFloat32(20, bp.getNumber(5), true);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.SET_AHRS_PARAMS, new Uint8Array(buf.buffer));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tuserphid._transactionLock.release();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvMOT1102(ch: LocalChannel, buf: DataView) {\n\tlet fireSaturation = 0;\n\tlet timestamp;\n\tconst compass = [0, 0, 0];\n\tconst accel = [0, 0, 0];\n\tconst gyro = [0, 0, 0];\n\tconst quaternion = [0, 0, 0, 0];\n\n\tconst pkt = buf.getUint8(0);\n\tlet i;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\taccel[0] = RoundDouble((buf.getInt16(1) / (1 << 12)), 4);\n\t\t\t\t\taccel[1] = RoundDouble((buf.getInt16(3) / (1 << 12)), 4);\n\t\t\t\t\taccel[2] = RoundDouble((buf.getInt16(5) / (1 << 12)), 4);\n\t\t\t\t\ttimestamp = buf.getUint32(7);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ACCELERATIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXESUPDATE: {\n\t\t\t\t\tgyro[0] = RoundDouble((buf.getFloat32(1, true)), 5);\n\t\t\t\t\tgyro[1] = RoundDouble((buf.getFloat32(5, true)), 5);\n\t\t\t\t\tgyro[2] = RoundDouble((buf.getFloat32(9, true)), 5);\n\t\t\t\t\ttimestamp = buf.getUint32(13);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: gyro });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ANGULARRATEUPDATE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_INVALID: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.INVALID_STATE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"The gyroscope has received invalid data and will recover shortly.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tcompass[0] = RoundDouble((buf.getInt16(1) / (1 << 12)), 4);\n\t\t\t\t\tcompass[1] = RoundDouble((buf.getInt16(3) / (1 << 12)), 4);\n\t\t\t\t\tcompass[2] = RoundDouble((buf.getInt16(5) / (1 << 12)), 4);\n\t\t\t\t\ttimestamp = buf.getUint32(7);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: compass });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.FIELDSTRENGTHCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE:\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\t//Positive or negative fixed point saturation\n\t\t\t\t\t\tif ((buf.getUint8(1 + (i * 2)) === 0x7F && buf.getUint8(2 + (i * 2)) === 0xFF) ||\n\t\t\t\t\t\t\t(buf.getUint8(1 + (i * 2)) === 0x80 && buf.getUint8(2 + (i * 2)) === 0x00)) {\n\t\t\t\t\t\t\tfireSaturation |= 0x04;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcompass[i] = RoundDouble((buf.getInt16(1 + (i * 2)) / (1 << 12)), 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\t//Positive or negative fixed point saturation\n\t\t\t\t\t\tif ((buf.getUint8(7 + (i * 2)) === 0x7F && buf.getUint8(8 + (i * 2)) === 0xFF) ||\n\t\t\t\t\t\t\t(buf.getUint8(7 + (i * 2)) === 0x80 && buf.getUint8(8 + (i * 2)) === 0x00)) {\n\t\t\t\t\t\t\tfireSaturation |= 0x01;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\taccel[i] = RoundDouble((buf.getInt16(7 + (i * 2)) / (1 << 12)), 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\tconst tmp = buf.getFloat32(13 + (i * 4), true);\n\t\t\t\t\t\tif (tmp === PUNK.FLT || tmp === -PUNK.FLT) {\n\t\t\t\t\t\t\tfireSaturation |= 0x02;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgyro[i] = RoundDouble(tmp, 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tquaternion[0] = buf.getFloat32(29, true);\n\t\t\t\t\tquaternion[1] = buf.getFloat32(33, true);\n\t\t\t\t\tquaternion[2] = buf.getFloat32(37, true);\n\t\t\t\t\tquaternion[3] = buf.getFloat32(41, true);\n\n\t\t\t\t\tif (fireSaturation === 0) {\n\t\t\t\t\t\ttimestamp = buf.getUint32(25);\n\t\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"G\", value: gyro });\n\t\t\t\t\t\tbp.set({ name: \"2\", type: \"G\", value: compass });\n\t\t\t\t\t\tbp.set({ name: \"3\", type: \"g\", value: timestamp });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.SPATIALDATA);\n\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: quaternion });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.SPATIALALGDATA);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet saturationError = true;\n\t\t\t\t\t\tif (fireSaturation & 0x01) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Acceleration Saturation Detected.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tsaturationError = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (fireSaturation & 0x02) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Gyroscope Saturation Detected.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tsaturationError = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (fireSaturation & 0x04) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Magnetometer Saturation Detected.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t\tsaturationError = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (saturationError) {\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected saturation flag. This is likely a firmware bug.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_INVALID: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.INVALID_STATE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"The gyroscope has received invalid data and will recover shortly.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT1102_SETCORRECTIONPARAMETERS(ch: LocalChannel, bp: BridgePacket) {\n\tconst firmware_userMagnetometerTransform = [0, 0, 0, 0, 0, 0];\n\tconst firmware_userMagnetometerOffset = [0, 0, 0];\n\tconst firmware_userMagnetometerGain = [0, 0, 0];\n\n\tconst buf = new DataView(new ArrayBuffer(28));\n\n\t// Convert double values to 32-bit int to send to firmware\n\tconst firmware_userMagField = bp.getNumber(0);\n\tfor (let i = 0; i < 3; i++) {\n\t\tfirmware_userMagnetometerOffset[i] = bp.getNumber((i + 1).toString());\n\t\tfirmware_userMagnetometerGain[i] = bp.getNumber((i + 4).toString());\n\t}\n\tfor (let i = 0; i < 6; i++) {\n\t\tfirmware_userMagnetometerTransform[i] = bp.getNumber((i + 7).toString());\n\t}\n\n\t// Pack and send 1st packet\n\tbuf.setFloat32(0, firmware_userMagField, true);\n\tfor (let i = 0; i < 3; i++) {\n\t\tbuf.setFloat32(4 + i * 4, firmware_userMagnetometerOffset[i], true);\n\t\tbuf.setFloat32(16 + i * 4, firmware_userMagnetometerGain[i], true);\n\t}\n\n\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SET_CORRECTION_PARAMETERS, new Uint8Array(buf.buffer));\n\n\tfor (let i = 0; i < 6; i++) {\n\t\tbuf.setFloat32(i * 4, firmware_userMagnetometerTransform[i], true);\n\t}\n\n\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SET_CORRECTION_PARAMETERS, new Uint8Array(buf.buffer, 0, 24));\n}\n\nexport async function sendMOT1102_1(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendMOT1102(ch, bp);\n}\n\nexport function recvMOT1102_1(ch: LocalChannel, buf: DataView) {\n\trecvMOT1102(ch, buf);\n}\n\nexport async function sendMOT0100_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(24));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvMOT0100_VINT(ch: LocalChannel, buf: DataView) {\n\tlet timestamp;\n\tconst accel = [0, 0, 0];\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tif (buf.byteLength > 17) {\n\t\t\t\t\t\tif (buf.getUint8(17) & 0x01) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more accelerometer readings is out of range.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\taccel[0] = buf.getFloat32(1, true);\n\t\t\t\t\taccel[1] = buf.getFloat32(5, true);\n\t\t\t\t\taccel[2] = buf.getFloat32(9, true);\n\t\t\t\t\ttimestamp = buf.getUint32(13);\n\n\t\t\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\t\t\tif (!isNaN(accel[i]))\n\t\t\t\t\t\t\taccel[i] = RoundDouble(accel[i], 6);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ACCELERATIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT0110_VINT(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(24));\n\tlet userphid;\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.Spatial);\n\t\t\tawait userphid._transactionLock.acquire();\n\t\t\ttry {\n\t\t\t\tswitch (bp.vpkt) {\n\t\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.ZERO:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GyroscopePacket.ZERO);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait sendMOT0110_SETCORRECTIONPARAMETERS(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.ZEROSPATIALALGORITHM:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.ZERO_AHRS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETSPATIALALGORITHM:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.AHRS_ALGORITHM, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETSPATIALALGORITHMMAGGAIN:\n\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.AHRS_MAG_GAIN, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETAHRSPARAMETERS:\n\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\t\tbuf.setFloat32(4, bp.getNumber(1), true);\n\t\t\t\t\t\tbuf.setFloat32(8, bp.getNumber(2), true);\n\t\t\t\t\t\tbuf.setFloat32(12, bp.getNumber(3), true);\n\t\t\t\t\t\tbuf.setFloat32(16, bp.getNumber(4), true);\n\t\t\t\t\t\tbuf.setFloat32(20, bp.getNumber(5), true);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.SET_AHRS_PARAMS, new Uint8Array(buf.buffer));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETHEATINGENABLED:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.SET_HEATING, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tuserphid._transactionLock.release();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.Magnetometer);\n\t\t\tawait userphid.transactionLock.acquire();\n\t\t\ttry {\n\t\t\t\tswitch (bp.vpkt) {\n\t\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\t\t\t\tawait sendMOT0110_SETCORRECTIONPARAMETERS(ch, bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BP.SETHEATINGENABLED:\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.SET_HEATING, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tuserphid.transactionLock.release();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.ZERO:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GyroscopePacket.ZERO);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHEATINGENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.SET_HEATING, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHEATINGENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SpatialPacket.SET_HEATING, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvMOT0110_VINT(ch: LocalChannel, buf: DataView) {\n\tlet timestamp;\n\tlet temperature;\n\tconst compass = [0, 0, 0];\n\tconst accel = [0, 0, 0];\n\tconst gyro = [0, 0, 0];\n\tconst quaternion = [0, 0, 0, 0];\n\tlet tmpFlt;\n\tlet interval;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tif (buf.byteLength > 41) {\n\t\t\t\t\t\tif (buf.getUint8(41) & 0x20) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more spatial readings is out of range.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\t\t\ttmpFlt = buf.getFloat32((i * 4) + 1, true);\n\t\t\t\t\t\tif (!Number.isNaN(tmpFlt)) {\n\t\t\t\t\t\t\tcompass[i] = RoundDouble(tmpFlt, 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpFlt = buf.getFloat32((i * 4) + 13, true);\n\t\t\t\t\t\tif (!Number.isNaN(tmpFlt)) {\n\t\t\t\t\t\t\taccel[i] = RoundDouble(tmpFlt, 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpFlt = buf.getFloat32((i * 4) + 25, true);\n\t\t\t\t\t\tif (!Number.isNaN(tmpFlt)) {\n\t\t\t\t\t\t\tgyro[i] = RoundDouble(tmpFlt, 5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttimestamp = buf.getUint32(37);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"G\", value: gyro });\n\t\t\t\t\tbp.set({ name: \"2\", type: \"G\", value: compass });\n\t\t\t\t\tbp.set({ name: \"3\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.SPATIALDATA);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXESUPDATE: {\n\t\t\t\t\tquaternion[0] = buf.getFloat32(1, true);\n\t\t\t\t\tquaternion[1] = buf.getFloat32(5, true);\n\t\t\t\t\tquaternion[2] = buf.getFloat32(9, true);\n\t\t\t\t\tquaternion[3] = buf.getFloat32(13, true);\n\n\t\t\t\t\ttimestamp = buf.getUint16(17);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: quaternion });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.SPATIALALGDATA);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.DATAINTERVAL_RESP: {\n\t\t\t\t\tinterval = buf.getUint16(1);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: interval });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DATAINTERVALCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tif (buf.byteLength > 17) {\n\t\t\t\t\t\tif (buf.getUint8(17) & 0x04) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more magnetometer readings is out of range.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcompass[0] = RoundDouble(buf.getFloat32(1, true), 4);\n\t\t\t\t\tcompass[1] = RoundDouble(buf.getFloat32(5, true), 4);\n\t\t\t\t\tcompass[2] = RoundDouble(buf.getFloat32(9, true), 4);\n\t\t\t\t\ttimestamp = buf.getUint32(13);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: compass });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.FIELDSTRENGTHCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.DATAINTERVAL_RESP: {\n\t\t\t\t\tinterval = buf.getUint16(1);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: interval });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DATAINTERVALCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXESUPDATE: {\n\t\t\t\t\tif (buf.byteLength > 17) {\n\t\t\t\t\t\tif (buf.getUint8(17) & 0x02) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more gyroscope readings is out of range.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgyro[0] = RoundDouble((buf.getFloat32(1, true)), 6);\n\t\t\t\t\tgyro[1] = RoundDouble((buf.getFloat32(5, true)), 6);\n\t\t\t\t\tgyro[2] = RoundDouble((buf.getFloat32(9, true)), 6);\n\t\t\t\t\ttimestamp = buf.getUint32(13);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: gyro });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ANGULARRATEUPDATE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.DATAINTERVAL_RESP: {\n\t\t\t\t\tinterval = buf.getUint16(1);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: interval });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DATAINTERVALCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.GenericPacket.AXES_AXISVALUECHANGE: {\n\t\t\t\t\tif (buf.byteLength > 17) {\n\t\t\t\t\t\tif (buf.getUint8(17) & 0x01) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more accelerometer readings is out of range.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taccel[0] = RoundDouble(buf.getFloat32(1, true), 6);\n\t\t\t\t\taccel[1] = RoundDouble(buf.getFloat32(5, true), 6);\n\t\t\t\t\taccel[2] = RoundDouble(buf.getFloat32(9, true), 6);\n\t\t\t\t\ttimestamp = buf.getUint32(13);\n\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: accel });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: timestamp });\n\t\t\t\t\tbp.sendToChannel(ch, BP.ACCELERATIONCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.DATAINTERVAL_RESP: {\n\t\t\t\t\tinterval = buf.getUint16(1);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: interval });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DATAINTERVALCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\tif (buf.byteLength > 5) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tswitch (buf.getUint8(5) & 0x18) {\n\t\t\t\t\t\t\tcase 0x08:\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION });\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is too low to be accurately measured.\" });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 0x10:\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is too high to be accurately measured.\" });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 0x18:\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is unknown.\" });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t}\n\n\t\t\t\t\ttemperature = RoundDouble(buf.getFloat32(1, true), 3);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: temperature });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.GenericPacket.DATAINTERVAL_RESP: {\n\t\t\t\t\tinterval = buf.getUint16(1);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: interval });\n\t\t\t\t\tbp.sendToChannel(ch, BP.DATAINTERVALCHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendMOT0110_SETCORRECTIONPARAMETERS(ch: LocalChannel, bp: BridgePacket) {\n\tconst firmware_userMagnetometerTransform = [0, 0, 0, 0, 0, 0];\n\tconst firmware_userMagnetometerOffset = [0, 0, 0];\n\tconst firmware_userMagnetometerGain = [0, 0, 0];\n\n\tconst buf = new DataView(new ArrayBuffer(28));\n\n\t// Convert double values to 32-bit int to send to firmware\n\tconst firmware_userMagField = bp.getNumber(0);\n\tfor (let i = 0; i < 3; i++) {\n\t\tfirmware_userMagnetometerOffset[i] = bp.getNumber((i + 1).toString());\n\t\tfirmware_userMagnetometerGain[i] = bp.getNumber((i + 4).toString());\n\t}\n\tfor (let i = 0; i < 6; i++) {\n\t\tfirmware_userMagnetometerTransform[i] = bp.getNumber((i + 7).toString());\n\t}\n\n\t// Pack and send 1st packet\n\tbuf.setFloat32(0, firmware_userMagField, true);\n\tfor (let i = 0; i < 3; i++) {\n\t\tbuf.setFloat32(4 + i * 4, firmware_userMagnetometerOffset[i], true);\n\t\tbuf.setFloat32(16 + i * 4, firmware_userMagnetometerGain[i], true);\n\t}\n\n\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SET_CORRECTION_PARAMETERS, new Uint8Array(buf.buffer));\n\n\tfor (let i = 0; i < 6; i++) {\n\t\tbuf.setFloat32(i * 4, firmware_userMagnetometerTransform[i], true);\n\t}\n\n\tawait ch.sendVINTDataPacket(VintPacketType.MagnetometerPacket.SET_CORRECTION_PARAMETERS, new Uint8Array(buf.buffer, 0, 24));\n}\n\nexport async function sendPRE1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PressureSensorPacket.SETPRESSURECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvPRE1000(ch: LocalChannel, buf: DataView) {\n\tlet pressure;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.PressureSensorPacket.PRESSURECHANGE: {\n\t\t\t\t\tpressure = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(pressure, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.PRESSURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PressureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendRCC1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.VOLTAGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETMINPULSEWIDTH:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 1000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETMINPULSEWIDTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETMAXPULSEWIDTH:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 1000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETMAXPULSEWIDTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 16 / 2500);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 16 / 50);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 1000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSPEEDRAMPINGSTATE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETSPEEDRAMPINGSTATE, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.VOLTAGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETMINPULSEWIDTH:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 1000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETMINPULSEWIDTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETMAXPULSEWIDTH:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 1000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETMAXPULSEWIDTH, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 16 / 2500);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 16 / 50);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTARGETPOSITION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * 1000);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETSPEEDRAMPINGSTATE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.RCServoPacket.SETSPEEDRAMPINGSTATE, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvRCC1000(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.RCServoPacket.BAD_POWER_SUPPLY: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.BAD_POWER });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Servo motors are drawing too much power or the power supply is not providing enough voltage or current.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.RCServoPacket.ARRIVED_AT_TARGET_POSITION: {\n\t\t\t\t\tmotorPosition = buf.getUint16(1) / 16;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TARGETPOSITIONREACHED);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.RCServoPacket.BAD_POWER_SUPPLY: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.BAD_POWER });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Servo motors are drawing too much power or the power supply is not providing enough voltage or current.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.RCServoPacket.ARRIVED_AT_TARGET_POSITION: {\n\t\t\t\t\tmotorPosition = buf.getUint16(1) / 16;\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TARGETPOSITIONREACHED);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.RCServoPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendRCC1000_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendRCC1000(ch, bp);\n}\n\nexport function recvRCC1000_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvRCC1000(ch, buf);\n}\n\n// eslint-disable-next-line require-await\nexport async function sendRCC1000_1(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendRCC1000(ch, bp);\n}\n\nexport function recvRCC1000_1(ch: LocalChannel, buf: DataView) {\n\trecvRCC1000(ch, buf);\n}\n\nexport async function sendREL1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(2));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvREL1000(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet received.\");\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Failsafe procedure initiated.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendREL1000_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendREL1000(ch, bp);\n}\n\nexport function recvREL1000_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvREL1000(ch, buf);\n}\n\nexport async function sendREL1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) ? (1 << 15) : 0);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 15));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFREQUENCY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETFREQUENCY, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvREL1100(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet received.\");\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendREL1100_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendREL1100(ch, bp);\n}\n\nexport function recvREL1100_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvREL1100(ch, buf);\n}\n\nexport async function sendREL1100_Failsafe_Frequency(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendREL1100(ch, bp);\n}\n\nexport function recvREL1100_Failsafe_Frequency(ch: LocalChannel, buf: DataView) {\n\trecvREL1100(ch, buf);\n}\n\nexport async function sendREL1101(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(2));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) * 255);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) * 255);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvREL1101(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendREL1101_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendREL1101(ch, bp);\n}\n\nexport function recvREL1101_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvREL1101(ch, buf);\n}\n\nexport async function sendREL1101_1(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) * 255);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFREQUENCY:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETFREQUENCY, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETSTATE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDUTYCYCLE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) * 255);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvREL1101_1(ch: LocalChannel, buf: DataView) {\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendTP_DIAGNOSER_0(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TP_DIAGNOSER_RESISTANCEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTP_DIAGNOSER_0(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TP_DIAGNOSER_RESISTANCEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSAF1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PowerGuardPacket.SETPOWERENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETOVERVOLTAGE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PowerGuardPacket.SETOVERVOLTAGE, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFANMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PowerGuardPacket.SETFANMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETENABLED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PowerGuardPacket.SETPOWERENABLED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETOVERVOLTAGE:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PowerGuardPacket.SETOVERVOLTAGE, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFANMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.PowerGuardPacket.SETFANMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSAF1000(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.PowerGuardPacket.ENERGYDUMP: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.ENERGY_DUMP_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Energy Dump in Progress.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.OVERTEMPERATURE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OVER_TEMPERATURE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Overtemperature Condition Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.OVERVOLTAGE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OVER_VOLTAGE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Overvoltage Condition Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.POWERON: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SUCCESS });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'All error conditions have been resolved' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.PowerGuardPacket.ENERGYDUMP: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.ENERGY_DUMP_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Energy Dump in Progress.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.OVERTEMPERATURE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OVER_TEMPERATURE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Overtemperature Condition Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.OVERVOLTAGE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OVER_VOLTAGE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Overvoltage Condition Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.POWERON: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SUCCESS });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'All error conditions have been resolved' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.PowerGuardPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getUint32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 7) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(temperature, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSAF1000_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendSAF1000(ch, bp);\n}\n\nexport function recvSAF1000_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvSAF1000(ch, buf);\n}\n\nexport async function sendSND1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbreak;  // NOTE: Not sent to firmware, but used directly in recvSND1000\n\t\t\t\tcase BP.SETSPLRANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.SoundSensorPacket.SPLRANGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSND1000(ch: LocalChannel, buf: DataView) {\n\tconst octaves = new Array(10);\n\tconst finaloctaves = new Array(10);\n\tlet tempDouble, gain, dB = 0.0, dBA = 0.0, dBC = 0.0, changeTrigger, lastdB;\n\tlet saturatedFlag = false;\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.SoundSensor);\n\n\t//16kHz = element 0\n\tconst dBA_weight = [-6.700912224792721, -1.144507424157968, 0.9642291552357972, 1.2016993444284976, 0.0, -3.098968656056327, -8.456545621324212, -16.189851062139507, -26.22302364022129, -39.52906401331724];\n\tconst dBC_weight = [-8.62944227232129, -3.0448821481317507, -0.8252420358959885, -0.16942156787436816, 0.0, 0.03251328929742176, 0.0019618319836562453, -0.1718184155510175, -0.8206982482269319, 3.030794594641769];\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.SoundSensorPacket.DBCHANGE:\n\t\t\t\t\tgain = buf.getUint8(41) == 1 ? 39.912703891951 : 59.912703891951; //99 and 990\n\t\t\t\t\tsaturatedFlag = buf.getUint8(42) == 1 ? true : false;\n\t\t\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\t\t\ttempDouble = Math.sqrt(buf.getFloat32(i * 4 + 1, true));    //adc sample^2/cnt\n\t\t\t\t\t\ttempDouble *= (3300.0 / 4095.0);    //convert to mV\n\t\t\t\t\t\ttempDouble /= (6.309573444801932); //convert from mV to Pa\n\t\t\t\t\t\toctaves[i] = 20.0 * Math.log10(tempDouble) + 94.0 - gain;   //calculate SPL\n\n\t\t\t\t\t\tdB += Math.pow(10, (octaves[i] / 10.0));\n\t\t\t\t\t\tdBA += Math.pow(10, ((octaves[i] + dBA_weight[i]) / 10.0));\n\t\t\t\t\t\tdBC += Math.pow(10, ((octaves[i] + dBC_weight[i]) / 10.0));\n\t\t\t\t\t}\n\t\t\t\t\tif (saturatedFlag) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdB = 10 * Math.log10(dB);\n\t\t\t\t\t\tdBA = 10 * Math.log10(dBA);\n\t\t\t\t\t\tdBC = 10 * Math.log10(dBC);\n\t\t\t\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\t\t\t\tfinaloctaves[i] = RoundDouble(octaves[9 - i], 4); //flip so element 0 is the lowest freq band\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchangeTrigger = userphid.data.SPLChangeTrigger;\n\t\t\t\t\t\tlastdB = userphid.data.lastdB;\n\n\t\t\t\t\t\tif (Math.abs(lastdB - dB) > changeTrigger) {\n\t\t\t\t\t\t\tuserphid.data.lastdB = dB;\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(dB, 4) });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: RoundDouble(dBA, 4) });\n\t\t\t\t\t\t\tbp.set({ name: \"2\", type: \"g\", value: RoundDouble(dBC, 4) });\n\t\t\t\t\t\t\tbp.set({ name: \"3\", type: \"G\", value: finaloctaves });\n\t\t\t\t\t\t\tbp.sendToChannel(ch, BP.DBCHANGE);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSTC1000(ch: LocalChannel, bp: BridgePacket) {\n\n\tconst buf = new DataView(new ArrayBuffer(8));\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSTC1000(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\tlet velocity;\n\tlet stopped;\n\tlet moving;\n\n\tconst pkt = buf.getUint8(0);\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.Stepper);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSTC1000_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendSTC1000(ch, bp);\n}\n\nexport function recvSTC1000_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvSTC1000(ch, buf);\n}\n\nexport async function sendSTC1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSTC1001(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\tlet velocity;\n\tlet stopped;\n\tlet moving;\n\n\tconst pkt = buf.getUint8(0);\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.Stepper);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSTC1001_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendSTC1001(ch, bp);\n}\n\nexport function recvSTC1001_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvSTC1001(ch, buf);\n}\n\nexport async function sendSTC1002(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSTC1002(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\tlet velocity;\n\tlet stopped;\n\tlet moving;\n\n\tconst pkt = buf.getUint8(0);\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.Stepper);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSTC1002_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendSTC1002(ch, bp);\n}\n\nexport function recvSTC1002_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvSTC1002(ch, buf);\n}\n\nexport async function sendSTC1003(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSTC1003(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\tlet velocity;\n\tlet stopped;\n\tlet moving;\n\n\tconst pkt = buf.getUint8(0);\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst userphid = (ch.userphid! as unknown as UserPhidgetClass.Stepper);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped == moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped && (stopped == moving)) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.StepperPacket.POWER_ERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.BAD_POWER });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Overcurrent error detected. Device has been reset.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendSTC1003_Failsafe(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendSTC1003(ch, bp);\n}\n\nexport function recvSTC1003_Failsafe(ch: LocalChannel, buf: DataView) {\n\trecvSTC1003(ch, buf);\n}\n\nexport async function sendSTC1003_1(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(8));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETTARGETPOSITION: {\n\t\t\t\t\tconst position = bp.getNumber(0);\n\t\t\t\t\tSetBigInt64(buf, 0, position);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETTARGETPOSITION, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETVELOCITYLIMIT, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETACCELERATION:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 7));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.DCMotorPacket.SETACCELERATION, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0) * (1 << 8));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETHOLDINGCURRENTLIMIT, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETENGAGED:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0) ? 0xFF : 0x00);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETENGAGED, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.StepperPacket.SETCONTROLMODE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETFAILSAFETIME:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_TIME, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.FAILSAFERESET:\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.FAILSAFE_RESET);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSTC1003_1(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\tlet velocity;\n\tlet voltage;\n\tlet stopped;\n\tlet moving;\n\tlet userphid;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 formate (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.Stepper);\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped && moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.StepperPacket.POWER_ERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.BAD_POWER });\n\t\t\t\t\tif (buf.getUint8(1)) {\n\t\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Supply Voltage above expected range.' });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Supply Voltage below expected range.  Possible overcurrent condition.' });\n\t\t\t\t\t}\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 7) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendSTC1004_0(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1004_STEPPER_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvSTC1004_0(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1004_STEPPER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendSTC1005_0(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendSTC1003_1(ch, bp);\n}\n\nexport function recvSTC1005_0(ch: LocalChannel, buf: DataView) {\n\tlet motorPosition;\n\tlet velocity;\n\tlet voltage;\n\tlet stopped;\n\tlet moving;\n\tlet userphid;\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.StepperPacket.STATUSUPDATE: {\n\t\t\t\t\t// Position in Q32.0 format (units are steps)\n\t\t\t\t\tmotorPosition = GetBigInt64(buf, 1);\n\t\t\t\t\t// Velocity in Q32.0 format (units are steps/sec)\n\t\t\t\t\tvelocity = buf.getInt32(9) / 256;\n\t\t\t\t\t//Stopped\n\t\t\t\t\tstopped = buf.getUint8(13) ? 1 : 0;\n\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'l', value: motorPosition });\n\t\t\t\t\tbp.sendToChannel(ch, BP.POSITIONCHANGE);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: velocity });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VELOCITYCHANGE);\n\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tuserphid = (ch.userphid! as unknown as UserPhidgetClass.Stepper);\n\t\t\t\t\tmoving = userphid.data.isMoving;\n\t\t\t\t\tif (stopped && moving) {\n\t\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.STOPPED);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.DCMotorPacket.FAILSAFE: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.StepperPacket.POWER_ERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.BAD_POWER });\n\t\t\t\t\tif (buf.getUint8(1)) {\n\t\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Supply Voltage above expected range.' });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Supply Voltage below expected range.  Possible overcurrent condition.' });\n\t\t\t\t\t}\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.StepperPacket.FAULT_ERROR: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAULT });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Fault condition detected. Motor is disengaged and position is lost. Re-engage and re-initialize your system.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.StepperPacket.OVERTEMPERATURE: {\n\t\t\t\t\tlet bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAULT });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Fault condition detected. Motor is disengaged and position is lost. Re-engage and re-initialize your system.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\n\t\t\t\t\tbp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OVER_TEMPERATURE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Overtemperature Condition Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 7) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendTMP1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 16));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1000(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getInt32(1) / (1 << 16);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(temperature, 2) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendTMP1100(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTHERMOCOUPLETYPE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.THERMOCOUPLETYPE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1100(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 6) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendTMP1101(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTHERMOCOUPLETYPE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.THERMOCOUPLETYPE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1101(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 6) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendTMP1101_1(ch: LocalChannel, bp: BridgePacket) {\n\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETTHERMOCOUPLETYPE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.THERMOCOUPLETYPE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1101_1(ch: LocalChannel, buf: DataView) {\n\tlet temperature;\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.BADCONNECTION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Bad Connection\" });\n\t\t\t\t\t//ch.sendErrorEvent(bp);\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(voltage, 6) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.BADCONNECTION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Bad Connection\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendTMP1200(ch: LocalChannel, bp: BridgePacket) {\n\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETRTDWIRESETUP:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.RTD_WIRESETUP, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETRTDTYPE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.RTDTYPE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.ResistanceInputPacket.SETRESISTANCECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETRTDWIRESETUP:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.RTD_WIRESETUP, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1200(ch: LocalChannel, buf: DataView) {\n\tlet temperature, resistance;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.ResistanceInputPacket.RESISTANCECHANGE: {\n\t\t\t\t\tresistance = buf.getFloat32(1, true);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(resistance, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.RESISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.ResistanceInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Saturation Detected.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendTMP1200_1(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETRTDWIRESETUP:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.RTD_WIRESETUP, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETRTDTYPE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.TemperatureSensorPacket.RTDTYPE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL: {\n\t\t\t\t\tconst dataInterval = ch.parent.parent?._handleDataIntervalPacket(bp, 1);\n\t\t\t\t\tif (dataInterval)\n\t\t\t\t\t\tbuf.setUint16(0, dataInterval);\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.ResistanceInputPacket.SETRESISTANCECHANGETRIGGER, new Uint8Array(buf.buffer));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETRTDWIRESETUP:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.RTD_WIRESETUP, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1200_1(ch: LocalChannel, buf: DataView) {\n\tlet temperature, resistance;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.TEMPERATURECHANGE: {\n\t\t\t\t\ttemperature = buf.getFloat32(1, true);\n\t\t\t\t\tif (buf.byteLength > 5) {\n\t\t\t\t\t\tif (temperature > 0) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is too high to be accurately measured.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is too low to be accurately measured.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(temperature, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.TEMPERATURECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is unknown.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.BADCONNECTION: {\n\t\t\t\t\tif (buf.getUint8(1)) {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Bad Connection: Check polarity of connection.\" });\n\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Bad Connection: RTD is likely disconnected.\" });\n\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.ResistanceInputPacket.RESISTANCECHANGE: {\n\t\t\t\t\tresistance = buf.getFloat32(1, true);\n\t\t\t\t\tif (buf.byteLength > 5) {\n\t\t\t\t\t\tif (resistance > 0) {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Resistance is too high to be accurately measured.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Bad Connection: check polarity of connection.\" });\n\t\t\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: RoundDouble(resistance, 3) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.RESISTANCECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.TemperatureSensorPacket.BADCONNECTION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Bad Connection.\" });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendTMP1300(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IR_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1300_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvTMP1300(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IR_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1300_TEMPERATURESENSOR_IC_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1300_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVCP1000(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tswitch (bp.getNumber(0)) {\n\t\t\t\t\t\tcase Enum.VoltageRange.MILLIVOLTS_312_5:\n\t\t\t\t\t\tcase Enum.VoltageRange.VOLTS_40:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid or unsupported voltage range for this device.\");\n\t\t\t\t\t}\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.VCP1000RANGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVCP1000(ch: LocalChannel, buf: DataView) {\n\tlet voltage;\n\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 7) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVCP1001(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tswitch (bp.getNumber(0)) {\n\t\t\t\t\t\tcase Enum.VoltageRange.VOLTS_5:\n\t\t\t\t\t\tcase Enum.VoltageRange.VOLTS_15:\n\t\t\t\t\t\tcase Enum.VoltageRange.VOLTS_40:\n\t\t\t\t\t\tcase Enum.VoltageRange.AUTO:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid or unsupported voltage range for this device.\");\n\t\t\t\t\t}\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.VCP1001RANGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVCP1001(ch: LocalChannel, buf: DataView) {\n\tlet voltage;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 4) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVCP1002(ch: LocalChannel, bp: BridgePacket) {\n\tconst buf = new DataView(new ArrayBuffer(4));\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tcase BP.SETDATAINTERVAL:\n\t\t\t\t\tbuf.setUint16(0, bp.getNumber(0));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, new Uint8Array(buf.buffer, 0, 2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETCHANGETRIGGER:\n\t\t\t\t\tbuf.setUint32(0, bp.getNumber(0) * (1 << 24));\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.SETVOLTAGECHANGETRIGGER, new Uint8Array(buf.buffer, 0, 4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\n\t\t\t\t\tswitch (bp.getNumber(0)) {\n\t\t\t\t\t\tcase Enum.VoltageRange.MILLIVOLTS_10:\n\t\t\t\t\t\tcase Enum.VoltageRange.MILLIVOLTS_40:\n\t\t\t\t\t\tcase Enum.VoltageRange.MILLIVOLTS_200:\n\t\t\t\t\t\tcase Enum.VoltageRange.MILLIVOLTS_1000:\n\t\t\t\t\t\tcase Enum.VoltageRange.AUTO:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid or unsupported voltage range for this device.\");\n\t\t\t\t\t}\n\t\t\t\t\tawait ch.sendVINTDataPacket(VintPacketType.VoltageInputPacket.VCP1002RANGE, new Uint8Array(buf.buffer, 0, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvVCP1002(ch: LocalChannel, buf: DataView) {\n\tlet voltage;\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tcase VintPacketType.VoltageInputPacket.VOLTAGECHANGE: {\n\t\t\t\t\tvoltage = buf.getInt32(1) / (1 << 24);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: RoundDouble(voltage, 7) });\n\t\t\t\t\tbp.sendToChannel(ch, BP.VOLTAGECHANGE);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase VintPacketType.VoltageInputPacket.SATURATION: {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.SATURATION });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Saturation Detected.' });\n\t\t\t\t\tch.sendErrorEvent(bp);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport async function sendVCP1001_110(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendVCP1001(ch, bp);\n}\nexport function recvVCP1001_110(ch: LocalChannel, buf: DataView) {\n\treturn recvVCP1001(ch, buf);\n}\nexport async function sendVCP1002_110(ch: LocalChannel, bp: BridgePacket) {\n\tawait sendVCP1002(ch, bp);\n}\nexport function recvVCP1002_110(ch: LocalChannel, buf: DataView) {\n\treturn recvVCP1002(ch, buf);\n}\n\n// eslint-disable-next-line require-await\nexport async function sendFIRMWARE_UPGRADE_STM32F0(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvFIRMWARE_UPGRADE_STM32F0(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendFIRMWARE_UPGRADE_STM32G0_BLBug(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvFIRMWARE_UPGRADE_STM32G0_BLBug(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendFIRMWARE_UPGRADE_STM32G0(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvFIRMWARE_UPGRADE_STM32G0(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendFIRMWARE_UPGRADE_STM32F3(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvFIRMWARE_UPGRADE_STM32F3(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendFIRMWARE_UPGRADE_STM8S(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvFIRMWARE_UPGRADE_STM8S(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendGENERICVINT(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VINT_GENERIC:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvGENERICVINT(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VINT_GENERIC:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n// eslint-disable-next-line require-await\nexport async function sendUNKNOWNVINT(ch: LocalChannel, bp: BridgePacket) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\tswitch (bp.vpkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\nexport function recvUNKNOWNVINT(ch: LocalChannel, buf: DataView) {\n\tthrow new Error(\"Not Implemented\");\n\n\t// eslint-disable-next-line no-unreachable\n\tconst pkt = buf.getUint8(0);\n\n\tswitch (ch.chDef.uid) {\n\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\tswitch (pkt) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID, \"Invalid Channel UID\");\n\t}\n}\n\n","﻿import { ErrorCode } from '../Enumerations.gen';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { WordByteArrayToString } from '../Utils';\r\nimport { PhidgetUSBData, PUSBParams } from './PhidgetUSBDevice';\r\n\r\n/** @internal */\r\nexport const enum PhidgetUSBRequestType {\r\n\tPHIDGETUSB_REQ_CHANNEL_WRITE = 0x00,\r\n\tPHIDGETUSB_REQ_CHANNEL_READ = 0x01,\r\n\tPHIDGETUSB_REQ_DEVICE_WRITE = 0x02,\r\n\tPHIDGETUSB_REQ_DEVICE_READ = 0x03,\r\n\tPHIDGETUSB_REQ_GPP_WRITE = 0x04,\r\n\tPHIDGETUSB_REQ_GPP_READ = 0x05,\r\n\tPHIDGETUSB_REQ_BULK_WRITE = 0x06\r\n}\r\n\r\n/** @internal */\r\nexport const enum PhidgetVendorDescriptorType {\r\n\tUSB_DESC_TYPE_PHIDGET_DEVICE = (0x40 | 0x00),\r\n\tUSB_DESC_TYPE_PHIDGET_INTERFACE = (0x40 | 0x01),\r\n\tUSB_DESC_TYPE_PHIDGET_ENDPOINT = (0x40 | 0x02),\r\n\tUSB_DESC_TYPE_VINT_PORTS_DESC = (0x40 | 0x03),\r\n\tUSB_DESC_TYPE_VINT_DEVICE_DESC = (0x40 | 0x04),\r\n\tUSB_DESC_TYPE_VINT_PORT_DESC = (0x40 | 0x05)\r\n}\r\n\r\n/** @internal */\r\nexport const USBVID_PHIDGETS = 0x06C2;\r\nconst USBPID_PHIDGETS_MIN = 0x0030;\r\nconst USBPID_PHIDGETS_MAX = 0x00AF;\r\n\r\nconst USBD_PHIDGET_PROTO_VERSION = 0x0110;\r\n\r\n/** @internal */\r\nconst enum USBEndpointDescriptor {\r\n\tUSB_ENDPOINT_TYPE_MASK = 0x03,\r\n\tUSB_ENDPOINT_TYPE_CONTROL = 0x00,\r\n\tUSB_ENDPOINT_TYPE_ISOCHRONOUS = 0x01,\r\n\tUSB_ENDPOINT_TYPE_BULK = 0x02,\r\n\tUSB_ENDPOINT_TYPE_INTERRUPT = 0x03,\r\n}\r\n\r\n/** @internal */\r\nexport const enum PhidgetUSBEndpointType {\r\n\tPHID_EP_UNAVAILABLE = 0,\r\n\tPHID_EP_BULK = 1,\r\n\tPHID_EP_INTERRUPT = 2\r\n}\r\n\r\n/** @internal */\r\nexport const enum USBDescriptorType {\r\n\tUSB_DEVICE_DESCRIPTOR_TYPE = 0x01,\r\n\tUSB_CONFIGURATION_DESCRIPTOR_TYPE = 0x02,\r\n\tUSB_STRING_DESCRIPTOR_TYPE = 0x03,\r\n\tUSB_INTERFACE_DESCRIPTOR_TYPE = 0x04,\r\n\tUSB_ENDPOINT_DESCRIPTOR_TYPE = 0x05\r\n}\r\n\r\nconst USB_CONFIGURATION_DESCRIPTOR = 9;\r\nconst USB_COMMON_DESCRIPTOR = 2;\r\n\r\nasync function GetPhidgetDeviceParams(usbDevice: USBDevice): Promise<PUSBParams> {\r\n\tlet endpointDesc = null;\r\n\tlet phidgetDeviceDesc = null;\r\n\tlet phidgetEndpointDesc = null;\r\n\r\n\tconst params: PUSBParams = {\r\n\t\tmaxPacketEP0: 0,\r\n\t\tep1type: PhidgetUSBEndpointType.PHID_EP_UNAVAILABLE,\r\n\t\tmaxPacketEP1: 0,\r\n\t\tep2type: PhidgetUSBEndpointType.PHID_EP_UNAVAILABLE,\r\n\t\tmaxPacketEP2: 0,\r\n\t\twMaxPacketSizeEP1: 0,\r\n\t\tlabelIndex: 0,\r\n\t\tskuIndex: 0\r\n\t}\r\n\r\n\tlet descEnd = null;\r\n\tconst configDescData = await GetConfigDescriptor(usbDevice, 0);\r\n\r\n\tconst configDesc = {\r\n\t\tbLength: configDescData.getUint8(0),\r\n\t\tbDescriptorType: configDescData.getUint8(1),\r\n\t\twTotalLength: (configDescData.getUint8(3) << 8) | configDescData.getUint8(2),\r\n\t\tbNumInterfaces: configDescData.getUint8(4),\r\n\t\tbConfigurationValue: configDescData.getUint8(5),\r\n\t\tiConfiguration: configDescData.getUint8(6),\r\n\t\tbmAttributes: configDescData.getUint8(7),\r\n\t\tMaxPower: configDescData.getUint8(8)\r\n\t}\r\n\r\n\tdescEnd = 0 + configDesc.wTotalLength;\r\n\r\n\tparams.ep1type = PhidgetUSBEndpointType.PHID_EP_UNAVAILABLE;\r\n\tparams.maxPacketEP1 = 0;\r\n\tparams.ep2type = PhidgetUSBEndpointType.PHID_EP_UNAVAILABLE;\r\n\tparams.maxPacketEP2 = 0;\r\n\r\n\tlet i = 0;\r\n\twhile (i + 2 < descEnd && i + configDescData.getUint8(i) <= descEnd) {\r\n\t\tswitch (configDescData.getUint8(i + 1)) {\r\n\t\t\tcase USBDescriptorType.USB_CONFIGURATION_DESCRIPTOR_TYPE:\r\n\t\t\t\tif (configDescData.getUint8(i) !== 9)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Error parsing config descriptor!\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase USBDescriptorType.USB_INTERFACE_DESCRIPTOR_TYPE:\r\n\t\t\t\tbreak;\r\n\t\t\tcase USBDescriptorType.USB_ENDPOINT_DESCRIPTOR_TYPE:\r\n\t\t\t\tif (configDescData.getUint8(i) !== 7)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Error parsing config descriptor!\");\r\n\r\n\t\t\t\tendpointDesc = {\r\n\t\t\t\t\tbLength: configDescData.getUint8(i),\r\n\t\t\t\t\tbDescriptorType: configDescData.getUint8(i + 1),\r\n\t\t\t\t\tbEndpointAddress: configDescData.getUint8(i + 2),\r\n\t\t\t\t\tbmAttributes: configDescData.getUint8(i + 3),\r\n\t\t\t\t\twMaxPacketSize: (configDescData.getUint8(i + 5) << 8) | configDescData.getUint8(i + 4),\r\n\t\t\t\t\tbInterval: configDescData.getUint8(i + 6),\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//EP1 IN\r\n\t\t\t\tif (endpointDesc.bEndpointAddress === 0x81) {\r\n\t\t\t\t\tparams.wMaxPacketSizeEP1 = endpointDesc.wMaxPacketSize;\r\n\t\t\t\t\tif (endpointDesc.bmAttributes === USBEndpointDescriptor.USB_ENDPOINT_TYPE_BULK)\r\n\t\t\t\t\t\tparams.ep1type = PhidgetUSBEndpointType.PHID_EP_BULK;\r\n\t\t\t\t\tif (endpointDesc.bmAttributes === USBEndpointDescriptor.USB_ENDPOINT_TYPE_INTERRUPT)\r\n\t\t\t\t\t\tparams.ep1type = PhidgetUSBEndpointType.PHID_EP_INTERRUPT;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//EP2 OUT\r\n\t\t\t\tif (endpointDesc.bEndpointAddress === 0x02) {\r\n\t\t\t\t\tparams.maxPacketEP2 = endpointDesc.wMaxPacketSize;\r\n\t\t\t\t\tparams.ep2type = PhidgetUSBEndpointType.PHID_EP_BULK;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase PhidgetVendorDescriptorType.USB_DESC_TYPE_PHIDGET_DEVICE:\r\n\t\t\t\tif (configDescData.getUint8(i) !== 8)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Error parsing config descriptor!\");\r\n\r\n\t\t\t\tphidgetDeviceDesc = {\r\n\t\t\t\t\tbLength: configDescData.getUint8(i),\r\n\t\t\t\t\tbDescriptorType: configDescData.getUint8(i + 1),\r\n\t\t\t\t\tbcdVersion: (configDescData.getUint8(i + 3) << 8) | configDescData.getUint8(i + 2),\r\n\t\t\t\t\tiLabel: configDescData.getUint8(i + 4),\r\n\t\t\t\t\tiSKU: configDescData.getUint8(i + 5),\r\n\t\t\t\t\twMaxPacketSize: (configDescData.getUint8(i + 7) << 8) | configDescData.getUint8(i + 6),\r\n\t\t\t\t}\r\n\t\t\t\tif (phidgetDeviceDesc.bcdVersion !== USBD_PHIDGET_PROTO_VERSION) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"Unknown Phidget descriptor version: \" + phidgetDeviceDesc.bcdVersion + \" - Library upgrade may be required.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.labelIndex = phidgetDeviceDesc.iLabel;\r\n\t\t\t\tparams.skuIndex = phidgetDeviceDesc.iSKU;\r\n\t\t\t\tparams.maxPacketEP0 = phidgetDeviceDesc.wMaxPacketSize;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase PhidgetVendorDescriptorType.USB_DESC_TYPE_PHIDGET_ENDPOINT:\r\n\t\t\t\tif (configDescData.getUint8(i) !== 4)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Error parsing config descriptor!\");\r\n\r\n\t\t\t\tphidgetEndpointDesc = {\r\n\t\t\t\t\tbLength: configDescData.getUint8(i),\r\n\t\t\t\t\tbDescriptorType: configDescData.getUint8(i + 1),\r\n\t\t\t\t\twMaxPacketSize: (configDescData.getUint8(i + 3) << 8) | configDescData.getUint8(i + 2),\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (endpointDesc == undefined)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Didn't get Phidget Endpoint descriptor!\");\r\n\r\n\t\t\t\t// This phidget endpoint descriptor enhances the preceding endpoint descriptor\r\n\t\t\t\tif ((endpointDesc.bEndpointAddress & 0x7F) == 0x01)\r\n\t\t\t\t\tparams.maxPacketEP1 = phidgetEndpointDesc.wMaxPacketSize;\r\n\t\t\t\tif ((endpointDesc.bEndpointAddress & 0x7F) == 0x02)\r\n\t\t\t\t\tparams.maxPacketEP2 = phidgetEndpointDesc.wMaxPacketSize;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\ti += configDescData.getUint8(i);\r\n\t}\r\n\r\n\treturn (params);\r\n}\r\n\r\nexport async function GetPhidgetUSBData(usbDevice: USBDevice): Promise<PhidgetUSBData> {\r\n\tlet desc;\r\n\r\n\tif (usbDevice.vendorId !== USBVID_PHIDGETS)\r\n\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\tif (usbDevice.productId < USBPID_PHIDGETS_MIN || usbDevice.productId > USBPID_PHIDGETS_MAX)\r\n\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t// We've found the device - next read some params (may fail if device is open elsewhere)\r\n\r\n\t//getting Descriptors\r\n\tdesc = await GetDescriptor(usbDevice, USBDescriptorType.USB_DEVICE_DESCRIPTOR_TYPE, 0, 0);\r\n\r\n\tconst devDescriptor = {\r\n\t\tbLength: desc.getUint8(0),\r\n\t\tbDescriptorType: desc.getUint8(1),\r\n\t\tbcdUSB: (desc.getUint8(3) << 8) | desc.getUint8(2),\r\n\t\tbDeviceClass: desc.getUint8(4),\r\n\t\tbDeviceSubClass: desc.getUint8(5),\r\n\t\tbDeviceProtocol: desc.getUint8(6),\r\n\t\tbMaxPacketSize0: desc.getUint8(7),\r\n\t\tidVendor: (desc.getUint8(9) << 8) | desc.getUint8(8),\r\n\t\tidProduct: (desc.getUint8(11) << 8) | desc.getUint8(10),\r\n\t\tbcdDevice: (desc.getUint8(13) << 8) | desc.getUint8(12),\r\n\t\tiManufacturer: desc.getUint8(14),\r\n\t\tiProduct: desc.getUint8(15),\r\n\t\tiSerialNumber: desc.getUint8(16),\r\n\t\tbNumConfigurations: desc.getUint8(17),\r\n\t};\r\n\r\n\tdesc = await GetDescriptor(usbDevice, USBDescriptorType.USB_STRING_DESCRIPTOR_TYPE, devDescriptor.iSerialNumber, 0);\r\n\r\n\t// BCD -> Decimal (up to 4 digits)\r\n\tconst version = (((devDescriptor.bcdDevice >> 12) & 0x0F) * 1000)\r\n\t\t+ (((devDescriptor.bcdDevice >> 8) & 0x0F) * 100)\r\n\t\t+ (((devDescriptor.bcdDevice >> 4) & 0x0F) * 10)\r\n\t\t+ (devDescriptor.bcdDevice & 0x0F);\r\n\r\n\t// convert the whole strDescriptor to uint16, but drop the first two element since they are bLength and bDescriptorType\r\n\t//      remaining elements make up the string\r\n\tconst serial = parseInt(WordByteArrayToString(new Uint16Array(desc.buffer, 2)));\r\n\t//log(\"serialNumber: \" + devData.serialNumber);\r\n\r\n\tconst phidDevParams = await GetPhidgetDeviceParams(usbDevice);\r\n\r\n\tdesc = await GetDescriptor(usbDevice, USBDescriptorType.USB_STRING_DESCRIPTOR_TYPE, phidDevParams.skuIndex, 0);\r\n\r\n\t// convert the whole strDescriptor to uint16, but drop the first two element since they are bLength and bDescriptorType\r\n\t//      remaining elements make up the string\r\n\tconst skuString = WordByteArrayToString(new Uint16Array(desc.buffer, 2));\r\n\r\n\tconst interfaceNum = usbDevice.configuration?.interfaces[0].interfaceNumber ?? 0;\r\n\r\n\tlet label = '';\r\n\r\n\t// This means label is supported by this Phidget\r\n\tif (phidDevParams.labelIndex != 0) {\r\n\t\tconst desc = await GetDescriptor(usbDevice, USBDescriptorType.USB_STRING_DESCRIPTOR_TYPE, phidDevParams.labelIndex, 0);\r\n\t\t// >22 means not a valid label - could be a device in firmware upgrade mode\r\n\t\tif (desc.byteLength <= 22) {\r\n\t\t\tconst bLength = desc.getUint8(0);\r\n\t\t\tif (bLength > 2) {\r\n\t\t\t\tconst bStringWordArray = new Uint16Array(desc.buffer);\r\n\t\t\t\tlabel = WordByteArrayToString((bStringWordArray).slice(1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst devData = {\r\n\t\tversion: version,\r\n\t\tserialNumber: serial,\r\n\t\tproductID: usbDevice.productId,\r\n\t\tvendorID: usbDevice.vendorId,\r\n\t\tinterfaceNum: interfaceNum,\r\n\t\tfwstr: skuString,\r\n\t\tlabel: label,\r\n\t\tpusbParams: phidDevParams\r\n\t}\r\n\r\n\treturn devData;\r\n}\r\n\r\nexport async function GetDescriptor(usbDevice: USBDevice, DescriptorType: number, DescriptorIndex: number, wIndex: number): Promise<DataView> {\r\n\tlet descReq;\r\n\tconst controlTransferParams = {\r\n\t\trequestType: 'standard' as const,\r\n\t\trecipient: 'device' as const,\r\n\t\trequest: (0x06),\r\n\t\tvalue: (DescriptorType << 8 | DescriptorIndex),\r\n\t\tindex: wIndex,\r\n\t}\r\n\r\n\t// Read out the header to get the actual descriptor length\r\n\ttry {\r\n\t\tdescReq = await usbDevice.controlTransferIn(controlTransferParams, USB_COMMON_DESCRIPTOR);\r\n\t} catch (err) {\r\n\t\tthrow new PhidgetError(ErrorCode.IO, \"Failed to read descriptor\", err);\r\n\t}\r\n\tif (descReq.status !== 'ok')\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Failed to read descriptor: \" + descReq.status);\r\n\r\n\tif (!descReq.data || descReq.data.byteLength != USB_COMMON_DESCRIPTOR)\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"GetDescriptor error - returned unexpected number of bytes\");\r\n\r\n\tconst bLength = descReq.data.getUint8(0);\r\n\r\n\t// if the length is just the header, return now\r\n\tif (bLength <= USB_COMMON_DESCRIPTOR)\r\n\t\treturn descReq.data;\r\n\r\n\t// read out the full descriptor\r\n\ttry {\r\n\t\tdescReq = await usbDevice.controlTransferIn(controlTransferParams, bLength);\r\n\t} catch (err) {\r\n\t\tthrow new PhidgetError(ErrorCode.IO, \"Failed to read descriptor\", err);\r\n\t}\r\n\tif (descReq.status !== 'ok')\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Failed to read descriptor: \" + descReq.status);\r\n\r\n\tif (!descReq.data || descReq.data.byteLength != bLength)\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"GetDescriptor error - returned unexpected number of bytes\");\r\n\r\n\treturn descReq.data;\r\n}\r\n\r\nasync function GetConfigDescriptor(usbDevice: USBDevice, DescriptorIndex: number) {\r\n\r\n\tconst controlTransferParams = {\r\n\t\trequestType: 'standard' as const,\r\n\t\trecipient: 'device' as const,\r\n\t\trequest: (0x06),\r\n\t\tvalue: (USBDescriptorType.USB_CONFIGURATION_DESCRIPTOR_TYPE << 8 | DescriptorIndex),\r\n\t\tindex: 0,\r\n\t}\r\n\r\n\t//Initial request of Configuration Descriptor in order to get TotalLength of Config Descriptor for a subsequent request\r\n\tlet configDescReq = await usbDevice.controlTransferIn(controlTransferParams, USB_CONFIGURATION_DESCRIPTOR);\r\n\tif (configDescReq.status !== 'ok')\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Failed to read descriptor: \" + configDescReq.status);\r\n\tif (!configDescReq.data)\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"GetDescriptor error - returned unexpected number of bytes\");\r\n\r\n\tconst wTotalLength = (configDescReq.data.getUint8(3) << 8) | configDescReq.data.getUint8(2);\r\n\tif (wTotalLength < USB_CONFIGURATION_DESCRIPTOR)\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"GetDescriptor error - too short!\");\r\n\r\n\t//Issue request for full configuration descriptor\r\n\tconfigDescReq = await usbDevice.controlTransferIn(controlTransferParams, wTotalLength);\r\n\tif (configDescReq.status !== 'ok')\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Failed to read descriptor: \" + configDescReq.status);\r\n\tif (!configDescReq.data)\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"GetDescriptor error - returned unexpected number of bytes\");\r\n\tif (configDescReq.data.byteLength !== wTotalLength)\r\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"GetDescriptor error - returned unexpected number of bytes\");\r\n\r\n\treturn configDescReq.data;\r\n}","import { PhidgetLock } from '../PhidgetLock';\r\nimport { GetDescriptor, PhidgetUSBEndpointType, PhidgetUSBRequestType, USBDescriptorType } from './USB';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { ErrorCode } from '../Enumerations.gen';\r\nimport { logbuffer, logdebug, logerr, loginfo, logwarn } from '../Logging';\r\nimport { StringToWordByteArray } from '../Utils';\r\nimport { LocalDevice } from './LocalDevice';\r\nimport { USBConnectionBase, USBConnType } from './USBConnection';\r\nimport { DeviceData } from '../Device';\r\nimport { BridgePacket } from '../BridgePacket';\r\n\r\nconst enum PHID_GENERAL_PACKET {\r\n\tREBOOT_FIRMWARE_UPGRADE = 0x01,\r\n\tOPEN_RESET = 0x20,\r\n\tCLOSE_RESET = 0x21,\r\n\tFIRMWARE_UPGRADE_WRITE = 0x22,\r\n\tFIRMWARE_UPGRADE_DONE = 0x23,\r\n\tWRITE_LABEL = 0x24\r\n}\r\n\r\n/** @internal */\r\nexport interface PUSBParams {\r\n\tmaxPacketEP0: number;\r\n\tep1type: PhidgetUSBEndpointType;\r\n\tmaxPacketEP1: number;\r\n\tep2type: PhidgetUSBEndpointType;\r\n\tmaxPacketEP2: number;\r\n\twMaxPacketSizeEP1: number;\r\n\tlabelIndex: number;\r\n\tskuIndex: number;\r\n}\r\n\r\n/** @internal */\r\nexport interface PhidgetUSBData {\r\n\tversion: number,\r\n\tserialNumber: number,\r\n\tproductID: number,\r\n\tvendorID: number,\r\n\tinterfaceNum: number,\r\n\tfwstr: string,\r\n\tlabel: string,\r\n\tpusbParams: PUSBParams\r\n}\r\n\r\n/** @internal */\r\nexport type PhidgetUSBDeviceData = PhidgetUSBData & DeviceData;\r\n\r\n/** @internal */\r\nabstract class PhidgetUSBDevice extends LocalDevice {\r\n\tprivate usbDevice: USBDevice;\r\n\tprivate phidlock: PhidgetLock;\r\n\tprivate readlock: PhidgetLock;\r\n\tprivate writelock: PhidgetLock;\r\n\tprivate openCnt: number;\r\n\tprivate interfaceNum: number;\r\n\tprotected pusbParams: PUSBParams;\r\n\tprivate closing?: boolean;\r\n\r\n\tabstract initAfterOpen(): Promise<void>;\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data);\r\n\r\n\t\tthis.usbDevice = usbDev;\r\n\t\tthis.phidlock = new PhidgetLock();\r\n\t\tthis.readlock = new PhidgetLock();\r\n\t\tthis.writelock = new PhidgetLock();\r\n\t\tthis.openCnt = 0;\r\n\t\tthis.interfaceNum = data.interfaceNum;\r\n\t\tthis.pusbParams = data.pusbParams;\r\n\t\tthis.sku\r\n\t}\r\n\r\n\tprotected get opened() { return this.usbDevice.opened; }\r\n\tprivate get claimed(): boolean { return this.usbDevice.configuration?.interfaces[0].claimed ?? false }\r\n\r\n\t// Assumes we are locked\r\n\tasync open(fullOpen = true) {\r\n\r\n\t\tif (!this.phidlock.locked)\r\n\t\t\tthrow new Error(\"Device MUST be locked before calling open\");\r\n\r\n\t\tthis.closing = false;\r\n\r\n\t\tif (!this.opened) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.openCnt = 0;\r\n\t\t\t\tawait this.usbDevice.open();\r\n\t\t\t\tif (this.usbDevice.configuration === null)\r\n\t\t\t\t\tawait this.usbDevice.selectConfiguration(1);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.closing = true;\r\n\t\t\t\tawait this.usbDevice.close();\r\n\t\t\t\tthis.openCnt = 0;\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"Error during USB open\", err)\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.openCnt++;\r\n\r\n\t\tif (fullOpen && !this.claimed) {\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait this.usbDevice.claimInterface(0);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.closing = true;\r\n\t\t\t\tawait this.usbDevice.close();\r\n\t\t\t\tthis.openCnt = 0;\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"Failed to claim interface: \", err);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait this.openReset();\r\n\t\t\t\tawait this.initAfterOpen();\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.closing = true;\r\n\t\t\t\tawait this.usbDevice.close();\r\n\t\t\t\tthis.openCnt = 0;\r\n\t\t\t\tlogerr(\"Device Initialization failed\", err);\r\n\t\t\t\tif (err instanceof PhidgetError && err.errorCode === ErrorCode.BAD_VERSION)\r\n\t\t\t\t\tlogwarn(\"This Phidget requires a new library - please upgrade.\");\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\r\n\t\t\tloginfo(\"Opened USB Phidget: \" + this);\r\n\r\n\t\t\t// For Node, we need to set a timeout, or we can't ever close the device.\r\n\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\tthis.conn._setEpTimeout(this.usbDevice, 0x81, 500);\r\n\r\n\t\t\t// Start polling USB\r\n\t\t\tthis.pollUSBData().catch(err => {\r\n\t\t\t\t// We can't just leak exceptions because nobody is listening\r\n\t\t\t\t//  If the device is no longer open, we expect this and don't log anything\r\n\t\t\t\tif (this.closing)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tlogerr(\"Error polling USB Data\", err);\r\n\t\t\t\t// We need to close the device, as it's not usefull anymore without the read thread\r\n\t\t\t\tthis.conn._usbErrorDetach(this);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async pollUSBData() {\r\n\t\twhile (this.opened && !this.closing) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.dataInput(await this.readPacket());\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// In the case of a timeout, this is fine, just keep reading\r\n\t\t\t\tif ((err as PhidgetError).errorCode !== ErrorCode.TIMEOUT)\r\n\t\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED);\r\n\t}\r\n\r\n\t// Assumes we are locked\r\n\tasync close(force = false, fullClose = true) {\r\n\r\n\t\tif (!this.phidlock.locked)\r\n\t\t\tthrow new Error(\"Device MUST be locked before calling close\");\r\n\r\n\t\tif (!this.opened)\r\n\t\t\treturn;\r\n\r\n\t\tif (force)\r\n\t\t\tthis.openCnt = 1;\r\n\r\n\t\tthis.openCnt--;\r\n\t\tif (this.openCnt > 0) {\r\n\t\t\tlogdebug(\"Leaving USB device open, as open count is: \" + this.openCnt);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (fullClose) {\r\n\t\t\tif (!this.claimed)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"USB Interface is already released\");\r\n\t\t\ttry {\r\n\t\t\t\tthis.closing = true;\r\n\t\t\t\tawait this.closeReset();\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// For Node, we must synchronize with read/write so there aren't any outstanding transfers when we call close\r\n\t\t\t\t\tif (this.conn._usbType === USBConnType.Node) {\r\n\t\t\t\t\t\tawait this.readlock.acquire();\r\n\t\t\t\t\t\tawait this.writelock.acquire();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.openCnt = 0;\r\n\t\t\t\t\tawait this.usbDevice.releaseInterface(0);\r\n\t\t\t\t\tawait this.usbDevice.close();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (this.conn._usbType === USBConnType.Node) {\r\n\t\t\t\t\t\tthis.readlock.release();\r\n\t\t\t\t\t\tthis.writelock.release();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tloginfo(\"Closed USB Phidget: \" + this);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.IO, 'Failure during USB close', err);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tthis.closing = true;\r\n\t\t\t\tthis.openCnt = 0;\r\n\t\t\t\tawait this.usbDevice.close();\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"Failed to close USB handle\", err);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync transferPacket(transferType: PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_READ | PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ | PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_READ, packetType: number, index: number, readLen: number): Promise<DataView>;\r\n\tasync transferPacket(transferType: PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE | PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE | PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_WRITE, packetType: number, index: number, buffer?: BufferSource): Promise<void>;\r\n\tasync transferPacket(transferType: PhidgetUSBRequestType.PHIDGETUSB_REQ_BULK_WRITE, packetType: number, index: number, buffer: BufferSource): Promise<void>;\r\n\tasync transferPacket(transferType: PhidgetUSBRequestType, packetType: number, index: number, bufferOrReadLen?: BufferSource | number): Promise<DataView | void> {\r\n\r\n\t\tswitch (transferType) {\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE:\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE:\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_WRITE:\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_BULK_WRITE: {\r\n\t\t\t\tlet result;\r\n\t\t\t\tif (transferType === PhidgetUSBRequestType.PHIDGETUSB_REQ_BULK_WRITE) {\r\n\t\t\t\t\tif (bufferOrReadLen == undefined || typeof bufferOrReadLen !== 'object')\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\r\n\r\n\t\t\t\t\tif (bufferOrReadLen.byteLength > this.pusbParams.maxPacketEP2)\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\r\n\r\n\t\t\t\t\tif (this.pusbParams.ep2type !== PhidgetUSBEndpointType.PHID_EP_BULK)\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t\t\t\t\tlogbuffer(\"USB Bulk OUT Packet\", bufferOrReadLen);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\t\tawait this.writelock.acquire();\r\n\t\t\t\t\t\tresult = await this.usbDevice.transferOut(2, bufferOrReadLen);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB Bulk transfer failed\", err);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\t\tthis.writelock.release();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst controlTransferParams: USBControlTransferParameters = {\r\n\t\t\t\t\t\trequestType: \"vendor\",\r\n\t\t\t\t\t\trecipient: 'interface',\r\n\t\t\t\t\t\trequest: transferType,\r\n\t\t\t\t\t\tvalue: (packetType << 8 | index),\r\n\t\t\t\t\t\tindex: this.interfaceNum,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (bufferOrReadLen != undefined && typeof bufferOrReadLen === 'object') {\r\n\t\t\t\t\t\t//we can't write more than the max packet size.  Don't try to read more than the max packet size\r\n\t\t\t\t\t\tif (bufferOrReadLen.byteLength > this.pusbParams.maxPacketEP0)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\r\n\r\n\t\t\t\t\t\tlogbuffer(\"USB Control OUT Packet\", bufferOrReadLen);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\t\t\tawait this.writelock.acquire();\r\n\t\t\t\t\t\t\tresult = await this.usbDevice.controlTransferOut(controlTransferParams, bufferOrReadLen);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB Control OUT transfer failed\", err);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\t\t\tthis.writelock.release();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Control OUT with no data stage\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\t\t\tawait this.writelock.acquire();\r\n\t\t\t\t\t\t\tresult = await this.usbDevice.controlTransferOut(controlTransferParams);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB Control OUT transfer failed\", err);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\t\t\tthis.writelock.release();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (result.status !== 'ok')\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"controlTransferOut error. Status: \" + result.status);\r\n\t\t\t\tif (bufferOrReadLen != undefined && typeof bufferOrReadLen === 'object' && result.bytesWritten !== bufferOrReadLen.byteLength)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"USB send failed to write expected number of bytes.\");\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_READ:\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ:\r\n\t\t\tcase PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_READ: {\r\n\t\t\t\tif (!(typeof bufferOrReadLen === 'number'))\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\r\n\r\n\t\t\t\t// Limit read length\r\n\t\t\t\tif (bufferOrReadLen > this.pusbParams.maxPacketEP0)\r\n\t\t\t\t\tbufferOrReadLen = this.pusbParams.maxPacketEP0;\r\n\r\n\t\t\t\tconst controlTransferParams: USBControlTransferParameters = {\r\n\t\t\t\t\trequestType: \"vendor\",\r\n\t\t\t\t\trecipient: 'interface',\r\n\t\t\t\t\trequest: transferType,\r\n\t\t\t\t\tvalue: (packetType << 8 | index),\r\n\t\t\t\t\tindex: this.interfaceNum,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet descReq;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\tawait this.writelock.acquire();\r\n\t\t\t\t\tdescReq = await this.usbDevice.controlTransferIn(controlTransferParams, bufferOrReadLen);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB Control IN transfer failed\", err);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\t\t\tthis.writelock.release();\r\n\t\t\t\t}\r\n\t\t\t\tif (descReq.status !== 'ok')\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB Control Transfer failure: \" + descReq.status);\r\n\r\n\t\t\t\tif (descReq.data == undefined)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB Control IN failed to read data\");\r\n\r\n\t\t\t\tlogbuffer(\"USB Control IN Packet\", descReq.data);\r\n\r\n\t\t\t\treturn descReq.data;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async readPacket(): Promise<DataView> {\r\n\t\tlet xfer;\r\n\t\tif (this.conn._usbType === USBConnType.Node) {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.readlock.acquire();\r\n\t\t\t\txfer = await this.usbDevice.transferIn(1, this.pusbParams.maxPacketEP1);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (err instanceof Error && err.message.includes('LIBUSB_TRANSFER_TIMED_OUT'))\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.TIMEOUT, \"Read timed out\", err);\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"Error reading USB packet\", err);\r\n\t\t\t}\r\n\t\t\tfinally {\r\n\t\t\t\tthis.readlock.release();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// For Web - we cannot set a timeout and so we cannot lock\t\t\r\n\t\t\ttry {\r\n\t\t\t\txfer = await this.usbDevice.transferIn(1, this.pusbParams.maxPacketEP1);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.IO, \"Error reading USB packet\", err);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (xfer.status !== 'ok')\r\n\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB IN Transfer failure: \" + xfer.status);\r\n\r\n\t\tif (xfer.data == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.IO, \"USB IN Transfer failed to read data\");\r\n\r\n\t\tlogbuffer(\"Received USB Packet\", xfer.data);\r\n\t\treturn xfer.data;\r\n\t}\r\n\r\n\tprotected async readDescriptor(type: number, index: number): Promise<DataView> {\r\n\t\tlet desc;\r\n\t\ttry {\r\n\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\tawait this.writelock.acquire();\r\n\t\t\tdesc = await GetDescriptor(this.usbDevice, type, index, 0);\r\n\t\t} finally {\r\n\t\t\tif (this.conn._usbType === USBConnType.Node)\r\n\t\t\t\tthis.writelock.release();\r\n\t\t}\r\n\t\treturn desc;\r\n\t}\r\n\r\n\tprotected getMaxOutPacketSize() {\r\n\t\tif (this.pusbParams.ep2type !== PhidgetUSBEndpointType.PHID_EP_UNAVAILABLE)\r\n\t\t\treturn this.pusbParams.maxPacketEP2;\r\n\t\treturn this.pusbParams.maxPacketEP0; //EP0 (control)\r\n\t}\r\n\r\n\tasync writeLabel(label: string) {\r\n\t\tif (label.length > 10)\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Label is too long. Max 10 characters.\")\r\n\t\tif (label !== undefined || label !== null) {\r\n\t\t\tconst bufftemp = new Uint8Array(StringToWordByteArray(label).buffer);\r\n\t\t\tconst buffer = [0, USBDescriptorType.USB_STRING_DESCRIPTOR_TYPE, ...(bufftemp.values())];\r\n\t\t\tbuffer[0] = buffer.length;\r\n\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_WRITE, PHID_GENERAL_PACKET.WRITE_LABEL, 0, new Uint8Array(buffer));\r\n\t\t\tthis.label = label;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async closeReset() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_WRITE, PHID_GENERAL_PACKET.CLOSE_RESET, 0);\r\n\t}\r\n\tprivate async openReset() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_WRITE, PHID_GENERAL_PACKET.OPEN_RESET, 0);\r\n\t}\r\n\tasync rebootFirmwareUpgrade() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_GPP_WRITE, PHID_GENERAL_PACKET.REBOOT_FIRMWARE_UPGRADE, 0);\r\n\t}\r\n\r\n\tasync lock() {\r\n\t\tawait this.phidlock.acquire();\r\n\t}\r\n\tunlock() {\r\n\t\tthis.phidlock.release();\r\n\t}\r\n\r\n\t_handleDataIntervalPacket(bp: BridgePacket, interruptRate: number): number {\r\n\t\tlet __di = bp.getNumber(0);\r\n\t\tif (__di % interruptRate !== 0) {\r\n\t\t\t__di = ((__di / interruptRate) + 1) * interruptRate;\r\n\t\t\tbp.remove(\"0\");\r\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: __di });\r\n\t\t}\r\n\r\n\t\t// if the bridge packet also contains a floating point interval, that needs to be updated to match the int version\r\n\t\tif (bp.entryCount > 1)\r\n\t\t\tbp.set({ name: \"1\", type: \"g\", value: __di });\r\n\r\n\t\treturn __di;\r\n\t}\r\n}\r\n\r\nexport { PhidgetUSBDevice };","﻿import { PacketTrackers } from '../PacketTracker';\r\nimport { UserPhidgets } from '../../phidget22';\r\nimport { ErrorCode, ErrorEventCode, HubPortMode } from '../../Enumerations.gen';\r\nimport { PhidgetError } from '../../PhidgetError';\r\nimport { logerr, loginfo, logverbose, logwarn, logdebug } from '../../Logging';\r\nimport { PhidgetVendorDescriptorType, PhidgetUSBRequestType } from '../USB';\r\nimport { VINTPacketCode_to_PhidgetReturnCode, VINTPacketDescription, VINTStatusCode } from '../VintPackets';\r\nimport { BP } from '../../BridgePackets.gen';\r\nimport { PhidgetSleep } from '../../Utils';\r\nimport { Channel } from '../../Channel';\r\nimport { BridgePacket, PUNK } from '../../BridgePacket';\r\nimport { LocalDevice, MAX_OUT_PACKET_SIZE } from '../LocalDevice';\r\nimport { USBConnectionBase } from '../USBConnection';\r\nimport { VINTDevice } from './VINTDevice';\r\nimport { VINTDeviceData, VINTDeviceProperties, VINTPortProperties } from '../../Device';\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from '../PhidgetUSBDevice';\r\nimport { DeviceUID, PhidgetDevices } from '../../Devices.gen';\r\nimport { Phidget } from '../../Phidget';\r\n\r\nexport const HUB_PORT_ID_MAX = 0x0F;\r\nconst VINTHUB_MAXPORTS = 6;\r\n//const VINTHUB_MAXCHANNELS = 32;\r\n\r\nconst PACKETID_MAX = 126;\r\nexport const PACKETIDS_PER_PORT = (PACKETID_MAX / 6);\r\nconst PACKETRETURN_notACK = 0x80;\r\nconst INPACKET_HUBMSG_FLAG = 0x80;\r\n\r\n//Flag for identifying the start of a VINT packet in the USB packet stream\r\nconst IN_VINTPACKET_START = 0x08;\r\n\r\nexport const enum HubPacketType {\r\n\tSETPORTMODE = 0x00,\r\n\tUPGRADE_FIRMWARE = 0x01,\r\n\tGETTXBUFFERSTATUS = 0x02,\r\n\tPORTPOWER = 0x03,\r\n\tMESHMODE = 0x04,\r\n\tCALIBRATION_MODE = 0x05,\r\n\tCALIBRATION_WRITE = 0x06,\r\n\tCALIBRATION_EXIT = 0x07,\r\n}\r\n\r\nconst enum PacketType {\r\n\tHUB = 0x40,\r\n\tDEVICE = 0x20\r\n}\r\n\r\nconst enum InPacketType {\r\n\tTXBUFFERSTATUS = 0x00,\r\n\tOVERCURRENT = 0x01,\r\n\tDETACH = 0x02,\r\n\tDISABLE = 0x03,\r\n\tSPEEDCHANGE = 0x04,\r\n\tREENUMERATION = 0x05\r\n}\r\n\r\nexport const enum VINTProperties {\r\n\tPOWERSOURCE = 0x00,\r\n\tISOLATION = 0x01,\r\n\tSETSPEEDSUPPORT = 0x02,\r\n\tSETSPEEDLIMIT = 0x03,\r\n\tAUTOSETSPEEDSUPPORT = 0x04\r\n}\r\n\r\nconst UNKNOWN_VINT_ID = 0xff0;\r\n\r\nclass HubDevice extends PhidgetUSBDevice {\r\n\r\n\t// non-optional\r\n\tdeclare hubPortProps: VINTPortProperties[];\r\n\r\n\tpacketOutCounter: number[];\r\n\tpacketTrackers: PacketTrackers;\r\n\tscanError: number;\r\n\r\n\tprivate outstandingPacketCnt: number[];\r\n\tprivate internalPacketInBufferLen: number;\r\n\tprivate packetCounter: number;\r\n\tprivate splitPacketStoragePtr: number;\r\n\tprivate splitPacketStorage: number[];\r\n\r\n\tprivate vintDevices: Record<number, VINTDevice>;\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._HUB0000_PHIDUSB:\r\n\t\t\tcase DeviceUID._HUB0001:\r\n\t\t\tcase DeviceUID._HUB0001_AUTOSETSPEED:\r\n\t\t\tcase DeviceUID._HUB5000_PHIDUSB:\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/*START_UNRELEASED*/\r\n\t\t\tcase DeviceUID._HUB0000_1:\r\n\t\t\tcase DeviceUID._HUB0002:\r\n\t\t\tcase DeviceUID._HUB0007:\r\n\t\t\t\tbreak;\r\n\t\t\t/*END_UNRELEASED*/\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.vintDevices = {};\r\n\r\n\t\tthis.hubPortProps = [];\r\n\t\tthis.outstandingPacketCnt = new Array(this.numVintPorts).fill(0);\r\n\t\tthis.packetOutCounter = new Array(this.numVintPorts).fill(0);\r\n\t\tthis.internalPacketInBufferLen = 0;\r\n\t\tthis.packetCounter = -1;\r\n\t\tthis.splitPacketStoragePtr = 0;\r\n\t\tthis.splitPacketStorage = new Array(54).fill(0);\r\n\r\n\t\tthis.scanError = 0;\r\n\r\n\t\tthis.packetTrackers = new PacketTrackers();\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numVintPorts() { return this.devDef.cn[0]; }\r\n\tget numVintPortModes() { return this.devDef.cn[1]; }\r\n\r\n\tasync initAfterCreate() {\r\n\t\tfor (let i = 0; i < this.numVintPorts; i++)\r\n\t\t\tawait this.updatePortProperties(i);\r\n\t}\r\n\r\n\tmakePacket(vintDevice: LocalDevice, packetID: number, bufferIn?: Uint8Array) {\r\n\t\tconst buffer = new Uint8Array(new ArrayBuffer(MAX_OUT_PACKET_SIZE));\r\n\r\n\t\tif (buffer.byteLength < this.getMaxOutPacketSize())\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\r\n\t\tif (bufferIn == undefined)\r\n\t\t\tbufferIn = new Uint8Array(0);\r\n\r\n\t\tif (this.getMaxOutPacketSize() < bufferIn.length + 4)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\r\n\t\t//NOTE: packetOutCounter is incremented AFTER the packet is sent successfully\r\n\t\tbuffer.set([((this.packetOutCounter[vintDevice.hubPort] << 4) & 0xF0) | (vintDevice.hubPort & 0x0F)], 0);\r\n\r\n\t\tbuffer.set([vintDevice.vintID & 0xFF], 1);\r\n\t\tbuffer.set([(vintDevice.vintID >> 4) & 0xF0], 2);\r\n\t\tbuffer.set([packetID], 3);\r\n\r\n\t\tbuffer.set(bufferIn, 4);\r\n\r\n\t\treturn buffer.slice(0, bufferIn.length + 4);\r\n\t}\r\n\r\n\tasync openAndUpdatePortProperties(port: number) {\r\n\t\ttry {\r\n\t\t\tawait this.lock();\r\n\t\t\tlet opened = false;\r\n\t\t\ttry {\r\n\t\t\t\tawait this.open(false);\r\n\t\t\t\topened = true;\r\n\t\t\t\tawait this.updatePortProperties(port);\r\n\t\t\t} finally {\r\n\t\t\t\tif (opened)\r\n\t\t\t\t\tawait this.close(false, false);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tthis.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\tasync updatePortProperties(port: number) {\r\n\t\tlet prop, propLen;\r\n\r\n\t\tconst buf = await this.readDescriptor(PhidgetVendorDescriptorType.USB_DESC_TYPE_VINT_PORT_DESC, port);\r\n\r\n\t\tconst vintPortDesc = {\r\n\t\t\tbLength: buf.getUint8(0),\r\n\t\t\tbDescriptorType: buf.getUint8(1),\r\n\t\t\tbPortMode: buf.getUint8(2),       // CphidgetVINT_PortMode\r\n\t\t\tbPowered: buf.getUint8(3),        //whether power is enabled\r\n\t\t\tdwSpeedHz: buf.getUint32(4, true),      // VINT Speed\r\n\t\t\tbVINTProtocolVersion: buf.getUint8(8),    // VINT Protocl version\r\n\t\t\tVINTProperties: new DataView(buf.buffer, 9)\r\n\t\t}\r\n\r\n\t\tthis.hubPortProps[port] = {\r\n\t\t\tportProto: vintPortDesc.bVINTProtocolVersion,\r\n\t\t\tportSpeed: vintPortDesc.dwSpeedHz,\r\n\t\t\tportMode: vintPortDesc.bPortMode as HubPortMode,\r\n\t\t\tportPowered: !!vintPortDesc.bPowered,\r\n\t\t\tportSuppSetSpeed: false,\t// default\r\n\t\t\tportSuppAutoSetSpeed: false,\t// default\r\n\t\t\tportMaxSpeed: 100000 \t\t// default\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < vintPortDesc.VINTProperties.byteLength; i += propLen) {\r\n\t\t\tprop = vintPortDesc.VINTProperties.getUint8(i) & 0x1F;\r\n\t\t\tpropLen = ((vintPortDesc.VINTProperties.getUint8(i) & 0xE0) >> 5) + 1;\r\n\t\t\tswitch (prop) {\r\n\t\t\t\tcase VINTProperties.SETSPEEDSUPPORT:\r\n\t\t\t\t\tthis.hubPortProps[port].portSuppSetSpeed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase VINTProperties.AUTOSETSPEEDSUPPORT:\r\n\t\t\t\t\tthis.hubPortProps[port].portSuppAutoSetSpeed = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase VINTProperties.SETSPEEDLIMIT:\r\n\t\t\t\t\tthis.hubPortProps[port].portMaxSpeed = vintPortDesc.VINTProperties.getUint32(i + 1, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tloginfo(\"Unknown VINT Port property: \" + prop);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tasync sendHubPacket(hubPacketType: HubPacketType, bufferIn?: Uint8Array) {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, (PacketType.HUB | hubPacketType), 0, bufferIn);\r\n\t}\r\n\r\n\tasync sendHubPortPacket(hubPort: number, hubPacketType: HubPacketType, bufferIn?: Uint8Array) {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, (PacketType.HUB | hubPacketType), hubPort, bufferIn);\r\n\t}\r\n\r\n\tprocessPacketReturnCodes(buffer: DataView, length: number) {\r\n\t\tlet readPtr = 0;\r\n\t\twhile (readPtr < length) {\r\n\t\t\tconst packetID = buffer.getUint8(readPtr) & 0x7F;\r\n\t\t\tconst port = Math.trunc((packetID - 1) / PACKETIDS_PER_PORT);\r\n\t\t\tlet response = VINTStatusCode.ACK;\r\n\t\t\tif (buffer.getUint8(readPtr) & PACKETRETURN_notACK) {\r\n\t\t\t\treadPtr++;\r\n\t\t\t\tresponse = buffer.getUint8(readPtr);\r\n\t\t\t}\r\n\t\t\treadPtr++;\r\n\r\n\t\t\tconst NotFound = () => {\r\n\t\t\t\t//Dont display if it's NOTATTACHED - since this is pretty common/expected\r\n\t\t\t\tif (response !== VINTStatusCode.NOTATTACHED) {\r\n\t\t\t\t\tloginfo(\"An unexpected PacketID was returned: \" + packetID + \"(\" + response + \" - \" + VINTPacketDescription[response] + \"). \" +\r\n\t\t\t\t\t\t\"Probably this packet is from a previous session or detached device.\");\r\n\t\t\t\t}\r\n\t\t\t\t//Request a new count because our count will now be out\r\n\t\t\t\tthis.readInTXBufferCounts(port).catch(err => {\r\n\t\t\t\t\t// NOTE: We don't await on this, and just swallow any errors\r\n\t\t\t\t\tlogwarn(\"Failure to read TX Buffer counts\", err);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tconst packetTracker = this.packetTrackers.packetTracker.get(packetID);\r\n\t\t\tif (!packetTracker) {\r\n\t\t\t\tNotFound();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst packetSpace = packetTracker.len;\r\n\t\t\tlogverbose(\"Packet \" + packetID + \" response: \" + response + \" - \" + VINTPacketDescription[response] + \", Port \" + port);\r\n\r\n\t\t\tconst res = VINTPacketCode_to_PhidgetReturnCode[response] as ErrorCode;\r\n\t\t\t//NOTE: setting the return code marks this tracker as signalled\r\n\t\t\t// We can no longer use it here because it can be claimed immediately by another thread... (artefact comment from phidget22.c)\r\n\t\t\ttry {\r\n\t\t\t\tpacketTracker.setPacketReturnCode(res);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tNotFound();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis.releasePacketSpace(port, packetSpace);\r\n\r\n\t\t\tswitch (res) {\r\n\t\t\t\t// Don't log these cases, just return result to user\r\n\t\t\t\tcase ErrorCode.SUCCESS:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ErrorCode.NOT_CONFIGURED:\r\n\t\t\t\tcase ErrorCode.INVALID_ARGUMENT:\r\n\t\t\t\tcase ErrorCode.INVALID:\r\n\t\t\t\tcase ErrorCode.INVALID_PACKET:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ErrorCode.NO_SPACE:\r\n\t\t\t\t\tlogerr(\"Got a NOSPACE response from a VINT device, Port \" + port + \". \" +\r\n\t\t\t\t\t\t\"This usually indicates firmware problems.\");\r\n\t\t\t\t\t//Request a new count because our count will now be out\r\n\t\t\t\t\tthis.readInTXBufferCounts(port).catch(err => {\r\n\t\t\t\t\t\t// NOTE: We don't await on this, and just swallow any errors\r\n\t\t\t\t\t\tlogwarn(\"Failure to read TX Buffer counts\", err);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ErrorCode.NOT_ATTACHED:\r\n\t\t\t\t\tloginfo(\"Got a NOTATTACHED response from a VINT device, Port \" + port);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ErrorCode.BUSY:\r\n\t\t\t\t\tlogerr(\"Got a NAK response form a VINT device, Port \" + port + \". \" +\r\n\t\t\t\t\t\t\"This means the device decided not to deal with this data; try again.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ErrorCode.FILE_TOO_BIG:\r\n\t\t\t\t\tlogerr(\"Got a TOOBIG response from a VINT device, Port \" + port + \". \" +\r\n\t\t\t\t\t\t\"This means the packet was too big.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ErrorCode.UNEXPECTED:\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlogerr(\"Got an unexpected response from a VINT device: \" + response + \" - \" + VINTPacketDescription[response] + \". \" +\r\n\t\t\t\t\t\t\"This usually indicates firmware problems.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprocessVintPacket(buffer: DataView) {\r\n\r\n\t\tconst vintPort = buffer.getUint8(0) & 0x07;\r\n\t\tconst vintID = ((buffer.getUint8(0) & 0xF0) << 4) + buffer.getUint8(1);\r\n\t\tconst dataCount = buffer.getUint8(2) & 0x3F;\r\n\r\n\t\tlet childIndex = vintPort;\r\n\r\n\t\t// VINT port devices live higher in the child array.\r\n\t\tif (vintID <= HUB_PORT_ID_MAX)\r\n\t\t\tchildIndex += vintID * this.numVintPorts;\r\n\r\n\t\tconst vintDevice = this.vintDevices[childIndex];\r\n\t\tif (!vintDevice)\r\n\t\t\treturn;\r\n\r\n\t\tif (vintDevice.vintID !== vintID) {\r\n\t\t\tloginfo(\"Seeing VINT Data on Port: \" + vintPort + \" for VINT Device: \" + vintID + \", but device in structure is: \" + vintDevice.vintID);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Sending the data count portion, so the packet length is +1\r\n\t\tvintDevice.dataInput(new DataView(buffer.buffer, 2 + buffer.byteOffset, dataCount + 1));\r\n\t}\r\n\r\n\tasync readInTXBufferCounts(port: number) {\r\n\t\tthis.outstandingPacketCnt[port] = PUNK.SIZE;\r\n\r\n\t\t// Request a new count\r\n\t\tawait this.sendHubPacket(HubPacketType.GETTXBUFFERSTATUS);\r\n\t}\r\n\r\n\tasync initAfterOpen() {\r\n\t\tlet i;\r\n\r\n\t\t// Setup max/min values\r\n\t\tthis.internalPacketInBufferLen = PUNK.SIZE;\r\n\t\t//set data arrays to unknown\r\n\t\tfor (i = 0; i < this.numVintPorts; i++)\r\n\t\t\tthis.outstandingPacketCnt[i] = PUNK.SIZE;\r\n\r\n\t\tthis.packetCounter = -1;\r\n\t\tthis.splitPacketStoragePtr = 0;\r\n\r\n\t\tconst len = VINTHUB_MAXPORTS + 1;\r\n\t\tconst buffer = await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ,\r\n\t\t\t(PacketType.HUB | HubPacketType.GETTXBUFFERSTATUS), 0, len);\r\n\r\n\t\tif (buffer.byteLength !== this.numVintPorts + 1)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Bad buffer length from transferpacket from HubDevice\");\r\n\r\n\t\tthis.internalPacketInBufferLen = buffer.getUint8(0);\r\n\t\tfor (i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t// -1 because the internalPacketInBufferLen byte buffer can only actually\r\n\t\t\t//      internalPacketInBufferLen-1 bytes or the read/write pointers would overlap\r\n\t\t\tthis.outstandingPacketCnt[i] = this.internalPacketInBufferLen - 1 - buffer.getUint8(i + 1);\r\n\t\t}\r\n\t}\r\n\r\n\tdataInput(buffer: DataView) {\r\n\t\tlet dataCount;\r\n\r\n\t\tconst packetCounter = (buffer.getUint8(0) >> 4) & 0x07;\r\n\t\tconst packetReturnLen = buffer.getUint8(0) & 0x0F;\r\n\t\tconst dataEndIndex = buffer.byteLength - packetReturnLen;\r\n\r\n\t\tlet nextPacketStart = buffer.getUint8(1) & 0x3F;\r\n\t\tlet readPtr = 2;\r\n\t\tlet killOutstandingPackets = false;\r\n\r\n\t\t// OUT Packet status return (0-31 bytes)\r\n\t\t// We process these 1st in case a detach message comes in\r\n\t\tthis.processPacketReturnCodes(new DataView(buffer.buffer, dataEndIndex), buffer.byteLength - dataEndIndex);\r\n\r\n\t\tif (buffer.getUint8(1) & INPACKET_HUBMSG_FLAG) {\r\n\t\t\tswitch (buffer.getUint8(readPtr)) {\r\n\t\t\t\tcase InPacketType.TXBUFFERSTATUS:\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tlogdebug(\"VINTHUB_HUBINPACKET_TXBUFFERSTATUS packet filling outstandingPacketCnt\");\r\n\t\t\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\t\t\t// -1 because the 128 byte buffer cna only actually hold 127 bytes or the read/write pointers would overlap\r\n\t\t\t\t\t\tthis.outstandingPacketCnt[i] = this.internalPacketInBufferLen - 1 - buffer.getUint8(readPtr++);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase InPacketType.OVERCURRENT:\r\n\t\t\t\t\treadPtr++;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\t\t\tif (buffer.getUint8(readPtr) & (0x01 << i)) {\r\n\t\t\t\t\t\t\tlogwarn(\"Hub overcurrent detected on Port: \" + i);\r\n\r\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OVER_CURRENT });\r\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Hub overcurrent detected on Port \" + i + \". Check for short.\" });\r\n\r\n\t\t\t\t\t\t\t//Iterate over all children, sending message to the ones on this port\r\n\t\t\t\t\t\t\tfor (const v in this.vintDevices) {\r\n\t\t\t\t\t\t\t\tif (this.vintDevices[v].hubPort !== i)\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\tfor (const c in this.vintDevices[v].channels) {\r\n\t\t\t\t\t\t\t\t\tconst ch = this.vintDevices[v].channels[c];\r\n\t\t\t\t\t\t\t\t\tif (ch.isopen)\r\n\t\t\t\t\t\t\t\t\t\tch.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase InPacketType.DETACH:\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\t\t\tif (buffer.getUint8(readPtr) & (0x01 << i)) {\r\n\t\t\t\t\t\t\tif (this.vintDevices[i]) {\r\n\t\t\t\t\t\t\t\tthis.conn._deviceDetach(this.vintDevices[i]);\r\n\t\t\t\t\t\t\t\tdelete this.vintDevices[i];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase InPacketType.DISABLE:\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\t\t\tif (buffer.getUint8(readPtr) & (0x01 << i))\r\n\t\t\t\t\t\t\tlogwarn(\"Invalid VINT activity detected on Port: \" + i + \". This can be safely ignored if something other than a VINT device is attached.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase InPacketType.SPEEDCHANGE:\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\t\t\tif (buffer.getUint8(readPtr) & (0x01 << i)) {\r\n\t\t\t\t\t\t\tthis.updatePortProperties(i).then(() => {\r\n\t\t\t\t\t\t\t\tloginfo(\"Hub Port Speed changed to: \" + this.hubPortProps[i].portSpeed + \" on Port: \" + i + \".\");\r\n\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\tlogwarn(\"Error updating port properties\", err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase InPacketType.REENUMERATION:\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\t\t\tif (buffer.getUint8(readPtr) & (0x01 << i))\r\n\t\t\t\t\t\t\tlogwarn(\"Re-Enumeration on Port: \" + i + \". This could indicate EMI issues, an unstable Hub Port Speed, or firmware issues.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadPtr++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Got unexpected InPacketType: \" + buffer.getUint8(readPtr));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//We can only run these checks if we have previously received a packet\r\n\t\tif (this.packetCounter === -1) {\r\n\t\t\t//1st packet: start at the 1st whole packet\r\n\t\t\treadPtr += nextPacketStart;\r\n\t\t} else {\r\n\t\t\t//Try to detect if we missed a packet\r\n\t\t\tif (this.packetCounter !== packetCounter) {\r\n\t\t\t\tlogwarn(\"One or more data packets were lost on the Hub.\");\r\n\t\t\t\t//throw away any partial device packet data from previous packets\r\n\t\t\t\tthis.splitPacketStoragePtr = 0;\r\n\t\t\t\treadPtr += nextPacketStart;\r\n\t\t\t\tkillOutstandingPackets = true;\r\n\r\n\t\t\t\t//request a new count\r\n\t\t\t\tthis.sendHubPacket(HubPacketType.GETTXBUFFERSTATUS).catch((err) => {\r\n\t\t\t\t\tlogwarn(\"Error reading TX Buffer Status\", err);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t//these need to be 0 or both non-zero\r\n\t\t\t\tif (nextPacketStart && !(this.splitPacketStoragePtr)) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Problem with split data in vint packet. This should be a firmware/library bug.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.packetCounter = ((packetCounter + 1) & 0x07);\r\n\r\n\t\t//If we're starting with a split packet, read in the remainder.\r\n\t\tif (this.splitPacketStoragePtr) {\r\n\t\t\twhile (nextPacketStart--)\r\n\t\t\t\tthis.splitPacketStorage[this.splitPacketStoragePtr++] = buffer.getUint8(readPtr++);\r\n\t\t\t//Process a packet\r\n\t\t\tthis.processVintPacket(new DataView((new Uint8Array(this.splitPacketStorage)).buffer));\r\n\t\t\t//reset pointer\r\n\t\t\tthis.splitPacketStoragePtr = 0;\r\n\t\t}\r\n\r\n\t\t//Then, read any full packets in\r\n\t\twhile (readPtr < dataEndIndex) {\r\n\t\t\t//See if we have another packet - the end will be marked by a null\r\n\t\t\tif ((buffer.getUint8(readPtr) & IN_VINTPACKET_START) === 0x00)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t//Determine if we have a full or partial packet - require at least 3 bytes to get the length byte\r\n\t\t\tif (readPtr < (dataEndIndex - 2)) {\r\n\t\t\t\tif (buffer.getUint8(readPtr + 2) & 0x80) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Got an unexpected MSG in vint data: \" + buffer.getUint8(readPtr + 2));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataCount = buffer.getUint8(readPtr + 2) & 0x3F;\r\n\r\n\t\t\t\tif ((readPtr + 3 + dataCount) <= dataEndIndex) {\r\n\t\t\t\t\t//Got here - we have a full packet to process\r\n\t\t\t\t\tthis.processVintPacket(new DataView(buffer.buffer, readPtr));\r\n\t\t\t\t\t//loop around and check for the next packet\r\n\t\t\t\t\treadPtr += (dataCount + 3);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Got here - it means we have a partial packet to queue up\r\n\t\t\twhile (readPtr < dataEndIndex)\r\n\t\t\t\tthis.splitPacketStorage[this.splitPacketStoragePtr++] = buffer.getUint8(readPtr++);\r\n\t\t}\r\n\r\n\t\tif (killOutstandingPackets) {\r\n\t\t\tloginfo(\"Killing outstanding packets on hub\");\r\n\t\t\t//Mark TX buffer as unknown sizre if there were outstanding packets\r\n\t\t\t//      (because we may have missed the packet return)\r\n\t\t\tfor (let i = 0; i < this.numVintPorts; i++) {\r\n\t\t\t\tif (this.outstandingPacketCnt[i])\r\n\t\t\t\t\tthis.outstandingPacketCnt[i] = PUNK.SIZE;\r\n\t\t\t\tthis.packetTrackers.setPacketsReturnCode(i, ErrorCode.INTERRUPTED);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync bridgeInput(_channel: Channel, bp: BridgePacket) {\r\n\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.SETFIRMWAREUPGRADEFLAG: {\r\n\t\t\t\tconst hubPort = bp.getNumber(0);\r\n\t\t\t\tconst timeout = bp.getNumber(1);\r\n\t\t\t\tconst buffer = new Uint8Array([timeout & 0xFF, (timeout >> 8) & 0xFF]);\r\n\t\t\t\tawait this.sendHubPortPacket(hubPort, HubPacketType.UPGRADE_FIRMWARE, buffer);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase BP.SETPORTMODE: {\r\n\t\t\t\tconst hubPort = bp.getNumber(0);\r\n\t\t\t\tawait this.setPortMode(hubPort, bp.getNumber(1) as HubPortMode);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase BP.SETPORTPOWER: {\r\n\t\t\t\tconst hubPort = bp.getNumber(0);\r\n\t\t\t\tconst buffer = new Uint8Array([bp.getNumber(1)]);\r\n\t\t\t\tawait this.sendHubPortPacket(hubPort, HubPacketType.PORTPOWER, buffer);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase BP.SETCALIBRATIONVALUES:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t\tcase BP.OPENRESET:\r\n\t\t\tcase BP.CLOSERESET:\r\n\t\t\tcase BP.ENABLE:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync setPortMode(index: number, newVal: HubPortMode) {\r\n\r\n\t\tif (!this.opened)\r\n\t\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED);\r\n\r\n\t\tconst buffer = new Uint8Array([newVal]);\r\n\r\n\t\tlogdebug(\"Setting Port: \" + index + \" mode to \" + newVal + \" on \" + this.name);\r\n\r\n\t\tawait this.sendHubPortPacket(index, HubPacketType.SETPORTMODE, buffer);\r\n\t}\r\n\r\n\treleasePacketSpace(hubPort: number, packetSize: number) {\r\n\t\tif (this.outstandingPacketCnt[hubPort] !== PUNK.SIZE) {\r\n\t\t\t//When a packet is lost, things can get out of sun.  Make sure we don't go below 0!\r\n\t\t\tif (this.outstandingPacketCnt[hubPort] < packetSize)\r\n\t\t\t\tthis.outstandingPacketCnt[hubPort] = 0;\r\n\t\t\telse\r\n\t\t\t\tthis.outstandingPacketCnt[hubPort] -= packetSize;\r\n\r\n\t\t\t//Ensure we don't go outside of spec\r\n\t\t\tif (this.outstandingPacketCnt[hubPort] > this.internalPacketInBufferLen)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"PacketSpace is out of spec\");\r\n\r\n\t\t\tlogverbose(\"Releasing \" + packetSize + \" bytes, \" + (this.internalPacketInBufferLen - this.outstandingPacketCnt[hubPort]) + \" remaining, Port \" + hubPort);\r\n\t\t}\r\n\t}\r\n\r\n\tasync claimPacketSpace(hubPort: number, packetSize: number) {\r\n\r\n\t\tif (!this.opened)\r\n\t\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED);\r\n\r\n\t\t// 2 seconds\r\n\t\tconst tm = Date.now() + 2000;\r\n\r\n\t\tfor (; ;) {\r\n\t\t\tconst pktCnt = this.outstandingPacketCnt[hubPort];\r\n\r\n\t\t\tif (pktCnt !== PUNK.SIZE && (pktCnt + packetSize < this.internalPacketInBufferLen))\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (Date.now() >= tm)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.TIMEOUT, \"Timed out claiming packet space, Port \" + hubPort);\r\n\r\n\t\t\t// NOTE: This could be written better, with awaiting on releasePacketSpace, but we don't end up here often enough for it to matter\r\n\t\t\tawait PhidgetSleep(2);\r\n\t\t}\r\n\r\n\t\tthis.outstandingPacketCnt[hubPort] += packetSize;\r\n\t\tlogverbose(\"Claiming \" + packetSize + \" bytes, \" + (this.internalPacketInBufferLen - this.outstandingPacketCnt[hubPort]) + \" remaining, Port \" + hubPort);\r\n\t}\r\n\r\n\r\n\tprivate async scanVINTDevice(childIndex: number, id: number, version: number, port: number, realID?: number) {\r\n\t\tlet vintDeviceDesc;\r\n\t\tlet buf;\r\n\t\tlet prop, propLen;\r\n\r\n\t\tfor (const dev of PhidgetDevices.VINT) {\r\n\t\t\tif (dev.i !== id)\r\n\t\t\t\tcontinue;\r\n\t\t\tif (version >= dev.v[1] || version < dev.v[0])\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//If the device is already here, just mark as scanned and move one.\r\n\t\t\t// If an old device is here, remove it\r\n\t\t\tconst vint = this.vintDevices[childIndex];\r\n\t\t\tif (vint) {\r\n\t\t\t\tif (vint.devDef === dev && vint.version === version)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tthis.conn._deviceDetach(vint);\r\n\t\t\t\tdelete this.vintDevices[childIndex];\r\n\t\t\t}\r\n\r\n\t\t\tconst data: VINTDeviceProperties = {\r\n\t\t\t\tvintProto: PUNK.UINT8,\r\n\t\t\t\tsuppSetSpeed: false,\r\n\t\t\t\tsuppAutoSetSpeed: false,\r\n\t\t\t\tmaxSpeed: PUNK.UINT32,\r\n\t\t\t\tcommSpeed: PUNK.UINT32,\r\n\t\t\t\thubPort: port,\r\n\t\t\t\tisHubPort: id <= HUB_PORT_ID_MAX,\r\n\t\t\t\tuniqueIndex: childIndex\r\n\t\t\t};\r\n\r\n\t\t\t// For a VINT Device on a VINT2 capable hub - read out the vint device and port descriptors\r\n\t\t\tif (id > HUB_PORT_ID_MAX) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbuf = await this.readDescriptor(PhidgetVendorDescriptorType.USB_DESC_TYPE_VINT_DEVICE_DESC, port);\r\n\r\n\t\t\t\t\tvintDeviceDesc = {\r\n\t\t\t\t\t\tbLength: buf.getUint8(0),\r\n\t\t\t\t\t\tbDescriptorType: buf.getUint8(1),\r\n\t\t\t\t\t\twID: buf.getUint16(2),\r\n\t\t\t\t\t\twVersion: buf.getUint16(4, true),\r\n\t\t\t\t\t\tbVINTProtocolVersion: buf.getUint8(6),\r\n\t\t\t\t\t\tVINTProperties: new DataView(buf.buffer, 7)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata.vintProto = vintDeviceDesc.bVINTProtocolVersion;\r\n\t\t\t\t\tfor (let i = 0; i < vintDeviceDesc.VINTProperties.byteLength; i += propLen) {\r\n\t\t\t\t\t\tprop = vintDeviceDesc.VINTProperties.getUint8(i) & 0x1F;\r\n\t\t\t\t\t\tpropLen = ((vintDeviceDesc.VINTProperties.getUint8(i) & 0xE0) >> 5) + 1\r\n\t\t\t\t\t\tswitch (prop) {\r\n\t\t\t\t\t\t\tcase VINTProperties.POWERSOURCE:\r\n\t\t\t\t\t\t\tcase VINTProperties.ISOLATION:\r\n\t\t\t\t\t\t\t\t// NOTE: Unused so far\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase VINTProperties.SETSPEEDSUPPORT:\r\n\t\t\t\t\t\t\t\tdata.suppSetSpeed = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase VINTProperties.AUTOSETSPEEDSUPPORT:\r\n\t\t\t\t\t\t\t\tdata.suppAutoSetSpeed = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase VINTProperties.SETSPEEDLIMIT:\r\n\t\t\t\t\t\t\t\tdata.maxSpeed = vintDeviceDesc.VINTProperties.getUint32(i + 1, false);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tloginfo(\"Unknown VINT Device Property: \" + vintDeviceDesc.VINTProperties.getUint8(i));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait this.updatePortProperties(port);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tlogwarn(\"Couldn't read VINT Device descriptor from a Hub\", err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\tdata.commSpeed = this.hubPortProps![port].portSpeed ?? PUNK.UINT32;\r\n\r\n\t\t\tconst vintData: VINTDeviceData = {\r\n\t\t\t\ttype: 'VINT' as const,\r\n\t\t\t\tversion: version,\r\n\t\t\t\tlabel: this.label,\r\n\t\t\t\tserialNumber: this.serialNumber,\r\n\t\t\t\tdevDef: dev,\r\n\t\t\t\tfwstr: dev.s,\r\n\t\t\t\t// Just needs to be a unique string representing this device\r\n\t\t\t\tid: this.devDef.uid + \"_\" + this.serialNumber + '_' + port + '_' + dev.uid,\r\n\t\t\t\tparent: this,\r\n\t\t\t\tvintDeviceProps: data\r\n\t\t\t};\r\n\r\n\t\t\tconst vintDev = new VINTDevice(this.conn, vintData);\r\n\t\t\tthis.vintDevices[vintDev.index] = vintDev;\r\n\t\t\tthis.conn._attachLocalDevice(vintDev);\r\n\r\n\t\t\tif (id === UNKNOWN_VINT_ID)\r\n\t\t\t\tlogwarn(\"A VINT Phidget (ID: \" + realID + \" Version: \" + version + \" HubPort: \" + port + \") was found which is not supported by the library. A library upgrade is required to work with this Phidget.\");\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Attach device as the special unknown device\r\n\t\tawait this.scanVINTDevice(childIndex, UNKNOWN_VINT_ID, version, port, id);\r\n\t}\r\n\r\n\tasync scanVINTDevices() {\r\n\t\tlet i, j, childIndex;\r\n\t\tlet deviceID;\r\n\t\tlet version;\r\n\r\n\t\tlet buf = await this.readDescriptor(PhidgetVendorDescriptorType.USB_DESC_TYPE_VINT_PORTS_DESC, 0);\r\n\t\tconst len = buf.byteLength;\r\n\t\tbuf = new DataView(buf.buffer.slice(2));\r\n\r\n\t\tif (len !== (this.numVintPorts * 4 + this.numVintPortModes * 4 + 2)) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Wrong VINT Ports descriptor length from Hub: \" + len + \"/\"\r\n\t\t\t\t+ (this.numVintPorts * 4 + this.numVintPortModes * 4 + 2));\r\n\t\t}\r\n\r\n\t\t// Add/Detach Vint devices\r\n\t\tfor (childIndex = 0, i = 0; i < this.numVintPorts; i++) {\r\n\r\n\t\t\tdeviceID = buf.getUint16(0, true);\r\n\t\t\tversion = buf.getUint8(3) * 100 + buf.getUint8(2);\r\n\t\t\tbuf = new DataView(buf.buffer.slice(4));\r\n\r\n\t\t\t// deviceID is going to be either 0x000 (nothing attached) or > HUB_PORT_ID_MAX for a VINT device plugged in\r\n\t\t\tif (deviceID > HUB_PORT_ID_MAX) {\r\n\t\t\t\tawait this.scanVINTDevice(childIndex, deviceID, version, i);\r\n\t\t\t} else {\r\n\t\t\t\t// Nothing plugged in - detach previous VINT device if any\r\n\t\t\t\tif (this.vintDevices[childIndex]) {\r\n\t\t\t\t\tthis.conn._deviceDetach(this.vintDevices[childIndex]);\r\n\t\t\t\t\tdelete this.vintDevices[childIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchildIndex++;\r\n\r\n\t\t\t// NOTE: deviceID and HubPortMode enum overlap for hub port mode devices \r\n\t\t\tif (deviceID > HubPortMode.VINT && deviceID <= HUB_PORT_ID_MAX)\r\n\t\t\t\tawait this.resetVINTPortModeIfNeeded(i, deviceID as HubPortMode);\r\n\t\t}\r\n\r\n\t\t// Add port devices\r\n\t\tfor (j = 0; j < this.numVintPortModes; j++) {\r\n\t\t\tdeviceID = buf.getUint16(0, true);\r\n\t\t\tversion = buf.getUint8(3) * 100 + buf.getUint8(2);\r\n\t\t\tbuf = new DataView(buf.buffer.slice(4));\r\n\r\n\t\t\tfor (i = 0; i < this.numVintPorts; i++)\r\n\t\t\t\tawait this.scanVINTDevice(childIndex++, deviceID, version, i);\r\n\t\t}\r\n\t}\r\n\r\n\tasync resetVINTPortModeIfNeeded(port: number, mode: HubPortMode) {\r\n\r\n\t\tif (mode === HubPortMode.VINT)\r\n\t\t\treturn;\r\n\r\n\t\t//Check if we have opened a non-hub-port device and the hub port is in port mode...\r\n\t\t// In this case, switch the port mode.  This only applied if we have opened by serial number or label.\r\n\t\tfor (const userphid of UserPhidgets) {\r\n\r\n\t\t\tif (userphid._isattached)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (userphid._hubPort !== port)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (userphid._isHubPort)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (userphid._serialNumber === Phidget.ANY_SERIAL_NUMBER && userphid._deviceLabel === Phidget.ANY_LABEL)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (userphid._serialNumber !== Phidget.ANY_SERIAL_NUMBER) {\r\n\t\t\t\tif (userphid._serialNumber !== this.serialNumber)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (userphid._deviceLabel !== Phidget.ANY_LABEL) {\r\n\t\t\t\tif (userphid._deviceLabel !== this.label)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// NOTE: we don't need to lock, because we are locked by the caller\r\n\t\t\tlet opened = false;\r\n\t\t\ttry {\r\n\t\t\t\tawait this.open();\r\n\t\t\t\topened = true;\r\n\t\t\t\tawait this.setPortMode(port, HubPortMode.VINT);\r\n\t\t\t} finally {\r\n\t\t\t\tif (opened)\r\n\t\t\t\t\tawait this.close();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { HubDevice };","import * as VintPackets from './VintPackets';\nimport { DeviceUID } from '../Devices.gen';\nimport { LocalChannel } from './LocalChannel';\nimport { BridgePacket } from '../BridgePacket';\nimport { PhidgetError } from '../PhidgetError';\nimport { ErrorCode } from '../Enumerations.gen';\n\ntype VintSend = (ch: LocalChannel, bp: BridgePacket) => Promise<void>;\ntype VintRecv = (ch: LocalChannel, buf: DataView) => void;\n\n/** @internal */\nexport function getVINTIO(uid: DeviceUID): { send: VintSend; recv: VintRecv } {\n\tswitch (uid) {\n\t\tcase DeviceUID._1014_3_VINT:\n\t\t\treturn { send: VintPackets.send1014_3_VINT, recv: VintPackets.recv1014_3_VINT };\n\t\tcase DeviceUID._1017_2_VINT:\n\t\t\treturn { send: VintPackets.send1017_2_VINT, recv: VintPackets.recv1017_2_VINT };\n\t\tcase DeviceUID._1055_1_VINT:\n\t\t\treturn { send: VintPackets.send1055_1_VINT, recv: VintPackets.recv1055_1_VINT };\n\t\tcase DeviceUID._DIGITALINPUT_PORT:\n\t\t\treturn { send: VintPackets.sendDIGITALINPUT_PORT, recv: VintPackets.recvDIGITALINPUT_PORT };\n\t\tcase DeviceUID._DIGITALOUTPUT_PORT:\n\t\t\treturn { send: VintPackets.sendDIGITALOUTPUT_PORT, recv: VintPackets.recvDIGITALOUTPUT_PORT };\n\t\tcase DeviceUID._DIGITALOUTPUT_PORT_FAILSAFE:\n\t\t\treturn { send: VintPackets.sendDIGITALOUTPUT_PORT_FAILSAFE, recv: VintPackets.recvDIGITALOUTPUT_PORT_FAILSAFE };\n\t\tcase DeviceUID._VOLTAGEINPUT_PORT:\n\t\t\treturn { send: VintPackets.sendVOLTAGEINPUT_PORT, recv: VintPackets.recvVOLTAGEINPUT_PORT };\n\t\tcase DeviceUID._VOLTAGEINPUT_PORT_5V25:\n\t\t\treturn { send: VintPackets.sendVOLTAGEINPUT_PORT_5V25, recv: VintPackets.recvVOLTAGEINPUT_PORT_5V25 };\n\t\tcase DeviceUID._VOLTAGERATIOINPUT_PORT:\n\t\t\treturn { send: VintPackets.sendVOLTAGERATIOINPUT_PORT, recv: VintPackets.recvVOLTAGERATIOINPUT_PORT };\n\t\tcase DeviceUID._ADP1000:\n\t\t\treturn { send: VintPackets.sendADP1000, recv: VintPackets.recvADP1000 };\n\t\tcase DeviceUID._DAQ1000:\n\t\t\treturn { send: VintPackets.sendDAQ1000, recv: VintPackets.recvDAQ1000 };\n\t\tcase DeviceUID._DAQ1000_5V25:\n\t\t\treturn { send: VintPackets.sendDAQ1000_5V25, recv: VintPackets.recvDAQ1000_5V25 };\n\t\tcase DeviceUID._OUT1000:\n\t\t\treturn { send: VintPackets.sendOUT1000, recv: VintPackets.recvOUT1000 };\n\t\tcase DeviceUID._OUT1000_Failsafe:\n\t\t\treturn { send: VintPackets.sendOUT1000_Failsafe, recv: VintPackets.recvOUT1000_Failsafe };\n\t\tcase DeviceUID._OUT1001:\n\t\t\treturn { send: VintPackets.sendOUT1001, recv: VintPackets.recvOUT1001 };\n\t\tcase DeviceUID._OUT1001_Failsafe:\n\t\t\treturn { send: VintPackets.sendOUT1001_Failsafe, recv: VintPackets.recvOUT1001_Failsafe };\n\t\tcase DeviceUID._OUT1002:\n\t\t\treturn { send: VintPackets.sendOUT1002, recv: VintPackets.recvOUT1002 };\n\t\tcase DeviceUID._OUT1002_Failsafe:\n\t\t\treturn { send: VintPackets.sendOUT1002_Failsafe, recv: VintPackets.recvOUT1002_Failsafe };\n\t\tcase DeviceUID._DAQ1200:\n\t\t\treturn { send: VintPackets.sendDAQ1200, recv: VintPackets.recvDAQ1200 };\n\t\tcase DeviceUID._OUT1100:\n\t\t\treturn { send: VintPackets.sendOUT1100, recv: VintPackets.recvOUT1100 };\n\t\tcase DeviceUID._OUT1100_Failsafe:\n\t\t\treturn { send: VintPackets.sendOUT1100_Failsafe, recv: VintPackets.recvOUT1100_Failsafe };\n\t\tcase DeviceUID._OUT1100_Failsafe_Frequency:\n\t\t\treturn { send: VintPackets.sendOUT1100_Failsafe_Frequency, recv: VintPackets.recvOUT1100_Failsafe_Frequency };\n\t\tcase DeviceUID._DAQ1300:\n\t\t\treturn { send: VintPackets.sendDAQ1300, recv: VintPackets.recvDAQ1300 };\n\t\tcase DeviceUID._DAQ1301:\n\t\t\treturn { send: VintPackets.sendDAQ1301, recv: VintPackets.recvDAQ1301 };\n\t\tcase DeviceUID._DAQ1400:\n\t\t\treturn { send: VintPackets.sendDAQ1400, recv: VintPackets.recvDAQ1400 };\n\t\tcase DeviceUID._DAQ1400_120:\n\t\t\treturn { send: VintPackets.sendDAQ1400_120, recv: VintPackets.recvDAQ1400_120 };\n\t\tcase DeviceUID._DAQ1500:\n\t\t\treturn { send: VintPackets.sendDAQ1500, recv: VintPackets.recvDAQ1500 };\n\t\tcase DeviceUID._VCP1100:\n\t\t\treturn { send: VintPackets.sendVCP1100, recv: VintPackets.recvVCP1100 };\n\t\tcase DeviceUID._DCC1000:\n\t\t\treturn { send: VintPackets.sendDCC1000, recv: VintPackets.recvDCC1000 };\n\t\tcase DeviceUID._DCC1000_POSITIONCONTROL:\n\t\t\treturn { send: VintPackets.sendDCC1000_POSITIONCONTROL, recv: VintPackets.recvDCC1000_POSITIONCONTROL };\n\t\tcase DeviceUID._DCC1000_POSITIONCONTROL_FAILSAFE:\n\t\t\treturn { send: VintPackets.sendDCC1000_POSITIONCONTROL_FAILSAFE, recv: VintPackets.recvDCC1000_POSITIONCONTROL_FAILSAFE };\n\t\tcase DeviceUID._DCC1001:\n\t\t\treturn { send: VintPackets.sendDCC1001, recv: VintPackets.recvDCC1001 };\n\t\tcase DeviceUID._DCC1001_Failsafe:\n\t\t\treturn { send: VintPackets.sendDCC1001_Failsafe, recv: VintPackets.recvDCC1001_Failsafe };\n\t\tcase DeviceUID._DCC1002:\n\t\t\treturn { send: VintPackets.sendDCC1002, recv: VintPackets.recvDCC1002 };\n\t\tcase DeviceUID._DCC1002_Failsafe:\n\t\t\treturn { send: VintPackets.sendDCC1002_Failsafe, recv: VintPackets.recvDCC1002_Failsafe };\n\t\tcase DeviceUID._DCC1003:\n\t\t\treturn { send: VintPackets.sendDCC1003, recv: VintPackets.recvDCC1003 };\n\t\tcase DeviceUID._DCC1003_Failsafe:\n\t\t\treturn { send: VintPackets.sendDCC1003_Failsafe, recv: VintPackets.recvDCC1003_Failsafe };\n\t\tcase DeviceUID._DCC1100:\n\t\t\treturn { send: VintPackets.sendDCC1100, recv: VintPackets.recvDCC1100 };\n\t\tcase DeviceUID._DCC1100_Failsafe:\n\t\t\treturn { send: VintPackets.sendDCC1100_Failsafe, recv: VintPackets.recvDCC1100_Failsafe };\n\t\tcase DeviceUID._DST1000:\n\t\t\treturn { send: VintPackets.sendDST1000, recv: VintPackets.recvDST1000 };\n\t\tcase DeviceUID._DST1001:\n\t\t\treturn { send: VintPackets.sendDST1001, recv: VintPackets.recvDST1001 };\n\t\tcase DeviceUID._DST1002:\n\t\t\treturn { send: VintPackets.sendDST1002, recv: VintPackets.recvDST1002 };\n\t\tcase DeviceUID._DST1200:\n\t\t\treturn { send: VintPackets.sendDST1200, recv: VintPackets.recvDST1200 };\n\t\tcase DeviceUID._ENC1000:\n\t\t\treturn { send: VintPackets.sendENC1000, recv: VintPackets.recvENC1000 };\n\t\tcase DeviceUID._HIN1101:\n\t\t\treturn { send: VintPackets.sendHIN1101, recv: VintPackets.recvHIN1101 };\n\t\tcase DeviceUID._HIN1000:\n\t\t\treturn { send: VintPackets.sendHIN1000, recv: VintPackets.recvHIN1000 };\n\t\tcase DeviceUID._HIN1001:\n\t\t\treturn { send: VintPackets.sendHIN1001, recv: VintPackets.recvHIN1001 };\n\t\tcase DeviceUID._HIN1100:\n\t\t\treturn { send: VintPackets.sendHIN1100, recv: VintPackets.recvHIN1100 };\n\t\tcase DeviceUID._HUM1000:\n\t\t\treturn { send: VintPackets.sendHUM1000, recv: VintPackets.recvHUM1000 };\n\t\tcase DeviceUID._HUM1001:\n\t\t\treturn { send: VintPackets.sendHUM1001, recv: VintPackets.recvHUM1001 };\n\t\tcase DeviceUID._LCD1100:\n\t\t\treturn { send: VintPackets.sendLCD1100, recv: VintPackets.recvLCD1100 };\n\t\tcase DeviceUID._LED1000:\n\t\t\treturn { send: VintPackets.sendLED1000, recv: VintPackets.recvLED1000 };\n\t\tcase DeviceUID._LUX1000:\n\t\t\treturn { send: VintPackets.sendLUX1000, recv: VintPackets.recvLUX1000 };\n\t\tcase DeviceUID._HUM1100:\n\t\t\treturn { send: VintPackets.sendHUM1100, recv: VintPackets.recvHUM1100 };\n\t\tcase DeviceUID._MOT1100:\n\t\t\treturn { send: VintPackets.sendMOT1100, recv: VintPackets.recvMOT1100 };\n\t\tcase DeviceUID._MOT0100_VINT:\n\t\t\treturn { send: VintPackets.sendMOT0100_VINT, recv: VintPackets.recvMOT0100_VINT };\n\t\tcase DeviceUID._MOT1101:\n\t\t\treturn { send: VintPackets.sendMOT1101, recv: VintPackets.recvMOT1101 };\n\t\tcase DeviceUID._MOT1102:\n\t\t\treturn { send: VintPackets.sendMOT1102, recv: VintPackets.recvMOT1102 };\n\t\tcase DeviceUID._MOT1102_1:\n\t\t\treturn { send: VintPackets.sendMOT1102_1, recv: VintPackets.recvMOT1102_1 };\n\t\tcase DeviceUID._MOT0110_VINT:\n\t\t\treturn { send: VintPackets.sendMOT0110_VINT, recv: VintPackets.recvMOT0110_VINT };\n\t\tcase DeviceUID._PRE1000:\n\t\t\treturn { send: VintPackets.sendPRE1000, recv: VintPackets.recvPRE1000 };\n\t\tcase DeviceUID._RCC1000:\n\t\t\treturn { send: VintPackets.sendRCC1000, recv: VintPackets.recvRCC1000 };\n\t\tcase DeviceUID._RCC1000_Failsafe:\n\t\t\treturn { send: VintPackets.sendRCC1000_Failsafe, recv: VintPackets.recvRCC1000_Failsafe };\n\t\tcase DeviceUID._RCC1000_1:\n\t\t\treturn { send: VintPackets.sendRCC1000_1, recv: VintPackets.recvRCC1000_1 };\n\t\tcase DeviceUID._REL1000:\n\t\t\treturn { send: VintPackets.sendREL1000, recv: VintPackets.recvREL1000 };\n\t\tcase DeviceUID._REL1000_Failsafe:\n\t\t\treturn { send: VintPackets.sendREL1000_Failsafe, recv: VintPackets.recvREL1000_Failsafe };\n\t\tcase DeviceUID._REL1100:\n\t\t\treturn { send: VintPackets.sendREL1100, recv: VintPackets.recvREL1100 };\n\t\tcase DeviceUID._REL1100_Failsafe:\n\t\t\treturn { send: VintPackets.sendREL1100_Failsafe, recv: VintPackets.recvREL1100_Failsafe };\n\t\tcase DeviceUID._REL1100_Failsafe_Frequency:\n\t\t\treturn { send: VintPackets.sendREL1100_Failsafe_Frequency, recv: VintPackets.recvREL1100_Failsafe_Frequency };\n\t\tcase DeviceUID._REL1101:\n\t\t\treturn { send: VintPackets.sendREL1101, recv: VintPackets.recvREL1101 };\n\t\tcase DeviceUID._REL1101_Failsafe:\n\t\t\treturn { send: VintPackets.sendREL1101_Failsafe, recv: VintPackets.recvREL1101_Failsafe };\n\t\tcase DeviceUID._REL1101_1:\n\t\t\treturn { send: VintPackets.sendREL1101_1, recv: VintPackets.recvREL1101_1 };\n\t\tcase DeviceUID._SAF1000:\n\t\t\treturn { send: VintPackets.sendSAF1000, recv: VintPackets.recvSAF1000 };\n\t\tcase DeviceUID._SAF1000_Failsafe:\n\t\t\treturn { send: VintPackets.sendSAF1000_Failsafe, recv: VintPackets.recvSAF1000_Failsafe };\n\t\tcase DeviceUID._SND1000:\n\t\t\treturn { send: VintPackets.sendSND1000, recv: VintPackets.recvSND1000 };\n\t\tcase DeviceUID._STC1000:\n\t\t\treturn { send: VintPackets.sendSTC1000, recv: VintPackets.recvSTC1000 };\n\t\tcase DeviceUID._STC1000_Failsafe:\n\t\t\treturn { send: VintPackets.sendSTC1000_Failsafe, recv: VintPackets.recvSTC1000_Failsafe };\n\t\tcase DeviceUID._STC1001:\n\t\t\treturn { send: VintPackets.sendSTC1001, recv: VintPackets.recvSTC1001 };\n\t\tcase DeviceUID._STC1001_Failsafe:\n\t\t\treturn { send: VintPackets.sendSTC1001_Failsafe, recv: VintPackets.recvSTC1001_Failsafe };\n\t\tcase DeviceUID._STC1002:\n\t\t\treturn { send: VintPackets.sendSTC1002, recv: VintPackets.recvSTC1002 };\n\t\tcase DeviceUID._STC1002_Failsafe:\n\t\t\treturn { send: VintPackets.sendSTC1002_Failsafe, recv: VintPackets.recvSTC1002_Failsafe };\n\t\tcase DeviceUID._STC1003:\n\t\t\treturn { send: VintPackets.sendSTC1003, recv: VintPackets.recvSTC1003 };\n\t\tcase DeviceUID._STC1003_Failsafe:\n\t\t\treturn { send: VintPackets.sendSTC1003_Failsafe, recv: VintPackets.recvSTC1003_Failsafe };\n\t\tcase DeviceUID._STC1003_1:\n\t\t\treturn { send: VintPackets.sendSTC1003_1, recv: VintPackets.recvSTC1003_1 };\n\t\tcase DeviceUID._STC1005_0:\n\t\t\treturn { send: VintPackets.sendSTC1005_0, recv: VintPackets.recvSTC1005_0 };\n\t\tcase DeviceUID._TMP1000:\n\t\t\treturn { send: VintPackets.sendTMP1000, recv: VintPackets.recvTMP1000 };\n\t\tcase DeviceUID._TMP1100:\n\t\t\treturn { send: VintPackets.sendTMP1100, recv: VintPackets.recvTMP1100 };\n\t\tcase DeviceUID._TMP1101:\n\t\t\treturn { send: VintPackets.sendTMP1101, recv: VintPackets.recvTMP1101 };\n\t\tcase DeviceUID._TMP1101_1:\n\t\t\treturn { send: VintPackets.sendTMP1101_1, recv: VintPackets.recvTMP1101_1 };\n\t\tcase DeviceUID._TMP1200:\n\t\t\treturn { send: VintPackets.sendTMP1200, recv: VintPackets.recvTMP1200 };\n\t\tcase DeviceUID._TMP1200_1:\n\t\t\treturn { send: VintPackets.sendTMP1200_1, recv: VintPackets.recvTMP1200_1 };\n\t\tcase DeviceUID._VCP1000:\n\t\t\treturn { send: VintPackets.sendVCP1000, recv: VintPackets.recvVCP1000 };\n\t\tcase DeviceUID._VCP1001:\n\t\t\treturn { send: VintPackets.sendVCP1001, recv: VintPackets.recvVCP1001 };\n\t\tcase DeviceUID._VCP1001_110:\n\t\t\treturn { send: VintPackets.sendVCP1001_110, recv: VintPackets.recvVCP1001_110 };\n\t\tcase DeviceUID._VCP1002:\n\t\t\treturn { send: VintPackets.sendVCP1002, recv: VintPackets.recvVCP1002 };\n\t\tcase DeviceUID._VCP1002_110:\n\t\t\treturn { send: VintPackets.sendVCP1002_110, recv: VintPackets.recvVCP1002_110 };\n\t\tcase DeviceUID._FIRMWARE_UPGRADE_STM32F0:\n\t\t\treturn { send: VintPackets.sendFIRMWARE_UPGRADE_STM32F0, recv: VintPackets.recvFIRMWARE_UPGRADE_STM32F0 };\n\t\tcase DeviceUID._FIRMWARE_UPGRADE_STM32G0_BLBug:\n\t\t\treturn { send: VintPackets.sendFIRMWARE_UPGRADE_STM32G0_BLBug, recv: VintPackets.recvFIRMWARE_UPGRADE_STM32G0_BLBug };\n\t\tcase DeviceUID._FIRMWARE_UPGRADE_STM32G0:\n\t\t\treturn { send: VintPackets.sendFIRMWARE_UPGRADE_STM32G0, recv: VintPackets.recvFIRMWARE_UPGRADE_STM32G0 };\n\t\tcase DeviceUID._FIRMWARE_UPGRADE_STM32F3:\n\t\t\treturn { send: VintPackets.sendFIRMWARE_UPGRADE_STM32F3, recv: VintPackets.recvFIRMWARE_UPGRADE_STM32F3 };\n\t\tcase DeviceUID._FIRMWARE_UPGRADE_STM8S:\n\t\t\treturn { send: VintPackets.sendFIRMWARE_UPGRADE_STM8S, recv: VintPackets.recvFIRMWARE_UPGRADE_STM8S };\n\t\tcase DeviceUID._UNKNOWNVINT:\n\t\t\treturn { send: VintPackets.sendUNKNOWNVINT, recv: VintPackets.recvUNKNOWNVINT };\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t}\n}\n","﻿import { ErrorCode, ChannelClass, HubPortMode } from '../../Enumerations.gen';\r\nimport { PhidgetError } from '../../PhidgetError';\r\nimport { BP } from '../../BridgePackets.gen';\r\nimport * as VintPacketType from '../VintPacketType';\r\nimport { logdebug, loginfo, logverbose } from '../../Logging';\r\nimport { LocalDevice, MAX_OUT_PACKET_SIZE, PHIDGET_MAXCHANNELS } from '../LocalDevice';\r\nimport { USBConnectionBase } from '../USBConnection';\r\nimport { LocalChannel } from '../LocalChannel';\r\nimport { BridgePacket, PUNK } from '../../BridgePacket';\r\nimport { PhidgetUSBRequestType } from '../USB';\r\nimport { HubDevice, HubPacketType, PACKETIDS_PER_PORT } from './HubDevice';\r\nimport { PacketTracker } from '../PacketTracker';\r\nimport { getVINTIO } from '../VintPackets.gen';\r\nimport { VINTDeviceData, VINTDeviceProperties } from '../../Device';\r\nimport { Phidget } from '../../Phidget';\r\n\r\nconst VINT_DATA_wCHANNEL = 0x40;\r\n\r\nconst NUM_VINT_SUPPORTED_SPEEDS = 10;\r\nconst supportedSpeeds = [10000, 25000, 50000, 100000, 160000, 250000, 400000, 500000, 800000, 1000000];\r\n\r\nclass VINTDevice extends LocalDevice {\r\n\tdeclare parent: HubDevice;\r\n\tdeclare vintDeviceProps: VINTDeviceProperties;\r\n\tprivate opened: boolean;\r\n\tprivate openCnt: number;\r\n\r\n\tvintIO: {\r\n\t\tsend: (ch: LocalChannel, bp: BridgePacket) => Promise<void>;\r\n\t\trecv: (ch: LocalChannel, buf: DataView) => void;\r\n\t};\r\n\r\n\tconstructor(conn: USBConnectionBase, data: VINTDeviceData) {\r\n\t\tsuper(conn, data);\r\n\r\n\t\tconst io = getVINTIO(this.devDef.uid);\r\n\t\tif (io == undefined)\r\n\t\t\tthrow new Error(\"Invalid VINT Device UID\");\r\n\r\n\t\tthis.vintIO = io;\r\n\r\n\t\tthis.opened = false;\r\n\t\tthis.openCnt = 0;\r\n\t}\r\n\r\n\tasync open() {\r\n\r\n\t\tif (!this.opened) {\r\n\t\t\tthis.openCnt = 0;\r\n\t\t\tawait this.parent.open();\r\n\t\t\tthis.opened = true;\r\n\t\t}\r\n\t\tthis.openCnt++;\r\n\t}\r\n\r\n\tasync close(force = false) {\r\n\r\n\t\tif (!this.opened)\r\n\t\t\treturn;\r\n\r\n\t\tif (force)\r\n\t\t\tthis.openCnt = 1;\r\n\r\n\t\tthis.openCnt--;\r\n\t\tif (this.openCnt > 0) {\r\n\t\t\tlogdebug(\"Leaving VINT device open, as open count is: \" + this.openCnt);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.opened = false;\r\n\t\tthis.openCnt = 0;\r\n\t\tawait this.parent.close();\r\n\t}\r\n\r\n\tasync lock() {\r\n\t\tawait this.parent.lock();\r\n\t}\r\n\r\n\tunlock() {\r\n\t\tthis.parent.unlock();\r\n\t}\r\n\r\n\tasync bridgeInput(channel: LocalChannel, bp: BridgePacket) {\r\n\r\n\t\tconst hub = this.parent;\r\n\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t// RESET the device channel\r\n\t\t\t\tawait channel.sendVINTDataPacket(VintPacketType.GenericPacket.PHIDGET_RESET);\r\n\t\t\t\t// Reset the port mode\r\n\t\t\t\tawait hub.setPortMode(this.hubPort, HubPortMode.VINT);\r\n\t\t\t\tawait hub.packetTrackers.waitForPendingPackets(this.hubPort);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.OPENRESET: {\r\n\t\t\t\tlet portMode: HubPortMode = HubPortMode.VINT;\r\n\t\t\t\tif (channel.isHubPort) {\r\n\t\t\t\t\tswitch (channel.class) {\r\n\t\t\t\t\t\tcase ChannelClass.DIGITAL_INPUT:\r\n\t\t\t\t\t\t\tportMode = HubPortMode.DIGITAL_INPUT;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ChannelClass.DIGITAL_OUTPUT:\r\n\t\t\t\t\t\t\tportMode = HubPortMode.DIGITAL_OUTPUT;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ChannelClass.VOLTAGE_INPUT:\r\n\t\t\t\t\t\t\tportMode = HubPortMode.VOLTAGE_INPUT;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ChannelClass.VOLTAGE_RATIO_INPUT:\r\n\t\t\t\t\t\t\tportMode = HubPortMode.VOLTAGE_RATIO_INPUT;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tawait hub.setPortMode(channel.parent.hubPort, portMode);\r\n\t\t\t\tawait channel.sendVINTDataPacket(VintPacketType.GenericPacket.PHIDGET_RESET);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase BP.ENABLE:\r\n\t\t\t\tawait channel.sendVINTDataPacket(VintPacketType.GenericPacket.PHIDGET_ENABLE);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tawait this.vintIO.send(channel, bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tdataInput(buffer: DataView) {\r\n\t\tlet channelIndex;\r\n\t\tlet readPtr;\r\n\t\tlet dataCount;\r\n\r\n\t\t//Data Length and Channel\r\n\t\tif (buffer.getUint8(0) & VINT_DATA_wCHANNEL) {\r\n\t\t\tdataCount = (buffer.getUint8(0) & 0x3F) - 1;\r\n\t\t\tchannelIndex = buffer.getUint8(1);\r\n\t\t\treadPtr = 2;\r\n\t\t} else {\r\n\t\t\tdataCount = buffer.getUint8(0) & 0x3F;\r\n\t\t\tchannelIndex = 0;\r\n\t\t\treadPtr = 1;\r\n\t\t}\r\n\r\n\t\tconst vintChannel = this.getChannel(channelIndex);\r\n\t\tif (!vintChannel)\r\n\t\t\treturn;\r\n\r\n\t\tthis.vintIO.recv(vintChannel, new DataView(buffer.buffer, readPtr + buffer.byteOffset, dataCount));\r\n\t}\r\n\r\n\tmakePacket(vintChannel: LocalChannel, deviceCommand: VINTDeviceCommand, devicePacketType: number, bufferIn?: Uint8Array) {\r\n\t\tconst buffer = new Uint8Array(new ArrayBuffer(MAX_OUT_PACKET_SIZE));\r\n\t\tlet bufIndex = 0;\r\n\r\n\t\tif (bufferIn == undefined)\r\n\t\t\tbufferIn = new Uint8Array(0);\r\n\r\n\t\tswitch (deviceCommand) {\r\n\t\t\tcase VINTDeviceCommand.DATA:\r\n\t\t\t\tif (vintChannel.uniqueIndex) {\r\n\t\t\t\t\tbuffer.set([VINT_DATA_wCHANNEL | (bufferIn.length + 2)], bufIndex++);\r\n\t\t\t\t\tbuffer.set([vintChannel.uniqueIndex], bufIndex++);\r\n\t\t\t\t\tbuffer.set([devicePacketType], bufIndex++);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuffer.set([bufferIn.length + 1], bufIndex++);\r\n\t\t\t\t\tbuffer.set([devicePacketType], bufIndex++);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (bufferIn)\r\n\t\t\t\t\tbuffer.set(bufferIn, bufIndex);\r\n\t\t\t\tbreak;\r\n\t\t\tcase VINTDeviceCommand.RESET:\r\n\t\t\tcase VINTDeviceCommand.UPGRADE_FIRMWARE:\r\n\t\t\tcase VINTDeviceCommand.FIRMWARE_UPGRADE_DONE:\r\n\t\t\t\tbuffer.set([deviceCommand], bufIndex++);\r\n\t\t\t\tbreak;\r\n\t\t\tcase VINTDeviceCommand.SETSPEED2:\r\n\t\t\t\tif (bufferIn.length !== 4)\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\r\n\t\t\t\tbuffer.set([deviceCommand], bufIndex++);\r\n\t\t\t\tbuffer.set(bufferIn, bufIndex);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET);\r\n\t\t}\r\n\r\n\t\treturn buffer.slice(0, bufIndex + bufferIn.length);\r\n\t}\r\n\r\n\tasync sendpacket(bufferIn: Uint8Array) {\r\n\r\n\t\tif (bufferIn.length > MAX_OUT_PACKET_SIZE)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"BufferIn length too big in sendpacket\");\r\n\r\n\t\tconst hubDevice = this.parent;\r\n\r\n\t\t//on the vint hub, the port is encoded in the packet id (range is 1-126)\r\n\t\tconst tracker = await hubDevice.packetTrackers.getPacketTrackerWait(\r\n\t\t\thubDevice, this.hubPort * PACKETIDS_PER_PORT + 1,\r\n\t\t\t(this.hubPort + 1) * PACKETIDS_PER_PORT, this.hubPort, 500);\r\n\r\n\t\tlogverbose(\"Claimed Hub packet ID \" + tracker.id + \", Port \" + this.hubPort);\r\n\t\ttry {\r\n\t\t\tconst buffer = hubDevice.makePacket(this, tracker.id, bufferIn);\r\n\t\t\tawait hubDevice.claimPacketSpace(this.hubPort, buffer.byteLength);\r\n\t\t\ttracker.pt.setPacketLength(buffer.byteLength);\r\n\t\t\tawait this.sendpacketWithTracking(buffer, tracker.pt);\r\n\t\t\ttracker.pt.releasePacketTracker(false);\r\n\t\t\thubDevice.packetOutCounter[this.hubPort]++;\r\n\t\t\tlogverbose(\"Packet \" + tracker.id + \" send successfully, Port \" + this.hubPort);\r\n\t\t} catch (err) {\r\n\t\t\tlogverbose(\"Packet \" + tracker.id + \" failed, Port \" + this.hubPort, err);\r\n\t\t\ttracker.pt.releasePacketTracker(true);\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tasync sendpacketWithTracking(buf: Uint8Array, packetTracker: PacketTracker) {\r\n\t\t//Ensure that this packet wasn't signalled in the meantime (probably because of an error)\r\n\t\tif (packetTracker.signalled) {\r\n\t\t\tif (packetTracker.returnCode != ErrorCode.SUCCESS)\r\n\t\t\t\tthrow new PhidgetError(packetTracker.returnCode);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tawait this.parent.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_BULK_WRITE, 0, 0, buf);\r\n\r\n\t\tpacketTracker.sent = true;\r\n\t\tconst res = await packetTracker.waitForPendingPacket(1000);\r\n\t\tif (res != ErrorCode.SUCCESS)\r\n\t\t\tthrow new PhidgetError(res);\r\n\t}\r\n\r\n\tasync setHubPortSpeed(vintChannel: LocalChannel, speed: number) {\r\n\t\tlet i;\r\n\r\n\t\tconst hubPortProps = this.parent.hubPortProps[this.hubPort];\r\n\r\n\t\t// Both the port and device need to support >= VINT2\r\n\t\tif (hubPortProps.portProto === PUNK.UINT8 || this.vintDeviceProps.vintProto < 2 ||\r\n\t\t\tthis.vintDeviceProps.vintProto === PUNK.UINT8 || this.vintDeviceProps.vintProto < 2) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"VINT Port and Device must support VINT2 protocol.\");\r\n\t\t}\r\n\r\n\t\tif (!hubPortProps.portSuppSetSpeed) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"VINT Port does not support High Speed.\");\r\n\t\t}\r\n\r\n\t\tif (speed === Phidget.AUTO_HUBPORTSPEED && !hubPortProps.portSuppAutoSetSpeed) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"VINT Port does not support Auto Set Speed.\");\r\n\t\t}\r\n\r\n\t\tif (!this.vintDeviceProps.suppSetSpeed) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"VINT Device does not support High Speed.\");\r\n\t\t}\r\n\r\n\t\tif (speed === Phidget.AUTO_HUBPORTSPEED && !this.vintDeviceProps.suppAutoSetSpeed) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"VINT Device does not support Auto Set Speed.\");\r\n\t\t}\r\n\r\n\t\tif (speed > hubPortProps.portMaxSpeed) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Speed must be <= Port max speed of: \" + hubPortProps.portMaxSpeed + \"Hz.\");\r\n\t\t}\r\n\r\n\t\tif (speed > this.vintDeviceProps.maxSpeed) {\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Speed must be <= Device max speed of: \" + this.vintDeviceProps.maxSpeed + \"Hz.\");\r\n\t\t}\r\n\r\n\t\tif (speed !== Phidget.AUTO_HUBPORTSPEED) {\r\n\t\t\tfor (i = (NUM_VINT_SUPPORTED_SPEEDS - 1); i >= 0; i--) {\r\n\t\t\t\tif (speed >= supportedSpeeds[i]) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (speed !== supportedSpeeds[i]) {\r\n\t\t\t\tloginfo(\"Requested VINT speed of \" + speed + \"HZ is not supported.  Setting nearest lower speed of \" + supportedSpeeds[i] + \"Hz instead.\");\r\n\t\t\t}\r\n\t\t\tspeed = supportedSpeeds[i];\r\n\t\t}\r\n\r\n\t\tconst buf = new DataView(new ArrayBuffer(4));\r\n\t\tbuf.setUint32(0, speed);\r\n\t\tawait vintChannel.sendVINTPacket(VINTDeviceCommand.SETSPEED2, 0, new Uint8Array(buf.buffer));\r\n\r\n\t\t// Update the speed at the device level\r\n\t\tthis.vintDeviceProps.commSpeed = speed;\r\n\r\n\t\t// Notify all channels that the speed changed\r\n\t\tfor (let i = 0; i < PHIDGET_MAXCHANNELS; i++) {\r\n\t\t\tconst ch = this.getChannel(i);\r\n\t\t\tif (ch != undefined && ch !== vintChannel) {\r\n\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\tbp.set({ name: '0', type: 'u', value: this.vintDeviceProps.commSpeed });\r\n\t\t\t\tbp.sendToChannel(ch, BP.VINTSPEEDCHANGE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync reboot(vintChannel: LocalChannel) {\r\n\t\tawait vintChannel.sendVINTPacket(VINTDeviceCommand.RESET);\r\n\t}\r\n\r\n\tasync rebootFirmwareUpgrade(vintChannel: LocalChannel, timeout: number) {\r\n\t\tconst hubDevice = this.parent as HubDevice;\r\n\t\tconst buffer = new Uint8Array([timeout & 0xFF, (timeout >> 8) & 0xFF]);\r\n\t\tawait hubDevice.sendHubPortPacket(this.hubPort, HubPacketType.UPGRADE_FIRMWARE, buffer);\r\n\t\tawait vintChannel.sendVINTPacket(VINTDeviceCommand.RESET);\r\n\t}\r\n}\r\n\r\n/** @internal */\r\nconst enum VintMessages {\r\n\tVINT_CMD = 0x80,\r\n\tVINT_DATA = 0x00\r\n}\r\n\r\n/** @internal */\r\nexport const enum VINTDeviceCommand {\r\n\t//VINT1\r\n\tDATA = VintMessages.VINT_DATA,\r\n\tRESET = (VintMessages.VINT_CMD | 0x03),\r\n\tUPGRADE_FIRMWARE = (VintMessages.VINT_CMD | 0x0B),\r\n\tFIRMWARE_UPGRADE_DONE = (VintMessages.VINT_CMD | 0x0C),\r\n\t//VINT2\r\n\tSETSPEED2 = (VintMessages.VINT_CMD | 0x0F)\r\n}\r\n\r\nexport { VINTDevice };","import { BridgePacket } from \"../BridgePacket\";\r\nimport { BP } from \"../BridgePackets.gen\";\r\nimport { Channel, type ChannelData } from \"../Channel\";\r\nimport { VINTDevice, VINTDeviceCommand } from \"./device/VINTDevice\";\r\nimport { ChannelClass, ErrorCode } from \"../Enumerations.gen\";\r\nimport { tm } from \"../phidget22\";\r\nimport { PhidgetError } from \"../PhidgetError\";\r\nimport { USBConnectionBase } from \"./USBConnection\";\r\nimport { type PhidgetChannel } from \"../Phidget\";\r\nimport { PHIDGET_MAXCHANNELS, type LocalDevice } from \"./LocalDevice\";\r\nimport { PhidgetUSBDevice } from \"./PhidgetUSBDevice\";\r\nimport { logEventException } from \"../Logging\";\r\nimport { PhidgetUniqueChannel } from \"../Devices.gen\";\r\n\r\n/** @internal */\r\nclass LocalChannel extends Channel {\r\n\tdeclare conn: USBConnectionBase;\r\n\tdeclare parent: LocalDevice;\r\n\tdeclare chDef: Required<PhidgetUniqueChannel>;\r\n\tname: string;\r\n\tclass: ChannelClass;\r\n\r\n\tconstructor(conn: USBConnectionBase, dev: LocalDevice, data: ChannelData) {\r\n\t\tsuper(conn, dev, data);\r\n\t\tthis.name = this.chDef.t;\r\n\t\tthis.class = this.chDef.c;\r\n\t}\r\n\r\n\tasync open(userphid: PhidgetChannel) {\r\n\t\tconst dev = this.parent;\r\n\r\n\t\t// Check whether opening this would interfere with an already open channel by changing hub port modes\r\n\t\tif (dev instanceof VINTDevice) {\r\n\t\t\tfor (const ch of this.conn._channels.values()) {\r\n\t\t\t\t// same device ok\r\n\t\t\t\tif (ch.parent == dev)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t// not open ok\r\n\t\t\t\tif (!ch.isopen)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t// different device but same VINT Hub and hub port\r\n\t\t\t\tif (ch.parent.parentId === dev.parentId && ch.parent.hubPort === dev.hubPort) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.BUSY, \"Failed to open Channel \" + this + \" on local device: \" + dev +\r\n\t\t\t\t\t\t\" because Channel: \" + ch + \" is opened on the same Hub Port, and these channels are mutually exclusive.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check whether we already have another channel open which would interfere with this one because of exclusive access\r\n\t\tif (this.chDef.e != undefined) {\r\n\t\t\tfor (const c in this.parent.channels) {\r\n\t\t\t\tconst ch = this.parent.channels[c];\r\n\t\t\t\tif (ch === this)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (!ch.isopen)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t// Exclusive means same index and same exclusive integer\r\n\t\t\t\tif (ch.chDef.e === this.chDef.e) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.BUSY, \"Failed to open Channel \" + this + \" on local device: \" + dev +\r\n\t\t\t\t\t\t\" because Channel: \" + ch + \" is opened, and these channels are mutually exclusive.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tuserphid._attaching = true;\r\n\t\tlet opened = false;\r\n\t\ttry {\r\n\t\t\tawait dev.lock();\r\n\t\t\tawait dev.open();\r\n\t\t\topened = true;\r\n\r\n\t\t\tthis.isopen = true;\r\n\t\t\tthis.userphid = userphid;\r\n\r\n\t\t\t// initialize channel data\r\n\t\t\tuserphid._ch = this;\r\n\t\t\tuserphid._isattached = true;\r\n\t\t\tuserphid._initAfterOpen();\r\n\r\n\t\t\tuserphid._isopen = true;\r\n\t\t} catch (err) {\r\n\t\t\ttry {\r\n\t\t\t\tif (opened)\r\n\t\t\t\t\tawait dev.close();\r\n\t\t\t} finally {\r\n\t\t\t\tuserphid._attaching = false;\r\n\t\t\t\tuserphid._isattached = false;\r\n\t\t\t\tuserphid._isopen = false;\r\n\t\t\t\tthis.isopen = false;\r\n\t\t\t}\r\n\t\t\tthrow (err);\r\n\t\t} finally {\r\n\t\t\tdev.unlock();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst bp = new BridgePacket();\r\n\t\t\tawait bp.send(this, BP.OPENRESET, false);\r\n\r\n\t\t\t// set defaults\r\n\t\t\tawait userphid._setDefaults();\r\n\r\n\t\t\t// attach event to user\r\n\t\t\t// NOTE: We await in case the user supplied an async function (or returned a promise)\r\n\t\t\tif (userphid.onAttach) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait userphid.onAttach(userphid);\r\n\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t}\r\n\r\n\t\t\t// enable channel - NOTE: this is done explicitly AFTER the attach event, so that user can override defaults before channel is enabled\r\n\t\t\tawait bp.send(this, BP.ENABLE, false);\r\n\r\n\t\t\t// fire any initial events (after the attach event completes)\r\n\t\t\tuserphid._fireInitialEvents();\r\n\r\n\t\t\t// done attaching - incoming data events will now fire\r\n\t\t\tuserphid._attaching = false;\r\n\r\n\t\t\t// here, we want to resolve the user open call\r\n\t\t\t//  If we don't have initial state, wait for it\r\n\t\t\tif (userphid._hasInitialState()) {\r\n\t\t\t\tuserphid._cancelOpenTimeout();\r\n\t\t\t\tuserphid._resolveOpen?.();\r\n\t\t\t} else {\r\n\t\t\t\t// Create a callback that resolves that open when the initial state comes in\r\n\t\t\t\tuserphid._onInitialState = () => {\r\n\t\t\t\t\tuserphid._cancelOpenTimeout();\r\n\t\t\t\t\tuserphid._resolveOpen?.();\r\n\t\t\t\t\tdelete userphid._onInitialState;\r\n\t\t\t\t};\r\n\t\t\t\t// As a backup, we will resolve the open after a timeout even if the initial state doesn't come in\r\n\t\t\t\t// We enforce the wait time range for initial state, so we're not waiting forever for something like a detached thermocouple,\r\n\t\t\t\t//  but also always get the initial state when we should\r\n\t\t\t\tlet remaining = 500;\r\n\t\t\t\tif (userphid._openTimeout != undefined && userphid._openTime !== undefined)\r\n\t\t\t\t\tremaining = userphid._openTimeout - (tm() - userphid._openTime);\r\n\t\t\t\tif (remaining > 2500)\r\n\t\t\t\t\tremaining = 2500;\r\n\t\t\t\tif (remaining < 500)\r\n\t\t\t\t\tremaining = 500;\r\n\t\t\t\t// Call the onInitialState after a timeout (if it hasn't already been called)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (userphid._onInitialState)\r\n\t\t\t\t\t\tuserphid._onInitialState();\r\n\t\t\t\t}, remaining);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttry {\r\n\t\t\t\tawait dev.lock();\r\n\t\t\t\tawait dev.close();\r\n\t\t\t} finally {\r\n\t\t\t\tdev.unlock();\r\n\t\t\t\tuserphid._attaching = false;\r\n\t\t\t\tuserphid._isattached = false;\r\n\t\t\t\tuserphid._isopen = false;\r\n\t\t\t\tthis.isopen = false;\r\n\t\t\t}\r\n\t\t\tthrow (err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Currently only expected to be called from Phidget.close().\r\n\t * We do not notify the Phidget.\r\n\t */\r\n\tasync close() {\r\n\r\n\t\tif (this.detaching)\r\n\t\t\treturn;\r\n\t\ttry {\r\n\t\t\tconst bp = new BridgePacket();\r\n\t\t\tawait bp.send(this, BP.CLOSERESET, false);\r\n\t\t} finally {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.parent.lock();\r\n\t\t\t\t// NOTE: parent balances open/close calls\r\n\t\t\t\tawait this.parent.close();\r\n\t\t\t} finally {\r\n\t\t\t\tif (this.userphid && this.isopen) {\r\n\t\t\t\t\tthis.userphid._isopen = false;\r\n\t\t\t\t\tthis.isopen = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.parent.unlock();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync send(bp: BridgePacket): Promise<void> {\r\n\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.SETVINTSPEED:\r\n\t\t\t\tif (!(this.parent instanceof VINTDevice))\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\r\n\t\t\t\tawait this.parent.setHubPortSpeed(this, bp.getNumber(0));\r\n\t\t\t\t// NOTE: setHubPortSpeed() also notifies other channels of the speed change\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.WRITELABEL:\r\n\t\t\t\tif (!(this.parent instanceof PhidgetUSBDevice))\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\r\n\t\t\t\tawait this.parent.writeLabel(bp.getString(0));\r\n\r\n\t\t\t\t// Notify all other channels that the label changed\r\n\t\t\t\tfor (let i = 0; i < PHIDGET_MAXCHANNELS; i++) {\r\n\t\t\t\t\tconst ch = this.parent.getChannel(i);\r\n\t\t\t\t\tif (ch && ch !== this) {\r\n\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\tbp.set({ name: '0', type: 's', value: this.parent.label });\r\n\t\t\t\t\t\tbp.sendToChannel(ch, BP.DEVICELABELCHANGE);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.REBOOT:\r\n\t\t\t\tif (this.parent instanceof VINTDevice) {\r\n\t\t\t\t\tawait this.parent.reboot(this);\r\n\t\t\t\t} else if (this.parent instanceof PhidgetUSBDevice) {\r\n\t\t\t\t\tawait this.parent.rebootFirmwareUpgrade();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.REBOOTFIRMWAREUPGRADE:\r\n\t\t\t\tif (this.parent instanceof VINTDevice) {\r\n\t\t\t\t\tawait this.parent.rebootFirmwareUpgrade(this, bp.getNumber(0));\r\n\t\t\t\t} else if (this.parent instanceof PhidgetUSBDevice) {\r\n\t\t\t\t\tawait this.parent.rebootFirmwareUpgrade();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.WRONG_DEVICE);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// This sends a BP directly to the device layer\r\n\t\t\t\tawait this.parent.bridgeInput(this, bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tasync sendVINTPacket(command: VINTDeviceCommand, devicePacketType = 0, buffer?: Uint8Array) {\r\n\t\tconst vintDevice = this.parent;\r\n\t\tif (!(vintDevice instanceof VINTDevice))\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Parent device does not exist in sendVINTPacket.\");\r\n\r\n\t\tconst bufferOut = vintDevice.makePacket(this, command, devicePacketType, buffer);\r\n\r\n\t\tawait vintDevice.sendpacket(bufferOut);\r\n\t}\r\n\r\n\tasync sendVINTDataPacket(devicePacketType: number, buffer?: Uint8Array) {\r\n\t\tawait this.sendVINTPacket(VINTDeviceCommand.DATA, devicePacketType, buffer);\r\n\t}\r\n}\r\n\r\nexport { LocalChannel };","import { ErrorCode, ChannelClass, ErrorEventCode } from '../../Enumerations.gen';\r\nimport { PhidgetError } from '../../PhidgetError';\r\nimport { PhidgetUSBRequestType } from '../USB';\r\nimport { BridgePacket, PUNK } from '../../BridgePacket';\r\nimport { BP } from '../../BridgePackets.gen';\r\nimport { DeviceUID } from '../../Devices.gen';\r\nimport * as VintPacketType from '../VintPacketType';\r\nimport { USBConnectionBase } from '../USBConnection';\r\nimport { LocalChannel } from '../LocalChannel';\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from '../PhidgetUSBDevice';\r\n\r\nclass InterfaceKitDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: {\r\n\t\toutputState: number[],\r\n\t\tfailsafeState: number[],\r\n\t\tinputState: number[],\r\n\t\tvoltage: number[],\r\n\t\tvoltageRatio: number[]\r\n\t};\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1014_3_USB:\r\n\t\t\tcase DeviceUID._1017_2_USB:\r\n\t\t\tcase DeviceUID._1018_3:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = {\r\n\t\t\toutputState: new Array(this.numOutputs).fill(PUNK.BOOL),\r\n\t\t\tfailsafeState: new Array(this.numOutputs).fill(0),\r\n\t\t\tinputState: new Array(this.numInputs).fill(PUNK.BOOL),\r\n\t\t\tvoltage: new Array(this.numVoltageInputs).fill(PUNK.DBL),\r\n\t\t\tvoltageRatio: new Array(this.numSensors).fill(PUNK.DBL)\r\n\t\t};\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numVoltageInputs() { return this.devDef.cn[0]; }\r\n\tget numSensors() { return this.devDef.cn[1]; }\r\n\tget numInputs() { return this.devDef.cn[2]; }\r\n\tget numOutputs() { return this.devDef.cn[3]; }\r\n\tget numCapTouches() { return this.devDef.cn[4]; }\r\n\r\n\tasync initAfterOpen() {\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1018_3:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"This Phidget is not yet supported via direct USB connection in JavaScript.\");\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.numOutputs; i++)\r\n\t\t\tthis.data.failsafeState[i] = 0;\r\n\r\n\t\t//read in device state\r\n\t\tconst buf = await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ, 0, 0, 1);\r\n\t\tfor (let i = 0; i < this.numOutputs; i++)\r\n\t\t\tthis.data.outputState[i] = (buf.getUint8(0) & (1 << i)) ? 1 : 0;\r\n\t}\r\n\r\n\tasync bridgeInput(ch: LocalChannel, bp: BridgePacket) {\r\n\t\tlet dutyCycle;\r\n\t\tconst buf = new DataView(new ArrayBuffer(2));\r\n\r\n\t\tswitch (ch.class) {\r\n\t\t\tcase ChannelClass.DIGITAL_OUTPUT:\r\n\t\t\t\tif (this.data.failsafeState[ch.index] && (bp.vpkt !== BP.OPENRESET) && (bp.vpkt !== BP.CLOSERESET)) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.FAILSAFE);\r\n\t\t\t\t}\r\n\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\tcase BP.SETSTATE:\r\n\t\t\t\t\t\tthis.data.outputState[ch.index] = bp.getNumber(0);\r\n\t\t\t\t\t\tbuf.setUint8(0, this.data.outputState[ch.index]);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, ch.index, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.SETDUTYCYCLE:\r\n\t\t\t\t\t\tdutyCycle = bp.getNumber(0);\r\n\t\t\t\t\t\tif (dutyCycle !== 0.0 && dutyCycle !== 1)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Duty cycle must be either 0 or 1\");\r\n\t\t\t\t\t\tthis.data.outputState[ch.index] = dutyCycle;\r\n\t\t\t\t\t\tbuf.setUint8(0, this.data.outputState[ch.index] ? 0xFF : 0x00);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, ch.index, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\tthis.data.failsafeState[ch.index] = 0;\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, ch.index);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.SETFAILSAFETIME:\r\n\t\t\t\t\t\tbuf.setUint16(0, bp.getNumber('0'));\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.FAILSAFE_TIME, ch.index, new Uint8Array(buf.buffer, 0, 2));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.FAILSAFERESET:\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.FAILSAFE_RESET, ch.index);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ChannelClass.DIGITAL_INPUT:\r\n\t\t\tcase ChannelClass.VOLTAGE_RATIO_INPUT:\r\n\t\t\tcase ChannelClass.VOLTAGE_INPUT:\r\n\t\t\t\tthrow new Error(\"Class not implemented\");\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected channel class\");\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdataInput(buf: DataView) {\r\n\r\n\t\tconst ch = this.getChannel(buf.getUint8(1));\r\n\t\tif (ch) {\r\n\t\t\tconst pkt = buf.getUint8(0);\r\n\t\t\tconst bp = new BridgePacket();\r\n\t\t\tswitch (pkt) {\r\n\t\t\t\tcase VintPacketType.DigitalOutputPacket.FAILSAFE: {\r\n\t\t\t\t\tconst i = buf.getUint8(1);\r\n\t\t\t\t\tthis.data.failsafeState[i] = 1;\r\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.FAILSAFE_CONDITION });\r\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Failsafe procedure initiated.' });\r\n\t\t\t\t\tch.sendErrorEvent(bp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { InterfaceKitDevice };","import { ErrorCode, ChannelClass, RFIDProtocol } from '../../Enumerations.gen';\r\nimport { PhidgetError } from '../../PhidgetError';\r\nimport { PhidgetUSBRequestType } from '../USB';\r\nimport { BridgePacket, PUNK } from '../../BridgePacket';\r\nimport { BP } from '../../BridgePackets.gen';\r\nimport { DeviceUID } from '../../Devices.gen';\r\nimport * as VintPacketType from '../VintPacketType';\r\nimport { Channel } from '../../Channel';\r\nimport { RFID } from '../../class/RFID';\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from '../PhidgetUSBDevice';\r\nimport { MAX_OUT_PACKET_SIZE } from '../LocalDevice';\r\nimport { USBConnectionBase } from '../USBConnection';\r\n\r\nclass RFIDDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: {\r\n\t\toutputState: number[];\r\n\t\tantennaEnabled: number[];\r\n\t\ttagPresent: number[];\r\n\t};\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\t/*START_UNRELEASED*/\r\n\t\t\tcase DeviceUID._1024_V2_USB:\r\n\t\t\t\tbreak;\r\n\t\t\t/*END_UNRELEASED*/\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = {\r\n\t\t\tantennaEnabled: [PUNK.BOOL],\r\n\t\t\ttagPresent: [0],\r\n\t\t\toutputState: new Array(this.numOutputs).fill(PUNK.BOOL),\r\n\t\t};\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numOutputs() { return this.devDef.cn[0]; }\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync initAfterOpen() {\r\n\t\tconst buffer = await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ, 5, 0, 5);\r\n\t\tthis.data.antennaEnabled[0] = (buffer.getUint8(0) & 0x01) ? 1 : 0;\r\n\t\tthis.data.outputState[0] = (buffer.getUint8(0) & 0x02) ? 1 : 0;\r\n\t\tthis.data.outputState[1] = (buffer.getUint8(0) & 0x04) ? 1 : 0;\r\n\t\tthis.data.outputState[2] = (buffer.getUint8(0) & 0x08) ? 1 : 0;\r\n\t}\r\n\r\n\tasync bridgeInput(ch: Channel, bp: BridgePacket) {\r\n\t\tconst buf = new DataView(new ArrayBuffer(MAX_OUT_PACKET_SIZE));\r\n\t\tlet protocol;\r\n\t\tlet tagString;\r\n\t\tlet dutyCycle;\r\n\t\tlet len;\r\n\r\n\t\tswitch (ch.class) {\r\n\t\t\tcase ChannelClass.DIGITAL_OUTPUT:\r\n\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\tcase BP.SETSTATE:\r\n\t\t\t\t\t\tthis.data.outputState[ch.index] = bp.getNumber(0);\r\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.SETDUTYCYCLE:\r\n\t\t\t\t\t\tdutyCycle = bp.getNumber(0);\r\n\t\t\t\t\t\tif (dutyCycle !== 0 && dutyCycle !== 1)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Duty cycle myust be 0 or 1.\");\r\n\t\t\t\t\t\tthis.data.outputState[ch.index] = dutyCycle;\r\n\t\t\t\t\t\tbuf.setUint8(0, dutyCycle);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\tbuf.setUint8(0, 0);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.DigitalOutputPacket.SETDUTYCYCLE, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ChannelClass.RFID:\r\n\t\t\t\tif (ch.index !== 0) {\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t}\r\n\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\tcase BP.SETANTENNAON:\r\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\tthis.data.antennaEnabled[0] = bp.getNumber(0);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.RFIDPacket.ANTENNA_ON, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase BP.WRITE: {\r\n\t\t\t\t\t\tprotocol = bp.getNumber(1);\r\n\t\t\t\t\t\tif (protocol < RFIDProtocol.EM4100 || protocol > RFIDProtocol.PHIDGET_TAG)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid protocol type\");\r\n\r\n\t\t\t\t\t\tif (this.data.antennaEnabled[0] !== 1)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Cannot write tag while antenna is off\");\r\n\r\n\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(1));\r\n\t\t\t\t\t\tbuf.setUint8(1, bp.getNumber(2));\r\n\r\n\t\t\t\t\t\ttagString = bp.getString(0);\r\n\t\t\t\t\t\tif (protocol === RFIDProtocol.EM4100 && tagString.charAt(1) === 'x')\r\n\t\t\t\t\t\t\ttagString = tagString.slice(2);\r\n\t\t\t\t\t\tif (tagString.length > (MAX_OUT_PACKET_SIZE - 3))\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT);\r\n\t\t\t\t\t\tfor (let i = 0; i < tagString.length; i++)\r\n\t\t\t\t\t\t\tbuf.setUint8(2 + i, tagString.charCodeAt(i));\r\n\t\t\t\t\t\tbuf.setUint8(2 + tagString.length, 0x00);   //append \\0 after string\r\n\r\n\t\t\t\t\t\tif (protocol === RFIDProtocol.EM4100) {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\t\t\t\t\t\tconst toLower = String.fromCharCode(buf.getUint8(2 + i)).toLowerCase();\r\n\t\t\t\t\t\t\t\tbuf.setUint8(2 + i, toLower.charCodeAt(0));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlen = tagString.length + 2;\r\n\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\t\tconst userphid = (ch.userphid! as unknown as RFID);\r\n\t\t\t\t\t\tuserphid._setLatestTagString(\"\");   //clear latest tag\r\n\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.RFIDPacket.TAG_WRITE, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, len));\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tawait userphid._waitForTag(tagString, 600);\r\n\t\t\t\t\t\t} catch {\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.TIMEOUT, \"Timed out waiting for tag to appear after writing. Try again.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected channel class\");\r\n\t\t}\r\n\t}\r\n\r\n\tdataInput(buffer: DataView) {\r\n\t\tconst pkt = buffer.getUint8(0);\r\n\t\tconst ch = this.getChannel(0);\r\n\t\tlet tagString;\r\n\r\n\t\tif (ch) {\r\n\t\t\tconst bp = new BridgePacket();\r\n\t\t\tswitch (pkt) {\r\n\t\t\t\tcase VintPacketType.RFIDPacket.TAG: {\r\n\t\t\t\t\ttagString = \"\";\r\n\r\n\t\t\t\t\tfor (let i = 2, byteChar = buffer.getUint8(i); i < buffer.byteLength && String.fromCharCode(byteChar) !== '\\0'; i++, byteChar = buffer.getUint8(i)) {\r\n\t\t\t\t\t\ttagString += String.fromCharCode(byteChar);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\tconst userphid = (ch.userphid! as unknown as RFID);\r\n\t\t\t\t\tuserphid._setLatestTagString(tagString);\r\n\r\n\t\t\t\t\tthis.data.tagPresent[0] = 1;\r\n\r\n\t\t\t\t\tbp.set({ name: '0', type: 's', value: tagString });\r\n\t\t\t\t\tbp.set({ name: '1', type: 'd', value: buffer.getUint8(1) });\r\n\t\t\t\t\tbp.sendToChannel(ch, BP.TAG);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase VintPacketType.RFIDPacket.TAG_LOST:\r\n\t\t\t\t\ttagString = \"\";\r\n\r\n\t\t\t\t\tfor (let i = 2, byteChar = buffer.getUint8(i); i < buffer.byteLength && String.fromCharCode(byteChar) !== '\\0'; i++, byteChar = buffer.getUint8(i)) {\r\n\t\t\t\t\t\ttagString += String.fromCharCode(byteChar);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.data.tagPresent[0] = 0;\r\n\r\n\t\t\t\t\tbp.set({ name: '0', type: 's', value: tagString });\r\n\t\t\t\t\tbp.set({ name: '1', type: 'd', value: buffer.getUint8(1) });\r\n\t\t\t\t\tbp.sendToChannel(ch, BP.TAGLOST);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { RFIDDevice };","﻿import { ErrorCode, ChannelClass, ErrorEventCode, SpatialAlgorithm, SpatialPrecision } from '../../Enumerations.gen';\r\nimport { PhidgetError } from '../../PhidgetError';\r\nimport { PhidgetUSBRequestType } from '../USB';\r\nimport { BridgePacket, PUNK } from '../../BridgePacket';\r\nimport { BP } from '../../BridgePackets.gen';\r\nimport { UpperPowerOfTwo, RoundDouble } from '../../Utils';\r\nimport { USBConnectionBase } from '../USBConnection';\r\nimport { LocalChannel } from '../LocalChannel';\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from '../PhidgetUSBDevice';\r\nimport { DeviceUID, DeviceChannelUID } from '../../Devices.gen';\r\nimport { SpatialQuaternion } from '../../Structs.gen';\r\nimport * as VintPacketType from '../VintPacketType';\r\nimport * as UserPhidgetClass from '../../Classes.gen';\r\n\r\nconst enum SpatialPacketType {\r\n\t//IN\r\n\tDATA = 0x00,\r\n\tCALIB = 0x80,\r\n\t//OUT\r\n\tREADCALIB = 0x01,\r\n\tSET_POLLING_TYPE = 0x02,\r\n\tZERO_GYRO = 0x03,\r\n\tUNZERO_GYRO = 0x04,\r\n\tZERO_AHRS = 0x05,\r\n\tCONFIGURE_AHRS = 0x06,\r\n\tRESET_AHRS = 0x07,\r\n\tMAGNETOMETER_RESET_CORRECTION_PARAMETERS = 0x08,\r\n\tMAGNETOMETER_SAVE_CORRECTION_PARAMETERS = 0x09,\r\n\tMAGNETOMETER_SET_CORRECTION_PARAMETERS = 0x10,\r\n\tRESET = 0x11,\r\n\tHEATING = 0x12\r\n}\r\n\r\nconst ZERO_GYRO_TIME = 2000;\r\nconst MIN_DATA_RATE = 1000;\r\n\r\nconst ACCEL_CHANNEL = 0;\r\nconst GYRO_CHANNEL = 1;\r\nconst MAG_CHANNEL = 2;\r\nconst SPT_CHANNEL = 3;\r\nconst TMP_CHANNEL = 4;\r\n\r\nconst ACCEL_SEND_FLAG = (1 << ACCEL_CHANNEL);\r\nconst GYRO_SEND_FLAG = (1 << GYRO_CHANNEL);\r\nconst MAG_SEND_FLAG = (1 << MAG_CHANNEL);\r\nconst SPT_SEND_FLAG = (1 << SPT_CHANNEL);\r\nconst TMP_SEND_FLAG = (1 << TMP_CHANNEL);\r\n\r\ninterface DataBufferEntry {\r\n\tacceleration: number[],\r\n\tangularRate: number[],\r\n\tmagneticField: number[],\r\n\tquaternion: number[],\r\n\ttimestamp: number,\r\n\ttemperature: number\r\n}\r\n\r\ninterface SpatialDeviceData {\r\n\t// Public members\r\n\ttimestamp: number[],\r\n\tacceleration: number[][],\r\n\tangularRate: number[][],\r\n\tmagneticField: number[][],\r\n\ttemperature: number[],\r\n\tquaternion: Array<SpatialQuaternion | null>,\r\n\t// Private members\r\n\tdataInterval: number,\r\n\ttemperatureDataInterval: number,\r\n\taccelerationChangeTrigger: number,\r\n\tmagneticFieldChangeTrigger: number,\r\n\ttemperatureChangeTrigger: number,\r\n\tlastTimeCounter?: number,\r\n\tlatestDataTime: number,\r\n\tdataRateMax: number,\r\n\tdataRateMin: number,\r\n\taccelAxisLastTrigger: number[],\r\n\tgyroCorrection: number[],\r\n\tmagAxisLastTrigger: number[],\r\n\tlastEventTime: number,\r\n\tdoZeroGyro: boolean,\r\n\taccelerationMax: number,\r\n\taccelerationMin: number,\r\n\tinterruptRate: number,\r\n\tangularRateMax: number,\r\n\tangularRateMin: number,\r\n\tmagneticFieldMax: number,\r\n\tmagneticFieldMin: number,\r\n\tuserMagField: number,\r\n\tcalDataValid: boolean,\r\n\tAHRSMagGain: number,\r\n\talgorithm: SpatialAlgorithm,\r\n\ttemperatureMax: number,\r\n\ttemperatureMin: number,\r\n\tlastTemperatureEventTime: number,\r\n\ttemperatureLastTrigger: number,\r\n\tdataBuffer: DataBufferEntry[],\r\n\theatingEnabled: boolean | PUNK.BOOL,\r\n}\r\n\r\nclass SpatialDevice extends PhidgetUSBDevice {\r\n\tdata: SpatialDeviceData;\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\t/*START_UNRELEASED*/\r\n\t\t\tcase DeviceUID._MOT0108:\r\n\t\t\t\tbreak;\r\n\t\t\t/*END_UNRELEASED*/\r\n\t\t\tcase DeviceUID._MOT0109:\r\n\t\t\tcase DeviceUID._MOT0110_USB:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = this.initData();\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numAccelAxes() { return this.devDef.cn[0]; }\r\n\tget numGyroAxes() { return this.devDef.cn[1]; }\r\n\tget numCompassAxes() { return this.devDef.cn[2]; }\r\n\tget numSpatialInputs() { return this.devDef.cn[3]; }\r\n\tget numTempInputs() { return this.devDef.cn[4]; }\r\n\r\n\tupdateTimestamp(time: number) {\r\n\t\tif (this.data.lastTimeCounter != undefined) {\r\n\t\t\tconst timechange = (time - this.data.lastTimeCounter) & 0xFFFF;\r\n\t\t\tthis.data.timestamp[0] += timechange;\r\n\t\t}\r\n\r\n\t\tthis.data.lastTimeCounter = time;\r\n\t}\r\n\r\n\tupdateLatestDataTime(i: number) {\r\n\t\tthis.data.latestDataTime = this.data.timestamp[0] + (i + 1) * this.data.dataRateMax;\r\n\t}\r\n\r\n\ttimestampDiff(time1: number, time2: number) {\r\n\t\treturn (time1 - time2);\r\n\t}\r\n\r\n\tinitData() {\r\n\t\tconst data: SpatialDeviceData = {\r\n\r\n\t\t\t// Public members\r\n\t\t\ttimestamp: [0],\r\n\t\t\tacceleration: [new Array(this.numAccelAxes).fill(PUNK.DBL)],\r\n\t\t\tangularRate: [new Array(this.numGyroAxes).fill(PUNK.DBL)],\r\n\t\t\tmagneticField: [new Array(this.numCompassAxes).fill(PUNK.DBL)],\r\n\t\t\ttemperature: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\tquaternion: [null],\r\n\r\n\t\t\t// Private members\r\n\t\t\tdataInterval: 0,\r\n\t\t\ttemperatureDataInterval: 0,\r\n\t\t\taccelerationChangeTrigger: 0,\r\n\t\t\tmagneticFieldChangeTrigger: 0,\r\n\t\t\ttemperatureChangeTrigger: 0,\r\n\t\t\taccelAxisLastTrigger: new Array(this.numAccelAxes).fill(PUNK.DBL),\r\n\t\t\tgyroCorrection: new Array(this.numGyroAxes).fill(0),\r\n\t\t\tmagAxisLastTrigger: new Array(this.numCompassAxes).fill(PUNK.DBL),\r\n\t\t\tlastEventTime: 0,\r\n\t\t\tlatestDataTime: 0,\r\n\t\t\tdoZeroGyro: false,\r\n\t\t\tdataBuffer: [],\r\n\t\t\taccelerationMax: 0,\r\n\t\t\taccelerationMin: 0,\r\n\t\t\tinterruptRate: 0,\r\n\t\t\tdataRateMax: 0,\r\n\t\t\tdataRateMin: 0,\r\n\t\t\tangularRateMax: 0,\r\n\t\t\tangularRateMin: 0,\r\n\t\t\tmagneticFieldMax: 0,\r\n\t\t\tmagneticFieldMin: 0,\r\n\t\t\tAHRSMagGain: 0,\r\n\t\t\tuserMagField: 0,\r\n\t\t\tcalDataValid: false,\r\n\t\t\talgorithm: 0,\r\n\t\t\ttemperatureMax: 0,\r\n\t\t\ttemperatureMin: 0,\r\n\t\t\tlastTemperatureEventTime: 0,\r\n\t\t\ttemperatureLastTrigger: PUNK.DBL,\r\n\t\t\theatingEnabled: false,\r\n\t\t};\r\n\t\treturn data;\r\n\t}\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync initAfterOpen() {\r\n\t\tthis.data = this.initData();\r\n\r\n\t\tthis.data.accelerationMax = 8;\r\n\t\tthis.data.accelerationMin = -8;\r\n\t\tthis.data.interruptRate = 4;\r\n\t\tthis.data.dataRateMin = MIN_DATA_RATE;\r\n\t\tthis.data.dataInterval = 8;\r\n\t\tthis.data.temperatureDataInterval = 100;\r\n\t\tthis.data.dataRateMax = 4; //actual data rate\r\n\t\tthis.data.angularRateMax = 2000;\r\n\t\tthis.data.angularRateMin = -2000;\r\n\t\tthis.data.magneticFieldMax = 5000;\r\n\t\tthis.data.magneticFieldMin = -5000;\r\n\t\tthis.data.userMagField = 1.0;\r\n\t\tthis.data.calDataValid = false;\r\n\t\tthis.data.AHRSMagGain = 0.005;\r\n\t\tthis.data.algorithm = SpatialAlgorithm.AHRS;\r\n\t\tthis.data.temperatureMax = 85;\r\n\t\tthis.data.temperatureMin = -40;\r\n\t}\r\n\r\n\tasync bridgeInput(channel: LocalChannel, bp: BridgePacket) {\r\n\t\tlet buffer;\r\n\t\tconst buf = new DataView(new ArrayBuffer(24));\r\n\t\tlet userphid;\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._MOT0109:\r\n\t\t\t\tswitch (channel.class) {\r\n\r\n\t\t\t\t\tcase ChannelClass.ACCELEROMETER:\r\n\t\t\t\t\t\tif (channel.index !== 0)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID);\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tthis.setDataRate(channel, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\t\t\tthis.data.accelerationChangeTrigger = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETSPATIALPRECISION:\r\n\t\t\t\t\t\t\t\tawait this.setPrecision(bp.getNumber(0) as SpatialPrecision);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\tbuffer = new Uint8Array([bp.getNumber(0)]);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.HEATING, channel.uniqueIndex, buffer);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ChannelClass.GYROSCOPE:\r\n\t\t\t\t\t\tif (channel.index !== 0)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID);\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tthis.setDataRate(channel, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ZERO:\r\n\t\t\t\t\t\t\t\tawait this.zeroGyro();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETSPATIALPRECISION:\r\n\t\t\t\t\t\t\t\tawait this.setPrecision(bp.getNumber(0) as SpatialPrecision);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\tbuffer = new Uint8Array([bp.getNumber(0)]);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.HEATING, channel.uniqueIndex, buffer);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ChannelClass.MAGNETOMETER:\r\n\t\t\t\t\t\tif (channel.index !== 0)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID);\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tthis.setDataRate(channel, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\t\t\tthis.data.magneticFieldChangeTrigger = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\tawait this.saveCompassCorrectionParameters();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\tawait this.resetCompassCorrectionParameters();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS: {\r\n\t\t\t\t\t\t\t\tconst corrParams = {\r\n\t\t\t\t\t\t\t\t\tmagField: bp.getNumber(0),\r\n\t\t\t\t\t\t\t\t\toffset0: bp.getNumber(1),\r\n\t\t\t\t\t\t\t\t\toffset1: bp.getNumber(2),\r\n\t\t\t\t\t\t\t\t\toffset2: bp.getNumber(3),\r\n\t\t\t\t\t\t\t\t\tgain0: bp.getNumber(4),\r\n\t\t\t\t\t\t\t\t\tgain1: bp.getNumber(5),\r\n\t\t\t\t\t\t\t\t\tgain2: bp.getNumber(6),\r\n\t\t\t\t\t\t\t\t\tT0: bp.getNumber(7),\r\n\t\t\t\t\t\t\t\t\tT1: bp.getNumber(8),\r\n\t\t\t\t\t\t\t\t\tT2: bp.getNumber(9),\r\n\t\t\t\t\t\t\t\t\tT3: bp.getNumber(10),\r\n\t\t\t\t\t\t\t\t\tT4: bp.getNumber(11),\r\n\t\t\t\t\t\t\t\t\tT5: bp.getNumber(12)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tawait (this.setCompassCorrectionParameters(corrParams));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\tbuffer = new Uint8Array([bp.getNumber(0)]);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.HEATING, channel.uniqueIndex, buffer);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ChannelClass.SPATIAL:\r\n\t\t\t\t\t\tif (channel.index !== 0)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID);\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tthis.setDataRate(channel, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ZERO:\r\n\t\t\t\t\t\t\t\tawait this.zeroGyro();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\tawait this.saveCompassCorrectionParameters();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\tawait this.resetCompassCorrectionParameters();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS: {\r\n\t\t\t\t\t\t\t\tconst corrParams = {\r\n\t\t\t\t\t\t\t\t\tmagField: bp.getNumber(0),\r\n\t\t\t\t\t\t\t\t\toffset0: bp.getNumber(1),\r\n\t\t\t\t\t\t\t\t\toffset1: bp.getNumber(2),\r\n\t\t\t\t\t\t\t\t\toffset2: bp.getNumber(3),\r\n\t\t\t\t\t\t\t\t\tgain0: bp.getNumber(4),\r\n\t\t\t\t\t\t\t\t\tgain1: bp.getNumber(5),\r\n\t\t\t\t\t\t\t\t\tgain2: bp.getNumber(6),\r\n\t\t\t\t\t\t\t\t\tT0: bp.getNumber(7),\r\n\t\t\t\t\t\t\t\t\tT1: bp.getNumber(8),\r\n\t\t\t\t\t\t\t\t\tT2: bp.getNumber(9),\r\n\t\t\t\t\t\t\t\t\tT3: bp.getNumber(10),\r\n\t\t\t\t\t\t\t\t\tT4: bp.getNumber(11),\r\n\t\t\t\t\t\t\t\t\tT5: bp.getNumber(12)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tawait this.setCompassCorrectionParameters(corrParams);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase BP.SETSPATIALPRECISION:\r\n\t\t\t\t\t\t\t\tawait this.setPrecision(bp.getNumber(0) as SpatialPrecision);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ZEROSPATIALALGORITHM:\r\n\t\t\t\t\t\t\t\tawait this.zeroAHRS();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETSPATIALALGORITHM:\r\n\t\t\t\t\t\t\t\tthis.data.algorithm = bp.getNumber(0) as SpatialAlgorithm;\r\n\t\t\t\t\t\t\t\tawait this.configureAlgorithm();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETSPATIALALGORITHMMAGGAIN:\r\n\t\t\t\t\t\t\t\tthis.data.AHRSMagGain = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\tawait this.configureAlgorithm();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\tbuffer = new Uint8Array([bp.getNumber(0)]);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.HEATING, channel.uniqueIndex, buffer);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETAHRSPARAMETERS: {\r\n\t\t\t\t\t\t\t\tconst buf = new ArrayBuffer(24);\r\n\t\t\t\t\t\t\t\tbuffer = new DataView(buf);\r\n\t\t\t\t\t\t\t\tbuffer.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\t\t\tbuffer.setFloat32(4, bp.getNumber(1), true);\r\n\t\t\t\t\t\t\t\tbuffer.setFloat32(8, bp.getNumber(2), true);\r\n\t\t\t\t\t\t\t\tbuffer.setFloat32(12, bp.getNumber(3), true);\r\n\t\t\t\t\t\t\t\tbuffer.setFloat32(16, bp.getNumber(4), true);\r\n\t\t\t\t\t\t\t\tbuffer.setFloat32(20, bp.getNumber(5), true);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.HEATING, channel.uniqueIndex, buffer);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ChannelClass.TEMPERATURE_SENSOR:\r\n\t\t\t\t\t\tif (channel.index !== 0)\r\n\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID);\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tthis.setTemperatureDataRate(bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\t\t\tthis.data.temperatureChangeTrigger = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, SpatialPacketType.RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DeviceUID._MOT0110_USB:\r\n\t\t\t\tswitch (channel.chDef.uid) {\r\n\t\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\t\tuserphid = (channel.userphid! as unknown as UserPhidgetClass.Spatial);\r\n\t\t\t\t\t\tawait userphid._transactionLock.acquire();\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\t\tbuf.setUint16(0, this._handleDataIntervalPacket(bp, 1));\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 2));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.ZERO:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GyroscopePacket.ZERO, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS: {\r\n\t\t\t\t\t\t\t\t\tconst corrParams = {\r\n\t\t\t\t\t\t\t\t\t\tmagField: bp.getNumber(0),\r\n\t\t\t\t\t\t\t\t\t\toffset0: bp.getNumber(1),\r\n\t\t\t\t\t\t\t\t\t\toffset1: bp.getNumber(2),\r\n\t\t\t\t\t\t\t\t\t\toffset2: bp.getNumber(3),\r\n\t\t\t\t\t\t\t\t\t\tgain0: bp.getNumber(4),\r\n\t\t\t\t\t\t\t\t\t\tgain1: bp.getNumber(5),\r\n\t\t\t\t\t\t\t\t\t\tgain2: bp.getNumber(6),\r\n\t\t\t\t\t\t\t\t\t\tT0: bp.getNumber(7),\r\n\t\t\t\t\t\t\t\t\t\tT1: bp.getNumber(8),\r\n\t\t\t\t\t\t\t\t\t\tT2: bp.getNumber(9),\r\n\t\t\t\t\t\t\t\t\t\tT3: bp.getNumber(10),\r\n\t\t\t\t\t\t\t\t\t\tT4: bp.getNumber(11),\r\n\t\t\t\t\t\t\t\t\t\tT5: bp.getNumber(12)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tawait this.setCompassCorrectionParameters(corrParams);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.ZEROSPATIALALGORITHM:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.ZERO_AHRS, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETSPATIALALGORITHM:\r\n\t\t\t\t\t\t\t\t\tthis.data.algorithm = bp.getNumber(0) as SpatialAlgorithm;\r\n\t\t\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.AHRS_ALGORITHM, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETSPATIALALGORITHMMAGGAIN:\r\n\t\t\t\t\t\t\t\t\tthis.data.AHRSMagGain = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.AHRS_MAG_GAIN, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 4));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETAHRSPARAMETERS:\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(4, bp.getNumber(1), true);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(8, bp.getNumber(2), true);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(12, bp.getNumber(3), true);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(16, bp.getNumber(4), true);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(20, bp.getNumber(5), true);\r\n\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.SET_AHRS_PARAMS, channel.uniqueIndex, buf)\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\t\tthis.data.heatingEnabled = bp.getBoolean(0);\r\n\t\t\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.SET_HEATING, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_ENABLE, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfinally {\r\n\t\t\t\t\t\t\tuserphid._transactionLock.release();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\t\tuserphid = (channel.userphid! as unknown as UserPhidgetClass.Magnetometer);\r\n\t\t\t\t\t\tawait userphid.transactionLock.acquire();\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\t\tbuf.setUint16(0, this._handleDataIntervalPacket(bp, 1));\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 2));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\t\t\t\tthis.data.magneticFieldChangeTrigger = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 4));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.RESETCORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.MagnetometerPacket.RESET_CORRECTION_PARAMETERS, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SAVECORRECTIONPARAMETERS:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.MagnetometerPacket.SAVECORRECTIONPARAMETERS, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.SETCORRECTIONPARAMETERS: {\r\n\t\t\t\t\t\t\t\t\tconst corrParams = {\r\n\t\t\t\t\t\t\t\t\t\tmagField: bp.getNumber(0),\r\n\t\t\t\t\t\t\t\t\t\toffset0: bp.getNumber(1),\r\n\t\t\t\t\t\t\t\t\t\toffset1: bp.getNumber(2),\r\n\t\t\t\t\t\t\t\t\t\toffset2: bp.getNumber(3),\r\n\t\t\t\t\t\t\t\t\t\tgain0: bp.getNumber(4),\r\n\t\t\t\t\t\t\t\t\t\tgain1: bp.getNumber(5),\r\n\t\t\t\t\t\t\t\t\t\tgain2: bp.getNumber(6),\r\n\t\t\t\t\t\t\t\t\t\tT0: bp.getNumber(7),\r\n\t\t\t\t\t\t\t\t\t\tT1: bp.getNumber(8),\r\n\t\t\t\t\t\t\t\t\t\tT2: bp.getNumber(9),\r\n\t\t\t\t\t\t\t\t\t\tT3: bp.getNumber(10),\r\n\t\t\t\t\t\t\t\t\t\tT4: bp.getNumber(11),\r\n\t\t\t\t\t\t\t\t\t\tT5: bp.getNumber(12)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tawait this.setCompassCorrectionParameters(corrParams);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\t\tthis.data.heatingEnabled = bp.getBoolean(0);\r\n\t\t\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.SET_HEATING, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_ENABLE, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfinally {\r\n\t\t\t\t\t\t\tuserphid.transactionLock.release();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tbuf.setUint16(0, this._handleDataIntervalPacket(bp, 1));\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 2));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ZERO:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GyroscopePacket.ZERO, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\tthis.data.heatingEnabled = bp.getBoolean(0);\r\n\t\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.SET_HEATING, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_ENABLE, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tbuf.setUint16(0, this._handleDataIntervalPacket(bp, 1));\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 2));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\t\t\tthis.data.accelerationChangeTrigger = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 4));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETHEATINGENABLED:\r\n\t\t\t\t\t\t\t\tthis.data.heatingEnabled = bp.getBoolean(0);\r\n\t\t\t\t\t\t\t\tbuf.setUint8(0, bp.getNumber(0));\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.SpatialPacket.SET_HEATING, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 1));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_ENABLE, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\r\n\t\t\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\t\t\tbuf.setUint16(0, this._handleDataIntervalPacket(bp, 1));\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 2));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\t\t\tthis.data.temperatureChangeTrigger = bp.getNumber(0);\r\n\t\t\t\t\t\t\t\tbuf.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.TemperatureSensorPacket.SETTEMPERATURECHANGETRIGGER, channel.uniqueIndex, new Uint8Array(buf.buffer, 0, 4));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_ENABLE, channel.uniqueIndex);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdataInput(buffer: DataView) {\r\n\t\tlet channel;\r\n\t\tlet j = 0;\r\n\t\tlet doneGyroZero = false;\r\n\t\tconst accelAvg = [0, 0, 0];\r\n\t\tconst angularRateAvg = [0, 0, 0];\r\n\t\tconst magneticFieldAvg = [0, 0, 0];\r\n\t\tconst quaternion = [0, 0, 0, 0];\r\n\r\n\t\tconst eventData = [];\r\n\t\tlet fireSaturation;\r\n\t\tlet fireEvent;\r\n\r\n\t\tconst dataRate = this.data.dataInterval;\r\n\t\tlet temperature = PUNK.DBL;\r\n\r\n\t\t//Parse device packets\r\n\t\tconst incData: DataBufferEntry = {\r\n\t\t\tacceleration: [],\r\n\t\t\tangularRate: [],\r\n\t\t\tmagneticField: [],\r\n\t\t\tquaternion: [],\r\n\t\t\ttimestamp: 0,\r\n\t\t\ttemperature: 0\r\n\t\t};\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._MOT0110_USB: {\r\n\t\t\t\tlet dataIndex = 1;\r\n\t\t\t\tconst channelFlags = buffer.getUint8(0);\r\n\t\t\t\tconst evData: DataBufferEntry = {\r\n\t\t\t\t\tacceleration: [],\r\n\t\t\t\t\tangularRate: [],\r\n\t\t\t\t\tmagneticField: [],\r\n\t\t\t\t\tquaternion: [],\r\n\t\t\t\t\ttimestamp: 0,\r\n\t\t\t\t\ttemperature: 0\r\n\t\t\t\t};\r\n\r\n\t\t\t\tevData.timestamp = buffer.getUint32(1);\r\n\t\t\t\tdataIndex += 4;\r\n\r\n\t\t\t\t//add data to the data buffer\r\n\t\t\t\tif ((channelFlags & ACCEL_SEND_FLAG) || (channelFlags & SPT_SEND_FLAG)) {\r\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\tevData.acceleration[j] = buffer.getFloat32(dataIndex + (j * 4), true);\r\n\t\t\t\t\t\tif (!Number.isNaN(evData.acceleration[j])) {\r\n\t\t\t\t\t\t\tevData.acceleration[j] = RoundDouble(evData.acceleration[j], 6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataIndex += 12;\r\n\t\t\t\t}\r\n\t\t\t\tif ((channelFlags & GYRO_SEND_FLAG) || (channelFlags & SPT_SEND_FLAG)) {\r\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\tevData.angularRate[j] = buffer.getFloat32(dataIndex + (j * 4), true);\r\n\t\t\t\t\t\tif (!Number.isNaN(evData.angularRate[j])) {\r\n\t\t\t\t\t\t\tevData.angularRate[j] = RoundDouble(evData.angularRate[j], 6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataIndex += 12;\r\n\t\t\t\t}\r\n\t\t\t\tif ((channelFlags & MAG_SEND_FLAG) || (channelFlags & SPT_SEND_FLAG)) {\r\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\tevData.magneticField[j] = buffer.getFloat32(dataIndex + (j * 4), true);\r\n\t\t\t\t\t\tif (!Number.isNaN(evData.magneticField[j])) {\r\n\t\t\t\t\t\t\tevData.magneticField[j] = RoundDouble(evData.magneticField[j], 6);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataIndex += 12;\r\n\t\t\t\t}\r\n\t\t\t\tif (channelFlags & SPT_SEND_FLAG) {\r\n\t\t\t\t\t// Quaternion\r\n\t\t\t\t\tevData.quaternion[0] = buffer.getFloat32(dataIndex, true);\r\n\t\t\t\t\tevData.quaternion[1] = buffer.getFloat32(dataIndex + 4, true);\r\n\t\t\t\t\tevData.quaternion[2] = buffer.getFloat32(dataIndex + 8, true);\r\n\t\t\t\t\tevData.quaternion[3] = buffer.getFloat32(dataIndex + 12, true);\r\n\t\t\t\t\tdataIndex += 16;\r\n\t\t\t\t}\r\n\t\t\t\tif (channelFlags & TMP_SEND_FLAG) {\r\n\t\t\t\t\tevData.temperature = buffer.getFloat32(dataIndex, true);\r\n\t\t\t\t\tif (!Number.isNaN(evData.temperature)) {\r\n\t\t\t\t\t\tevData.temperature = RoundDouble(evData.temperature, 3);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataIndex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\t\t\tif ((channelFlags & (1 << i)) === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((channel = this.getChannel(i)) !== null) {\r\n\t\t\t\t\t\tswitch (channel.chDef.uid) {\r\n\t\t\t\t\t\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB: {\r\n\t\t\t\t\t\t\t\tif (buffer.byteLength > dataIndex) {\r\n\t\t\t\t\t\t\t\t\tif (buffer.getUint8(dataIndex) & 0x20) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more spatial readings is out of range.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: evData.acceleration });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"G\", value: evData.angularRate });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"2\", type: \"G\", value: evData.magneticField });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"3\", type: \"g\", value: evData.timestamp });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.SPATIALDATA);\r\n\r\n\t\t\t\t\t\t\t\tbp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: evData.quaternion });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: evData.timestamp });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.SPATIALALGDATA);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB: {\r\n\t\t\t\t\t\t\t\tif (buffer.byteLength > dataIndex) {\r\n\t\t\t\t\t\t\t\t\tif (buffer.getUint8(dataIndex) & 0x04) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more magnetometer readings is out of range.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: evData.magneticField });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: evData.timestamp });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.FIELDSTRENGTHCHANGE);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB: {\r\n\t\t\t\t\t\t\t\tif (buffer.byteLength > dataIndex) {\r\n\t\t\t\t\t\t\t\t\tif (buffer.getUint8(dataIndex) & 0x02) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more gyroscope readings is out of range.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: evData.angularRate });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: evData.timestamp });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.ANGULARRATEUPDATE);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB: {\r\n\t\t\t\t\t\t\t\tif (buffer.byteLength > dataIndex) {\r\n\t\t\t\t\t\t\t\t\tif (buffer.getUint8(dataIndex) & 0x01) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"One or more accelerometer readings is out of range.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: evData.acceleration });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: evData.timestamp });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.ACCELERATIONCHANGE);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB: {\r\n\t\t\t\t\t\t\t\tif (buffer.byteLength > dataIndex) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tswitch (buffer.getUint8(dataIndex) & 0x18) {\r\n\t\t\t\t\t\t\t\t\t\tcase 0x08:\r\n\t\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION });\r\n\t\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is too low to be accurately measured.\" });\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 0x10:\r\n\t\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\r\n\t\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is too high to be accurately measured.\" });\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 0x18:\r\n\t\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature is unknown.\" });\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: evData.temperature });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.TEMPERATURECHANGE);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DeviceUID._MOT0109: {\r\n\t\t\t\t//this timestamp is for the latest data\r\n\t\t\t\tconst time = buffer.getUint32(1, true);\r\n\t\t\t\tthis.updateTimestamp(time & 0xFFFF);\r\n\r\n\t\t\t\t//add data to databuffer\r\n\t\t\t\tfor (j = 0; j < 3; j++) {\r\n\t\t\t\t\tconst indexOffset = j * 4;\r\n\t\t\t\t\tincData.acceleration.push(buffer.getFloat32(5 + indexOffset, true));\r\n\t\t\t\t\tincData.angularRate.push(buffer.getFloat32(17 + indexOffset, true));\r\n\t\t\t\t\tincData.magneticField.push(buffer.getFloat32(29 + indexOffset, true));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Quaternion\r\n\t\t\t\tincData.quaternion.push(buffer.getFloat32(41, true));\r\n\t\t\t\tincData.quaternion.push(buffer.getFloat32(45, true));\r\n\t\t\t\tincData.quaternion.push(buffer.getFloat32(49, true));\r\n\t\t\t\tincData.quaternion.push(buffer.getFloat32(53, true));\r\n\r\n\t\t\t\tincData.temperature = buffer.getFloat32(57, true);\r\n\r\n\t\t\t\tthis.updateLatestDataTime(0);\r\n\r\n\t\t\t\tincData.timestamp = this.data.latestDataTime;\r\n\r\n\t\t\t\t//pushing to the array will mimic phid->bufferWritePtr++\r\n\t\t\t\tthis.data.dataBuffer.push(incData);\r\n\r\n\t\t\t\tif (this.data.doZeroGyro) {\r\n\t\t\t\t\tif (this.timestampDiff(this.data.latestDataTime, this.data.dataBuffer[0].timestamp) >= ZERO_GYRO_TIME) {\r\n\t\t\t\t\t\tconst gyroCorrectionTemp = [0, 0, 0];\r\n\r\n\t\t\t\t\t\tthis.data.dataBuffer.forEach((v) => {\r\n\t\t\t\t\t\t\tgyroCorrectionTemp.map((_value, index, arary) => {\r\n\t\t\t\t\t\t\t\tarary[index] += v.angularRate[index];\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.data.gyroCorrection.forEach((_value, index, arary) => {\r\n\t\t\t\t\t\t\tarary[index] = gyroCorrectionTemp[index] / this.data.dataBuffer.length;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tdoneGyroZero = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//see if it's time for an event\r\n\t\t\t\tif (this.timestampDiff(this.data.latestDataTime, this.data.lastEventTime) >= dataRate) {\r\n\t\t\t\t\tlet tempTime = 0;\r\n\t\t\t\t\tlet accelCounter = [0, 0, 0];\r\n\t\t\t\t\tlet angularRateCounter = [0, 0, 0];\r\n\t\t\t\t\tlet magneticFieldCounter = [0, 0, 0];\r\n\r\n\t\t\t\t\tlet dataPerEvent = 0;\r\n\t\t\t\t\tlet multipleDataPerEvent = false;\r\n\r\n\t\t\t\t\tif (dataRate < this.data.interruptRate)\r\n\t\t\t\t\t\tmultipleDataPerEvent = true;\r\n\r\n\t\t\t\t\tfor (let j = 0; ; j++) {\r\n\t\t\t\t\t\tif (this.data.dataBuffer.length === 0 || j >= 16) {\r\n\t\t\t\t\t\t\tdataPerEvent = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttempTime = this.data.dataBuffer[0].timestamp;\r\n\r\n\t\t\t\t\t\t//average data for each stage\r\n\t\t\t\t\t\t//forEach will mimic phid->bufferReadPtr++\r\n\t\t\t\t\t\tthis.data.dataBuffer.forEach((v) => {\r\n\t\t\t\t\t\t\tif (!multipleDataPerEvent || this.timestampDiff(v.timestamp, tempTime) < dataRate) {\r\n\t\t\t\t\t\t\t\taccelAvg.map((_value, index, array) => {\r\n\t\t\t\t\t\t\t\t\tif (v.acceleration[index] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\t\t\tarray[index] += v.acceleration[index];\r\n\t\t\t\t\t\t\t\t\t\taccelCounter[index]++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tangularRateAvg.map((_value, index, array) => {\r\n\t\t\t\t\t\t\t\t\tif (v.angularRate[index] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\t\t\tconst rate = v.angularRate[index] - this.data.gyroCorrection[index];\r\n\t\t\t\t\t\t\t\t\t\tarray[index] += rate;\r\n\t\t\t\t\t\t\t\t\t\tangularRateCounter[index]++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tmagneticFieldAvg.map((_value, index, array) => {\r\n\t\t\t\t\t\t\t\t\tif (v.magneticField[index] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\t\t\tarray[index] += v.magneticField[index];\r\n\t\t\t\t\t\t\t\t\t\tmagneticFieldCounter[index]++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// NOTE: we are NOT averaging the incoming quaternion, just getting the latest one\r\n\t\t\t\t\t\t\t\tquaternion.forEach((_value, index, array) => {\r\n\t\t\t\t\t\t\t\t\tarray[index] = v.quaternion[index];\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\ttemperature = v.temperature;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.data.dataBuffer = [];  // mimics bufferReadPtr = bufferWritePtr\r\n\r\n\r\n\t\t\t\t\t\tconst evData: DataBufferEntry = {\r\n\t\t\t\t\t\t\tacceleration: [],\r\n\t\t\t\t\t\t\tangularRate: [],\r\n\t\t\t\t\t\t\tmagneticField: [],\r\n\t\t\t\t\t\t\tquaternion: [],\r\n\t\t\t\t\t\t\ttimestamp: 0,\r\n\t\t\t\t\t\t\ttemperature: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\taccelAvg.map((value, index, array) => {\r\n\t\t\t\t\t\t\tif (accelCounter[index] > 0)\r\n\t\t\t\t\t\t\t\tevData.acceleration.push(value / accelCounter[index]);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tevData.acceleration.push(PUNK.DBL);\r\n\r\n\t\t\t\t\t\t\tarray[index] = 0;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tangularRateAvg.map((value, index, array) => {\r\n\t\t\t\t\t\t\tif (angularRateCounter[index] > 0) {\r\n\t\t\t\t\t\t\t\tif (this.data.doZeroGyro && !doneGyroZero)\r\n\t\t\t\t\t\t\t\t\tevData.angularRate.push(0);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tevData.angularRate.push(value / angularRateCounter[index]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tevData.angularRate.push(PUNK.DBL);\r\n\t\t\t\t\t\t\tarray[index] = 0;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tmagneticFieldAvg.map((value, index, array) => {\r\n\t\t\t\t\t\t\tif (magneticFieldCounter[index] > 0)\r\n\t\t\t\t\t\t\t\tevData.magneticField.push(value / magneticFieldCounter[index]);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tevData.magneticField.push(PUNK.DBL);\r\n\t\t\t\t\t\t\tarray[index] = 0;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tevData.quaternion = quaternion;\r\n\r\n\t\t\t\t\t\tevData.timestamp = tempTime;\r\n\t\t\t\t\t\tevData.temperature = temperature;\r\n\r\n\t\t\t\t\t\teventData.push(evData);\r\n\t\t\t\t\t} //for(j = 0; ; j++)\r\n\r\n\t\t\t\t\t//store to local structure\r\n\t\t\t\t\taccelCounter = [0, 0, 0];\r\n\t\t\t\t\tangularRateCounter = [0, 0, 0];\r\n\t\t\t\t\tmagneticFieldCounter = [0, 0, 0];\r\n\t\t\t\t\tfor (j = 0; j < dataPerEvent; j++) {\r\n\t\t\t\t\t\tfor (let i = 0; i < this.numAccelAxes; i++)\r\n\t\t\t\t\t\t\tif (eventData[j].acceleration[i] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\taccelAvg[i] += eventData[j].acceleration[i];\r\n\t\t\t\t\t\t\t\taccelCounter[i]++;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < this.numGyroAxes; i++)\r\n\t\t\t\t\t\t\tif (eventData[j].angularRate[i] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\tangularRateAvg[i] += eventData[j].angularRate[i];\r\n\t\t\t\t\t\t\t\tangularRateCounter[i]++;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < this.numCompassAxes; i++)\r\n\t\t\t\t\t\t\tif (eventData[j].magneticField[i] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\tmagneticFieldAvg[i] += eventData[j].magneticField[i];\r\n\t\t\t\t\t\t\t\tmagneticFieldCounter[i]++;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\teventData[j].quaternion.forEach((value, index) => {\r\n\t\t\t\t\t\t\tquaternion[index] = value;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\ttemperature = eventData[j].temperature;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set local getData to averages\r\n\t\t\t\t\tfor (let i = 0; i < this.numAccelAxes; i++) {\r\n\t\t\t\t\t\tif (accelCounter[i] > 0)\r\n\t\t\t\t\t\t\tthis.data.acceleration[0][i] = accelAvg[i] / accelCounter[i];\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.data.acceleration[0][i] = PUNK.DBL;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i = 0; i < this.numGyroAxes; i++) {\r\n\t\t\t\t\t\tif (angularRateCounter[i] > 0) {\r\n\t\t\t\t\t\t\tif (this.data.doZeroGyro && !doneGyroZero)\r\n\t\t\t\t\t\t\t\tthis.data.angularRate[0][i] = 0;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tthis.data.angularRate[0][i] = angularRateAvg[i] / angularRateCounter[i];\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\tthis.data.angularRate[0][i] = PUNK.DBL;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i = 0; i < this.numCompassAxes; i++) {\r\n\t\t\t\t\t\tif (magneticFieldCounter[i] > 0)\r\n\t\t\t\t\t\t\tthis.data.magneticField[0][i] = magneticFieldAvg[i] / magneticFieldCounter[i];\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.data.magneticField[0][i] = PUNK.DBL;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.data.quaternion[0] = {\r\n\t\t\t\t\t\tx: quaternion[0],\r\n\t\t\t\t\t\ty: quaternion[1],\r\n\t\t\t\t\t\tz: quaternion[2],\r\n\t\t\t\t\t\tw: quaternion[3]\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.data.temperature[0] = temperature;\r\n\r\n\t\t\t\t\t//send out any events\r\n\t\t\t\t\t// if (this.ch)    // this only exists when opening a channel, and not the base device directly\r\n\t\t\t\t\tfor (let j = 0; j < dataPerEvent; j++) {\r\n\t\t\t\t\t\tfireSaturation = 0;\r\n\t\t\t\t\t\tif (this.numSpatialInputs) {\r\n\t\t\t\t\t\t\tif ((channel = this.getChannel(3)) !== null) {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numAccelAxes; i++) {\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].acceleration[i] > this.data.accelerationMax || eventData[j].acceleration[i] < this.data.accelerationMin)\r\n\t\t\t\t\t\t\t\t\t\tfireSaturation |= 0x01;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numGyroAxes; i++) {\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].angularRate[i] > this.data.angularRateMax || eventData[j].angularRate[i] < this.data.angularRateMin)\r\n\t\t\t\t\t\t\t\t\t\tfireSaturation |= 0x02;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numCompassAxes; i++) {\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].magneticField[i] === PUNK.DBL)\r\n\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].magneticField[i] > this.data.magneticFieldMax || eventData[j].magneticField[i] < this.data.magneticFieldMin)\r\n\t\t\t\t\t\t\t\t\t\tfireSaturation |= 0x04;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (fireSaturation === 0) {\r\n\t\t\t\t\t\t\t\t\tlet bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: eventData[j].acceleration });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"G\", value: eventData[j].angularRate });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"2\", type: \"G\", value: eventData[j].magneticField });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"3\", type: \"g\", value: eventData[j].timestamp });\r\n\t\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.SPATIALDATA);\r\n\r\n\t\t\t\t\t\t\t\t\tbp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: eventData[j].quaternion });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: eventData[j].timestamp });\r\n\t\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.SPATIALALGDATA);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (fireSaturation & 0x01) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Accelerometer Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (fireSaturation & 0x02) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Gyroscope Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (fireSaturation & 0x04) {\r\n\t\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Magnetometer Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.numAccelAxes) {\r\n\t\t\t\t\t\t\tconst chIndex = 0;\r\n\t\t\t\t\t\t\tif ((channel = this.getChannel(chIndex)) !== null) {\r\n\t\t\t\t\t\t\t\tfireSaturation = false;\r\n\t\t\t\t\t\t\t\tfireEvent = false;\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numAccelAxes; i++) {\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].acceleration[i] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(eventData[j].acceleration[i] - this.data.accelAxisLastTrigger[i]) >= this.data.accelerationChangeTrigger || this.data.accelAxisLastTrigger[i] === PUNK.DBL)\r\n\t\t\t\t\t\t\t\t\t\t\tfireEvent = true;\r\n\t\t\t\t\t\t\t\t\t\tif (eventData[j].acceleration[i] > this.data.accelerationMax || eventData[j].acceleration[i] < this.data.accelerationMin)\r\n\t\t\t\t\t\t\t\t\t\t\tfireSaturation = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (fireSaturation) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Accelerometer Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: eventData[j].acceleration });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: eventData[j].timestamp });\r\n\t\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.ACCELERATIONCHANGE);\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numAccelAxes; i++)\r\n\t\t\t\t\t\t\t\t\t\tthis.data.accelAxisLastTrigger[i] = eventData[j].acceleration[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.numGyroAxes) {\r\n\t\t\t\t\t\t\tconst chIndex = 1;\r\n\t\t\t\t\t\t\tif ((channel = this.getChannel(chIndex)) !== null) {\r\n\t\t\t\t\t\t\t\tfireSaturation = false;\r\n\t\t\t\t\t\t\t\tfireEvent = false;\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numGyroAxes; i++) {\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].angularRate[i] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\t\t\tfireEvent = true;\r\n\t\t\t\t\t\t\t\t\t\tif (eventData[j].angularRate[i] > this.data.angularRateMax || eventData[j].angularRate[i] < this.data.angularRateMin)\r\n\t\t\t\t\t\t\t\t\t\t\tfireSaturation = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (fireSaturation) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Gyroscope Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: eventData[j].angularRate });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: eventData[j].timestamp });\r\n\t\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.ANGULARRATEUPDATE);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.numCompassAxes) {\r\n\t\t\t\t\t\t\tconst chIndex = 2;\r\n\t\t\t\t\t\t\tif ((channel = this.getChannel(chIndex)) !== null) {\r\n\t\t\t\t\t\t\t\tfireSaturation = false;\r\n\t\t\t\t\t\t\t\tfireEvent = false;\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numCompassAxes; i++) {\r\n\t\t\t\t\t\t\t\t\tif (eventData[j].magneticField[i] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(eventData[j].magneticField[i] - this.data.magAxisLastTrigger[i]) >= this.data.magneticFieldChangeTrigger || this.data.magAxisLastTrigger[i] === PUNK.DBL)\r\n\t\t\t\t\t\t\t\t\t\t\tfireEvent = true;\r\n\t\t\t\t\t\t\t\t\t\tif (eventData[j].magneticField[i] > this.data.magneticFieldMax || eventData[j].magneticField[i] < this.data.magneticFieldMin)\r\n\t\t\t\t\t\t\t\t\t\t\tfireSaturation = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (fireSaturation) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Magnetometer Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"G\", value: eventData[j].magneticField });\r\n\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: eventData[j].timestamp });\r\n\t\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.FIELDSTRENGTHCHANGE);\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let i = 0; i < this.numCompassAxes; i++)\r\n\t\t\t\t\t\t\t\t\t\tthis.data.magAxisLastTrigger[i] = eventData[j].magneticField[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.data.lastEventTime = this.data.latestDataTime;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//see if it's time for a temperature sensor event\r\n\t\t\t\tif (this.timestampDiff(this.data.latestDataTime, this.data.lastTemperatureEventTime) >= this.data.temperatureDataInterval) {\r\n\t\t\t\t\t//Temperature is capture above\r\n\r\n\r\n\t\t\t\t\tif (this.numTempInputs) {\r\n\t\t\t\t\t\tconst chIndex = 4;\r\n\t\t\t\t\t\tif ((channel = this.getChannel(chIndex)) !== null) {\r\n\t\t\t\t\t\t\tfireSaturation = false;\r\n\t\t\t\t\t\t\tfireEvent = false;\r\n\t\t\t\t\t\t\tif (this.data.temperature[0] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\t\tif (this.data.temperature[0] > this.data.temperatureMax || this.data.temperature[0] < this.data.temperatureMin) {\r\n\t\t\t\t\t\t\t\t\tfireSaturation = true;\r\n\t\t\t\t\t\t\t\t\tthis.data.temperature[0] = PUNK.DBL;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (Math.abs(this.data.temperature[0] - this.data.temperatureLastTrigger) >= this.data.temperatureChangeTrigger || this.data.temperatureLastTrigger === PUNK.DBL)\r\n\t\t\t\t\t\t\t\t\tfireEvent = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (fireSaturation) {\r\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.SATURATION });\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature Saturation Detected.\" });\r\n\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.temperature[0] });\r\n\t\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.TEMPERATURECHANGE);\r\n\t\t\t\t\t\t\t\tthis.data.temperatureLastTrigger = this.data.temperature[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.data.lastTemperatureEventTime = this.data.latestDataTime;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//this will signal the zero function to return\r\n\t\t\t\tif (doneGyroZero)\r\n\t\t\t\t\tthis.data.doZeroGyro = false;\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tsetDataRate(channelHandle: LocalChannel, newVal: number) {\r\n\t\t//make sure it's a power of 2, or 1\r\n\t\tif (newVal < this.data.interruptRate)\r\n\t\t\tnewVal = UpperPowerOfTwo(newVal);\r\n\t\telse\r\n\t\t\tnewVal = Math.round(newVal / this.data.interruptRate) * this.data.interruptRate;\r\n\r\n\t\tthis.data.dataInterval = newVal;\r\n\r\n\t\tlet numChannels = 0;\r\n\t\tif (this.numAccelAxes > 0)\r\n\t\t\tnumChannels++;\r\n\t\tif (this.numGyroAxes > 0)\r\n\t\t\tnumChannels++;\r\n\t\tif (this.numCompassAxes > 0)\r\n\t\t\tnumChannels++;\r\n\t\tif (this.numSpatialInputs)\r\n\t\t\tnumChannels++;\r\n\t\tif (this.numTempInputs)\r\n\t\t\tnumChannels++;\r\n\r\n\t\tfor (let i = 0; i < numChannels; i++) {\r\n\t\t\tconst channel = this.getChannel(i);\r\n\t\t\tif (channel !== null && channel !== channelHandle) {\r\n\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.dataInterval });\r\n\t\t\t\tbp.sendToChannel(channel, BP.DATAINTERVALCHANGE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetTemperatureDataRate(newVal: number) {\r\n\r\n\t\t//make sure it's a power of 2, or 1\r\n\t\tif (newVal < this.data.interruptRate)\r\n\t\t\tnewVal = UpperPowerOfTwo(newVal);\r\n\t\telse\r\n\t\t\tnewVal = Math.round(newVal / this.data.interruptRate) * this.data.interruptRate;\r\n\r\n\t\tthis.data.temperatureDataInterval = newVal;\r\n\t}\r\n\r\n\tasync zeroGyro() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.ZERO_GYRO, 0);\r\n\t}\r\n\r\n\tasync zeroAHRS() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.ZERO_AHRS, 0);\r\n\t}\r\n\r\n\tasync resetAHRS() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.RESET_AHRS, 0);\r\n\t}\r\n\r\n\tasync configureAlgorithm() {\r\n\t\tconst buf = new ArrayBuffer(6);\r\n\t\tconst buffer = new DataView(buf);\r\n\t\tbuffer.setUint8(0, this.data.algorithm);\r\n\t\tbuffer.setFloat32(1, this.data.AHRSMagGain, true);\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.CONFIGURE_AHRS, 0, buffer);\r\n\t}\r\n\r\n\tasync setPrecision(spatialPrecision: SpatialPrecision) {\r\n\t\tconst buffer = new Uint8Array([spatialPrecision]);\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.SET_POLLING_TYPE, 0, buffer);\r\n\t}\r\n\r\n\tasync resetCompassCorrectionParameters() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.MAGNETOMETER_RESET_CORRECTION_PARAMETERS, 0);\r\n\t}\r\n\r\n\tasync saveCompassCorrectionParameters() {\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.MAGNETOMETER_SAVE_CORRECTION_PARAMETERS, 0);\r\n\t}\r\n\r\n\tasync setCompassCorrectionParameters(corrParams: {\r\n\t\tmagField: number; offset0: number; offset1: number; offset2: number;\r\n\t\tgain0: number; gain1: number; gain2: number; T0: number; T1: number;\r\n\t\tT2: number; T3: number; T4: number; T5: number;\r\n\t}) {\r\n\t\tconst buf = new ArrayBuffer(52);\r\n\t\tconst buffer = new DataView(buf);\r\n\r\n\t\tif (corrParams.magField < 0.1 || corrParams.magField > 1000)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"magField must be between 0.1 and 1000.\"));\r\n\t\tif (corrParams.offset0 < -5 || corrParams.offset0 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Offset must be between -5 and 5.\"));\r\n\t\tif (corrParams.offset1 < -5 || corrParams.offset1 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Offset must be between -5 and 5.\"));\r\n\t\tif (corrParams.offset2 < -5 || corrParams.offset2 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Offset must be between -5 and 5.\"));\r\n\t\tif (corrParams.gain0 < 0 || corrParams.gain0 > 15)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Gain must be between 0 and 15.\"));\r\n\t\tif (corrParams.gain1 < 0 || corrParams.gain1 > 15)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Gain must be between 0 and 15.\"));\r\n\t\tif (corrParams.gain2 < 0 || corrParams.gain2 > 15)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Gain must be between 0 and 15.\"));\r\n\t\tif (corrParams.T0 < -5 || corrParams.T0 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"T0 must be between -5 and 5.\"));\r\n\t\tif (corrParams.T1 < -5 || corrParams.T1 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"T1 must be between -5 and 5.\"));\r\n\t\tif (corrParams.T2 < -5 || corrParams.T2 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"T2 must be between -5 and 5.\"));\r\n\t\tif (corrParams.T3 < -5 || corrParams.T3 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"T3 must be between -5 and 5.\"));\r\n\t\tif (corrParams.T4 < -5 || corrParams.T4 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"T4 must be between -5 and 5.\"));\r\n\t\tif (corrParams.T5 < -5 || corrParams.T5 > 5)\r\n\t\t\tthrow (new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"T5 must be between -5 and 5.\"));\r\n\r\n\t\tbuffer.setFloat32(0, corrParams.magField, true);\r\n\t\tbuffer.setFloat32(4, corrParams.offset0, true);\r\n\t\tbuffer.setFloat32(8, corrParams.offset1, true);\r\n\t\tbuffer.setFloat32(12, corrParams.offset2, true);\r\n\t\tbuffer.setFloat32(16, corrParams.gain0, true);\r\n\t\tbuffer.setFloat32(20, corrParams.gain1, true);\r\n\t\tbuffer.setFloat32(24, corrParams.gain2, true);\r\n\t\tbuffer.setFloat32(28, corrParams.T0, true);\r\n\t\tbuffer.setFloat32(32, corrParams.T1, true);\r\n\t\tbuffer.setFloat32(36, corrParams.T2, true);\r\n\t\tbuffer.setFloat32(40, corrParams.T3, true);\r\n\t\tbuffer.setFloat32(44, corrParams.T4, true);\r\n\t\tbuffer.setFloat32(48, corrParams.T5, true);\r\n\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_WRITE, SpatialPacketType.MAGNETOMETER_SET_CORRECTION_PARAMETERS, 0, buffer);\r\n\r\n\t}\r\n}\r\n\r\nexport { SpatialDevice };\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { BridgePacket, PUNK } from \"../../BridgePacket\";\r\nimport { DeviceUID } from \"../../Devices.gen\";\r\nimport { ErrorCode } from \"../../Enumerations.gen\";\r\nimport { PhidgetError } from \"../../PhidgetError\";\r\nimport { LocalChannel } from \"../LocalChannel\";\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"../PhidgetUSBDevice\";\r\nimport { USBConnectionBase } from \"../USBConnection\";\r\n\r\nexport class EncoderDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: {\r\n\t\tinputState: number[]\r\n\t};\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1047_2:\r\n\t\t\tcase DeviceUID._1057_3:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = {\r\n\t\t\tinputState: new Array(this.numInputs).fill(PUNK.BOOL)\r\n\t\t};\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numEncoders() { return this.devDef.cn[0]; }\r\n\tget numInputs() { return this.devDef.cn[1]; }\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync initAfterOpen() {\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1047_2:\r\n\t\t\tcase DeviceUID._1057_3:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"This Phidget is not yet supported via direct USB connection in JavaScript.\");\r\n\t\t}\r\n\t}\r\n\tdataInput(_buffer: DataView) {}\r\n\tasync bridgeInput(_ch: LocalChannel, _arg1: BridgePacket) {}\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { BridgePacket, PUNK } from \"../../BridgePacket\";\r\nimport { BP } from \"../../BridgePackets.gen\";\r\nimport { DeviceUID } from \"../../Devices.gen\";\r\nimport { BridgeGain, ErrorCode, ErrorEventCode } from \"../../Enumerations.gen\";\r\nimport { PhidgetError } from \"../../PhidgetError\";\r\nimport { RoundDouble } from \"../../Utils\";\r\nimport { LocalChannel } from \"../LocalChannel\";\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"../PhidgetUSBDevice\";\r\nimport { PhidgetUSBRequestType } from \"../USB\";\r\nimport { USBConnectionBase } from \"../USBConnection\";\r\nimport * as VintPacketType from '../VintPacketType';\r\n\r\ninterface BridgeDeviceData {\r\n\t// public members\r\n\tvoltageRatio: number[],\r\n\r\n\t// private members\r\n\tdataInterval: number[],\r\n\tvoltageRatioChangeTrigger: number[],\r\n\r\n\tenabled: boolean[],\r\n\tgain: BridgeGain[],\r\n\tdataRate: number,\r\n\r\n\tenabledEcho: boolean[],\r\n\tgainEcho: BridgeGain[],\r\n\tbridgeLastTrigger: number[],\r\n\r\n\tdataRateMin: number,\r\n\tdataRateMax: number,\r\n\tbridgeMin: number[],\r\n\tbridgeMax: number[],\r\n\r\n\toutOfRange: boolean[],\r\n\r\n\t// Firmware bug handling\r\n\tchEnabledBugNotValid: boolean[],\r\n\tch0EnableOverride: boolean,\r\n}\r\n\r\nexport class BridgeDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: BridgeDeviceData;\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1046_1:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = this.initData();\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numBridgeInputs() { return this.devDef.cn[0]; }\r\n\r\n\tasync updateBridgeIntervals(ch: LocalChannel, bp: BridgePacket) {\r\n\t\tlet integerInterval;\r\n\t\tlet interval;\r\n\r\n\t\tconst len = (4 * this.numBridgeInputs) + 1;\r\n\t\tconst buffer = await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ, 0, 0, len);\r\n\r\n\t\tfor (let i = 0; i < this.numBridgeInputs; i++) {\r\n\t\t\tthis.data.enabled[i] = (buffer.getUint8(0) & (1 << i)) !== 0;\r\n\t\t\tinterval = buffer.getFloat32((4 * i) + 1, true);\r\n\t\t\tthis.data.dataInterval[i] = interval <= 60000 ? interval : PUNK.DBL;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.numBridgeInputs; i++) {\r\n\t\t\tinterval = this.data.dataInterval[i];\r\n\r\n\t\t\tif (interval === PUNK.DBL) continue;\r\n\r\n\t\t\tintegerInterval = RoundDouble(interval > 0 ? interval : 1, 0);\r\n\r\n\t\t\tif (i == ch.index) {\r\n\t\t\t\tif (bp.vpkt === BP.CLOSERESET) continue;\r\n\t\t\t\tif (bp.vpkt !== BP.SETDATAINTERVAL)\r\n\t\t\t\t\tbp.add({ name: \"\", type: \"g\", value: interval });\r\n\t\t\t\telse {\r\n\t\t\t\t\tbp.remove(\"0\");\r\n\t\t\t\t\tbp.set({ name: \"0\", type: \"u\", value: integerInterval });\r\n\t\t\t\t\tif (bp.entryCount > 1) {\r\n\t\t\t\t\t\tbp.remove(\"1\");\r\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"g\", value: interval });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbp.add({ name: \"\", type: \"g\", value: interval });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channel = this.getChannel(i);\r\n\t\t\tif (channel !== null) {\r\n\t\t\t\tconst bp_s = new BridgePacket();\r\n\t\t\t\tbp_s.set({ name: \"0\", type: \"u\", value: integerInterval });\r\n\t\t\t\tbp_s.set({ name: \"1\", type: \"g\", value: interval });\r\n\t\t\t\tbp_s.sendToChannel(channel, BP.DATAINTERVALCHANGE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitData() {\r\n\t\tconst data = {\r\n\t\t\t// public members\r\n\t\t\tvoltageRatio: new Array(this.numBridgeInputs).fill(PUNK.DBL),\r\n\r\n\t\t\t// private members\r\n\t\t\tdataInterval: new Array(this.numBridgeInputs).fill(PUNK.DBL),\r\n\t\t\tvoltageRatioChangeTrigger: new Array(this.numBridgeInputs).fill(PUNK.DBL),\r\n\r\n\t\t\tenabled: new Array(this.numBridgeInputs).fill(false),\r\n\t\t\tgain: new Array(this.numBridgeInputs).fill(PUNK.ENUM),\r\n\t\t\tdataRate: PUNK.UINT32,\r\n\r\n\t\t\tenabledEcho: new Array(this.numBridgeInputs).fill(false),\r\n\t\t\tgainEcho: new Array(this.numBridgeInputs).fill(PUNK.ENUM),\r\n\t\t\tbridgeLastTrigger: new Array(this.numBridgeInputs).fill(PUNK.DBL),\r\n\r\n\t\t\tdataRateMin: PUNK.DBL,\r\n\t\t\tdataRateMax: PUNK.DBL,\r\n\t\t\tbridgeMin: new Array(this.numBridgeInputs).fill(PUNK.DBL),\r\n\t\t\tbridgeMax: new Array(this.numBridgeInputs).fill(PUNK.DBL),\r\n\r\n\t\t\toutOfRange: new Array(this.numBridgeInputs).fill(false),\r\n\r\n\t\t\t// Firmware bug handling\r\n\t\t\tchEnabledBugNotValid: new Array(this.numBridgeInputs).fill(false),\r\n\t\t\tch0EnableOverride: false,\r\n\t\t};\r\n\t\treturn data;\r\n\t}\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync initAfterOpen() {\r\n\t\tlet len;\r\n\t\tlet buffer;\r\n\t\tthis.data = this.initData();\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1046_1:\r\n\t\t\t\tthis.data.dataRateMin = 1000;\r\n\t\t\t\tthis.data.dataRateMax = 1;\r\n\r\n\t\t\t\tlen = (4 * this.numBridgeInputs) + 1;\r\n\t\t\t\tbuffer = await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_DEVICE_READ, 0, 0, len);\r\n\r\n\t\t\t\tfor (let i = 0; i < this.numBridgeInputs; i++) {\r\n\t\t\t\t\tthis.data.bridgeMax[i] = 1.000;\r\n\t\t\t\t\tthis.data.bridgeMin[i] = -1.000;\r\n\r\n\t\t\t\t\tthis.data.enabled[i] = (buffer.getUint8(0) & (1 << i)) !== 0;\r\n\r\n\t\t\t\t\tconst interval = buffer.getFloat32((4 * i) + 1, true);\r\n\t\t\t\t\tthis.data.dataInterval[i] = (interval <= 60000) ? interval : PUNK.DBL;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected device\");\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.numBridgeInputs; i++) {\r\n\t\t\tthis.data.voltageRatioChangeTrigger[i] = 0.001;\r\n\t\t}\r\n\t}\r\n\r\n\tdataInput(buffer: DataView) {\r\n\t\tlet chIndex;\r\n\t\tlet channel;\r\n\t\tlet bp;\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1046_1:\r\n\t\t\t\tchIndex = buffer.getUint8(1);\r\n\t\t\t\tswitch (buffer.getUint8(0)) {\r\n\t\t\t\t\tcase VintPacketType.VoltageRatioInputPacket.VOLTAGERATIOCHANGE:\r\n\t\t\t\t\t\tthis.data.voltageRatio[chIndex] = buffer.getFloat32(2, true);\r\n\t\t\t\t\t\tchannel = this.getChannel(chIndex);\r\n\t\t\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\t\t\t// Send out events\r\n\t\t\t\t\t\t\tif (buffer.byteLength > 6) {\r\n\t\t\t\t\t\t\t\tswitch (buffer.getInt8(6)) {\r\n\t\t\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\t\t\tbp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"The sensor reading is too high for the selected gain mode.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase -1:\r\n\t\t\t\t\t\t\t\t\t\tbp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"The sensor reading is too low for the selected gain mode.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tbp = new BridgePacket();\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Value is unknown.\" });\r\n\t\t\t\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbp = new BridgePacket();\r\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageRatio[chIndex] });\r\n\t\t\t\t\t\t\tbp.sendToChannel(channel, BP.VOLTAGERATIOCHANGE);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected device\");\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tasync bridgeInput(ch: LocalChannel, bp: BridgePacket) {\r\n\t\tlet buffer;\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1046_1:\r\n\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\tcase BP.SETENABLED:\r\n\t\t\t\t\t\tbuffer = new Uint8Array([bp.getNumber(0) ? 0xFF : 0x00]);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.VoltageRatioInputPacket.BRIDGEENABLED, ch.uniqueIndex, buffer);\r\n\t\t\t\t\t\tthis.data.enabled[ch.index] = buffer[0] !== 0;\r\n\t\t\t\t\t\tawait this.updateBridgeIntervals(ch, bp);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\tbuffer = new DataView(new ArrayBuffer(4));\r\n\t\t\t\t\t\tif (bp.entryCount > 1)\r\n\t\t\t\t\t\t\tbuffer.setFloat32(0, bp.getNumber(1), true);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tbuffer.setFloat32(0, bp.getNumber(0), true);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, ch.uniqueIndex, buffer);\r\n\t\t\t\t\t\tbuffer = await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_READ, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, ch.uniqueIndex, 4);\r\n\r\n\t\t\t\t\t\tthis.data.dataInterval[ch.index] = buffer.getFloat32(0, true);\r\n\t\t\t\t\t\tawait this.updateBridgeIntervals(ch, bp);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\tbuffer = new DataView(new ArrayBuffer(4));\r\n\t\t\t\t\t\tbuffer.setUint32(0, bp.getNumber(0) * 0x80000000);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.VoltageRatioInputPacket.SETVOLTAGERATIOCHANGETRIGGER, ch.uniqueIndex, buffer);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.SETBRIDGEGAIN:\r\n\t\t\t\t\t\tbuffer = new Uint8Array([bp.getNumber(0)]);\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.VoltageRatioInputPacket.BRIDGEGAIN, ch.uniqueIndex, buffer);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\tthis.data.enabled[ch.index] = false;\r\n\t\t\t\t\t\tawait this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, ch.uniqueIndex);\r\n\t\t\t\t\t\tawait this.updateBridgeIntervals(ch, bp);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\tawait this.updateBridgeIntervals(ch, bp);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type.\");\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected device\");\r\n\t\t}\r\n\t}\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { BridgePacket, PUNK } from \"../../BridgePacket\";\r\nimport { DeviceUID } from \"../../Devices.gen\";\r\nimport { ErrorCode } from \"../../Enumerations.gen\";\r\nimport { PhidgetError } from \"../../PhidgetError\";\r\nimport { LocalChannel } from \"../LocalChannel\";\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"../PhidgetUSBDevice\";\r\nimport { USBConnectionBase } from \"../USBConnection\";\r\n\r\nexport class DataAdapterDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: {\r\n\t\tinputState: number[]\r\n\t};\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\r\n\t\t\t/*START_UNRELEASED*/\r\n\t\t\t// Makes sure unreleased device code isn't in the release library\r\n\t\t\tcase DeviceUID._ADP1001_USB:\r\n\t\t\tcase DeviceUID._ADP_RS485_422_USB:\r\n\t\t\tcase DeviceUID._ADP_SERIAL_USB:\r\n\t\t\t\tbreak;\r\n\t\t\t/*END_UNRELEASED*/\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = {\r\n\t\t\tinputState: new Array(this.numInputs).fill(PUNK.BOOL)\r\n\t\t};\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numDataAdapters() { return this.devDef.cn[0]; }\r\n\tget numInputs() { return this.devDef.cn[1]; }\r\n\tget numOutputs() { return this.devDef.cn[2]; }\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync initAfterOpen() {\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._ADP1001_USB:\r\n\t\t\tcase DeviceUID._ADP_RS485_422_USB:\r\n\t\t\tcase DeviceUID._ADP_SERIAL_USB:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"This Phidget is not yet supported via direct USB connection in JavaScript.\");\r\n\t\t}\r\n\t}\r\n\tdataInput(_buffer: DataView) { }\r\n\tasync bridgeInput(_ch: LocalChannel, _arg1: BridgePacket) { }\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { BridgePacket } from \"../../BridgePacket\";\r\nimport { DeviceUID } from \"../../Devices.gen\";\r\nimport { ErrorCode } from \"../../Enumerations.gen\";\r\nimport { PhidgetError } from \"../../PhidgetError\";\r\nimport { LocalChannel } from \"../LocalChannel\";\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"../PhidgetUSBDevice\";\r\nimport { PhidgetUSBEndpointType } from \"../USB\";\r\nimport { USBConnectionBase } from \"../USBConnection\";\r\n\r\nexport class GenericDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: {\r\n\t\tINPacketLength: number[],\r\n\t\tOUTPacketLength: number[],\r\n\t\tCTRPacketLength: number[],\r\n\t};\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._GENERIC_PHIDUSB:\r\n\t\t\tcase DeviceUID._UNKNOWNUSB:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = {\r\n\t\t\tINPacketLength: [this.pusbParams.maxPacketEP1],\r\n\t\t\tOUTPacketLength: [\r\n\t\t\t\t(this.pusbParams.ep2type === PhidgetUSBEndpointType.PHID_EP_UNAVAILABLE\r\n\t\t\t\t\t? this.pusbParams.maxPacketEP0 : this.pusbParams.maxPacketEP2)],\r\n\t\t\tCTRPacketLength: [this.pusbParams.maxPacketEP0]\r\n\t\t};\r\n\t}\r\n\r\n\tasync initAfterOpen() { }\r\n\tdataInput(_buffer: DataView) { }\r\n\tasync bridgeInput(_ch: LocalChannel, _arg1: BridgePacket) { }\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { BridgePacket, PUNK } from \"../../BridgePacket\";\r\nimport { BP } from \"../../BridgePackets.gen\";\r\nimport { DeviceUID } from \"../../Devices.gen\";\r\nimport { ChannelClass, ErrorCode, ErrorEventCode, ThermocoupleType } from \"../../Enumerations.gen\";\r\nimport { PhidgetError } from \"../../PhidgetError\";\r\nimport { RoundDouble } from \"../../Utils\";\r\nimport { LocalChannel } from \"../LocalChannel\";\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"../PhidgetUSBDevice\";\r\nimport { USBConnectionBase } from \"../USBConnection\";\r\n\r\nconst TEMPSENSOR_MAXSENSORS = 5;\r\nconst PHIDID_1048_GAIN = ((80 / 2.2) + 5);\r\n// using 53.6K + 10K offset resistors: VOffset = (4.096Vref * 10K) / (10K + 53.6K)\r\nconst PHIDID_1048_OFFSET = (4.096 / 6.36);\r\n\r\ninterface TemperatureSensorDeviceData {\r\n\t// Public members\r\n\tmaxTemperature: number[],\r\n\tminTemperature: number[],\r\n\ttemperature: number[],\r\n\tvoltage: number[],\r\n\r\n\t// Private members\r\n\tvoltageChangeTrigger: number[],\r\n\tlastVoltageTrigger: number[],\r\n\tpotentialMin: number,\r\n\tpotentialMax: number,\r\n\tvoltageDeadline: number[],\r\n\tvoltageDataInterval: number[],\r\n\r\n\tthermocoupleType: ThermocoupleType[]\r\n\ttemperatureChangeTrigger: number[],\r\n\tambientTemperatureIndex: number,\r\n\ttemperatureDeadline: number[],\r\n\ttemperatureDataInterval: number[],\r\n\tinterruptRate: number,\r\n\tlastTrigger: number[],\r\n\tlastAmbientTrigger: number,\r\n\tdi_calltm: number,\r\n}\r\n\r\nexport class TemperatureSensorDevice extends PhidgetUSBDevice {\r\n\r\n\tdata: TemperatureSensorDeviceData;\r\n\r\n\tconstructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n\t\tsuper(conn, data, usbDev);\r\n\r\n\t\t// Ensure that we actually support this device\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1048_1_2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t}\r\n\r\n\t\tthis.data = this.initData();\r\n\t}\r\n\r\n\t// Define getters based on devices.h Attr structs in C library\r\n\tget numTempInputs() { return this.devDef.cn[0]; }\r\n\tget numVoltageInputs() { return this.devDef.cn[1]; }\r\n\r\n\tlookup_voltage(tJunc: number, tcType: ThermocoupleType) {\r\n\t\tlet tcTable: number[];\r\n\r\n\t\tswitch (tcType) {\r\n\t\t\tcase ThermocoupleType.K:\r\n\t\t\t\ttcTable = thermocouple_table_k_type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ThermocoupleType.J:\r\n\t\t\t\ttcTable = thermocouple_table_j_type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ThermocoupleType.E:\r\n\t\t\t\ttcTable = thermocouple_table_e_type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ThermocoupleType.T:\r\n\t\t\t\ttcTable = thermocouple_table_t_type;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t}\r\n\r\n\t\tconst startingTemp = thermocouple_table_range[tcType][0];\r\n\r\n\t\t// Make sure we're not going to try looking outside of the arrays\r\n\t\tif ((RoundDouble(tJunc, 0) - startingTemp) < 0) {\r\n\t\t\treturn PUNK.DBL;\r\n\t\t}\r\n\t\tif ((RoundDouble(tJunc, 0) - (startingTemp - 1)) >= tcTable.length) {\r\n\t\t\treturn PUNK.DBL;\r\n\t\t}\r\n\r\n\t\tconst voltage = tcTable[RoundDouble(tJunc, 0) - startingTemp] +\r\n\t\t\t((tcTable[RoundDouble(tJunc, 0) - (startingTemp - 1)] -\r\n\t\t\t\ttcTable[RoundDouble(tJunc, 0) - startingTemp]) * (tJunc - RoundDouble(tJunc, 0)));\r\n\r\n\t\treturn (voltage / 1000.0);\r\n\t}\r\n\r\n\tlookup_temperature(Vtc: number, tcType: ThermocoupleType) {\r\n\t\tlet tcTable;\r\n\t\tlet temperature = PUNK.DBL;\r\n\r\n\t\tswitch (tcType) {\r\n\t\t\tcase ThermocoupleType.K:\r\n\t\t\t\ttcTable = thermocouple_table_k_type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ThermocoupleType.J:\r\n\t\t\t\ttcTable = thermocouple_table_j_type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ThermocoupleType.E:\r\n\t\t\t\ttcTable = thermocouple_table_e_type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ThermocoupleType.T:\r\n\t\t\t\ttcTable = thermocouple_table_t_type;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\r\n\t\t}\r\n\r\n\t\tconst startingTemp = thermocouple_table_range[tcType][0];\r\n\t\tVtc *= 1000.0;\t// V -> mV\r\n\r\n\t\t//the voltage is too low\r\n\t\tif (Vtc < tcTable[0]) {\r\n\t\t\treturn PUNK.DBL;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < tcTable.length; i++) {\r\n\t\t\tif (tcTable[i] > Vtc) {\r\n\t\t\t\ttemperature = (i + (startingTemp - 1)) +\r\n\t\t\t\t\t((Vtc - tcTable[i - 1]) /\r\n\t\t\t\t\t\t(tcTable[i] - tcTable[i - 1]));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if Vtc > tcTable[MAXSIZE - 1] then temperature will still equal PUNK.DBL\r\n\t\treturn (temperature);\r\n\t}\r\n\r\n\tinitData() {\r\n\t\tconst data: TemperatureSensorDeviceData = {\r\n\t\t\t// public members\r\n\t\t\tmaxTemperature: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\tminTemperature: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\ttemperature: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\tvoltage: new Array(this.numVoltageInputs).fill(PUNK.DBL),\r\n\r\n\t\t\t// private members\r\n\t\t\tvoltageChangeTrigger: new Array(this.numVoltageInputs).fill(0),\r\n\t\t\tlastVoltageTrigger: new Array(this.numVoltageInputs).fill(PUNK.DBL),\r\n\t\t\tpotentialMin: RoundDouble((((0.23 - PHIDID_1048_OFFSET) / PHIDID_1048_GAIN)), 5),\r\n\t\t\tpotentialMax: RoundDouble((((3.846 - PHIDID_1048_OFFSET) / PHIDID_1048_GAIN)), 5),\r\n\t\t\tvoltageDeadline: new Array(this.numTempInputs).fill(0),\r\n\t\t\tvoltageDataInterval: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\tthermocoupleType: new Array(this.numTempInputs - 1).fill(ThermocoupleType.K),\r\n\t\t\ttemperatureChangeTrigger: new Array(this.numTempInputs).fill(0),\r\n\t\t\tambientTemperatureIndex: this.numTempInputs - 1,\r\n\t\t\ttemperatureDeadline: new Array(this.numTempInputs).fill(0),\r\n\t\t\ttemperatureDataInterval: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\tinterruptRate: 32,\r\n\t\t\tlastTrigger: new Array(this.numTempInputs).fill(PUNK.DBL),\r\n\t\t\tlastAmbientTrigger: PUNK.DBL,\r\n\t\t\tdi_calltm: 0,\r\n\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync initAfterOpen() {\r\n\t\tthis.data = this.initData();\r\n\r\n\t\tthis.data.minTemperature[this.data.ambientTemperatureIndex] = -55;\r\n\t\tthis.data.maxTemperature[this.data.ambientTemperatureIndex] = 150;\r\n\t}\r\n\r\n\tdataInput(_buffer: DataView) {\r\n\t\tconst temperature = new Array(TEMPSENSOR_MAXSENSORS).fill(0);\r\n\t\tconst potential = new Array(TEMPSENSOR_MAXSENSORS).fill(0);\r\n\t\tlet Vthermocouple, Temp;\r\n\t\tlet badConnectionFlags = 0;\r\n\t\tlet ambientTemperature;\r\n\t\tlet channel;\r\n\t\tlet v;\r\n\r\n\t\tswitch (this.devDef.uid) {\r\n\t\t\tcase DeviceUID._1048_1_2:\r\n\t\t\t\t// Temp IC - absolute possible range: -61.1 to 161.16\r\n\t\t\t\tambientTemperature = RoundDouble(_buffer.getFloat32(16, true), 4);\t// 1048_1 filters ambient temperature in firmware\r\n\t\t\t\tbadConnectionFlags = _buffer.getUint8(20);\r\n\r\n\t\t\t\t//don't include the ambient sensor in the loop\r\n\t\t\t\tfor (let i = 0; i < this.numTempInputs - 1; i++) {\r\n\t\t\t\t\t// Thermocouple\r\n\t\t\t\t\tpotential[i] = RoundDouble(_buffer.getFloat32(i * 4, true), 7);\r\n\r\n\t\t\t\t\t// This is the potential at the thermocouple tip, with the junction potnetial eliminated\r\n\t\t\t\t\tVthermocouple = potential[i] + this.lookup_voltage(ambientTemperature, this.data.thermocoupleType[i]);\r\n\t\t\t\t\tTemp = this.lookup_temperature(Vthermocouple, this.data.thermocoupleType[i]);\r\n\t\t\t\t\tif (Temp != PUNK.DBL) {\r\n\t\t\t\t\t\ttemperature[i] = RoundDouble(Temp, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttemperature[i] = PUNK.DBL;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected device\");\r\n\t\t}\r\n\r\n\t\tthis.data.di_calltm++;\r\n\r\n\t\t// Make sure values are withing defined range, and store to structure\r\n\t\tif (ambientTemperature > this.data.maxTemperature[this.data.ambientTemperatureIndex]) {\r\n\t\t\tthis.data.temperature[this.data.ambientTemperatureIndex] = PUNK.DBL;\r\n\t\t\tchannel = this.getChannel(this.numTempInputs + this.numVoltageInputs);\r\n\t\t\tif (channel !== null) {\r\n\t\t\t\tconst errorMsg = `Ambient sensor reported a temperature of ${ambientTemperature.toFixed(4)}C which is over the maximum of ${this.data.maxTemperature[this.data.ambientTemperatureIndex].toFixed(4)}C`;\r\n\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: errorMsg });\r\n\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t}\r\n\t\t} else if (ambientTemperature < this.data.minTemperature[this.data.ambientTemperatureIndex]) {\r\n\t\t\tthis.data.temperature[this.data.ambientTemperatureIndex] = PUNK.DBL;\r\n\t\t\tchannel = this.getChannel(this.numTempInputs + this.numVoltageInputs);\r\n\t\t\tif (channel !== null) {\r\n\t\t\t\tconst errorMsg = `Ambient sensor reported a temperature of ${ambientTemperature.toFixed(4)}C which is below the minimum of ${this.data.minTemperature[this.data.ambientTemperatureIndex].toFixed(4)}C`;\r\n\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: errorMsg });\r\n\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.data.temperature[this.data.ambientTemperatureIndex] = ambientTemperature;\r\n\r\n\t\t\tswitch (this.devDef.uid) {\r\n\t\t\t\tcase DeviceUID._1048_1_2:\r\n\t\t\t\t\t// Recalibrate min/max temperatures depending on ambient temperature\r\n\t\t\t\t\t// Don't include the ambient sensor in the loop\r\n\t\t\t\t\tfor (let i = 0; i < this.numTempInputs - 1; i++) {\r\n\t\t\t\t\t\tif (this.data.thermocoupleType[i] === PUNK.ENUM as unknown as ThermocoupleType) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tv = this.lookup_voltage(thermocouple_useful_range[this.data.thermocoupleType[i]][1] - this.data.temperature[this.data.ambientTemperatureIndex],\r\n\t\t\t\t\t\t\tthis.data.thermocoupleType[i]);\r\n\t\t\t\t\t\tif (v > this.data.potentialMax) {\r\n\t\t\t\t\t\t\tthis.data.maxTemperature[i] = RoundDouble(((this.lookup_temperature(this.data.potentialMax, this.data.thermocoupleType[i]) +\r\n\t\t\t\t\t\t\t\tthis.data.temperature[this.data.ambientTemperatureIndex]) / 10), 0) * 10;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tv = this.lookup_voltage(thermocouple_useful_range[this.data.thermocoupleType[i]][0] - this.data.temperature[this.data.ambientTemperatureIndex],\r\n\t\t\t\t\t\t\tthis.data.thermocoupleType[i]);\r\n\t\t\t\t\t\tif (v < this.data.potentialMin) {\r\n\t\t\t\t\t\t\tthis.data.minTemperature[i] = RoundDouble(((this.lookup_temperature(this.data.potentialMin, this.data.thermocoupleType[i]) +\r\n\t\t\t\t\t\t\t\tthis.data.temperature[this.data.ambientTemperatureIndex]) / 10), 0) * 10;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Don't include the ambient sensor in the loop\r\n\t\tfor (let i = 0; i < this.numTempInputs - 1; i++) {\r\n\t\t\tchannel = this.getChannel(i);\r\n\t\t\t// If ambient temperature was outside of allowed range, then caluclated temperature will be wrong\r\n\t\t\tif ((badConnectionFlags & (1 << i)) !== 0) {\r\n\t\t\t\tthis.data.temperature[i] = PUNK.DBL;\r\n\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\r\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Input reported a bad connection on this channel.  Check there is a thermocouple attached.\" });\r\n\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.data.temperature[this.data.ambientTemperatureIndex] === PUNK.DBL) {\r\n\t\t\t\tthis.data.temperature[i] = PUNK.DBL;\r\n\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Temperature cannot be calculated because the ambient temperature is unkonwn.\" });\r\n\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t}\r\n\t\t\t} else if (temperature[i] === PUNK.DBL) {\r\n\t\t\t\tthis.data.temperature[i] = PUNK.DBL;\r\n\t\t\t\tif (/*this.devDef.uid === DeviceUID._1045 ||*/ this.data.thermocoupleType[i] !== PUNK.ENUM as unknown as ThermocoupleType) {\r\n\t\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Input reported an undefined temperature. Probably there is no thermocouple plugged in.\" });\r\n\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (temperature[i] > this.data.maxTemperature[i]) {\r\n\t\t\t\tthis.data.temperature[i] = PUNK.DBL;\r\n\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\tconst errorMsg = `Input reported a temperature of ${temperature[i].toFixed(4)}C which is over the maximum of ${this.data.maxTemperature[i].toFixed(4)}C`;\r\n\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: errorMsg });\r\n\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t}\r\n\t\t\t} else if (temperature[i] < this.data.minTemperature[i]) {\r\n\t\t\t\tthis.data.temperature[i] = PUNK.DBL;\r\n\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\tconst errorMsg = `Input reported a temperature of ${temperature[i].toFixed(4)}C which is below the minimum of ${this.data.minTemperature[i].toFixed(4)}C`;\r\n\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: errorMsg });\r\n\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.data.temperature[i] = temperature[i];\r\n\t\t\t}\r\n\r\n\t\t\t// Potential only on the thermocouple versions\r\n\t\t\tswitch (this.devDef.uid) {\r\n\t\t\t\tcase DeviceUID._1048_1_2:\r\n\t\t\t\t\tchannel = this.getChannel(i + this.numTempInputs);\r\n\t\t\t\t\tif ((badConnectionFlags & (1 << i)) !== 0) {\r\n\t\t\t\t\t\tthis.data.voltage[i] = PUNK.DBL;\r\n\t\t\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.BAD_CONNECTION_CONDITION });\r\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: \"Input reported a bad connection on this channel.\" });\r\n\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (potential[i] > this.data.potentialMax) {\r\n\t\t\t\t\t\tthis.data.voltage[i] = PUNK.DBL;\r\n\t\t\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\t\t\tconst errorMsg = `Input reported a potential of ${potential[i].toFixed(4)}mV which is above the maximum of ${this.data.potentialMax.toFixed(4)}mV`;\r\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: errorMsg });\r\n\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (potential[i] < this.data.potentialMin) {\r\n\t\t\t\t\t\tthis.data.voltage[i] = PUNK.DBL;\r\n\t\t\t\t\t\tif (channel !== null) {\r\n\t\t\t\t\t\t\tconst errorMsg = `Input reported a potential of ${potential[i].toFixed(4)}mV which is below the minimum of ${this.data.potentialMin.toFixed(4)}mV`;\r\n\t\t\t\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\t\t\t\tbp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n\t\t\t\t\t\t\tbp.set({ name: \"1\", type: \"s\", value: errorMsg });\r\n\t\t\t\t\t\t\tchannel.sendErrorEvent(bp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.data.voltage[i] = potential[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tm = this.data.interruptRate * this.data.di_calltm;\r\n\r\n\t\t// Temperature\r\n\t\tfor (let i = 0; i < this.numTempInputs; i++) {\r\n\t\t\tif (this.data.temperature[i] === PUNK.DBL) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (tm < this.data.temperatureDeadline[i]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tchannel = this.getChannel(i);\r\n\t\t\tif (channel === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.data.lastTrigger[i] === PUNK.DBL || Math.abs(this.data.temperature[i] - this.data.lastTrigger[i]) >= this.data.temperatureChangeTrigger[i]) {\r\n\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.temperature[i] });\r\n\t\t\t\tbp.sendToChannel(channel, BP.TEMPERATURECHANGE);\r\n\t\t\t\tthis.data.lastTrigger[i] = this.data.temperature[i];\r\n\t\t\t\tthis.data.temperatureDeadline[i] = tm + this.data.temperatureDataInterval[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Voltage\r\n\t\tfor (let i = 0; i < this.numVoltageInputs; i++) {\r\n\t\t\tif (this.data.voltage[i] === PUNK.DBL) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (tm < this.data.voltageDeadline[i]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tchannel = this.getChannel(i + this.numTempInputs);\r\n\t\t\tif (channel === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ((this.data.lastVoltageTrigger[i] === PUNK.DBL) || Math.abs(this.data.voltage[i] - this.data.lastVoltageTrigger[i]) >= this.data.voltageChangeTrigger[i]) {\r\n\t\t\t\tconst bp = new BridgePacket();\r\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltage[i] });\r\n\t\t\t\tbp.sendToChannel(channel, BP.VOLTAGECHANGE);\r\n\t\t\t\tthis.data.lastVoltageTrigger[i] = this.data.voltage[i];\r\n\t\t\t\tthis.data.voltageDeadline[i] = tm + this.data.voltageDataInterval[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line require-await\r\n\tasync bridgeInput(ch: LocalChannel, bp: BridgePacket) {\r\n\r\n\t\tswitch (ch.class) {\r\n\t\t\tcase ChannelClass.TEMPERATURE_SENSOR:\r\n\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\tthis.data.temperatureDataInterval[ch.index] = this._handleDataIntervalPacket(bp, this.data.interruptRate);\r\n\t\t\t\t\t\tthis.data.temperatureDeadline[ch.index] = 0;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\tthis.data.temperatureChangeTrigger[ch.index] = bp.getNumber(0);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.SETTHERMOCOUPLETYPE: {\r\n\t\t\t\t\t\tconst t = bp.getNumber(0);\r\n\t\t\t\t\t\tthis.data.thermocoupleType[ch.index] = t;\r\n\t\t\t\t\t\tthis.data.maxTemperature[ch.index] = thermocouple_useful_range[t][1];\r\n\t\t\t\t\t\tthis.data.minTemperature[ch.index] = thermocouple_useful_range[t][0];\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t *\tMake sure out max and min range is actually measureable at the current ambient\r\n\t\t\t\t\t\t *\ttemperature. This is updated as the ambient tmeperature change in the data\r\n\t\t\t\t\t\t *  polling function.\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif (this.data.temperature[this.data.ambientTemperatureIndex] !== PUNK.DBL) {\r\n\t\t\t\t\t\t\tif (this.lookup_voltage(this.data.maxTemperature[ch.index] - this.data.temperature[this.data.ambientTemperatureIndex], t) > this.data.potentialMax) {\r\n\t\t\t\t\t\t\t\tthis.data.maxTemperature[ch.index] = RoundDouble((this.lookup_temperature(this.data.potentialMax, t) + this.data.temperature[this.data.ambientTemperatureIndex]) / 10, 0) * 10;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.lookup_voltage(this.data.minTemperature[ch.index] - this.data.temperature[this.data.ambientTemperatureIndex], t) < this.data.potentialMin) {\r\n\t\t\t\t\t\t\t\tthis.data.minTemperature[ch.index] = RoundDouble((this.lookup_temperature(this.data.potentialMin, t) + this.data.temperature[this.data.ambientTemperatureIndex]) / 10, 0) * 10;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\t\tswitch (this.devDef.uid) {\r\n\t\t\t\t\t\t\tcase DeviceUID._1048_1_2:\r\n\t\t\t\t\t\t\t\tif (ch.index !== this.data.ambientTemperatureIndex) {\r\n\t\t\t\t\t\t\t\t\tthis.data.thermocoupleType[ch.index] = PUNK.ENUM as unknown as ThermocoupleType;\r\n\t\t\t\t\t\t\t\t\tthis.data.maxTemperature[ch.index] = PUNK.DBL;\r\n\t\t\t\t\t\t\t\t\tthis.data.minTemperature[ch.index] = PUNK.DBL;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t\t}\r\n\t\t\tcase ChannelClass.VOLTAGE_INPUT:\r\n\t\t\t\tswitch (bp.vpkt) {\r\n\t\t\t\t\tcase BP.SETDATAINTERVAL:\r\n\t\t\t\t\t\tthis.data.voltageDataInterval[ch.index] = this._handleDataIntervalPacket(bp, this.data.interruptRate);\r\n\t\t\t\t\t\tthis.data.voltageDeadline[ch.index] = 0;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.SETCHANGETRIGGER:\r\n\t\t\t\t\t\tthis.data.voltageChangeTrigger[ch.index] = bp.getNumber(0);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase BP.OPENRESET:\r\n\t\t\t\t\tcase BP.CLOSERESET:\r\n\t\t\t\t\tcase BP.ENABLE:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected packet type\");\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED, \"Unexpected channel class\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst thermocouple_table_range = [\r\n\t[0, 0],\r\n\t[-210, 1200],\t// Type J\r\n\t[-270, 1372],\t// Type K\r\n\t[-270, 1000],\t// Type E\r\n\t[-270, 400]\t\t// Type T\r\n];\r\n\r\nconst thermocouple_useful_range = [\r\n\t[0, 0],\r\n\t[0, 750],\t\t// Type J\r\n\t[-200, 1250],\t// Type K\r\n\t[-200, 900],\t// Type E\r\n\t[-200, 350]\t\t// Type T\r\n];\r\n\r\n// -270 to 1000 in degrees celcius increments\r\nconst thermocouple_table_e_type = [\r\n\t-9.835, -9.833, -9.831, -9.828, -9.825, -9.821, -9.817, -9.813, -9.808, -9.802,\r\n\t-9.797, -9.790, -9.784, -9.777, -9.770, -9.762, -9.754, -9.746, -9.737, -9.728,\r\n\t-9.718, -9.709, -9.698, -9.688, -9.677, -9.666, -9.654, -9.642, -9.630, -9.617,\r\n\t-9.604, -9.591, -9.577, -9.563, -9.548, -9.534, -9.519, -9.503, -9.487, -9.471,\r\n\t-9.455, -9.438, -9.421, -9.404, -9.386, -9.368, -9.350, -9.331, -9.313, -9.293,\r\n\t-9.274, -9.254, -9.234, -9.214, -9.193, -9.172, -9.151, -9.129, -9.107, -9.085,\r\n\t-9.063, -9.040, -9.017, -8.994, -8.971, -8.947, -8.923, -8.899, -8.874, -8.850,\r\n\t-8.825, -8.799, -8.774, -8.748, -8.722, -8.696, -8.669, -8.643, -8.616, -8.588,\r\n\t-8.561, -8.533, -8.505, -8.477, -8.449, -8.420, -8.391, -8.362, -8.333, -8.303,\r\n\t-8.273, -8.243, -8.213, -8.183, -8.152, -8.121, -8.090, -8.059, -8.027, -7.995,\r\n\t-7.963, -7.931, -7.899, -7.866, -7.833, -7.800, -7.767, -7.733, -7.700, -7.666,\r\n\t-7.632, -7.597, -7.563, -7.528, -7.493, -7.458, -7.423, -7.387, -7.351, -7.315,\r\n\t-7.279, -7.243, -7.206, -7.170, -7.133, -7.096, -7.058, -7.021, -6.983, -6.945,\r\n\t-6.907, -6.869, -6.831, -6.792, -6.753, -6.714, -6.675, -6.636, -6.596, -6.556,\r\n\t-6.516, -6.476, -6.436, -6.396, -6.355, -6.314, -6.273, -6.232, -6.191, -6.149,\r\n\t-6.107, -6.065, -6.023, -5.981, -5.939, -5.896, -5.853, -5.810, -5.767, -5.724,\r\n\t-5.681, -5.637, -5.593, -5.549, -5.505, -5.461, -5.417, -5.372, -5.327, -5.282,\r\n\t-5.237, -5.192, -5.147, -5.101, -5.055, -5.009, -4.963, -4.917, -4.871, -4.824,\r\n\t-4.777, -4.731, -4.684, -4.636, -4.589, -4.542, -4.494, -4.446, -4.398, -4.350,\r\n\t-4.302, -4.254, -4.205, -4.156, -4.107, -4.058, -4.009, -3.960, -3.911, -3.861,\r\n\t-3.811, -3.761, -3.711, -3.661, -3.611, -3.561, -3.510, -3.459, -3.408, -3.357,\r\n\t-3.306, -3.255, -3.204, -3.152, -3.100, -3.048, -2.996, -2.944, -2.892, -2.840,\r\n\t-2.787, -2.735, -2.682, -2.629, -2.576, -2.523, -2.469, -2.416, -2.362, -2.309,\r\n\t-2.255, -2.201, -2.147, -2.093, -2.038, -1.984, -1.929, -1.874, -1.820, -1.765,\r\n\t-1.709, -1.654, -1.599, -1.543, -1.488, -1.432, -1.376, -1.320, -1.264, -1.208,\r\n\t-1.152, -1.095, -1.039, -0.982, -0.925, -0.868, -0.811, -0.754, -0.697, -0.639,\r\n\t-0.582, -0.524, -0.466, -0.408, -0.350, -0.292, -0.234, -0.176, -0.117, -0.059,\r\n\t0.000, 0.059, 0.118, 0.176, 0.235, 0.294, 0.354, 0.413, 0.472, 0.532,\r\n\t0.591, 0.651, 0.711, 0.770, 0.830, 0.890, 0.950, 1.010, 1.071, 1.131,\r\n\t1.192, 1.252, 1.313, 1.373, 1.434, 1.495, 1.556, 1.617, 1.678, 1.740,\r\n\t1.801, 1.862, 1.924, 1.986, 2.047, 2.109, 2.171, 2.233, 2.295, 2.357,\r\n\t2.420, 2.482, 2.545, 2.607, 2.670, 2.733, 2.795, 2.858, 2.921, 2.984,\r\n\t3.048, 3.111, 3.174, 3.238, 3.301, 3.365, 3.429, 3.492, 3.556, 3.620,\r\n\t3.685, 3.749, 3.813, 3.877, 3.942, 4.006, 4.071, 4.136, 4.200, 4.265,\r\n\t4.330, 4.395, 4.460, 4.526, 4.591, 4.656, 4.722, 4.788, 4.853, 4.919,\r\n\t4.985, 5.051, 5.117, 5.183, 5.249, 5.315, 5.382, 5.448, 5.514, 5.581,\r\n\t5.648, 5.714, 5.781, 5.848, 5.915, 5.982, 6.049, 6.117, 6.184, 6.251,\r\n\t6.319, 6.386, 6.454, 6.522, 6.590, 6.658, 6.725, 6.794, 6.862, 6.930,\r\n\t6.998, 7.066, 7.135, 7.203, 7.272, 7.341, 7.409, 7.478, 7.547, 7.616,\r\n\t7.685, 7.754, 7.823, 7.892, 7.962, 8.031, 8.101, 8.170, 8.240, 8.309,\r\n\t8.379, 8.449, 8.519, 8.589, 8.659, 8.729, 8.799, 8.869, 8.940, 9.010,\r\n\t9.081, 9.151, 9.222, 9.292, 9.363, 9.434, 9.505, 9.576, 9.647, 9.718,\r\n\t9.789, 9.860, 9.931, 10.003, 10.074, 10.145, 10.217, 10.288, 10.360, 10.432,\r\n\t10.503, 10.575, 10.647, 10.719, 10.791, 10.863, 10.935, 11.007, 11.080, 11.152,\r\n\t11.224, 11.297, 11.369, 11.442, 11.514, 11.587, 11.660, 11.733, 11.805, 11.878,\r\n\t11.951, 12.024, 12.097, 12.170, 12.243, 12.317, 12.390, 12.463, 12.537, 12.610,\r\n\t12.684, 12.757, 12.831, 12.904, 12.978, 13.052, 13.126, 13.199, 13.273, 13.347,\r\n\t13.421, 13.495, 13.569, 13.644, 13.718, 13.792, 13.866, 13.941, 14.015, 14.090,\r\n\t14.164, 14.239, 14.313, 14.388, 14.463, 14.537, 14.612, 14.687, 14.762, 14.837,\r\n\t14.912, 14.987, 15.062, 15.137, 15.212, 15.287, 15.362, 15.438, 15.513, 15.588,\r\n\t15.664, 15.739, 15.815, 15.890, 15.966, 16.041, 16.117, 16.193, 16.269, 16.344,\r\n\t16.420, 16.496, 16.572, 16.648, 16.724, 16.800, 16.876, 16.952, 17.028, 17.104,\r\n\t17.181, 17.257, 17.333, 17.409, 17.486, 17.562, 17.639, 17.715, 17.792, 17.868,\r\n\t17.945, 18.021, 18.098, 18.175, 18.252, 18.328, 18.405, 18.482, 18.559, 18.636,\r\n\t18.713, 18.790, 18.867, 18.944, 19.021, 19.098, 19.175, 19.252, 19.330, 19.407,\r\n\t19.484, 19.561, 19.639, 19.716, 19.794, 19.871, 19.948, 20.026, 20.103, 20.181,\r\n\t20.259, 20.336, 20.414, 20.492, 20.569, 20.647, 20.725, 20.803, 20.880, 20.958,\r\n\t21.036, 21.114, 21.192, 21.270, 21.348, 21.426, 21.504, 21.582, 21.660, 21.739,\r\n\t21.817, 21.895, 21.973, 22.051, 22.130, 22.208, 22.286, 22.365, 22.443, 22.522,\r\n\t22.600, 22.678, 22.757, 22.835, 22.914, 22.993, 23.071, 23.150, 23.228, 23.307,\r\n\t23.386, 23.464, 23.543, 23.622, 23.701, 23.780, 23.858, 23.937, 24.016, 24.095,\r\n\t24.174, 24.253, 24.332, 24.411, 24.490, 24.569, 24.648, 24.727, 24.806, 24.885,\r\n\t24.964, 25.044, 25.123, 25.202, 25.281, 25.360, 25.440, 25.519, 25.598, 25.678,\r\n\t25.757, 25.836, 25.916, 25.995, 26.075, 26.154, 26.233, 26.313, 26.392, 26.472,\r\n\t26.552, 26.631, 26.711, 26.790, 26.870, 26.950, 27.029, 27.109, 27.189, 27.268,\r\n\t27.348, 27.428, 27.507, 27.587, 27.667, 27.747, 27.827, 27.907, 27.986, 28.066,\r\n\t28.146, 28.226, 28.306, 28.386, 28.466, 28.546, 28.626, 28.706, 28.786, 28.866,\r\n\t28.946, 29.026, 29.106, 29.186, 29.266, 29.346, 29.427, 29.507, 29.587, 29.667,\r\n\t29.747, 29.827, 29.908, 29.988, 30.068, 30.148, 30.229, 30.309, 30.389, 30.470,\r\n\t30.550, 30.630, 30.711, 30.791, 30.871, 30.952, 31.032, 31.112, 31.193, 31.273,\r\n\t31.354, 31.434, 31.515, 31.595, 31.676, 31.756, 31.837, 31.917, 31.998, 32.078,\r\n\t32.159, 32.239, 32.320, 32.400, 32.481, 32.562, 32.642, 32.723, 32.803, 32.884,\r\n\t32.965, 33.045, 33.126, 33.207, 33.287, 33.368, 33.449, 33.529, 33.610, 33.691,\r\n\t33.772, 33.852, 33.933, 34.014, 34.095, 34.175, 34.256, 34.337, 34.418, 34.498,\r\n\t34.579, 34.660, 34.741, 34.822, 34.902, 34.983, 35.064, 35.145, 35.226, 35.307,\r\n\t35.387, 35.468, 35.549, 35.630, 35.711, 35.792, 35.873, 35.954, 36.034, 36.115,\r\n\t36.196, 36.277, 36.358, 36.439, 36.520, 36.601, 36.682, 36.763, 36.843, 36.924,\r\n\t37.005, 37.086, 37.167, 37.248, 37.329, 37.410, 37.491, 37.572, 37.653, 37.734,\r\n\t37.815, 37.896, 37.977, 38.058, 38.139, 38.220, 38.300, 38.381, 38.462, 38.543,\r\n\t38.624, 38.705, 38.786, 38.867, 38.948, 39.029, 39.110, 39.191, 39.272, 39.353,\r\n\t39.434, 39.515, 39.596, 39.677, 39.758, 39.839, 39.920, 40.001, 40.082, 40.163,\r\n\t40.243, 40.324, 40.405, 40.486, 40.567, 40.648, 40.729, 40.810, 40.891, 40.972,\r\n\t41.053, 41.134, 41.215, 41.296, 41.377, 41.457, 41.538, 41.619, 41.700, 41.781,\r\n\t41.862, 41.943, 42.024, 42.105, 42.185, 42.266, 42.347, 42.428, 42.509, 42.590,\r\n\t42.671, 42.751, 42.832, 42.913, 42.994, 43.075, 43.156, 43.236, 43.317, 43.398,\r\n\t43.479, 43.560, 43.640, 43.721, 43.802, 43.883, 43.963, 44.044, 44.125, 44.206,\r\n\t44.286, 44.367, 44.448, 44.529, 44.609, 44.690, 44.771, 44.851, 44.932, 45.013,\r\n\t45.093, 45.174, 45.255, 45.335, 45.416, 45.497, 45.577, 45.658, 45.738, 45.819,\r\n\t45.900, 45.980, 46.061, 46.141, 46.222, 46.302, 46.383, 46.463, 46.544, 46.624,\r\n\t46.705, 46.785, 46.866, 46.946, 47.027, 47.107, 47.188, 47.268, 47.349, 47.429,\r\n\t47.509, 47.590, 47.670, 47.751, 47.831, 47.911, 47.992, 48.072, 48.152, 48.233,\r\n\t48.313, 48.393, 48.474, 48.554, 48.634, 48.715, 48.795, 48.875, 48.955, 49.035,\r\n\t49.116, 49.196, 49.276, 49.356, 49.436, 49.517, 49.597, 49.677, 49.757, 49.837,\r\n\t49.917, 49.997, 50.077, 50.157, 50.238, 50.318, 50.398, 50.478, 50.558, 50.638,\r\n\t50.718, 50.798, 50.878, 50.958, 51.038, 51.118, 51.197, 51.277, 51.357, 51.437,\r\n\t51.517, 51.597, 51.677, 51.757, 51.837, 51.916, 51.996, 52.076, 52.156, 52.236,\r\n\t52.315, 52.395, 52.475, 52.555, 52.634, 52.714, 52.794, 52.873, 52.953, 53.033,\r\n\t53.112, 53.192, 53.272, 53.351, 53.431, 53.510, 53.590, 53.670, 53.749, 53.829,\r\n\t53.908, 53.988, 54.067, 54.147, 54.226, 54.306, 54.385, 54.465, 54.544, 54.624,\r\n\t54.703, 54.782, 54.862, 54.941, 55.021, 55.100, 55.179, 55.259, 55.338, 55.417,\r\n\t55.497, 55.576, 55.655, 55.734, 55.814, 55.893, 55.972, 56.051, 56.131, 56.210,\r\n\t56.289, 56.368, 56.447, 56.526, 56.606, 56.685, 56.764, 56.843, 56.922, 57.001,\r\n\t57.080, 57.159, 57.238, 57.317, 57.396, 57.475, 57.554, 57.633, 57.712, 57.791,\r\n\t57.870, 57.949, 58.028, 58.107, 58.186, 58.265, 58.343, 58.422, 58.501, 58.580,\r\n\t58.659, 58.738, 58.816, 58.895, 58.974, 59.053, 59.131, 59.210, 59.289, 59.367,\r\n\t59.446, 59.525, 59.604, 59.682, 59.761, 59.839, 59.918, 59.997, 60.075, 60.154,\r\n\t60.232, 60.311, 60.390, 60.468, 60.547, 60.625, 60.704, 60.782, 60.860, 60.939,\r\n\t61.017, 61.096, 61.174, 61.253, 61.331, 61.409, 61.488, 61.566, 61.644, 61.723,\r\n\t61.801, 61.879, 61.958, 62.036, 62.114, 62.192, 62.271, 62.349, 62.427, 62.505,\r\n\t62.583, 62.662, 62.740, 62.818, 62.896, 62.974, 63.052, 63.130, 63.208, 63.286,\r\n\t63.364, 63.442, 63.520, 63.598, 63.676, 63.754, 63.832, 63.910, 63.988, 64.066,\r\n\t64.144, 64.222, 64.300, 64.377, 64.455, 64.533, 64.611, 64.689, 64.766, 64.844,\r\n\t64.922, 65.000, 65.077, 65.155, 65.233, 65.310, 65.388, 65.465, 65.543, 65.621,\r\n\t65.698, 65.776, 65.853, 65.931, 66.008, 66.086, 66.163, 66.241, 66.318, 66.396,\r\n\t66.473, 66.550, 66.628, 66.705, 66.782, 66.860, 66.937, 67.014, 67.092, 67.169,\r\n\t67.246, 67.323, 67.400, 67.478, 67.555, 67.632, 67.709, 67.786, 67.863, 67.940,\r\n\t68.017, 68.094, 68.171, 68.248, 68.325, 68.402, 68.479, 68.556, 68.633, 68.710,\r\n\t68.787, 68.863, 68.940, 69.017, 69.094, 69.171, 69.247, 69.324, 69.401, 69.477,\r\n\t69.554, 69.631, 69.707, 69.784, 69.860, 69.937, 70.013, 70.090, 70.166, 70.243,\r\n\t70.319, 70.396, 70.472, 70.548, 70.625, 70.701, 70.777, 70.854, 70.930, 71.006,\r\n\t71.082, 71.159, 71.235, 71.311, 71.387, 71.463, 71.539, 71.615, 71.692, 71.768,\r\n\t71.844, 71.920, 71.996, 72.072, 72.147, 72.223, 72.299, 72.375, 72.451, 72.527,\r\n\t72.603, 72.678, 72.754, 72.830, 72.906, 72.981, 73.057, 73.133, 73.208, 73.284,\r\n\t73.360, 73.435, 73.511, 73.586, 73.662, 73.738, 73.813, 73.889, 73.964, 74.040,\r\n\t74.115, 74.190, 74.266, 74.341, 74.417, 74.492, 74.567, 74.643, 74.718, 74.793,\r\n\t74.869, 74.944, 75.019, 75.095, 75.170, 75.245, 75.320, 75.395, 75.471, 75.546,\r\n\t75.621, 75.696, 75.771, 75.847, 75.922, 75.997, 76.072, 76.147, 76.223, 76.298,\r\n\t76.373\r\n];\r\n\r\n// -270 to 400 in degrees celcius increments\r\nconst thermocouple_table_t_type = [\r\n\t-6.258, -6.256, -6.255, -6.253, -6.251, -6.248, -6.245, -6.242, -6.239, -6.236,\r\n\t-6.232, -6.228, -6.223, -6.219, -6.214, -6.209, -6.204, -6.198, -6.193, -6.187,\r\n\t-6.180, -6.174, -6.167, -6.160, -6.153, -6.146, -6.138, -6.130, -6.122, -6.114,\r\n\t-6.105, -6.096, -6.087, -6.078, -6.068, -6.059, -6.049, -6.038, -6.028, -6.017,\r\n\t-6.007, -5.996, -5.985, -5.973, -5.962, -5.950, -5.938, -5.926, -5.914, -5.901,\r\n\t-5.888, -5.876, -5.863, -5.850, -5.836, -5.823, -5.809, -5.795, -5.782, -5.767,\r\n\t-5.753, -5.739, -5.724, -5.710, -5.695, -5.680, -5.665, -5.650, -5.634, -5.619,\r\n\t-5.603, -5.587, -5.571, -5.555, -5.539, -5.523, -5.506, -5.489, -5.473, -5.456,\r\n\t-5.439, -5.421, -5.404, -5.387, -5.369, -5.351, -5.334, -5.316, -5.297, -5.279,\r\n\t-5.261, -5.242, -5.224, -5.205, -5.186, -5.167, -5.148, -5.128, -5.109, -5.089,\r\n\t-5.070, -5.050, -5.030, -5.010, -4.989, -4.969, -4.949, -4.928, -4.907, -4.886,\r\n\t-4.865, -4.844, -4.823, -4.802, -4.780, -4.759, -4.737, -4.715, -4.693, -4.671,\r\n\t-4.648, -4.626, -4.604, -4.581, -4.558, -4.535, -4.512, -4.489, -4.466, -4.443,\r\n\t-4.419, -4.395, -4.372, -4.348, -4.324, -4.300, -4.275, -4.251, -4.226, -4.202,\r\n\t-4.177, -4.152, -4.127, -4.102, -4.077, -4.052, -4.026, -4.000, -3.975, -3.949,\r\n\t-3.923, -3.897, -3.871, -3.844, -3.818, -3.791, -3.765, -3.738, -3.711, -3.684,\r\n\t-3.657, -3.629, -3.602, -3.574, -3.547, -3.519, -3.491, -3.463, -3.435, -3.407,\r\n\t-3.379, -3.350, -3.322, -3.293, -3.264, -3.235, -3.206, -3.177, -3.148, -3.118,\r\n\t-3.089, -3.059, -3.030, -3.000, -2.970, -2.940, -2.910, -2.879, -2.849, -2.818,\r\n\t-2.788, -2.757, -2.726, -2.695, -2.664, -2.633, -2.602, -2.571, -2.539, -2.507,\r\n\t-2.476, -2.444, -2.412, -2.380, -2.348, -2.316, -2.283, -2.251, -2.218, -2.186,\r\n\t-2.153, -2.120, -2.087, -2.054, -2.021, -1.987, -1.954, -1.920, -1.887, -1.853,\r\n\t-1.819, -1.785, -1.751, -1.717, -1.683, -1.648, -1.614, -1.579, -1.545, -1.510,\r\n\t-1.475, -1.440, -1.405, -1.370, -1.335, -1.299, -1.264, -1.228, -1.192, -1.157,\r\n\t-1.121, -1.085, -1.049, -1.013, -0.976, -0.940, -0.904, -0.867, -0.830, -0.794,\r\n\t-0.757, -0.720, -0.683, -0.646, -0.608, -0.571, -0.534, -0.496, -0.459, -0.421,\r\n\t-0.383, -0.345, -0.307, -0.269, -0.231, -0.193, -0.154, -0.116, -0.077, -0.039,\r\n\t0.000, 0.039, 0.078, 0.117, 0.156, 0.195, 0.234, 0.273, 0.312, 0.352,\r\n\t0.391, 0.431, 0.470, 0.510, 0.549, 0.589, 0.629, 0.669, 0.709, 0.749,\r\n\t0.790, 0.830, 0.870, 0.911, 0.951, 0.992, 1.033, 1.074, 1.114, 1.155,\r\n\t1.196, 1.238, 1.279, 1.320, 1.362, 1.403, 1.445, 1.486, 1.528, 1.570,\r\n\t1.612, 1.654, 1.696, 1.738, 1.780, 1.823, 1.865, 1.908, 1.950, 1.993,\r\n\t2.036, 2.079, 2.122, 2.165, 2.208, 2.251, 2.294, 2.338, 2.381, 2.425,\r\n\t2.468, 2.512, 2.556, 2.600, 2.643, 2.687, 2.732, 2.776, 2.820, 2.864,\r\n\t2.909, 2.953, 2.998, 3.043, 3.087, 3.132, 3.177, 3.222, 3.267, 3.312,\r\n\t3.358, 3.403, 3.448, 3.494, 3.539, 3.585, 3.631, 3.677, 3.722, 3.768,\r\n\t3.814, 3.860, 3.907, 3.953, 3.999, 4.046, 4.092, 4.138, 4.185, 4.232,\r\n\t4.279, 4.325, 4.372, 4.419, 4.466, 4.513, 4.561, 4.608, 4.655, 4.702,\r\n\t4.750, 4.798, 4.845, 4.893, 4.941, 4.988, 5.036, 5.084, 5.132, 5.180,\r\n\t5.228, 5.277, 5.325, 5.373, 5.422, 5.470, 5.519, 5.567, 5.616, 5.665,\r\n\t5.714, 5.763, 5.812, 5.861, 5.910, 5.959, 6.008, 6.057, 6.107, 6.156,\r\n\t6.206, 6.255, 6.305, 6.355, 6.404, 6.454, 6.504, 6.554, 6.604, 6.654,\r\n\t6.704, 6.754, 6.805, 6.855, 6.905, 6.956, 7.006, 7.057, 7.107, 7.158,\r\n\t7.209, 7.260, 7.310, 7.361, 7.412, 7.463, 7.515, 7.566, 7.617, 7.668,\r\n\t7.720, 7.771, 7.823, 7.874, 7.926, 7.977, 8.029, 8.081, 8.133, 8.185,\r\n\t8.237, 8.289, 8.341, 8.393, 8.445, 8.497, 8.550, 8.602, 8.654, 8.707,\r\n\t8.759, 8.812, 8.865, 8.917, 8.970, 9.023, 9.076, 9.129, 9.182, 9.235,\r\n\t9.288, 9.341, 9.395, 9.448, 9.501, 9.555, 9.608, 9.662, 9.715, 9.769,\r\n\t9.822, 9.876, 9.930, 9.984, 10.038, 10.092, 10.146, 10.200, 10.254, 10.308,\r\n\t10.362, 10.417, 10.471, 10.525, 10.580, 10.634, 10.689, 10.743, 10.798, 10.853,\r\n\t10.907, 10.962, 11.017, 11.072, 11.127, 11.182, 11.237, 11.292, 11.347, 11.403,\r\n\t11.458, 11.513, 11.569, 11.624, 11.680, 11.735, 11.791, 11.846, 11.902, 11.958,\r\n\t12.013, 12.069, 12.125, 12.181, 12.237, 12.293, 12.349, 12.405, 12.461, 12.518,\r\n\t12.574, 12.630, 12.687, 12.743, 12.799, 12.856, 12.912, 12.969, 13.026, 13.082,\r\n\t13.139, 13.196, 13.253, 13.310, 13.366, 13.423, 13.480, 13.537, 13.595, 13.652,\r\n\t13.709, 13.766, 13.823, 13.881, 13.938, 13.995, 14.053, 14.110, 14.168, 14.226,\r\n\t14.283, 14.341, 14.399, 14.456, 14.514, 14.572, 14.630, 14.688, 14.746, 14.804,\r\n\t14.862, 14.920, 14.978, 15.036, 15.095, 15.153, 15.211, 15.270, 15.328, 15.386,\r\n\t15.445, 15.503, 15.562, 15.621, 15.679, 15.738, 15.797, 15.856, 15.914, 15.973,\r\n\t16.032, 16.091, 16.150, 16.209, 16.268, 16.327, 16.387, 16.446, 16.505, 16.564,\r\n\t16.624, 16.683, 16.742, 16.802, 16.861, 16.921, 16.980, 17.040, 17.100, 17.159,\r\n\t17.219, 17.279, 17.339, 17.399, 17.458, 17.518, 17.578, 17.638, 17.698, 17.759,\r\n\t17.819, 17.879, 17.939, 17.999, 18.060, 18.120, 18.180, 18.241, 18.301, 18.362,\r\n\t18.422, 18.483, 18.543, 18.604, 18.665, 18.725, 18.786, 18.847, 18.908, 18.969,\r\n\t19.030, 19.091, 19.152, 19.213, 19.274, 19.335, 19.396, 19.457, 19.518, 19.579,\r\n\t19.641, 19.702, 19.763, 19.825, 19.886, 19.947, 20.009, 20.070, 20.132, 20.193,\r\n\t20.255, 20.317, 20.378, 20.440, 20.502, 20.563, 20.625, 20.687, 20.748, 20.810,\r\n\t20.872\r\n];\r\n\r\n// -210 to 1200 in degrees celcius increments\r\nconst thermocouple_table_j_type = [\r\n\t-8.095, -8.076, -8.057, -8.037, -8.017, -7.996, -7.976, -7.955, -7.934, -7.912,\r\n\t-7.890, -7.868, -7.846, -7.824, -7.801, -7.778, -7.755, -7.731, -7.707, -7.683,\r\n\t-7.659, -7.634, -7.610, -7.585, -7.559, -7.534, -7.508, -7.482, -7.456, -7.429,\r\n\t-7.403, -7.376, -7.348, -7.321, -7.293, -7.265, -7.237, -7.209, -7.181, -7.152,\r\n\t-7.123, -7.094, -7.064, -7.035, -7.005, -6.975, -6.944, -6.914, -6.883, -6.853,\r\n\t-6.821, -6.790, -6.759, -6.727, -6.695, -6.663, -6.631, -6.598, -6.566, -6.533,\r\n\t-6.500, -6.467, -6.433, -6.400, -6.366, -6.332, -6.298, -6.263, -6.229, -6.194,\r\n\t-6.159, -6.124, -6.089, -6.054, -6.018, -5.982, -5.946, -5.910, -5.874, -5.838,\r\n\t-5.801, -5.764, -5.727, -5.690, -5.653, -5.616, -5.578, -5.541, -5.503, -5.465,\r\n\t-5.426, -5.388, -5.350, -5.311, -5.272, -5.233, -5.194, -5.155, -5.116, -5.076,\r\n\t-5.037, -4.997, -4.957, -4.917, -4.877, -4.836, -4.796, -4.755, -4.714, -4.674,\r\n\t-4.633, -4.591, -4.550, -4.509, -4.467, -4.425, -4.384, -4.342, -4.300, -4.257,\r\n\t-4.215, -4.173, -4.130, -4.088, -4.045, -4.002, -3.959, -3.916, -3.872, -3.829,\r\n\t-3.786, -3.742, -3.698, -3.654, -3.610, -3.566, -3.522, -3.478, -3.434, -3.389,\r\n\t-3.344, -3.300, -3.255, -3.210, -3.165, -3.120, -3.075, -3.029, -2.984, -2.938,\r\n\t-2.893, -2.847, -2.801, -2.755, -2.709, -2.663, -2.617, -2.571, -2.524, -2.478,\r\n\t-2.431, -2.385, -2.338, -2.291, -2.244, -2.197, -2.150, -2.103, -2.055, -2.008,\r\n\t-1.961, -1.913, -1.865, -1.818, -1.770, -1.722, -1.674, -1.626, -1.578, -1.530,\r\n\t-1.482, -1.433, -1.385, -1.336, -1.288, -1.239, -1.190, -1.142, -1.093, -1.044,\r\n\t-0.995, -0.946, -0.896, -0.847, -0.798, -0.749, -0.699, -0.650, -0.600, -0.550,\r\n\t-0.501, -0.451, -0.401, -0.351, -0.301, -0.251, -0.201, -0.151, -0.101, -0.050,\r\n\t0.000, 0.050, 0.101, 0.151, 0.202, 0.253, 0.303, 0.354, 0.405, 0.456,\r\n\t0.507, 0.558, 0.609, 0.660, 0.711, 0.762, 0.814, 0.865, 0.916, 0.968,\r\n\t1.019, 1.071, 1.122, 1.174, 1.226, 1.277, 1.329, 1.381, 1.433, 1.485,\r\n\t1.537, 1.589, 1.641, 1.693, 1.745, 1.797, 1.849, 1.902, 1.954, 2.006,\r\n\t2.059, 2.111, 2.164, 2.216, 2.269, 2.322, 2.374, 2.427, 2.480, 2.532,\r\n\t2.585, 2.638, 2.691, 2.744, 2.797, 2.850, 2.903, 2.956, 3.009, 3.062,\r\n\t3.116, 3.169, 3.222, 3.275, 3.329, 3.382, 3.436, 3.489, 3.543, 3.596,\r\n\t3.650, 3.703, 3.757, 3.810, 3.864, 3.918, 3.971, 4.025, 4.079, 4.133,\r\n\t4.187, 4.240, 4.294, 4.348, 4.402, 4.456, 4.510, 4.564, 4.618, 4.672,\r\n\t4.726, 4.781, 4.835, 4.889, 4.943, 4.997, 5.052, 5.106, 5.160, 5.215,\r\n\t5.269, 5.323, 5.378, 5.432, 5.487, 5.541, 5.595, 5.650, 5.705, 5.759,\r\n\t5.814, 5.868, 5.923, 5.977, 6.032, 6.087, 6.141, 6.196, 6.251, 6.306,\r\n\t6.360, 6.415, 6.470, 6.525, 6.579, 6.634, 6.689, 6.744, 6.799, 6.854,\r\n\t6.909, 6.964, 7.019, 7.074, 7.129, 7.184, 7.239, 7.294, 7.349, 7.404,\r\n\t7.459, 7.514, 7.569, 7.624, 7.679, 7.734, 7.789, 7.844, 7.900, 7.955,\r\n\t8.010, 8.065, 8.120, 8.175, 8.231, 8.286, 8.341, 8.396, 8.452, 8.507,\r\n\t8.562, 8.618, 8.673, 8.728, 8.783, 8.839, 8.894, 8.949, 9.005, 9.060,\r\n\t9.115, 9.171, 9.226, 9.282, 9.337, 9.392, 9.448, 9.503, 9.559, 9.614,\r\n\t9.669, 9.725, 9.780, 9.836, 9.891, 9.947, 10.002, 10.057, 10.113, 10.168,\r\n\t10.224, 10.279, 10.335, 10.390, 10.446, 10.501, 10.557, 10.612, 10.668, 10.723,\r\n\t10.779, 10.834, 10.890, 10.945, 11.001, 11.056, 11.112, 11.167, 11.223, 11.278,\r\n\t11.334, 11.389, 11.445, 11.501, 11.556, 11.612, 11.667, 11.723, 11.778, 11.834,\r\n\t11.889, 11.945, 12.000, 12.056, 12.111, 12.167, 12.222, 12.278, 12.334, 12.389,\r\n\t12.445, 12.500, 12.556, 12.611, 12.667, 12.722, 12.778, 12.833, 12.889, 12.944,\r\n\t13.000, 13.056, 13.111, 13.167, 13.222, 13.278, 13.333, 13.389, 13.444, 13.500,\r\n\t13.555, 13.611, 13.666, 13.722, 13.777, 13.833, 13.888, 13.944, 13.999, 14.055,\r\n\t14.110, 14.166, 14.221, 14.277, 14.332, 14.388, 14.443, 14.499, 14.554, 14.609,\r\n\t14.665, 14.720, 14.776, 14.831, 14.887, 14.942, 14.998, 15.053, 15.109, 15.164,\r\n\t15.219, 15.275, 15.330, 15.386, 15.441, 15.496, 15.552, 15.607, 15.663, 15.718,\r\n\t15.773, 15.829, 15.884, 15.940, 15.995, 16.050, 16.106, 16.161, 16.216, 16.272,\r\n\t16.327, 16.383, 16.438, 16.493, 16.549, 16.604, 16.659, 16.715, 16.770, 16.825,\r\n\t16.881, 16.936, 16.991, 17.046, 17.102, 17.157, 17.212, 17.268, 17.323, 17.378,\r\n\t17.434, 17.489, 17.544, 17.599, 17.655, 17.710, 17.765, 17.820, 17.876, 17.931,\r\n\t17.986, 18.041, 18.097, 18.152, 18.207, 18.262, 18.318, 18.373, 18.428, 18.483,\r\n\t18.538, 18.594, 18.649, 18.704, 18.759, 18.814, 18.870, 18.925, 18.980, 19.035,\r\n\t19.090, 19.146, 19.201, 19.256, 19.311, 19.366, 19.422, 19.477, 19.532, 19.587,\r\n\t19.642, 19.697, 19.753, 19.808, 19.863, 19.918, 19.973, 20.028, 20.083, 20.139,\r\n\t20.194, 20.249, 20.304, 20.359, 20.414, 20.469, 20.525, 20.580, 20.635, 20.690,\r\n\t20.745, 20.800, 20.855, 20.911, 20.966, 21.021, 21.076, 21.131, 21.186, 21.241,\r\n\t21.297, 21.352, 21.407, 21.462, 21.517, 21.572, 21.627, 21.683, 21.738, 21.793,\r\n\t21.848, 21.903, 21.958, 22.014, 22.069, 22.124, 22.179, 22.234, 22.289, 22.345,\r\n\t22.400, 22.455, 22.510, 22.565, 22.620, 22.676, 22.731, 22.786, 22.841, 22.896,\r\n\t22.952, 23.007, 23.062, 23.117, 23.172, 23.228, 23.283, 23.338, 23.393, 23.449,\r\n\t23.504, 23.559, 23.614, 23.670, 23.725, 23.780, 23.835, 23.891, 23.946, 24.001,\r\n\t24.057, 24.112, 24.167, 24.223, 24.278, 24.333, 24.389, 24.444, 24.499, 24.555,\r\n\t24.610, 24.665, 24.721, 24.776, 24.832, 24.887, 24.943, 24.998, 25.053, 25.109,\r\n\t25.164, 25.220, 25.275, 25.331, 25.386, 25.442, 25.497, 25.553, 25.608, 25.664,\r\n\t25.720, 25.775, 25.831, 25.886, 25.942, 25.998, 26.053, 26.109, 26.165, 26.220,\r\n\t26.276, 26.332, 26.387, 26.443, 26.499, 26.555, 26.610, 26.666, 26.722, 26.778,\r\n\t26.834, 26.889, 26.945, 27.001, 27.057, 27.113, 27.169, 27.225, 27.281, 27.337,\r\n\t27.393, 27.449, 27.505, 27.561, 27.617, 27.673, 27.729, 27.785, 27.841, 27.897,\r\n\t27.953, 28.010, 28.066, 28.122, 28.178, 28.234, 28.291, 28.347, 28.403, 28.460,\r\n\t28.516, 28.572, 28.629, 28.685, 28.741, 28.798, 28.854, 28.911, 28.967, 29.024,\r\n\t29.080, 29.137, 29.194, 29.250, 29.307, 29.363, 29.420, 29.477, 29.534, 29.590,\r\n\t29.647, 29.704, 29.761, 29.818, 29.874, 29.931, 29.988, 30.045, 30.102, 30.159,\r\n\t30.216, 30.273, 30.330, 30.387, 30.444, 30.502, 30.559, 30.616, 30.673, 30.730,\r\n\t30.788, 30.845, 30.902, 30.960, 31.017, 31.074, 31.132, 31.189, 31.247, 31.304,\r\n\t31.362, 31.419, 31.477, 31.535, 31.592, 31.650, 31.708, 31.766, 31.823, 31.881,\r\n\t31.939, 31.997, 32.055, 32.113, 32.171, 32.229, 32.287, 32.345, 32.403, 32.461,\r\n\t32.519, 32.577, 32.636, 32.694, 32.752, 32.810, 32.869, 32.927, 32.985, 33.044,\r\n\t33.102, 33.161, 33.219, 33.278, 33.337, 33.395, 33.454, 33.513, 33.571, 33.630,\r\n\t33.689, 33.748, 33.807, 33.866, 33.925, 33.984, 34.043, 34.102, 34.161, 34.220,\r\n\t34.279, 34.338, 34.397, 34.457, 34.516, 34.575, 34.635, 34.694, 34.754, 34.813,\r\n\t34.873, 34.932, 34.992, 35.051, 35.111, 35.171, 35.230, 35.290, 35.350, 35.410,\r\n\t35.470, 35.530, 35.590, 35.650, 35.710, 35.770, 35.830, 35.890, 35.950, 36.010,\r\n\t36.071, 36.131, 36.191, 36.252, 36.312, 36.373, 36.433, 36.494, 36.554, 36.615,\r\n\t36.675, 36.736, 36.797, 36.858, 36.918, 36.979, 37.040, 37.101, 37.162, 37.223,\r\n\t37.284, 37.345, 37.406, 37.467, 37.528, 37.590, 37.651, 37.712, 37.773, 37.835,\r\n\t37.896, 37.958, 38.019, 38.081, 38.142, 38.204, 38.265, 38.327, 38.389, 38.450,\r\n\t38.512, 38.574, 38.636, 38.698, 38.760, 38.822, 38.884, 38.946, 39.008, 39.070,\r\n\t39.132, 39.194, 39.256, 39.318, 39.381, 39.443, 39.505, 39.568, 39.630, 39.693,\r\n\t39.755, 39.818, 39.880, 39.943, 40.005, 40.068, 40.131, 40.193, 40.256, 40.319,\r\n\t40.382, 40.445, 40.508, 40.570, 40.633, 40.696, 40.759, 40.822, 40.886, 40.949,\r\n\t41.012, 41.075, 41.138, 41.201, 41.265, 41.328, 41.391, 41.455, 41.518, 41.581,\r\n\t41.645, 41.708, 41.772, 41.835, 41.899, 41.962, 42.026, 42.090, 42.153, 42.217,\r\n\t42.281, 42.344, 42.408, 42.472, 42.536, 42.599, 42.663, 42.727, 42.791, 42.855,\r\n\t42.919, 42.983, 43.047, 43.111, 43.175, 43.239, 43.303, 43.367, 43.431, 43.495,\r\n\t43.559, 43.624, 43.688, 43.752, 43.817, 43.881, 43.945, 44.010, 44.074, 44.139,\r\n\t44.203, 44.267, 44.332, 44.396, 44.461, 44.525, 44.590, 44.655, 44.719, 44.784,\r\n\t44.848, 44.913, 44.977, 45.042, 45.107, 45.171, 45.236, 45.301, 45.365, 45.430,\r\n\t45.494, 45.559, 45.624, 45.688, 45.753, 45.818, 45.882, 45.947, 46.011, 46.076,\r\n\t46.141, 46.205, 46.270, 46.334, 46.399, 46.464, 46.528, 46.593, 46.657, 46.722,\r\n\t46.786, 46.851, 46.915, 46.980, 47.044, 47.109, 47.173, 47.238, 47.302, 47.367,\r\n\t47.431, 47.495, 47.560, 47.624, 47.688, 47.753, 47.817, 47.881, 47.946, 48.010,\r\n\t48.074, 48.138, 48.202, 48.267, 48.331, 48.395, 48.459, 48.523, 48.587, 48.651,\r\n\t48.715, 48.779, 48.843, 48.907, 48.971, 49.034, 49.098, 49.162, 49.226, 49.290,\r\n\t49.353, 49.417, 49.481, 49.544, 49.608, 49.672, 49.735, 49.799, 49.862, 49.926,\r\n\t49.989, 50.052, 50.116, 50.179, 50.243, 50.306, 50.369, 50.432, 50.495, 50.559,\r\n\t50.622, 50.685, 50.748, 50.811, 50.874, 50.937, 51.000, 51.063, 51.126, 51.188,\r\n\t51.251, 51.314, 51.377, 51.439, 51.502, 51.565, 51.627, 51.690, 51.752, 51.815,\r\n\t51.877, 51.940, 52.002, 52.064, 52.127, 52.189, 52.251, 52.314, 52.376, 52.438,\r\n\t52.500, 52.562, 52.624, 52.686, 52.748, 52.810, 52.872, 52.934, 52.996, 53.057,\r\n\t53.119, 53.181, 53.243, 53.304, 53.366, 53.427, 53.489, 53.550, 53.612, 53.673,\r\n\t53.735, 53.796, 53.857, 53.919, 53.980, 54.041, 54.102, 54.164, 54.225, 54.286,\r\n\t54.347, 54.408, 54.469, 54.530, 54.591, 54.652, 54.713, 54.773, 54.834, 54.895,\r\n\t54.956, 55.016, 55.077, 55.138, 55.198, 55.259, 55.319, 55.380, 55.440, 55.501,\r\n\t55.561, 55.622, 55.682, 55.742, 55.803, 55.863, 55.923, 55.983, 56.043, 56.104,\r\n\t56.164, 56.224, 56.284, 56.344, 56.404, 56.464, 56.524, 56.584, 56.643, 56.703,\r\n\t56.763, 56.823, 56.883, 56.942, 57.002, 57.062, 57.121, 57.181, 57.240, 57.300,\r\n\t57.360, 57.419, 57.479, 57.538, 57.597, 57.657, 57.716, 57.776, 57.835, 57.894,\r\n\t57.953, 58.013, 58.072, 58.131, 58.190, 58.249, 58.309, 58.368, 58.427, 58.486,\r\n\t58.545, 58.604, 58.663, 58.722, 58.781, 58.840, 58.899, 58.957, 59.016, 59.075,\r\n\t59.134, 59.193, 59.252, 59.310, 59.369, 59.428, 59.487, 59.545, 59.604, 59.663,\r\n\t59.721, 59.780, 59.838, 59.897, 59.956, 60.014, 60.073, 60.131, 60.190, 60.248,\r\n\t60.307, 60.365, 60.423, 60.482, 60.540, 60.599, 60.657, 60.715, 60.774, 60.832,\r\n\t60.890, 60.949, 61.007, 61.065, 61.123, 61.182, 61.240, 61.298, 61.356, 61.415,\r\n\t61.473, 61.531, 61.589, 61.647, 61.705, 61.763, 61.822, 61.880, 61.938, 61.996,\r\n\t62.054, 62.112, 62.170, 62.228, 62.286, 62.344, 62.402, 62.460, 62.518, 62.576,\r\n\t62.634, 62.692, 62.750, 62.808, 62.866, 62.924, 62.982, 63.040, 63.098, 63.156,\r\n\t63.214, 63.271, 63.329, 63.387, 63.445, 63.503, 63.561, 63.619, 63.677, 63.734,\r\n\t63.792, 63.850, 63.908, 63.966, 64.024, 64.081, 64.139, 64.197, 64.255, 64.313,\r\n\t64.370, 64.428, 64.486, 64.544, 64.602, 64.659, 64.717, 64.775, 64.833, 64.890,\r\n\t64.948, 65.006, 65.064, 65.121, 65.179, 65.237, 65.295, 65.352, 65.410, 65.468,\r\n\t65.525, 65.583, 65.641, 65.699, 65.756, 65.814, 65.872, 65.929, 65.987, 66.045,\r\n\t66.102, 66.160, 66.218, 66.275, 66.333, 66.391, 66.448, 66.506, 66.564, 66.621,\r\n\t66.679, 66.737, 66.794, 66.852, 66.910, 66.967, 67.025, 67.082, 67.140, 67.198,\r\n\t67.255, 67.313, 67.370, 67.428, 67.486, 67.543, 67.601, 67.658, 67.716, 67.773,\r\n\t67.831, 67.888, 67.946, 68.003, 68.061, 68.119, 68.176, 68.234, 68.291, 68.348,\r\n\t68.406, 68.463, 68.521, 68.578, 68.636, 68.693, 68.751, 68.808, 68.865, 68.923,\r\n\t68.980, 69.037, 69.095, 69.152, 69.209, 69.267, 69.324, 69.381, 69.439, 69.496,\r\n\t69.553\r\n];\r\n\r\n// -270 to 1372 in degrees celcius increments\r\nconst thermocouple_table_k_type = [\r\n\t-6.458, -6.457, -6.456, -6.455, -6.453, -6.452, -6.450, -6.448, -6.446, -6.444,\r\n\t-6.441, -6.438, -6.435, -6.432, -6.429, -6.425, -6.421, -6.417, -6.413, -6.408,\r\n\t-6.404, -6.399, -6.393, -6.388, -6.382, -6.377, -6.370, -6.364, -6.358, -6.351,\r\n\t-6.344, -6.337, -6.329, -6.322, -6.314, -6.306, -6.297, -6.289, -6.280, -6.271,\r\n\t-6.262, -6.252, -6.243, -6.233, -6.223, -6.213, -6.202, -6.192, -6.181, -6.170,\r\n\t-6.158, -6.147, -6.135, -6.123, -6.111, -6.099, -6.087, -6.074, -6.061, -6.048,\r\n\t-6.035, -6.021, -6.007, -5.994, -5.980, -5.965, -5.951, -5.936, -5.922, -5.907,\r\n\t-5.891, -5.876, -5.861, -5.845, -5.829, -5.813, -5.797, -5.780, -5.763, -5.747,\r\n\t-5.730, -5.713, -5.695, -5.678, -5.660, -5.642, -5.624, -5.606, -5.588, -5.569,\r\n\t-5.550, -5.531, -5.512, -5.493, -5.474, -5.454, -5.435, -5.415, -5.395, -5.374,\r\n\t-5.354, -5.333, -5.313, -5.292, -5.271, -5.250, -5.228, -5.207, -5.185, -5.163,\r\n\t-5.141, -5.119, -5.097, -5.074, -5.052, -5.029, -5.006, -4.983, -4.960, -4.936,\r\n\t-4.913, -4.889, -4.865, -4.841, -4.817, -4.793, -4.768, -4.744, -4.719, -4.694,\r\n\t-4.669, -4.644, -4.618, -4.593, -4.567, -4.542, -4.516, -4.490, -4.463, -4.437,\r\n\t-4.411, -4.384, -4.357, -4.330, -4.303, -4.276, -4.249, -4.221, -4.194, -4.166,\r\n\t-4.138, -4.110, -4.082, -4.054, -4.025, -3.997, -3.968, -3.939, -3.911, -3.882,\r\n\t-3.852, -3.823, -3.794, -3.764, -3.734, -3.705, -3.675, -3.645, -3.614, -3.584,\r\n\t-3.554, -3.523, -3.492, -3.462, -3.431, -3.400, -3.368, -3.337, -3.306, -3.274,\r\n\t-3.243, -3.211, -3.179, -3.147, -3.115, -3.083, -3.050, -3.018, -2.986, -2.953,\r\n\t-2.920, -2.887, -2.854, -2.821, -2.788, -2.755, -2.721, -2.688, -2.654, -2.620,\r\n\t-2.587, -2.553, -2.519, -2.485, -2.450, -2.416, -2.382, -2.347, -2.312, -2.278,\r\n\t-2.243, -2.208, -2.173, -2.138, -2.103, -2.067, -2.032, -1.996, -1.961, -1.925,\r\n\t-1.889, -1.854, -1.818, -1.782, -1.745, -1.709, -1.673, -1.637, -1.600, -1.564,\r\n\t-1.527, -1.490, -1.453, -1.417, -1.380, -1.343, -1.305, -1.268, -1.231, -1.194,\r\n\t-1.156, -1.119, -1.081, -1.043, -1.006, -0.968, -0.930, -0.892, -0.854, -0.816,\r\n\t-0.778, -0.739, -0.701, -0.663, -0.624, -0.586, -0.547, -0.508, -0.470, -0.431,\r\n\t-0.392, -0.353, -0.314, -0.275, -0.236, -0.197, -0.157, -0.118, -0.079, -0.039,\r\n\t0.000, 0.039, 0.079, 0.119, 0.158, 0.198, 0.238, 0.277, 0.317, 0.357,\r\n\t0.397, 0.437, 0.477, 0.517, 0.557, 0.597, 0.637, 0.677, 0.718, 0.758,\r\n\t0.798, 0.838, 0.879, 0.919, 0.960, 1.000, 1.041, 1.081, 1.122, 1.163,\r\n\t1.203, 1.244, 1.285, 1.326, 1.366, 1.407, 1.448, 1.489, 1.530, 1.571,\r\n\t1.612, 1.653, 1.694, 1.735, 1.776, 1.817, 1.858, 1.899, 1.941, 1.982,\r\n\t2.023, 2.064, 2.106, 2.147, 2.188, 2.230, 2.271, 2.312, 2.354, 2.395,\r\n\t2.436, 2.478, 2.519, 2.561, 2.602, 2.644, 2.685, 2.727, 2.768, 2.810,\r\n\t2.851, 2.893, 2.934, 2.976, 3.017, 3.059, 3.100, 3.142, 3.184, 3.225,\r\n\t3.267, 3.308, 3.350, 3.391, 3.433, 3.474, 3.516, 3.557, 3.599, 3.640,\r\n\t3.682, 3.723, 3.765, 3.806, 3.848, 3.889, 3.931, 3.972, 4.013, 4.055,\r\n\t4.096, 4.138, 4.179, 4.220, 4.262, 4.303, 4.344, 4.385, 4.427, 4.468,\r\n\t4.509, 4.550, 4.591, 4.633, 4.674, 4.715, 4.756, 4.797, 4.838, 4.879,\r\n\t4.920, 4.961, 5.002, 5.043, 5.084, 5.124, 5.165, 5.206, 5.247, 5.288,\r\n\t5.328, 5.369, 5.410, 5.450, 5.491, 5.532, 5.572, 5.613, 5.653, 5.694,\r\n\t5.735, 5.775, 5.815, 5.856, 5.896, 5.937, 5.977, 6.017, 6.058, 6.098,\r\n\t6.138, 6.179, 6.219, 6.259, 6.299, 6.339, 6.380, 6.420, 6.460, 6.500,\r\n\t6.540, 6.580, 6.620, 6.660, 6.701, 6.741, 6.781, 6.821, 6.861, 6.901,\r\n\t6.941, 6.981, 7.021, 7.060, 7.100, 7.140, 7.180, 7.220, 7.260, 7.300,\r\n\t7.340, 7.380, 7.420, 7.460, 7.500, 7.540, 7.579, 7.619, 7.659, 7.699,\r\n\t7.739, 7.779, 7.819, 7.859, 7.899, 7.939, 7.979, 8.019, 8.059, 8.099,\r\n\t8.138, 8.178, 8.218, 8.258, 8.298, 8.338, 8.378, 8.418, 8.458, 8.499,\r\n\t8.539, 8.579, 8.619, 8.659, 8.699, 8.739, 8.779, 8.819, 8.860, 8.900,\r\n\t8.940, 8.980, 9.020, 9.061, 9.101, 9.141, 9.181, 9.222, 9.262, 9.302,\r\n\t9.343, 9.383, 9.423, 9.464, 9.504, 9.545, 9.585, 9.626, 9.666, 9.707,\r\n\t9.747, 9.788, 9.828, 9.869, 9.909, 9.950, 9.991, 10.031, 10.072, 10.113,\r\n\t10.153, 10.194, 10.235, 10.276, 10.316, 10.357, 10.398, 10.439, 10.480, 10.520,\r\n\t10.561, 10.602, 10.643, 10.684, 10.725, 10.766, 10.807, 10.848, 10.889, 10.930,\r\n\t10.971, 11.012, 11.053, 11.094, 11.135, 11.176, 11.217, 11.259, 11.300, 11.341,\r\n\t11.382, 11.423, 11.465, 11.506, 11.547, 11.588, 11.630, 11.671, 11.712, 11.753,\r\n\t11.795, 11.836, 11.877, 11.919, 11.960, 12.001, 12.043, 12.084, 12.126, 12.167,\r\n\t12.209, 12.250, 12.291, 12.333, 12.374, 12.416, 12.457, 12.499, 12.540, 12.582,\r\n\t12.624, 12.665, 12.707, 12.748, 12.790, 12.831, 12.873, 12.915, 12.956, 12.998,\r\n\t13.040, 13.081, 13.123, 13.165, 13.206, 13.248, 13.290, 13.331, 13.373, 13.415,\r\n\t13.457, 13.498, 13.540, 13.582, 13.624, 13.665, 13.707, 13.749, 13.791, 13.833,\r\n\t13.874, 13.916, 13.958, 14.000, 14.042, 14.084, 14.126, 14.167, 14.209, 14.251,\r\n\t14.293, 14.335, 14.377, 14.419, 14.461, 14.503, 14.545, 14.587, 14.629, 14.671,\r\n\t14.713, 14.755, 14.797, 14.839, 14.881, 14.923, 14.965, 15.007, 15.049, 15.091,\r\n\t15.133, 15.175, 15.217, 15.259, 15.301, 15.343, 15.385, 15.427, 15.469, 15.511,\r\n\t15.554, 15.596, 15.638, 15.680, 15.722, 15.764, 15.806, 15.849, 15.891, 15.933,\r\n\t15.975, 16.017, 16.059, 16.102, 16.144, 16.186, 16.228, 16.270, 16.313, 16.355,\r\n\t16.397, 16.439, 16.482, 16.524, 16.566, 16.608, 16.651, 16.693, 16.735, 16.778,\r\n\t16.820, 16.862, 16.904, 16.947, 16.989, 17.031, 17.074, 17.116, 17.158, 17.201,\r\n\t17.243, 17.285, 17.328, 17.370, 17.413, 17.455, 17.497, 17.540, 17.582, 17.624,\r\n\t17.667, 17.709, 17.752, 17.794, 17.837, 17.879, 17.921, 17.964, 18.006, 18.049,\r\n\t18.091, 18.134, 18.176, 18.218, 18.261, 18.303, 18.346, 18.388, 18.431, 18.473,\r\n\t18.516, 18.558, 18.601, 18.643, 18.686, 18.728, 18.771, 18.813, 18.856, 18.898,\r\n\t18.941, 18.983, 19.026, 19.068, 19.111, 19.154, 19.196, 19.239, 19.281, 19.324,\r\n\t19.366, 19.409, 19.451, 19.494, 19.537, 19.579, 19.622, 19.664, 19.707, 19.750,\r\n\t19.792, 19.835, 19.877, 19.920, 19.962, 20.005, 20.048, 20.090, 20.133, 20.175,\r\n\t20.218, 20.261, 20.303, 20.346, 20.389, 20.431, 20.474, 20.516, 20.559, 20.602,\r\n\t20.644, 20.687, 20.730, 20.772, 20.815, 20.857, 20.900, 20.943, 20.985, 21.028,\r\n\t21.071, 21.113, 21.156, 21.199, 21.241, 21.284, 21.326, 21.369, 21.412, 21.454,\r\n\t21.497, 21.540, 21.582, 21.625, 21.668, 21.710, 21.753, 21.796, 21.838, 21.881,\r\n\t21.924, 21.966, 22.009, 22.052, 22.094, 22.137, 22.179, 22.222, 22.265, 22.307,\r\n\t22.350, 22.393, 22.435, 22.478, 22.521, 22.563, 22.606, 22.649, 22.691, 22.734,\r\n\t22.776, 22.819, 22.862, 22.904, 22.947, 22.990, 23.032, 23.075, 23.117, 23.160,\r\n\t23.203, 23.245, 23.288, 23.331, 23.373, 23.416, 23.458, 23.501, 23.544, 23.586,\r\n\t23.629, 23.671, 23.714, 23.757, 23.799, 23.842, 23.884, 23.927, 23.970, 24.012,\r\n\t24.055, 24.097, 24.140, 24.182, 24.225, 24.267, 24.310, 24.353, 24.395, 24.438,\r\n\t24.480, 24.523, 24.565, 24.608, 24.650, 24.693, 24.735, 24.778, 24.820, 24.863,\r\n\t24.905, 24.948, 24.990, 25.033, 25.075, 25.118, 25.160, 25.203, 25.245, 25.288,\r\n\t25.330, 25.373, 25.415, 25.458, 25.500, 25.543, 25.585, 25.627, 25.670, 25.712,\r\n\t25.755, 25.797, 25.840, 25.882, 25.924, 25.967, 26.009, 26.052, 26.094, 26.136,\r\n\t26.179, 26.221, 26.263, 26.306, 26.348, 26.390, 26.433, 26.475, 26.517, 26.560,\r\n\t26.602, 26.644, 26.687, 26.729, 26.771, 26.814, 26.856, 26.898, 26.940, 26.983,\r\n\t27.025, 27.067, 27.109, 27.152, 27.194, 27.236, 27.278, 27.320, 27.363, 27.405,\r\n\t27.447, 27.489, 27.531, 27.574, 27.616, 27.658, 27.700, 27.742, 27.784, 27.826,\r\n\t27.869, 27.911, 27.953, 27.995, 28.037, 28.079, 28.121, 28.163, 28.205, 28.247,\r\n\t28.289, 28.332, 28.374, 28.416, 28.458, 28.500, 28.542, 28.584, 28.626, 28.668,\r\n\t28.710, 28.752, 28.794, 28.835, 28.877, 28.919, 28.961, 29.003, 29.045, 29.087,\r\n\t29.129, 29.171, 29.213, 29.255, 29.297, 29.338, 29.380, 29.422, 29.464, 29.506,\r\n\t29.548, 29.589, 29.631, 29.673, 29.715, 29.757, 29.798, 29.840, 29.882, 29.924,\r\n\t29.965, 30.007, 30.049, 30.090, 30.132, 30.174, 30.216, 30.257, 30.299, 30.341,\r\n\t30.382, 30.424, 30.466, 30.507, 30.549, 30.590, 30.632, 30.674, 30.715, 30.757,\r\n\t30.798, 30.840, 30.881, 30.923, 30.964, 31.006, 31.047, 31.089, 31.130, 31.172,\r\n\t31.213, 31.255, 31.296, 31.338, 31.379, 31.421, 31.462, 31.504, 31.545, 31.586,\r\n\t31.628, 31.669, 31.710, 31.752, 31.793, 31.834, 31.876, 31.917, 31.958, 32.000,\r\n\t32.041, 32.082, 32.124, 32.165, 32.206, 32.247, 32.289, 32.330, 32.371, 32.412,\r\n\t32.453, 32.495, 32.536, 32.577, 32.618, 32.659, 32.700, 32.742, 32.783, 32.824,\r\n\t32.865, 32.906, 32.947, 32.988, 33.029, 33.070, 33.111, 33.152, 33.193, 33.234,\r\n\t33.275, 33.316, 33.357, 33.398, 33.439, 33.480, 33.521, 33.562, 33.603, 33.644,\r\n\t33.685, 33.726, 33.767, 33.808, 33.848, 33.889, 33.930, 33.971, 34.012, 34.053,\r\n\t34.093, 34.134, 34.175, 34.216, 34.257, 34.297, 34.338, 34.379, 34.420, 34.460,\r\n\t34.501, 34.542, 34.582, 34.623, 34.664, 34.704, 34.745, 34.786, 34.826, 34.867,\r\n\t34.908, 34.948, 34.989, 35.029, 35.070, 35.110, 35.151, 35.192, 35.232, 35.273,\r\n\t35.313, 35.354, 35.394, 35.435, 35.475, 35.516, 35.556, 35.596, 35.637, 35.677,\r\n\t35.718, 35.758, 35.798, 35.839, 35.879, 35.920, 35.960, 36.000, 36.041, 36.081,\r\n\t36.121, 36.162, 36.202, 36.242, 36.282, 36.323, 36.363, 36.403, 36.443, 36.484,\r\n\t36.524, 36.564, 36.604, 36.644, 36.685, 36.725, 36.765, 36.805, 36.845, 36.885,\r\n\t36.925, 36.965, 37.006, 37.046, 37.086, 37.126, 37.166, 37.206, 37.246, 37.286,\r\n\t37.326, 37.366, 37.406, 37.446, 37.486, 37.526, 37.566, 37.606, 37.646, 37.686,\r\n\t37.725, 37.765, 37.805, 37.845, 37.885, 37.925, 37.965, 38.005, 38.044, 38.084,\r\n\t38.124, 38.164, 38.204, 38.243, 38.283, 38.323, 38.363, 38.402, 38.442, 38.482,\r\n\t38.522, 38.561, 38.601, 38.641, 38.680, 38.720, 38.760, 38.799, 38.839, 38.878,\r\n\t38.918, 38.958, 38.997, 39.037, 39.076, 39.116, 39.155, 39.195, 39.235, 39.274,\r\n\t39.314, 39.353, 39.393, 39.432, 39.471, 39.511, 39.550, 39.590, 39.629, 39.669,\r\n\t39.708, 39.747, 39.787, 39.826, 39.866, 39.905, 39.944, 39.984, 40.023, 40.062,\r\n\t40.101, 40.141, 40.180, 40.219, 40.259, 40.298, 40.337, 40.376, 40.415, 40.455,\r\n\t40.494, 40.533, 40.572, 40.611, 40.651, 40.690, 40.729, 40.768, 40.807, 40.846,\r\n\t40.885, 40.924, 40.963, 41.002, 41.042, 41.081, 41.120, 41.159, 41.198, 41.237,\r\n\t41.276, 41.315, 41.354, 41.393, 41.431, 41.470, 41.509, 41.548, 41.587, 41.626,\r\n\t41.665, 41.704, 41.743, 41.781, 41.820, 41.859, 41.898, 41.937, 41.976, 42.014,\r\n\t42.053, 42.092, 42.131, 42.169, 42.208, 42.247, 42.286, 42.324, 42.363, 42.402,\r\n\t42.440, 42.479, 42.518, 42.556, 42.595, 42.633, 42.672, 42.711, 42.749, 42.788,\r\n\t42.826, 42.865, 42.903, 42.942, 42.980, 43.019, 43.057, 43.096, 43.134, 43.173,\r\n\t43.211, 43.250, 43.288, 43.327, 43.365, 43.403, 43.442, 43.480, 43.518, 43.557,\r\n\t43.595, 43.633, 43.672, 43.710, 43.748, 43.787, 43.825, 43.863, 43.901, 43.940,\r\n\t43.978, 44.016, 44.054, 44.092, 44.130, 44.169, 44.207, 44.245, 44.283, 44.321,\r\n\t44.359, 44.397, 44.435, 44.473, 44.512, 44.550, 44.588, 44.626, 44.664, 44.702,\r\n\t44.740, 44.778, 44.816, 44.853, 44.891, 44.929, 44.967, 45.005, 45.043, 45.081,\r\n\t45.119, 45.157, 45.194, 45.232, 45.270, 45.308, 45.346, 45.383, 45.421, 45.459,\r\n\t45.497, 45.534, 45.572, 45.610, 45.647, 45.685, 45.723, 45.760, 45.798, 45.836,\r\n\t45.873, 45.911, 45.948, 45.986, 46.024, 46.061, 46.099, 46.136, 46.174, 46.211,\r\n\t46.249, 46.286, 46.324, 46.361, 46.398, 46.436, 46.473, 46.511, 46.548, 46.585,\r\n\t46.623, 46.660, 46.697, 46.735, 46.772, 46.809, 46.847, 46.884, 46.921, 46.958,\r\n\t46.995, 47.033, 47.070, 47.107, 47.144, 47.181, 47.218, 47.256, 47.293, 47.330,\r\n\t47.367, 47.404, 47.441, 47.478, 47.515, 47.552, 47.589, 47.626, 47.663, 47.700,\r\n\t47.737, 47.774, 47.811, 47.848, 47.884, 47.921, 47.958, 47.995, 48.032, 48.069,\r\n\t48.105, 48.142, 48.179, 48.216, 48.252, 48.289, 48.326, 48.363, 48.399, 48.436,\r\n\t48.473, 48.509, 48.546, 48.582, 48.619, 48.656, 48.692, 48.729, 48.765, 48.802,\r\n\t48.838, 48.875, 48.911, 48.948, 48.984, 49.021, 49.057, 49.093, 49.130, 49.166,\r\n\t49.202, 49.239, 49.275, 49.311, 49.348, 49.384, 49.420, 49.456, 49.493, 49.529,\r\n\t49.565, 49.601, 49.637, 49.674, 49.710, 49.746, 49.782, 49.818, 49.854, 49.890,\r\n\t49.926, 49.962, 49.998, 50.034, 50.070, 50.106, 50.142, 50.178, 50.214, 50.250,\r\n\t50.286, 50.322, 50.358, 50.393, 50.429, 50.465, 50.501, 50.537, 50.572, 50.608,\r\n\t50.644, 50.680, 50.715, 50.751, 50.787, 50.822, 50.858, 50.894, 50.929, 50.965,\r\n\t51.000, 51.036, 51.071, 51.107, 51.142, 51.178, 51.213, 51.249, 51.284, 51.320,\r\n\t51.355, 51.391, 51.426, 51.461, 51.497, 51.532, 51.567, 51.603, 51.638, 51.673,\r\n\t51.708, 51.744, 51.779, 51.814, 51.849, 51.885, 51.920, 51.955, 51.990, 52.025,\r\n\t52.060, 52.095, 52.130, 52.165, 52.200, 52.235, 52.270, 52.305, 52.340, 52.375,\r\n\t52.410, 52.445, 52.480, 52.515, 52.550, 52.585, 52.620, 52.654, 52.689, 52.724,\r\n\t52.759, 52.794, 52.828, 52.863, 52.898, 52.932, 52.967, 53.002, 53.037, 53.071,\r\n\t53.106, 53.140, 53.175, 53.210, 53.244, 53.279, 53.313, 53.348, 53.382, 53.417,\r\n\t53.451, 53.486, 53.520, 53.555, 53.589, 53.623, 53.658, 53.692, 53.727, 53.761,\r\n\t53.795, 53.830, 53.864, 53.898, 53.932, 53.967, 54.001, 54.035, 54.069, 54.104,\r\n\t54.138, 54.172, 54.206, 54.240, 54.274, 54.308, 54.343, 54.377, 54.411, 54.445,\r\n\t54.479, 54.513, 54.547, 54.581, 54.615, 54.649, 54.683, 54.717, 54.751, 54.785,\r\n\t54.819, 54.852, 54.886\r\n];","import { DeviceChannelUID, DeviceUID } from \"../../Devices.gen\";\r\nimport { ErrorCode, ErrorEventCode } from \"../../Enumerations.gen\";\r\nimport { PhidgetError } from \"../../PhidgetError\";\r\nimport { PhidgetUSBRequestType } from '../USB';\r\nimport { LocalChannel } from '../LocalChannel';\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"../PhidgetUSBDevice\";\r\nimport { USBConnectionBase } from \"../USBConnection\";\r\nimport * as VintPacketType from '../VintPacketType';\r\nimport { BridgePacket, PUNK } from \"../../BridgePacket\";\r\nimport { BP } from \"../../BridgePackets.gen\";\r\nimport { RoundDouble } from \"../../Utils\";\r\n\r\ninterface DataBufferEntry {\r\n    acceleration: number[],\r\n    angularRate: number[],\r\n    magneticField: number[],\r\n    quaternion: number[],\r\n    timestamp: number,\r\n    temperature: number\r\n}\r\n\r\ninterface AccelerometerDeviceData {\r\n    // Public members\r\n    timestamp: number[],\r\n    acceleration: number[][],\r\n    accelerationChangeTrigger: number[],\r\n    // Private members\r\n    accelerationMax: number,\r\n    accelerationMin: number,\r\n    interruptRate: number,\r\n    accelDataInterval: number[],\r\n    accelDeadLine: number[],\r\n    dataBuffer: DataBufferEntry[],\r\n    callcnt: number,\r\n    accelerationLastTrigger: number[]\r\n}\r\n\r\nclass AccelerometerDevice extends PhidgetUSBDevice {\r\n    data: AccelerometerDeviceData;\r\n\r\n    constructor(conn: USBConnectionBase, data: PhidgetUSBDeviceData, usbDev: USBDevice) {\r\n        super(conn, data, usbDev);\r\n\r\n        // Ensure that we actually support this device\r\n        switch (this.devDef.uid) {\r\n            case DeviceUID._MOT0100_USB:\r\n                break;\r\n            default:\r\n                throw new PhidgetError(ErrorCode.UNSUPPORTED);\r\n        }\r\n\r\n        this.data = this.initData();\r\n    }\r\n\r\n    // Define getters based on devices.h Attr structs in C library\r\n    get numAccelAxes() { return this.devDef.cn[0]; }\r\n\r\n    initData() {\r\n        const data: AccelerometerDeviceData = {\r\n            // Public members\r\n            timestamp: [0],\r\n            acceleration: [new Array(this.numAccelAxes).fill(PUNK.DBL)],\r\n            accelerationChangeTrigger: new Array(this.numAccelAxes).fill(PUNK.DBL),\r\n            // Private members\r\n            accelerationMax: 0,\r\n            accelerationMin: 0,\r\n            interruptRate: 0,\r\n            accelDataInterval: [0, 0, 0],\r\n            accelDeadLine: [0, 0, 0],\r\n            dataBuffer: [],\r\n            callcnt: 0,\r\n            accelerationLastTrigger: new Array(this.numAccelAxes).fill(PUNK.DBL)\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    // eslint-disable-next-line require-await\r\n    async initAfterOpen() {\r\n        this.data = this.initData();\r\n\r\n        this.data.accelerationMax = PUNK.DBL;\r\n        this.data.accelerationMin = PUNK.DBL;\r\n        this.data.interruptRate = PUNK.UINT32;\r\n    }\r\n\r\n    async bridgeInput(ch: LocalChannel, bp: BridgePacket): Promise<void> {\r\n        const buf = new DataView(new ArrayBuffer(25));\r\n\r\n        switch (this.devDef.uid) {\r\n            case DeviceUID._MOT0100_USB:\r\n                switch (ch.chDef.uid) {\r\n                    case DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\r\n                        switch (bp.vpkt) {\r\n                            case BP.SETDATAINTERVAL:\r\n                                buf.setUint16(0, this._handleDataIntervalPacket(bp, 1));\r\n                                await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.SAMPLED_SETDATAINTERVAL, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, 2));\r\n                                return;\r\n                            case BP.SETCHANGETRIGGER:\r\n                                buf.setFloat32(0, bp.getNumber(0), true);\r\n                                await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.AXES_SETAXISCHANGETRIGGER, ch.uniqueIndex, new Uint8Array(buf.buffer, 0, 4));\r\n                                return;\r\n                            case BP.OPENRESET:\r\n                            case BP.CLOSERESET:\r\n                                await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_RESET, ch.uniqueIndex);\r\n                                return;\r\n                            case BP.ENABLE:\r\n                                await this.transferPacket(PhidgetUSBRequestType.PHIDGETUSB_REQ_CHANNEL_WRITE, VintPacketType.GenericPacket.PHIDGET_ENABLE, ch.uniqueIndex);\r\n                                return;\r\n                            default:\r\n                                throw new PhidgetError(ErrorCode.UNEXPECTED);\r\n                        }\r\n                    default:\r\n                        throw new PhidgetError(ErrorCode.UNEXPECTED);\r\n                }\r\n            default:\r\n                throw new PhidgetError(ErrorCode.UNEXPECTED);\r\n        }\r\n    }\r\n\r\n    dataInput(buffer: DataView): void {\r\n        const axis = new Array(this.numAccelAxes).fill(0);\r\n        let channel;\r\n        let timestamp;\r\n        let dataIndex;\r\n\r\n        switch (this.devDef.uid) {\r\n            case DeviceUID._MOT0100_USB:\r\n                dataIndex = 0;\r\n\r\n                // this timestamp is for the latest data\r\n                timestamp = buffer.getUint32(0);\r\n                dataIndex += 4;\r\n\r\n                // add data to data buffer\r\n                for (let i = 0; i < this.numAccelAxes; i++) {\r\n                    axis[i] = buffer.getFloat32(dataIndex + (i * 4), true);\r\n                    if (!isNaN(axis[i]))\r\n                        axis[i] = RoundDouble(axis[i], 6);\r\n                }\r\n\r\n                dataIndex += 12;\r\n\r\n                if ((channel = this.getChannel(0)) !== null) {\r\n                    switch (channel.chDef.uid) {\r\n                        case DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB: {\r\n                            if (buffer.byteLength > dataIndex) {\r\n                                if (buffer.getUint8(dataIndex) & 0x01) {\r\n                                    const bp = new BridgePacket();\r\n                                    bp.set({ name: \"0\", type: \"d\", value: ErrorEventCode.OUT_OF_RANGE });\r\n                                    bp.set({ name: \"1\", type: \"s\", value: \"One or more accelerometer readings is out of range.\" });\r\n                                    channel.sendErrorEvent(bp);\r\n                                }\r\n                            }\r\n                            const bp = new BridgePacket();\r\n                            bp.set({ name: \"0\", type: \"G\", value: axis });\r\n                            bp.set({ name: \"1\", type: \"g\", value: timestamp });\r\n                            bp.sendToChannel(channel, BP.ACCELERATIONCHANGE);\r\n                        }\r\n                            break;\r\n                        default:\r\n                            throw new PhidgetError(ErrorCode.UNEXPECTED);\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                throw new PhidgetError(ErrorCode.UNEXPECTED);\r\n        }\r\n    }\r\n}\r\n\r\nexport { AccelerometerDevice };","import { HubDevice } from \"./device/HubDevice\";\r\nimport { InterfaceKitDevice } from \"./device/InterfaceKitDevice\";\r\nimport { RFIDDevice } from \"./device/RFIDDevice\";\r\nimport { SpatialDevice } from \"./device/SpatialDevice\";\r\nimport { EncoderDevice } from \"./device/EncoderDevice\";\r\nimport { BridgeDevice } from \"./device/BridgeDevice\";\r\nimport { DataAdapterDevice } from \"./device/DataAdapterDevice\";\r\nimport { GenericDevice } from \"./device/GenericDevice\";\r\nimport { TemperatureSensorDevice } from \"./device/TemperatureSensorDevice\";\r\nimport { AccelerometerDevice } from \"./device/AccelerometerDevice\";\r\n\r\nimport { DeviceClass, ErrorCode } from \"../Enumerations.gen\";\r\nimport { type USBConnectionBase } from \"./USBConnection\";\r\nimport { PhidgetUSBDevice, PhidgetUSBDeviceData } from \"./PhidgetUSBDevice\";\r\nimport { GetPhidgetUSBData } from \"./USB\";\r\nimport { findPhidgetUniqueDevice } from \"../Device\";\r\nimport { PhidgetError } from \"../PhidgetError\";\r\nimport { logwarn } from \"../Logging\";\r\n\r\nconst UNKNOWN_USB_ID = 175;\r\n\r\nexport async function CreateUSBDevice(conn: USBConnectionBase, usbDevice: USBDevice): Promise<PhidgetUSBDevice> {\r\n\r\n\ttry {\r\n\t\tawait usbDevice.open();\r\n\r\n\t\tconst devData = await GetPhidgetUSBData(usbDevice);\r\n\r\n\t\tconst find = { type: 'USB' as const, ...devData };\r\n\t\tlet devDef;\r\n\t\ttry {\r\n\t\t\tdevDef = findPhidgetUniqueDevice(find);\r\n\t\t} catch (err) {\r\n\t\t\tlogwarn(\"A USB Phidget (PID: \" + find.productID + \" Version: \" + find.version + \") was found which is not \"\r\n\t\t\t\t+ \"supported by the library. A library upgrade is required to work with this Phidget\");\r\n\t\t\tfind.productID = UNKNOWN_USB_ID;\r\n\t\t\tdevDef = findPhidgetUniqueDevice(find);\r\n\t\t}\r\n\r\n\t\tconst data: PhidgetUSBDeviceData = {\r\n\t\t\t...devData,\r\n\t\t\t// NOTE: We don't use the HUB type, even for Hubs, because hub port props are set in initAfterCreate()\r\n\t\t\ttype: 'OTHER' as const,\r\n\t\t\tid: devDef.uid + \"_\" + devData.serialNumber + \"_v\" + devData.version,\r\n\t\t\tdevDef: devDef,\r\n\t\t};\r\n\r\n\t\t// Create the Device object\r\n\t\tlet phidgetDevice;\r\n\r\n\t\ttry {\r\n\t\t\tswitch (devDef.c) {\r\n\t\t\t\tcase DeviceClass.ACCELEROMETER:\r\n\t\t\t\t\tphidgetDevice = new AccelerometerDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.BRIDGE:\r\n\t\t\t\t\tphidgetDevice = new BridgeDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.DATA_ADAPTER:\r\n\t\t\t\t\tphidgetDevice = new DataAdapterDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.ENCODER:\r\n\t\t\t\t\tphidgetDevice = new EncoderDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.GENERIC:\r\n\t\t\t\t\tphidgetDevice = new GenericDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.HUB:\r\n\t\t\t\t\tphidgetDevice = new HubDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.INTERFACE_KIT:\r\n\t\t\t\t\tphidgetDevice = new InterfaceKitDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.RFID:\r\n\t\t\t\t\tphidgetDevice = new RFIDDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.SPATIAL:\r\n\t\t\t\t\tphidgetDevice = new SpatialDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DeviceClass.TEMPERATURE_SENSOR:\r\n\t\t\t\t\tphidgetDevice = new TemperatureSensorDevice(conn, data, usbDevice);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof PhidgetError && err.errorCode === ErrorCode.UNSUPPORTED)\r\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"This USB Phidget is not yet supported in JavaScript: \" + devDef.s + \" (\" + devDef.t + \")\");\r\n\t\t\tthrow err;\r\n\t\t}\r\n\r\n\t\tif (phidgetDevice.initAfterCreate)\r\n\t\t\tawait phidgetDevice.initAfterCreate();\r\n\r\n\t\tawait usbDevice.close();\r\n\r\n\t\treturn phidgetDevice;\r\n\t} finally {\r\n\t\t// Ensure device is closed\r\n\t\ttry {\r\n\t\t\tawait usbDevice.close();\r\n\t\t} catch { /* Ignore */ }\r\n\t}\r\n}","﻿import { PhidgetConnection, ConnectionOptions, ConnType } from '../Connection';\r\nimport { ErrorCode, DeviceClass } from '../Enumerations.gen';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { logerr, logverbose, logwarn, logdebug } from '../Logging';\r\nimport { PhidgetUSBDevice } from './PhidgetUSBDevice';\r\nimport { LocalChannel } from './LocalChannel';\r\nimport { type ChannelData } from '../Channel';\r\nimport { LocalDevice } from './LocalDevice';\r\nimport { CreateUSBDevice } from './CreateUSBDevice';\r\nimport { HubDevice } from './device/HubDevice';\r\nimport { PhidgetUniqueChannel } from '../Devices.gen';\r\n\r\nlet USBConnectionCnt = 0;\r\n\r\nexport const enum USBConnType { \r\n\tWeb, Node\r\n}\r\n\r\nexport abstract class USBConnectionBase extends PhidgetConnection {\r\n\t/** @internal */\r\n\tdeclare _channels: Map<string, LocalChannel>;\r\n\t/** @internal */\r\n\tdeclare _devices: Map<string, LocalDevice>;\r\n\t/** @internal */\r\n\tprotected _webusb: USB;\r\n\t/** @internal */\r\n\tprivate _boundondisconnect?: (event: USBConnectionEvent) => void;\r\n\t/** @internal */\r\n\treadonly _type: ConnType;\r\n\t/** @internal */\r\n\treadonly _usbType!: USBConnType;\r\n\r\n\t/** @internal */\r\n\tprivate _scanTimeout: NodeJS.Timer | undefined;\r\n\r\n\t/** @internal */\r\n\tprotected abstract _trackUSBDevice(dev: USBDevice): boolean;\r\n\t/** @internal */\r\n\tprotected abstract _untrackUSBDevice(dev: USBDevice): void;\r\n\t/** @internal */\r\n\tprotected abstract _getPUSBDevice(dev: USBDevice): PhidgetUSBDevice | undefined;\r\n\t/** @internal */\r\n\tprotected abstract _addPUSBDevice(dev: PhidgetUSBDevice): void;\r\n\t/** @internal */\r\n\tprotected abstract _deletePUSBDevice(dev: PhidgetUSBDevice): void;\r\n\t/** @internal */\r\n\tabstract _setEpTimeout(dev: USBDevice, ep: number, timeout: number): void;\r\n\t/** @internal */\r\n\tprotected abstract _pUSBDevices: Map<unknown, PhidgetUSBDevice>;\r\n\t/** @internal */\r\n\tprotected abstract _getDevices(): Promise<USBDevice[]>;\r\n\r\n\t/** @internal */\r\n\tprivate _nextScanDelay: number;\r\n\r\n\r\n\t/**\r\n\t * Grant access to a USB device in the browser.\r\n\t * This function can only be called from a user-interactable object, such as a button.\r\n\t */\r\n\tabstract requestWebUSBDeviceAccess(): Promise<void>;\r\n\r\n\t/** @internal */\r\n\tconstructor(webusb: USB, usbtype: USBConnType, opts?: ConnectionOptions) {\r\n\t\tif (USBConnectionCnt >= 1)\r\n\t\t\tthrow new PhidgetError(ErrorCode.DUPLICATE, \"Only one USB Connection may be active at a time.\");\r\n\t\tUSBConnectionCnt++;\r\n\r\n\t\tconst options: ConnectionOptions = {};\r\n\t\tif (opts != undefined) {\r\n\t\t\tif (opts.onError)\r\n\t\t\t\toptions.onError = opts.onError;\r\n\t\t\tif (opts.name)\r\n\t\t\t\toptions.name = opts.name;\r\n\t\t\telse\r\n\t\t\t\toptions.name = 'webusb';\r\n\t\t}\r\n\r\n\t\tsuper(options);\r\n\t\tthis._type = ConnType.LOCAL;\r\n\t\tthis._usbType = usbtype;\r\n\t\tthis._webusb = webusb;\r\n\t\tthis._nextScanDelay = 0;\r\n\t}\r\n\r\n\tdelete() {\r\n\t\tsuper.delete();\r\n\t\tUSBConnectionCnt--;\r\n\t}\r\n\r\n\t/**\r\n\t * Stops USB scanning\r\n\t */\r\n\tclose() {\r\n\t\tif (this.connected !== true)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._boundondisconnect)\r\n\t\t\tthis._webusb.removeEventListener('disconnect', this._boundondisconnect);\r\n\t\tdelete this._boundondisconnect;\r\n\r\n\t\tif (this._scanTimeout != undefined) {\r\n\t\t\tclearTimeout(this._scanTimeout);\r\n\t\t\tdelete this._scanTimeout;\r\n\t\t}\r\n\r\n\t\tthis._detachAllDevices();\r\n\r\n\t\tthis.connected = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Connects the the USB subsystem and starts scanning for USB devices\r\n\t */\r\n\t// eslint-disable-next-line require-await\r\n\tasync connect() {\r\n\t\tif (this.connected === true)\r\n\t\t\treturn;\r\n\r\n\t\tthis.connected = true;\r\n\t\tthis._boundondisconnect = this._ondisconnect.bind(this);\r\n\t\tthis._webusb.addEventListener('disconnect', this._boundondisconnect);\r\n\r\n\t\t// start scanning\r\n\t\tthis.connected === true;\r\n\r\n\t\tconst again = () => {\r\n\t\t\t// if still connected, scan again in (250+)ms\r\n\t\t\tif (this.connected) {\r\n\t\t\t\tlogverbose('Next scan in: ' + (250 + this._nextScanDelay));\r\n\t\t\t\tthis._scanTimeout = setTimeout(scan, 250 + this._nextScanDelay);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst scan = () => {\r\n\t\t\tdelete this._scanTimeout;\r\n\t\t\tthis._scanWebUSBDevices().then(() => {\r\n\t\t\t\tagain();\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tlogerr(\"Error during USB scan\", err);\r\n\t\t\t\t// If a scan failed, we add a random delay before the next scan, because failure is generally caused by 2 instances interfering\r\n\t\t\t\tthis._nextScanDelay = (Math.random() * 100);\r\n\t\t\t\tagain();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tscan();\r\n\t}\r\n\r\n\t//////////////\r\n\t// Internal //\r\n\t//////////////\r\n\r\n\t/** @internal */\r\n\t_getDevice(phid: string) {\r\n\t\treturn super._getDevice(phid) as LocalDevice;\r\n\t}\r\n\r\n\t//Scan for devices that have had access granted, but have not already been added to the internal Channel and Device lists\r\n\t/** @internal */\r\n\tasync _scanWebUSBDevices() {\r\n\r\n\t\tif (!this.connected)\r\n\t\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED, \"Not connected\");\r\n\r\n\t\tconst usbDevices = await this._getDevices();\r\n\r\n\t\tthis._nextScanDelay = 0;\r\n\t\tawait Promise.all(usbDevices.map(async (usbDevice) => {\r\n\r\n\t\t\tconst isNewDevice = this._trackUSBDevice(usbDevice);\r\n\t\t\tlet dev = this._getPUSBDevice(usbDevice);\r\n\r\n\t\t\t// New Device\r\n\t\t\tif (dev == undefined) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdev = await CreateUSBDevice(this, usbDevice);\r\n\t\t\t\t\tthis._addPUSBDevice(dev);\r\n\t\t\t\t\tthis._attachLocalDevice(dev);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// Something went wrong with this device - swallow the error and move on\r\n\t\t\t\t\t(isNewDevice ? logwarn : logverbose)(\"Error scanning device\", err);\r\n\t\t\t\t\t// If a scan failed, we add a random delay before the next scan, because failure is generally caused by 2 instances interfering\r\n\t\t\t\t\tthis._nextScanDelay = (Math.random() * 100);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Continuously check VINT HUBs for added/removed VINT devices\r\n\t\t\tif (dev instanceof HubDevice) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait dev.lock();\r\n\t\t\t\t\tlet opened = false;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait dev.open(false);\r\n\t\t\t\t\t\topened = true;\r\n\t\t\t\t\t\tawait dev.scanVINTDevices();\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif (opened)\r\n\t\t\t\t\t\t\tawait dev.close(false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdev.scanError = 0;\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// Something went wrong with this device - swallow the error and move on\r\n\t\t\t\t\t(dev.scanError == 0 ? logwarn : logverbose)(\"Error scanning device\", err);\r\n\t\t\t\t\tdev.scanError++;\r\n\t\t\t\t\t// If a scan failed, we add a random delay before the next scan, because failure is generally caused by 2 instances interfering\r\n\t\t\t\t\tthis._nextScanDelay = (Math.random() * 100);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tdev.unlock();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_ondisconnect(event: USBConnectionEvent) {\r\n\r\n\t\tlogdebug(\"USB Device disconnect: \" + event.device.productName);\r\n\t\tthis._untrackUSBDevice(event.device);\r\n\t\tconst pUsbDevice = this._getPUSBDevice(event.device);\r\n\t\tif (pUsbDevice == undefined) {\r\n\t\t\tlogdebug(\"Device is not known. Moving on.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Detach associated devices/channels\r\n\t\t// Find the top-level device associated with this USB Device (there should only be one!)\r\n\t\tconst dev = Array.from(this._devices.values()).find(dev => dev === pUsbDevice && dev.parent == undefined);\r\n\t\tif (dev == undefined) {\r\n\t\t\tlogdebug(\"couldn't find detaching device in Devices list!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Find devices with this device as their parent (VINT devices) and detach them 1st\r\n\t\tconst children = Array.from(this._devices.values()).filter(d => d.parent === dev);\r\n\t\tfor (const child of children)\r\n\t\t\tthis._deviceDetach(child);\r\n\r\n\t\t// Detach main device\r\n\t\tthis._deviceDetach(dev);\r\n\r\n\t\t// Remove USB device from array\r\n\t\tthis._deletePUSBDevice(pUsbDevice);\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_attachLocalDevice(device: LocalDevice) {\r\n\t\tthis._deviceAttach(device);\r\n\t\tlet channelCnt = 0;\r\n\t\tfor (const chDef of <Required<PhidgetUniqueChannel>[]>device.devDef.ch) {\r\n\t\t\tfor (let index = 0; index < (chDef.n ?? 1); index++, channelCnt++) {\r\n\t\t\t\t// Just needs to be a unique string representing this channel\r\n\t\t\t\tconst id = (chDef.c + '_'\r\n\t\t\t\t\t+ device.serialNumber + '_'\r\n\t\t\t\t\t+ device.hubPort + '_'\r\n\t\t\t\t\t+ channelCnt + '_'\r\n\t\t\t\t\t+ (device.class === DeviceClass.VINT ? '1' : '0') + '_'\r\n\t\t\t\t\t+ (device.isHubPort ? '1' : '0'));\r\n\r\n\t\t\t\tconst chData: ChannelData = {\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tchDef: chDef,\r\n\t\t\t\t\tuniqueIndex: channelCnt,\r\n\t\t\t\t\tindex: index + chDef.i\r\n\t\t\t\t};\r\n\t\t\t\tconst ch = new LocalChannel(this, device, chData);\r\n\t\t\t\tdevice.channels[channelCnt] = ch;\r\n\t\t\t\tthis._channelAttach(ch);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_deviceDetach(dev: LocalDevice) {\r\n\t\tsuper._deviceDetach(dev);\r\n\r\n\t\tdev.lock().then(() => {\r\n\t\t\treturn dev.close(true);\r\n\t\t}).then(() => {\r\n\t\t\tdev.unlock();\r\n\t\t}).catch(err => {\r\n\t\t\tlogwarn(\"Error closing during detach\", err);\r\n\t\t\tdev.unlock();\r\n\t\t});\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_usbErrorDetach(dev: PhidgetUSBDevice) {\r\n\r\n\t\tlogwarn(\"Detaching device because of USB error.\");\r\n\r\n\t\t// Find devices with this device as their parent (VINT devices) and detach them 1st\r\n\t\tconst children = Array.from(this._devices.values()).filter(d => d.parent === dev);\r\n\t\tfor (const child of children)\r\n\t\t\tthis._deviceDetach(child);\r\n\r\n\t\t// Detach main device\r\n\t\tthis._deviceDetach(dev);\r\n\r\n\t\t// Remove USB device from array\r\n\t\tthis._deletePUSBDevice(dev);\r\n\t}\r\n\r\n}","import { USBConnectionBase, USBConnType } from './USBConnection';\r\nimport { ErrorCode } from '../Enumerations.gen';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { USBVID_PHIDGETS } from './USB';\r\n\r\nimport { type ConnectionOptions } from '../Connection';\r\nimport { PhidgetUSBDevice } from './PhidgetUSBDevice';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class USBConnection extends USBConnectionBase {\r\n\t// For in-browser WebUSB, we can just assume that the navigator is giving us the same instance of a USBDevice each time\r\n\t/** @internal */\r\n\tprivate _usbdevs: Set<USBDevice>;\r\n\t/** @internal */\r\n\tprotected _pUSBDevices: Map<USBDevice, PhidgetUSBDevice>;\r\n\r\n\t/**\r\n\t * Enables direct USB connection to Phidgets in the browser\r\n\t * \r\n\t * @throws {@link PhidgetError} Browser must support WebUSB\r\n\t */\r\n\tconstructor(opts?: ConnectionOptions) {\r\n\r\n\t\tif (!('navigator' in window) || navigator == undefined || navigator.usb == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED, \"USB Support not detected. Make sure your browser supports WebUSB.\");\r\n\r\n\t\tsuper(navigator.usb, USBConnType.Web, opts);\r\n\r\n\t\tthis._usbdevs = new Set();\r\n\t\tthis._pUSBDevices = new Map();\r\n\t}\r\n\t\r\n\tclose() {\r\n\t\tsuper.close();\r\n\t\t\r\n\t\tthis._usbdevs = new Set();\r\n\t\tthis._pUSBDevices = new Map();\r\n\t}\r\n\r\n\tasync requestWebUSBDeviceAccess() {\r\n\r\n\t\tif (!this.connected)\r\n\t\t\tthrow new PhidgetError(ErrorCode.NOT_ATTACHED, \"Not connected\");\r\n\r\n\t\tconst filter = { vendorId: USBVID_PHIDGETS, classCode: 0xFF };\r\n\t\ttry {\r\n\t\t\tawait this._webusb.requestDevice({ filters: [filter] });\r\n\t\t\tawait this._scanWebUSBDevices();\r\n\t\t} catch (err) {\r\n\t\t\t// NOTE: We don't care if there is an error - it probably just means the user didn't choose a device\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _trackUSBDevice(dev: USBDevice): boolean {\r\n\t\tif (this._usbdevs.has(dev))\r\n\t\t\treturn false;\r\n\t\tthis._usbdevs.add(dev);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _untrackUSBDevice(dev: USBDevice): void {\r\n\t\tthis._usbdevs.delete(dev);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _getPUSBDevice(dev: USBDevice): PhidgetUSBDevice | undefined {\r\n\t\treturn this._pUSBDevices.get(dev);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _addPUSBDevice(dev: PhidgetUSBDevice): void {\r\n\t\tthis._pUSBDevices.set(dev['usbDevice'], dev);\r\n\t}\r\n\r\n\t/** @internal */\r\n\tprotected _deletePUSBDevice(dev: PhidgetUSBDevice): void {\r\n\t\tthis._pUSBDevices.delete(dev['usbDevice']);\r\n\t}\r\n\t\r\n\t/** @internal */\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t_setEpTimeout(_dev: USBDevice, _ep: number, _timeout: number): void {\r\n\t\t// Does nothing on Web\r\n\t}\r\n\t\r\n\t/** @internal */\r\n\tprotected _getDevices(): Promise<USBDevice[]> {\r\n\t\treturn this._webusb.getDevices();\r\n\t}\r\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport * as Struct from '../Structs.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface VoltageRatioInputData {\n\tbridgeEnabled: number,\n\tbridgeGain: Enum.BridgeGain | PUNK.ENUM,\n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tsensorType: Enum.VoltageRatioSensorType | PUNK.ENUM,\n\tsensorUnit: Struct.UnitInfo | null,\n\tsensorValue: number,\n\tvoltageRatio: number,\n\tminVoltageRatio: number,\n\tmaxVoltageRatio: number,\n\tvoltageRatioChangeTrigger: number,\n\tminVoltageRatioChangeTrigger: number,\n\tmaxVoltageRatioChangeTrigger: number,\n\tsensorValueChangeTrigger: number,\n}\n\nabstract class VoltageRatioInputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: VoltageRatioInputData;\n\t/**\n\t * **VoltageRatioChange** event\n\t *  * `voltageRatio` - The voltage ratio\n\t * ---\n\t * The most recent voltage ratio value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `voltageRatioChangeTrigger` has been set to a non-zero value, the `VoltageRatioChange` event will not occur until the voltage has changed by at least the `voltageRatioChangeTrigger` value.\n\t * *   If `sensorType` is supported and set to anything other than `phidget22.VoltageRatioSensorType.VOLTAGE_RATIO`, this event will not fire.\n\t */\n\tonVoltageRatioChange: ((voltageRatio: number) => void) | null = null;\n\t/** @internal */\n\t_gotVoltageRatioChangeErrorEvent?: boolean;\n\t/**\n\t * **SensorChange** event\n\t *  * `sensorValue` - The sensor value\n\t *  * `sensorUnit` - The sensor unit information corresponding to the `sensorValue`.\n\n*   Helps keep track of the type of information being calculated from the voltage ratio input.\n\t * ---\n\t * The most recent sensor value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `sensorValueChangeTrigger` has been set to a non-zero value, the `SensorChange` event will not occur until the sensor value has changed by at least the `sensorValueChangeTrigger` value.\n\t * *   This event only fires when `sensorType` is not set to `phidget22.VoltageRatioSensorType.VOLTAGE_RATIO`\n\t */\n\tonSensorChange: ((sensorValue: number, sensorUnit: Struct.UnitInfo) => void) | null = null;\n\t/** @internal */\n\t_gotSensorChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Voltage Ratio Input class is used for measuring the ratio between the voltage supplied to and the voltage returned from an attached sensor or device. This is useful for interfacing with ratiometric sensors or wheatstone bridge based sensors.\n\t * \n\t * For ratiometric sensors, this class supports conversion to sensor data with units specific to the Phidget sensor being used, to make reading these sensors easy.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.VOLTAGE_RATIO_INPUT;\n\t\tthis.name = \"VoltageRatioInput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETENABLED:\n\t\t\tthis.data.bridgeEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('BridgeEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETBRIDGEGAIN:\n\t\t\tthis.data.bridgeGain = bp.entries[0].v as Enum.BridgeGain;\n\t\t\tthis._FIREPropertyChange('BridgeGain', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSENSORTYPE:\n\t\t\tthis.data.sensorType = bp.entries[0].v as Enum.VoltageRatioSensorType;\n\t\t\tthis._FIREPropertyChange('SensorType', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\tthis.data.sensorValueChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('SensorValueChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.voltageRatioChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('VoltageRatioChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SENSORCHANGE: {\n\t\t\tthis.data.sensorValue = bp.entries[0].v as number;\n\t\t\tconst sensorUnit: Struct.UnitInfo = {\n\t\t\t\tunit: bp.entries[\"UnitInfo.unit\"].v as Enum.Unit,\n\t\t\t\tname: bp.entries[\"UnitInfo.name\"].v as string,\n\t\t\t\tsymbol: bp.entries[\"UnitInfo.symbol\"].v as string,\n\t\t\t}\n\t\t\tthis.data.sensorUnit = sensorUnit;\n\t\t\tif (this._isAttachedDone && this.onSensorChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onSensorChange(this.data.sensorValue, this.data.sensorUnit);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): VoltageRatioInputData {\n\t\treturn {\n\t\t\tbridgeEnabled: PUNK.BOOL,\n\t\t\tbridgeGain: PUNK.ENUM,\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tsensorType: PUNK.ENUM,\n\t\t\tsensorUnit: null,\n\t\t\tsensorValue: PUNK.DBL,\n\t\t\tvoltageRatio: PUNK.DBL,\n\t\t\tminVoltageRatio: PUNK.DBL,\n\t\t\tmaxVoltageRatio: PUNK.DBL,\n\t\t\tvoltageRatioChangeTrigger: PUNK.DBL,\n\t\t\tminVoltageRatioChangeTrigger: PUNK.DBL,\n\t\t\tmaxVoltageRatioChangeTrigger: PUNK.DBL,\n\t\t\tsensorValueChangeTrigger: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.sensorType = Enum.VoltageRatioSensorType.VOLTAGE_RATIO;\n\t\t\tthis.data.voltageRatio = (<InterfaceKitDevice>this._ch!.parent).data.voltageRatio[this._ch!.index];\n\t\t\tthis.data.minVoltageRatio = 0;\n\t\t\tthis.data.maxVoltageRatio = 1;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 1;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\tthis.data.bridgeEnabled = 1;\n\t\t\tthis.data.bridgeGain = Enum.BridgeGain.GAIN_128X;\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1200;\n\t\t\tthis.data.voltageRatio = (<BridgeDevice>this._ch!.parent).data.voltageRatio[this._ch!.index];\n\t\t\tthis.data.minVoltageRatio = -0.85;\n\t\t\tthis.data.maxVoltageRatio = 0.85;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 0.5;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.sensorType = Enum.VoltageRatioSensorType.VOLTAGE_RATIO;\n\t\t\tthis.data.minVoltageRatio = 0;\n\t\t\tthis.data.maxVoltageRatio = 1;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 1;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.sensorType = Enum.VoltageRatioSensorType.VOLTAGE_RATIO;\n\t\t\tthis.data.minVoltageRatio = 0;\n\t\t\tthis.data.maxVoltageRatio = 1;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 1;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\tthis.data.bridgeEnabled = 1;\n\t\t\tthis.data.bridgeGain = Enum.BridgeGain.GAIN_128X;\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.minVoltageRatio = -0.5;\n\t\t\tthis.data.maxVoltageRatio = 0.5;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 0.5;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.sensorType = Enum.VoltageRatioSensorType.VOLTAGE_RATIO;\n\t\t\tthis.data.minVoltageRatio = 0;\n\t\t\tthis.data.maxVoltageRatio = 1;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 1;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.minVoltageRatio = -1;\n\t\t\tthis.data.maxVoltageRatio = 1;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 2;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minVoltageRatio = 0;\n\t\t\tthis.data.maxVoltageRatio = 1;\n\t\t\tthis.data.voltageRatioChangeTrigger = 0;\n\t\t\tthis.data.minVoltageRatioChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageRatioChangeTrigger = 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1018_VOLTAGERATIOINPUT_1000:\n\t\tcase DeviceChannelUID._HUB_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGERATIOINPUT_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.sensorType });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageRatioChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.sensorValueChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\tcase DeviceChannelUID._DAQ1500_VOLTAGERATIOINPUT_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.bridgeEnabled });\n\t\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.bridgeGain });\n\t\t\tawait bp.send(this._ch, BP.SETBRIDGEGAIN);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageRatioChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_VOLTAGERATIOINPUT_210:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.sensorType });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.sensorValueChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1100_VOLTAGERATIOINPUT_100:\n\t\tcase DeviceChannelUID._HUM1100_VOLTAGERATIOINPUT_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageRatioChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * Enable power to the input and start collecting data by setting `bridgeEnabled` to true.\n\t * @throws {@link PhidgetError}\n\t */\n\tget bridgeEnabled() { return this.getBridgeEnabled(); }\n\t/**\n\t * Choose a `bridgeGain` that best suits your application.\n\t * \n\t * *   For more information about the range and accuracy of each `bridgeGain` to decide which best suits your application, see your device's User Guide.\n\t * @throws {@link PhidgetError}\n\t */\n\tget bridgeGain() { return this.getBridgeGain(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * We sell a variety of analog sensors that do not have their own API, they simply output a voltage that can be converted to a digital value using a specific formula. By matching the `sensorType` to your analog sensor, the correct formula will automatically be applied to data when you get the `sensorValue` or subscribe to the `SensorChange` event.\n\t * \n\t * *   The `SensorChange` event has its own change trigger associated with it: `sensorValueChangeTrigger`.\n\t * *   Any data from getting the `sensorValue` or subscribing to the `SensorChange` event will have a `sensorUnit` associated with it.\n\t * \n\t * **Note:** Unlike other properties such as `Phidget.deviceSerialNumber` or `Phidget.channel`, `sensorType` is set after the device is opened, not before.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorType() { return this.getSensorType(); }\n\t/**\n\t * The unit of measurement that applies to the sensor values of the `sensorType` that has been selected.\n\t * \n\t * *   Helps keep track of the type of information being calculated from the voltage ratio input.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorUnit() { return this.getSensorUnit(); }\n\t/**\n\t * The most recent sensor value that the channel has reported.\n\t * \n\t * *   Use `sensorUnit` to get the measurement units that are associated with the `sensorValue`\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorValue() { return this.getSensorValue(); }\n\t/**\n\t * The channel will not issue a `SensorChange` event until the sensor value has changed by the amount specified by the `sensorValueChangeTrigger`.\n\t * \n\t * *   Setting the `sensorValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorValueChangeTrigger() { return this.getSensorValueChangeTrigger(); }\n\t/**\n\t * The most recent voltage ratio value that the channel has reported.\n\t * \n\t * *   This value will always be between `minVoltageRatio` and `maxVoltageRatio`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltageRatio() { return this.getVoltageRatio(); }\n\t/**\n\t * The minimum value the `VoltageRatioChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVoltageRatio() { return this.getMinVoltageRatio(); }\n\t/**\n\t * The maximum value the `VoltageRatioChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVoltageRatio() { return this.getMaxVoltageRatio(); }\n\t/**\n\t * The channel will not issue a `VoltageRatioChange` event until the voltage ratio value has changed by the amount specified by the `voltageRatioChangeTrigger`.\n\t * \n\t * *   Setting the `voltageRatioChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltageRatioChangeTrigger() { return this.getVoltageRatioChangeTrigger(); }\n\t/**\n\t * The minimum value that `voltageRatioChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVoltageRatioChangeTrigger() { return this.getMinVoltageRatioChangeTrigger(); }\n\t/**\n\t * The maximum value that `voltageRatioChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVoltageRatioChangeTrigger() { return this.getMaxVoltageRatioChangeTrigger(); }\n\n\t/**\n\t * Enable power to the input and start collecting data by setting `bridgeEnabled` to true.\n\t * @returns The enabled value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBridgeEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.bridgeEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.bridgeEnabled);\n\t}\n\n\t/**\n\t * Enable power to the input and start collecting data by setting `bridgeEnabled` to true.\n\t * @throws {@link PhidgetError}\n\t * @param bridgeEnabled - The enabled value\n\t */\n\tasync setBridgeEnabled(bridgeEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (bridgeEnabled !== false && bridgeEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (bridgeEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t}\n\n\t/**\n\t * Choose a `bridgeGain` that best suits your application.\n\t * \n\t * *   For more information about the range and accuracy of each `bridgeGain` to decide which best suits your application, see your device's User Guide.\n\t * @returns The bridge gain value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBridgeGain(): Enum.BridgeGain {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.bridgeGain === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.bridgeGain);\n\t}\n\n\t/**\n\t * Choose a `bridgeGain` that best suits your application.\n\t * \n\t * *   For more information about the range and accuracy of each `bridgeGain` to decide which best suits your application, see your device's User Guide.\n\t * @throws {@link PhidgetError}\n\t * @param bridgeGain - The bridge gain value\n\t */\n\tasync setBridgeGain(bridgeGain: Enum.BridgeGain): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedBridgeGain(this._ch!, bridgeGain))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified BridgeGain is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: bridgeGain });\n\t\tawait bp.send(this._ch, BP.SETBRIDGEGAIN);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the change trigger.\n\t * @returns The data interval for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval for the channel\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * We sell a variety of analog sensors that do not have their own API, they simply output a voltage that can be converted to a digital value using a specific formula. By matching the `sensorType` to your analog sensor, the correct formula will automatically be applied to data when you get the `sensorValue` or subscribe to the `SensorChange` event.\n\t * \n\t * *   The `SensorChange` event has its own change trigger associated with it: `sensorValueChangeTrigger`.\n\t * *   Any data from getting the `sensorValue` or subscribing to the `SensorChange` event will have a `sensorUnit` associated with it.\n\t * \n\t * **Note:** Unlike other properties such as `Phidget.deviceSerialNumber` or `Phidget.channel`, `sensorType` is set after the device is opened, not before.\n\t * @returns The sensor type value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorType(): Enum.VoltageRatioSensorType {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorType === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorType);\n\t}\n\n\t/**\n\t * We sell a variety of analog sensors that do not have their own API, they simply output a voltage that can be converted to a digital value using a specific formula. By matching the `sensorType` to your analog sensor, the correct formula will automatically be applied to data when you get the `sensorValue` or subscribe to the `SensorChange` event.\n\t * \n\t * *   The `SensorChange` event has its own change trigger associated with it: `sensorValueChangeTrigger`.\n\t * *   Any data from getting the `sensorValue` or subscribing to the `SensorChange` event will have a `sensorUnit` associated with it.\n\t * \n\t * **Note:** Unlike other properties such as `Phidget.deviceSerialNumber` or `Phidget.channel`, `sensorType` is set after the device is opened, not before.\n\t * @throws {@link PhidgetError}\n\t * @param sensorType - The sensor type value\n\t */\n\tasync setSensorType(sensorType: Enum.VoltageRatioSensorType): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedVoltageRatioSensorType(this._ch!, sensorType))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified VoltageRatioSensorType is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: sensorType });\n\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t}\n\n\t/**\n\t * The unit of measurement that applies to the sensor values of the `sensorType` that has been selected.\n\t * \n\t * *   Helps keep track of the type of information being calculated from the voltage ratio input.\n\t * @returns The sensor unit information corresponding to the `sensorValue`.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorUnit(): Struct.UnitInfo {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorUnit === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorUnit);\n\t}\n\n\t/**\n\t * The most recent sensor value that the channel has reported.\n\t * \n\t * *   Use `sensorUnit` to get the measurement units that are associated with the `sensorValue`\n\t * @returns The sensor value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorValue(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorValue === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorValue);\n\t}\n\n\t/**\n\t * The channel will not issue a `SensorChange` event until the sensor value has changed by the amount specified by the `sensorValueChangeTrigger`.\n\t * \n\t * *   Setting the `sensorValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorValueChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorValueChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorValueChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `SensorChange` event until the sensor value has changed by the amount specified by the `sensorValueChangeTrigger`.\n\t * \n\t * *   Setting the `sensorValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param sensorValueChangeTrigger - The change trigger value\n\t */\n\tasync setSensorValueChangeTrigger(sensorValueChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: sensorValueChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t}\n\n\t/**\n\t * The most recent voltage ratio value that the channel has reported.\n\t * \n\t * *   This value will always be between `minVoltageRatio` and `maxVoltageRatio`.\n\t * @returns The voltage ratio value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltageRatio(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltageRatio === PUNK.DBL || Number.isNaN(this.data.voltageRatio))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.voltageRatio > this.data.maxVoltageRatio)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.voltageRatio < this.data.minVoltageRatio)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.voltageRatio);\n\t}\n\n\t/**\n\t * The minimum value the `VoltageRatioChange` event will report.\n\t * @returns The voltage ratio value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVoltageRatio(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVoltageRatio === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVoltageRatio);\n\t}\n\n\t/**\n\t * The maximum value the `VoltageRatioChange` event will report.\n\t * @returns The voltage ratio value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVoltageRatio(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVoltageRatio === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVoltageRatio);\n\t}\n\n\t/**\n\t * The channel will not issue a `VoltageRatioChange` event until the voltage ratio value has changed by the amount specified by the `voltageRatioChangeTrigger`.\n\t * \n\t * *   Setting the `voltageRatioChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltageRatioChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltageRatioChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.voltageRatioChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `VoltageRatioChange` event until the voltage ratio value has changed by the amount specified by the `voltageRatioChangeTrigger`.\n\t * \n\t * *   Setting the `voltageRatioChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param voltageRatioChangeTrigger - The change trigger value\n\t */\n\tasync setVoltageRatioChangeTrigger(voltageRatioChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (voltageRatioChangeTrigger < this.data.minVoltageRatioChangeTrigger || voltageRatioChangeTrigger > this.data.maxVoltageRatioChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minVoltageRatioChangeTrigger + \" - \" + this.data.maxVoltageRatioChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: voltageRatioChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `voltageRatioChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVoltageRatioChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVoltageRatioChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVoltageRatioChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `voltageRatioChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVoltageRatioChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVoltageRatioChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVoltageRatioChangeTrigger);\n\t}\n\n}\nimport { type InterfaceKitDevice } from '../usb/device/InterfaceKitDevice';\nimport { type BridgeDevice } from '../usb/device/BridgeDevice';\nexport { VoltageRatioInputBase };\n","import { Unit } from './Enumerations.gen';\r\nimport { type UnitInfo } from './Structs.gen';\r\n\r\nconst Units: UnitInfo[] = [\r\n\t{\r\n\t\tunit: Unit.NONE,\r\n\t\tname: \"none\",\r\n\t\tsymbol: \"\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.BOOLEAN,\r\n\t\tname: \"boolean\",\r\n\t\tsymbol: \"\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.PERCENT,\r\n\t\tname: \"percent\",\r\n\t\tsymbol: \"%\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.DECIBEL,\r\n\t\tname: \"decibel\",\r\n\t\tsymbol: \"dB\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.MILLIMETER,\r\n\t\tname: \"millimeter\",\r\n\t\tsymbol: \"mm\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.CENTIMETER,\r\n\t\tname: \"centimeter\",\r\n\t\tsymbol: \"cm\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.METER,\r\n\t\tname: \"meter\",\r\n\t\tsymbol: \"m\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.GRAM,\r\n\t\tname: \"gram\",\r\n\t\tsymbol: \"g\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.KILOGRAM,\r\n\t\tname: \"kilogram\",\r\n\t\tsymbol: \"kg\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.MILLIAMPERE,\r\n\t\tname: \"milliampere\",\r\n\t\tsymbol: \"mA\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.AMPERE,\r\n\t\tname: \"ampere\",\r\n\t\tsymbol: \"A\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.KILOPASCAL,\r\n\t\tname: \"kilopascal\",\r\n\t\tsymbol: \"kPa\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.VOLT,\r\n\t\tname: \"volt\",\r\n\t\tsymbol: \"V\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.DEGREE_CELCIUS,\r\n\t\tname: \"degree Celsius\",\r\n\t\tsymbol: \"\\xB0C\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.LUX,\r\n\t\tname: \"lux\",\r\n\t\tsymbol: \"lx\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.GAUSS,\r\n\t\tname: \"gauss\",\r\n\t\tsymbol: \"G\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.PH,\r\n\t\tname: \"pH\",\r\n\t\tsymbol: \"\"\r\n\t},\r\n\t{\r\n\t\tunit: Unit.WATT,\r\n\t\tname: \"watt\",\r\n\t\tsymbol: \"W\"\r\n\t}\r\n]\r\n\r\nexport { Units };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { VoltageRatioInputBase } from './VoltageRatioInput.gen';\nimport { Units } from '../AnalogSensor';\nimport { ErrorCode, ErrorEventCode, VoltageRatioSensorType, Unit, BridgeGain } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { PhidgetError } from '../PhidgetError';\nimport { type UnitInfo } from '../Structs.gen';\nimport { RoundDouble } from '../Utils';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @public */\nclass VoltageRatioInput extends VoltageRatioInputBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.DATAINTERVALCHANGE:\n\t\t\t\tif (bp.entryCount > 1)\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\n\t\t\t\telse\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\n\t\t\t\tthis._FIREPropertyChange('DataInterval');\n\t\t\t\tthis._FIREPropertyChange('DataRate');\n\t\t\t\tbreak;\n\n\t\t\tcase BP.MINDATAINTERVALCHANGE:\n\t\t\t\tthis.data.minDataInterval = bp.getNumber(0);\n\t\t\t\tthis._FIREPropertyChange('MinDataInterval');\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tthis._bangSensorVoltage();\n\t\t\t\tbreak;\n\n\t\t\tcase BP.VOLTAGERATIOCHANGE: {\n\t\t\t\t//moved out of VoltageRatioInput.gen.js\n\t\t\t\tthis.data.voltageRatio = bp.getNumber('0');\n\t\t\t\tconst sentSensorEvent = this._bangSensorVoltage(true);\n\t\t\t\tif (sentSensorEvent && this._ch!.conn._isRemote)\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tcase BP.SETBRIDGEGAIN:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tswitch (this._ch!.chDef.uid) {\n\t\t\t\t\tcase DeviceChannelUID._1046_VOLTAGERATIOINPUT_200:\n\t\t\t\t\t\tswitch (this.data.bridgeGain) {\n\t\t\t\t\t\t\tcase BridgeGain.GAIN_1X:\n\t\t\t\t\t\t\t\tthis.data.maxVoltageRatio = 0.85;\n\t\t\t\t\t\t\t\tthis.data.minVoltageRatio = -0.85;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase BridgeGain.GAIN_8X:\n\t\t\t\t\t\t\t\tthis.data.maxVoltageRatio = 1.0 / 8;\n\t\t\t\t\t\t\t\tthis.data.minVoltageRatio = -1.0 / 8;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase BridgeGain.GAIN_16X:\n\t\t\t\t\t\t\t\tthis.data.maxVoltageRatio = 1.0 / 16;\n\t\t\t\t\t\t\t\tthis.data.minVoltageRatio = -1.0 / 16;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase BridgeGain.GAIN_32X:\n\t\t\t\t\t\t\t\tthis.data.maxVoltageRatio = 1.0 / 32;\n\t\t\t\t\t\t\t\tthis.data.minVoltageRatio = -1.0 / 32;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase BridgeGain.GAIN_64X:\n\t\t\t\t\t\t\t\tthis.data.maxVoltageRatio = 1.0 / 64;\n\t\t\t\t\t\t\t\tthis.data.minVoltageRatio = -1.0 / 64;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase BridgeGain.GAIN_128X:\n\t\t\t\t\t\t\t\tthis.data.maxVoltageRatio = 1.0 / 128;\n\t\t\t\t\t\t\t\tthis.data.minVoltageRatio = -1.0 / 128;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._FIREPropertyChange('MinVoltageRatio', bp);\n\t\t\t\t\t\tthis._FIREPropertyChange('MaxVoltageRatio', bp);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_errorHandler(code: ErrorEventCode) {\n\t\tswitch (code) {\n\t\t\tcase ErrorEventCode.SATURATION:\n\t\t\t\tthis.data.voltageRatio = PUNK.DBL;\n\t\t\t\tthis.data.sensorValue = PUNK.DBL;\n\t\t\t\tthis._gotVoltageRatioChangeErrorEvent = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tsuper._initAfterOpen();\n\n\t\tif (this.data.sensorType === PUNK.ENUM)\n\t\t\tthis.data.sensorType = VoltageRatioSensorType.VOLTAGE_RATIO;\n\t\tthis.data.sensorUnit = this._getVoltageRatioSensorUnit(this.data.sensorType);\n\t\tthis.data.sensorValue = this._getVoltageRatioSensorValue(this.data.voltageRatio, this.data.sensorType);\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.voltageRatio == PUNK.DBL)\n\t\t\t&& !this._gotVoltageRatioChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn super._hasInitialState();\n\t}\n\n\t/** @internal */\n\t_fireInitialEvents() {\n\n\t\tif (this.data.sensorType != VoltageRatioSensorType.VOLTAGE_RATIO) {\n\t\t\tif (this.data.sensorValue != PUNK.DBL &&\n\t\t\t\tthis.data.sensorUnit != null)\n\t\t\t\tif (this.onSensorChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onSensorChange(this.data.sensorValue, this.data.sensorUnit);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t} else {\n\t\t\tif (this.data.voltageRatio != PUNK.DBL)\n\t\t\t\tif (this.onVoltageRatioChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onVoltageRatioChange(this.data.voltageRatio);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t}\n\n\t\tsuper._fireInitialEvents();\n\t}\n\n\t/** @internal */\n\t_bangSensorVoltage(includeVoltage = false) {\n\t\tlet sensorValue;\n\t\tlet unitInfo;\n\n\t\tlet sentSensorEvent = false;\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (this._ch!.supportedBridgePacket(BP.SENSORCHANGE) && this._ch!.conn._isLocal && this.data.sensorType !== VoltageRatioSensorType.VOLTAGE_RATIO) {\n\t\t\tsensorValue = this._getVoltageRatioSensorValue(this.data.voltageRatio, this.data.sensorType);\n\t\t\tif (!this._getSensorValueInRange(sensorValue, this.data.sensorType)) {\n\t\t\t\tthis.data.sensorValue = PUNK.DBL;\n\t\t\t\tif (this._isAttachedDone) {\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Sensor value is ouside the valid range for this sensor.' });\n\t\t\t\t\tthis._ch!.sendErrorEvent(bp);\n\t\t\t\t}\n\t\t\t} else if (this.data.sensorValue === PUNK.DBL || Math.abs(sensorValue - this.data.sensorValue) >= this.data.sensorValueChangeTrigger) {\n\t\t\t\tthis.data.sensorValue = sensorValue;\n\t\t\t\tif (this._isAttachedDone) {\n\t\t\t\t\tunitInfo = this._getVoltageRatioSensorUnit(this.data.sensorType);\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: sensorValue });\n\t\t\t\t\tbp.set({ name: 'UnitInfo.unit', type: 'g', value: unitInfo.unit });\n\t\t\t\t\tbp.set({ name: 'UnitInfo.name', type: 's', value: unitInfo.name });\n\t\t\t\t\tbp.set({ name: 'UnitInfo.symbol', type: 's', value: unitInfo.symbol });\n\t\t\t\t\tbp.sendToChannel(this._ch!, BP.SENSORCHANGE);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsentSensorEvent = true;\n\t\t} else if (includeVoltage) {\n\t\t\tthis.data.sensorUnit = this._getVoltageRatioSensorUnit(this.data.sensorType);\n\t\t\tthis.data.sensorValue = this._getVoltageRatioSensorValue(this.data.voltageRatio, this.data.sensorType);\n\n\t\t\tif (this._isAttachedDone && this.onVoltageRatioChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onVoltageRatioChange(this.data.voltageRatio);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t}\n\n\t\treturn sentSensorEvent;\n\t}\n\n\t/** @internal */\n\t_getVoltageRatioSensorValue(voltageRatio: number, sensorType: VoltageRatioSensorType | PUNK.ENUM): number {\n\t\tif (voltageRatio === PUNK.DBL) {\n\t\t\treturn PUNK.DBL;\n\t\t}\n\n\t\tswitch (sensorType) {\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2D120X:\n\t\t\tcase VoltageRatioSensorType.PN_3520:\n\t\t\t\treturn RoundDouble((2.076 / (voltageRatio - 0.011)), 2); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2Y0A21:\n\t\t\tcase VoltageRatioSensorType.PN_3521:\n\t\t\t\treturn RoundDouble((4.8 / (voltageRatio - 0.02)), 2); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2Y0A02:\n\t\t\tcase VoltageRatioSensorType.PN_3522:\n\t\t\t\treturn RoundDouble((9.462 / (voltageRatio - 0.01692)), 2); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1102:\n\t\t\t\treturn voltageRatio < 0.4 ? 1 : 0; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1103:\n\t\t\t\treturn voltageRatio < 0.1 ? 1 : 0; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1104:\n\t\t\t\treturn RoundDouble((voltageRatio * 2 - 1), 5); // +- 1\n\t\t\tcase VoltageRatioSensorType.PN_1105:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1106:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1107:\n\t\t\t\treturn RoundDouble(((voltageRatio * 190.6) - 40.2), 3); // %RH\n\t\t\tcase VoltageRatioSensorType.PN_1108:\n\t\t\t\treturn RoundDouble(((0.5 - voltageRatio) * 1000), 2); // Gauss\n\t\t\tcase VoltageRatioSensorType.PN_1109:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1110:\n\t\t\t\treturn voltageRatio < 0.5 ? 1 : 0; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1111:\n\t\t\t\treturn RoundDouble((voltageRatio * 2 - 1), 5); // +- 1\n\t\t\tcase VoltageRatioSensorType.PN_1112:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1113:\n\t\t\t\treturn RoundDouble((voltageRatio * 2 - 1), 5); // +- 1\n\t\t\tcase VoltageRatioSensorType.PN_1115:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.004 + 10), 3); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1116:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1118_AC:\n\t\t\t\treturn RoundDouble((voltageRatio * 69.38), 3); // RMS Amps\n\t\t\tcase VoltageRatioSensorType.PN_1118_DC:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.008 - 62.5), 3); //DC Amps\n\t\t\tcase VoltageRatioSensorType.PN_1119_AC:\n\t\t\t\treturn RoundDouble((voltageRatio * 27.75), 4); // RMS Amps\n\t\t\tcase VoltageRatioSensorType.PN_1119_DC:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.02 - 25), 4); //DC Amps\n\t\t\tcase VoltageRatioSensorType.PN_1120:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1121:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1122_AC:\n\t\t\t\treturn RoundDouble((voltageRatio * 42.04), 3); // RMS Amps\n\t\t\tcase VoltageRatioSensorType.PN_1122_DC:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.0132 - 37.8787), 3); // DC Amps\n\t\t\tcase VoltageRatioSensorType.PN_1124:\n\t\t\tcase VoltageRatioSensorType.PN_1125_TEMPERATURE:\n\t\t\t\treturn RoundDouble((voltageRatio * 222.2 - 61.111), 3); // Degrees Celcius\n\t\t\tcase VoltageRatioSensorType.PN_1125_HUMIDITY:\n\t\t\t\treturn RoundDouble((voltageRatio * 190.6 - 40.2), 3); // %RH\n\t\t\tcase VoltageRatioSensorType.PN_1126:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.018 - 27.7777), 3); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1128:\n\t\t\t\treturn RoundDouble((voltageRatio * 1296), 2); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1129:\n\t\t\t\treturn voltageRatio > 0.5 ? 1 : 0; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1131:\n\t\t\t\treturn RoundDouble((15.311 * Math.exp(voltageRatio * 5.199)), 2); // grams\n\t\t\tcase VoltageRatioSensorType.PN_1134:\n\t\t\t\treturn voltageRatio; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1136:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.2 - 2.5), 4); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1137:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.057143 - 8.75), 4); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1138:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.018 - 2.222), 3); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1139:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.009 - 4.444), 3); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1140:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.002421 + 3.478), 2); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1141:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.0092 + 10.652), 2); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1146:\n\t\t\t\treturn RoundDouble((1.3927 * Math.exp(1.967 * voltageRatio)), 2); // mm\n\t\t\tcase VoltageRatioSensorType.PN_3120:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.15432 - 0.647989), 4); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3121:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.0617295 - 1.619971), 4); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3122:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.0308647 - 3.239943), 3); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3123:\n\t\t\t\treturn RoundDouble((voltageRatio / 0.0154324 - 6.479886), 3); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3130:\n\t\t\t\treturn RoundDouble((voltageRatio * 190.6 - 40.2), 3); // %RH\n\n\t\t\tcase VoltageRatioSensorType.VOLTAGE_RATIO:\n\t\t\tdefault:\n\t\t\t\treturn voltageRatio;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_getSensorValueInRange(sensorValue: number, sensorType: VoltageRatioSensorType | PUNK.ENUM): boolean {\n\t\tif (sensorValue === PUNK.DBL) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (sensorType) {\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2D120X:\n\t\t\tcase VoltageRatioSensorType.PN_3520:\n\t\t\t\treturn ((sensorValue >= 4.0) && (sensorValue <= 30.0)); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2Y0A21:\n\t\t\tcase VoltageRatioSensorType.PN_3521:\n\t\t\t\treturn ((sensorValue >= 10.0) && (sensorValue <= 80.0)); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2Y0A02:\n\t\t\tcase VoltageRatioSensorType.PN_3522:\n\t\t\t\treturn ((sensorValue >= 20.0) && (sensorValue <= 150.0)); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1102:\n\t\t\t\treturn true; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1103:\n\t\t\t\treturn true; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1104:\n\t\t\t\treturn true; // +- 1\n\t\t\tcase VoltageRatioSensorType.PN_1105:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1106:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1107:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // %RH\n\t\t\tcase VoltageRatioSensorType.PN_1108:\n\t\t\t\treturn ((sensorValue >= -500.0) && (sensorValue <= 500.0)); // Gauss\n\t\t\tcase VoltageRatioSensorType.PN_1109:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1110:\n\t\t\t\treturn true; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1111:\n\t\t\t\treturn true; // +- 1\n\t\t\tcase VoltageRatioSensorType.PN_1112:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1113:\n\t\t\t\treturn ((sensorValue >= -1.0) && (sensorValue <= 1.0)); // +- 1\n\t\t\tcase VoltageRatioSensorType.PN_1115:\n\t\t\t\treturn ((sensorValue >= 20.0) && (sensorValue <= 250.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1116:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1118_AC:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 50.0)); // RMS Amps\n\t\t\tcase VoltageRatioSensorType.PN_1118_DC:\n\t\t\t\treturn ((sensorValue >= -50.0) && (sensorValue <= 50.0)); //DC Amps\n\t\t\tcase VoltageRatioSensorType.PN_1119_AC:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 20.0)); // RMS Amps\n\t\t\tcase VoltageRatioSensorType.PN_1119_DC:\n\t\t\t\treturn ((sensorValue >= -20.0) && (sensorValue <= 20.0)); //DC Amps\n\t\t\tcase VoltageRatioSensorType.PN_1120:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1121:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1122_AC:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 30.0)); // RMS Amps\n\t\t\tcase VoltageRatioSensorType.PN_1122_DC:\n\t\t\t\treturn ((sensorValue >= -30.0) && (sensorValue <= 30.0)); // DC Amps\n\t\t\tcase VoltageRatioSensorType.PN_1124:\n\t\t\tcase VoltageRatioSensorType.PN_1125_TEMPERATURE:\n\t\t\t\treturn ((sensorValue >= -50.0) && (sensorValue <= 150.0)); // Degrees Celcius\n\t\t\tcase VoltageRatioSensorType.PN_1125_HUMIDITY:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // %RH\n\t\t\tcase VoltageRatioSensorType.PN_1126:\n\t\t\t\treturn ((sensorValue >= -25.0) && (sensorValue <= 25.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1128:\n\t\t\t\treturn ((sensorValue >= 15.24) && (sensorValue <= 6500.0)); // cm\n\t\t\tcase VoltageRatioSensorType.PN_1129:\n\t\t\t\treturn true; // true/false\n\t\t\tcase VoltageRatioSensorType.PN_1131:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 2000.0)); // grams\n\t\t\tcase VoltageRatioSensorType.PN_1134:\n\t\t\t\treturn true; // 0-1\n\t\t\tcase VoltageRatioSensorType.PN_1136:\n\t\t\t\treturn ((sensorValue >= -2.0) && (sensorValue <= 2.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1137:\n\t\t\t\treturn ((sensorValue >= -7.0) && (sensorValue <= 7.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1138:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 50.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1139:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1140:\n\t\t\t\treturn ((sensorValue >= 20.0) && (sensorValue <= 400.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1141:\n\t\t\t\treturn ((sensorValue >= 15.0) && (sensorValue <= 115.0)); // kPa\n\t\t\tcase VoltageRatioSensorType.PN_1146:\n\t\t\t\treturn ((sensorValue >= 1.5) && (sensorValue <= 4.0)); // mm\n\t\t\tcase VoltageRatioSensorType.PN_3120:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 4.5)); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3121:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 11.3)); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3122:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 22.7)); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3123:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 45.3)); // kg\n\t\t\tcase VoltageRatioSensorType.PN_3130:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // %RH\n\n\t\t\tcase VoltageRatioSensorType.VOLTAGE_RATIO:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_getVoltageRatioSensorUnit(sensorType: VoltageRatioSensorType | PUNK.ENUM): UnitInfo {\n\t\tswitch (sensorType) {\n\t\t\tcase VoltageRatioSensorType.PN_1146:\n\t\t\t\treturn Units[Unit.MILLIMETER];\n\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2D120X:\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2Y0A21:\n\t\t\tcase VoltageRatioSensorType.PN_1101_SHARP2Y0A02:\n\t\t\tcase VoltageRatioSensorType.PN_1128:\n\t\t\tcase VoltageRatioSensorType.PN_3520:\n\t\t\tcase VoltageRatioSensorType.PN_3521:\n\t\t\tcase VoltageRatioSensorType.PN_3522:\n\t\t\t\treturn Units[Unit.CENTIMETER];\n\n\t\t\tcase VoltageRatioSensorType.PN_1102:\n\t\t\tcase VoltageRatioSensorType.PN_1103:\n\t\t\tcase VoltageRatioSensorType.PN_1110:\n\t\t\tcase VoltageRatioSensorType.PN_1129:\n\t\t\t\treturn Units[Unit.BOOLEAN];\n\n\t\t\tcase VoltageRatioSensorType.PN_1107:\n\t\t\tcase VoltageRatioSensorType.PN_1125_HUMIDITY:\n\t\t\tcase VoltageRatioSensorType.PN_3130:\n\t\t\t\treturn Units[Unit.PERCENT];\n\n\t\t\tcase VoltageRatioSensorType.PN_1108:\n\t\t\t\treturn Units[Unit.GAUSS];\n\n\t\t\tcase VoltageRatioSensorType.PN_1115:\n\t\t\tcase VoltageRatioSensorType.PN_1126:\n\t\t\tcase VoltageRatioSensorType.PN_1136:\n\t\t\tcase VoltageRatioSensorType.PN_1137:\n\t\t\tcase VoltageRatioSensorType.PN_1138:\n\t\t\tcase VoltageRatioSensorType.PN_1139:\n\t\t\tcase VoltageRatioSensorType.PN_1140:\n\t\t\tcase VoltageRatioSensorType.PN_1141:\n\t\t\t\treturn Units[Unit.KILOPASCAL];\n\n\t\t\tcase VoltageRatioSensorType.PN_1118_AC:\n\t\t\tcase VoltageRatioSensorType.PN_1119_AC:\n\t\t\tcase VoltageRatioSensorType.PN_1122_AC:\n\t\t\tcase VoltageRatioSensorType.PN_1118_DC:\n\t\t\tcase VoltageRatioSensorType.PN_1119_DC:\n\t\t\tcase VoltageRatioSensorType.PN_1122_DC:\n\t\t\t\treturn Units[Unit.AMPERE];\n\n\t\t\tcase VoltageRatioSensorType.PN_1124:\n\t\t\tcase VoltageRatioSensorType.PN_1125_TEMPERATURE:\n\t\t\t\treturn Units[Unit.DEGREE_CELCIUS];\n\n\t\t\tcase VoltageRatioSensorType.PN_1131:\n\t\t\t\treturn Units[Unit.GRAM];\n\n\t\t\tcase VoltageRatioSensorType.PN_3120:\n\t\t\tcase VoltageRatioSensorType.PN_3121:\n\t\t\tcase VoltageRatioSensorType.PN_3122:\n\t\t\tcase VoltageRatioSensorType.PN_3123:\n\t\t\t\treturn Units[Unit.KILOGRAM];\n\n\t\t\tcase VoltageRatioSensorType.VOLTAGE_RATIO:\n\t\t\tcase VoltageRatioSensorType.PN_1104:\n\t\t\tcase VoltageRatioSensorType.PN_1111:\n\t\t\tcase VoltageRatioSensorType.PN_1113:\n\t\t\tcase VoltageRatioSensorType.PN_1105:\n\t\t\tcase VoltageRatioSensorType.PN_1106:\n\t\t\tcase VoltageRatioSensorType.PN_1109:\n\t\t\tcase VoltageRatioSensorType.PN_1112:\n\t\t\tcase VoltageRatioSensorType.PN_1116:\n\t\t\tcase VoltageRatioSensorType.PN_1120:\n\t\t\tcase VoltageRatioSensorType.PN_1121:\n\t\t\tcase VoltageRatioSensorType.PN_1134:\n\t\t\tdefault:\n\t\t\t\treturn Units[Unit.NONE];\n\t\t}\n\t}\n}\n\nexport { VoltageRatioInput };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface DigitalInputData {\n\tstate: number,\n\tpowerSupply: Enum.PowerSupply | PUNK.ENUM,\n\tinputMode: Enum.InputMode | PUNK.ENUM,\n}\n\nabstract class DigitalInputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: DigitalInputData;\n\t/**\n\t * **StateChange** event\n\t *  * `state` - The state value\n\t * ---\n\t * This event will occur when the state of the digital input has changed.\n\t * \n\t * *   The value will either be 0 or 1 (true or false).\n\t */\n\tonStateChange: ((state: boolean) => void) | null = null;\n\t/** @internal */\n\t_gotStateChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Digital Input class is used to monitor the state of Phidget digital inputs. Use digital inputs to monitor the state of buttons, switches, or switch-to-ground sensors.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.DIGITAL_INPUT;\n\t\tthis.name = \"DigitalInput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETINPUTMODE:\n\t\t\tthis.data.inputMode = bp.entries[0].v as Enum.InputMode;\n\t\t\tthis._FIREPropertyChange('InputMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETPOWERSUPPLY:\n\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\n\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\tbreak;\n\t\tcase BP.STATECHANGE: {\n\t\t\tthis.data.state = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onStateChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onStateChange(!!this.data.state);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): DigitalInputData {\n\t\treturn {\n\t\t\tstate: PUNK.BOOL,\n\t\t\tpowerSupply: PUNK.ENUM,\n\t\t\tinputMode: PUNK.ENUM,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1018_DIGITALINPUT_1000:\n\t\t\tthis.data.state = (<InterfaceKitDevice>this._ch!.parent).data.inputState[this._ch!.index];\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1047_DIGITALINPUT_200:\n\t\tcase DeviceChannelUID._1047_DIGITALINPUT_300:\n\t\t\tthis.data.state = (<EncoderDevice>this._ch!.parent).data.inputState[this._ch!.index];\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\tthis.data.powerSupply = Enum.PowerSupply.VOLTS_12;\n\t\t\tthis.data.inputMode = Enum.InputMode.NPN;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1018_DIGITALINPUT_1000:\n\t\tcase DeviceChannelUID._1047_DIGITALINPUT_200:\n\t\tcase DeviceChannelUID._1047_DIGITALINPUT_300:\n\t\tcase DeviceChannelUID._HUB_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1200_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1300_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1301_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._HIN1101_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._HIN1100_DIGITALINPUT_100:\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_DIGITALINPUT_120:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.powerSupply });\n\t\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.inputMode });\n\t\t\tawait bp.send(this._ch, BP.SETINPUTMODE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.state == PUNK.BOOL)\n\t\t\t&& ! this._gotStateChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.state != PUNK.BOOL)\n\t\t\tif (this.onStateChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onStateChange(!!this.data.state);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The input polarity mode for your channel.\n\t * \n\t * *   See your device's User Guide for more information about what value to chooose for the `InputMode`\n\t * @throws {@link PhidgetError}\n\t */\n\tget inputMode() { return this.getInputMode(); }\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t */\n\tget powerSupply() { return this.getPowerSupply(); }\n\t/**\n\t * The most recent state value that the channel has reported.\n\t * @throws {@link PhidgetError}\n\t */\n\tget state() { return this.getState(); }\n\n\t/**\n\t * The input polarity mode for your channel.\n\t * \n\t * *   See your device's User Guide for more information about what value to chooose for the `InputMode`\n\t * @returns The input mode value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetInputMode(): Enum.InputMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.inputMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.inputMode);\n\t}\n\n\t/**\n\t * The input polarity mode for your channel.\n\t * \n\t * *   See your device's User Guide for more information about what value to chooose for the `InputMode`\n\t * @throws {@link PhidgetError}\n\t * @param inputMode - The input mode value\n\t */\n\tasync setInputMode(inputMode: Enum.InputMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedInputMode(this._ch!, inputMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified InputMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: inputMode });\n\t\tawait bp.send(this._ch, BP.SETINPUTMODE);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @returns The power supply value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPowerSupply(): Enum.PowerSupply {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.powerSupply === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.powerSupply);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t * @param powerSupply - The power supply value\n\t */\n\tasync setPowerSupply(powerSupply: Enum.PowerSupply): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedPowerSupply(this._ch!, powerSupply))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified PowerSupply is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: powerSupply });\n\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t}\n\n\t/**\n\t * The most recent state value that the channel has reported.\n\t * @returns The state value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetState(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.state === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.state);\n\t}\n\n}\nimport { type InterfaceKitDevice } from '../usb/device/InterfaceKitDevice';\nimport { type EncoderDevice } from '../usb/device/EncoderDevice';\nexport { DigitalInputBase };\n","import { DigitalInputBase } from './DigitalInput.gen';\r\nimport { BridgePacket } from '../BridgePacket';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport * as Enum from '../Enumerations.gen';\r\n\r\n/** @public */\r\nclass DigitalInput extends DigitalInputBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.POWERSUPPLYCHANGE:\r\n\t\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\r\n\t\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase BP.INPUTMODECHANGE:\r\n\t\t\t\tthis.data.inputMode = bp.entries[0].v as Enum.InputMode;\r\n\t\t\t\tthis._FIREPropertyChange('InputMode', bp);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\nexport { DigitalInput };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface DigitalOutputData {\n\tdutyCycle: number,\n\tmaxDutyCycle: number,\n\tminDutyCycle: number,\n\tLEDCurrentLimit: number,\n\tminLEDCurrentLimit: number,\n\tmaxLEDCurrentLimit: number,\n\tLEDForwardVoltage: Enum.LEDForwardVoltage | PUNK.ENUM,\n\tstate: number,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n\tfrequency: number,\n\tmaxFrequency: number,\n\tminFrequency: number,\n}\n\nabstract class DigitalOutputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: DigitalOutputData;\n\n\t/**\n\t * The Digital Output class is used to control digital logic outputs and LED outputs on Phidgets boards.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.DIGITAL_OUTPUT;\n\t\tthis.name = \"DigitalOutput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDUTYCYCLE:\n\t\t\tthis.data.dutyCycle = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DutyCycle', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.SETFREQUENCY:\n\t\t\tthis.data.frequency = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Frequency', bp);\n\t\t\tbreak;\n\t\tcase BP.SETLEDCURRENTLIMIT:\n\t\t\tthis.data.LEDCurrentLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('LEDCurrentLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.SETLEDFORWARDVOLTAGE:\n\t\t\tthis.data.LEDForwardVoltage = bp.entries[0].v as Enum.LEDForwardVoltage;\n\t\t\tthis._FIREPropertyChange('LEDForwardVoltage', bp);\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETSTATE:\n\t\t\tthis.data.state = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('State', bp);\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): DigitalOutputData {\n\t\treturn {\n\t\t\tdutyCycle: PUNK.DBL,\n\t\t\tmaxDutyCycle: PUNK.DBL,\n\t\t\tminDutyCycle: PUNK.DBL,\n\t\t\tLEDCurrentLimit: PUNK.DBL,\n\t\t\tminLEDCurrentLimit: PUNK.DBL,\n\t\t\tmaxLEDCurrentLimit: PUNK.DBL,\n\t\t\tLEDForwardVoltage: PUNK.ENUM,\n\t\t\tstate: PUNK.BOOL,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t\tfrequency: PUNK.DBL,\n\t\t\tmaxFrequency: PUNK.DBL,\n\t\t\tminFrequency: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_USB:\n\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_USB:\n\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\tthis.data.dutyCycle = 0;\n\t\t\tthis.data.maxDutyCycle = 1;\n\t\t\tthis.data.minDutyCycle = 0;\n\t\t\tthis.data.state = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_1000:\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\t\tthis.data.dutyCycle = 0;\n\t\t\tthis.data.maxDutyCycle = 1;\n\t\t\tthis.data.minDutyCycle = 0;\n\t\t\tthis.data.state = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\t\tthis.data.dutyCycle = 0;\n\t\t\tthis.data.maxDutyCycle = 1;\n\t\t\tthis.data.minDutyCycle = 0;\n\t\t\tthis.data.state = 0;\n\t\t\tthis.data.maxFailsafeTime = 60000;\n\t\t\tthis.data.minFailsafeTime = 100;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\t\tthis.data.dutyCycle = 0;\n\t\t\tthis.data.maxDutyCycle = 1;\n\t\t\tthis.data.minDutyCycle = 0;\n\t\t\tthis.data.state = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tthis.data.frequency = 15625;\n\t\t\tthis.data.maxFrequency = 20000;\n\t\t\tthis.data.minFrequency = 100;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\t\tthis.data.dutyCycle = 0;\n\t\t\tthis.data.maxDutyCycle = 1;\n\t\t\tthis.data.minDutyCycle = 0;\n\t\t\tthis.data.LEDCurrentLimit = 0.02;\n\t\t\tthis.data.minLEDCurrentLimit = 0;\n\t\t\tthis.data.maxLEDCurrentLimit = 0.04;\n\t\t\tthis.data.LEDForwardVoltage = Enum.LEDForwardVoltage.VOLTS_3_2;\n\t\t\tthis.data.state = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\t\tthis.data.dutyCycle = 0;\n\t\t\tthis.data.maxDutyCycle = 1;\n\t\t\tthis.data.minDutyCycle = 0;\n\t\t\tthis.data.state = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tthis.data.frequency = 20000;\n\t\t\tthis.data.maxFrequency = 20000;\n\t\t\tthis.data.minFrequency = 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_USB:\n\t\tcase DeviceChannelUID._1014_DIGITALOUTPUT_800_VINT:\n\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_USB:\n\t\tcase DeviceChannelUID._1017_DIGITALOUTPUT_200_VINT:\n\t\tcase DeviceChannelUID._1018_DIGITALOUTPUT_1000:\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._HUB_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._OUT1100_DIGITALOUTPUT_120:\n\t\tcase DeviceChannelUID._LED1000_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1000_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1100_DIGITALOUTPUT_120:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_100:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_110:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_FREQ_200:\n\t\tcase DeviceChannelUID._REL1101_DIGITALOUTPUT_200:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The `dutyCycle` represents the fraction of time the output is on (high).\n\t * \n\t * *   A `dutyCycle` of 1.0 translates to a high output, a `dutyCycle` of 0 translates to a low output.\n\t * *   A `dutyCycle` of 0.5 translates to an output that is high half the time, which results in an average output voltage of (output voltage x 0.5)\n\t * *   You can use the `dutyCycle` to create a dimming effect on LEDs.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dutyCycle() { return this.getDutyCycle(); }\n\t/**\n\t * The minimum value that `dutyCycle` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDutyCycle() { return this.getMinDutyCycle(); }\n\t/**\n\t * The maximum value that `dutyCycle` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDutyCycle() { return this.getMaxDutyCycle(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The `frequency` parameter sets the PWM frequency for all frequency-settable PWM outputs on the board.\n\t * @throws {@link PhidgetError}\n\t */\n\tget frequency() { return this.getFrequency(); }\n\t/**\n\t * The minimum value that `frequency` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFrequency() { return this.getMinFrequency(); }\n\t/**\n\t * The maximum value that `frequency` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFrequency() { return this.getMaxFrequency(); }\n\t/**\n\t * The `LEDCurrentLimit` is the maximum amount of current that the controller will provide to the output.\n\t * \n\t * *   Reference the data sheet of the LED you are using before setting this value.\n\t * @throws {@link PhidgetError}\n\t */\n\tget LEDCurrentLimit() { return this.getLEDCurrentLimit(); }\n\t/**\n\t * The minimum value that `LEDCurrentLimit` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minLEDCurrentLimit() { return this.getMinLEDCurrentLimit(); }\n\t/**\n\t * The maximum value that `LEDCurrentLimit` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxLEDCurrentLimit() { return this.getMaxLEDCurrentLimit(); }\n\t/**\n\t * The `LEDForwardVoltage` is the voltage that will be available to your LED.\n\t * \n\t * *   Reference the data sheet of the LED you are using before setting this value. Choose the `LEDForwardVoltage` that is closest to the forward voltage specified in the data sheet.\n\t * *   This forward voltage is shared for all channels on this device. Setting the LEDForwardVoltage on any channel will set the LEDForwardVoltage for all channels on the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget LEDForwardVoltage() { return this.getLEDForwardVoltage(); }\n\t/**\n\t * The `state` will indicate whether the output is high (TRUE) or low (FALSE).\n\t * \n\t * *   If a `dutyCycle` has been set, the state will return as TRUE if the DutyCycle is above 0.5, or FALSE otherwise.\n\t * @throws {@link PhidgetError}\n\t */\n\tget state() { return this.getState(); }\n\n\t/**\n\t * The `dutyCycle` represents the fraction of time the output is on (high).\n\t * \n\t * *   A `dutyCycle` of 1.0 translates to a high output, a `dutyCycle` of 0 translates to a low output.\n\t * *   A `dutyCycle` of 0.5 translates to an output that is high half the time, which results in an average output voltage of (output voltage x 0.5)\n\t * *   You can use the `dutyCycle` to create a dimming effect on LEDs.\n\t * @returns The duty cycle value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDutyCycle(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dutyCycle === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.dutyCycle);\n\t}\n\n\t/**\n\t * The `dutyCycle` represents the fraction of time the output is on (high).\n\t * \n\t * *   A `dutyCycle` of 1.0 translates to a high output, a `dutyCycle` of 0 translates to a low output.\n\t * *   A `dutyCycle` of 0.5 translates to an output that is high half the time, which results in an average output voltage of (output voltage x 0.5)\n\t * *   You can use the `dutyCycle` to create a dimming effect on LEDs.\n\t * @throws {@link PhidgetError}\n\t * @param dutyCycle - The duty cycle value\n\t */\n\tasync setDutyCycle(dutyCycle: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dutyCycle < this.data.minDutyCycle || dutyCycle > this.data.maxDutyCycle)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDutyCycle + \" - \" + this.data.maxDutyCycle + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: dutyCycle });\n\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t}\n\n\t/**\n\t * The minimum value that `dutyCycle` can be set to.\n\t * @returns The duty cycle value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDutyCycle(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDutyCycle === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDutyCycle);\n\t}\n\n\t/**\n\t * The maximum value that `dutyCycle` can be set to.\n\t * @returns The duty cycle value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDutyCycle(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDutyCycle === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDutyCycle);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For Digital Output channels, this will set the output State to FALSE. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * The `frequency` parameter sets the PWM frequency for all frequency-settable PWM outputs on the board.\n\t * @returns The PWM frequency\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFrequency(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.frequency === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.frequency);\n\t}\n\n\t/**\n\t * The `frequency` parameter sets the PWM frequency for all frequency-settable PWM outputs on the board.\n\t * @throws {@link PhidgetError}\n\t * @param frequency - The PWM frequency\n\t */\n\tasync setFrequency(frequency: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (frequency < this.data.minFrequency || frequency > this.data.maxFrequency)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minFrequency + \" - \" + this.data.maxFrequency + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: frequency });\n\t\tawait bp.send(this._ch, BP.SETFREQUENCY);\n\t}\n\n\t/**\n\t * The minimum value that `frequency` can be set to.\n\t * @returns The frequency\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFrequency(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFrequency === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFrequency);\n\t}\n\n\t/**\n\t * The maximum value that `frequency` can be set to.\n\t * @returns The frequency\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFrequency(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFrequency === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFrequency);\n\t}\n\n\t/**\n\t * The `LEDCurrentLimit` is the maximum amount of current that the controller will provide to the output.\n\t * \n\t * *   Reference the data sheet of the LED you are using before setting this value.\n\t * @returns The current limit value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetLEDCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.LEDCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.LEDCurrentLimit);\n\t}\n\n\t/**\n\t * The `LEDCurrentLimit` is the maximum amount of current that the controller will provide to the output.\n\t * \n\t * *   Reference the data sheet of the LED you are using before setting this value.\n\t * @throws {@link PhidgetError}\n\t * @param LEDCurrentLimit - The current limit value\n\t */\n\tasync setLEDCurrentLimit(LEDCurrentLimit: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (LEDCurrentLimit < this.data.minLEDCurrentLimit || LEDCurrentLimit > this.data.maxLEDCurrentLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minLEDCurrentLimit + \" - \" + this.data.maxLEDCurrentLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: LEDCurrentLimit });\n\t\tawait bp.send(this._ch, BP.SETLEDCURRENTLIMIT);\n\t}\n\n\t/**\n\t * The minimum value that `LEDCurrentLimit` can be set to.\n\t * @returns The current limit value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinLEDCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minLEDCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minLEDCurrentLimit);\n\t}\n\n\t/**\n\t * The maximum value that `LEDCurrentLimit` can be set to.\n\t * @returns The current limit value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxLEDCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxLEDCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxLEDCurrentLimit);\n\t}\n\n\t/**\n\t * The `LEDForwardVoltage` is the voltage that will be available to your LED.\n\t * \n\t * *   Reference the data sheet of the LED you are using before setting this value. Choose the `LEDForwardVoltage` that is closest to the forward voltage specified in the data sheet.\n\t * *   This forward voltage is shared for all channels on this device. Setting the LEDForwardVoltage on any channel will set the LEDForwardVoltage for all channels on the device.\n\t * @returns The forward voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetLEDForwardVoltage(): Enum.LEDForwardVoltage {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.LEDForwardVoltage === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.LEDForwardVoltage);\n\t}\n\n\t/**\n\t * The `LEDForwardVoltage` is the voltage that will be available to your LED.\n\t * \n\t * *   Reference the data sheet of the LED you are using before setting this value. Choose the `LEDForwardVoltage` that is closest to the forward voltage specified in the data sheet.\n\t * *   This forward voltage is shared for all channels on this device. Setting the LEDForwardVoltage on any channel will set the LEDForwardVoltage for all channels on the device.\n\t * @throws {@link PhidgetError}\n\t * @param LEDForwardVoltage - The forward voltage value\n\t */\n\tasync setLEDForwardVoltage(LEDForwardVoltage: Enum.LEDForwardVoltage): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedLEDForwardVoltage(this._ch!, LEDForwardVoltage))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified LEDForwardVoltage is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: LEDForwardVoltage });\n\t\tawait bp.send(this._ch, BP.SETLEDFORWARDVOLTAGE);\n\t}\n\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * The `state` will indicate whether the output is high (TRUE) or low (FALSE).\n\t * \n\t * *   If a `dutyCycle` has been set, the state will return as TRUE if the DutyCycle is above 0.5, or FALSE otherwise.\n\t * @returns The state value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetState(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.state === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.state);\n\t}\n\n\t/**\n\t * The `state` will dictate whether the output is constantly high (TRUE) or low (FALSE).\n\t * \n\t * *   This will override any `dutyCycle` that may have been set on the channel.\n\t * *   Setting the `state` to TRUE is the same as setting `dutyCycle` to 1.0, and setting the `state` to FALSE is the same as setting a `dutyCycle` of 0.0.\n\t * @throws {@link PhidgetError}\n\t * @param state - The state value\n\t */\n\tasync setState(state: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (state !== false && state !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (state ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETSTATE);\n\t}\n\n}\nexport { DigitalOutputBase };\n","import { DigitalOutputBase } from './DigitalOutput.gen';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { BridgePacket, PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass DigitalOutput extends DigitalOutputBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.SETDUTYCYCLE:\r\n\t\t\t\tthis.data.state = (bp.getNumber(0) ? 1 : 0);\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase BP.SETSTATE:\r\n\t\t\t\tthis.data.dutyCycle = (bp.getBoolean(0) ? 1 : 0);\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.FAILSAFE_CONDITION:\r\n\t\t\t\tthis.data.state = 0;\r\n\t\t\t\tthis.data.dutyCycle = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ErrorEventCode.INVALID_STATE_CONDITION:\r\n\t\t\t\tthis.data.state = PUNK.BOOL;\r\n\t\t\t\tthis.data.dutyCycle = PUNK.DBL;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { DigitalOutput };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface RCServoData {\n\tmaxPulseWidthLimit: number,\n\tmaxPulseWidth: number,\n\tmaxPosition: number,\n\tmaxVelocityLimit: number,\n\tmaxAcceleration: number,\n\tmaxTorque: number,\n\tminTorque: number,\n\tminPulseWidthLimit: number,\n\tminPulseWidth: number,\n\tminPosition: number,\n\tminVelocityLimit: number,\n\tminAcceleration: number,\n\tposition: number,\n\ttargetPosition: number,\n\tvelocityLimit: number,\n\tvelocity: number,\n\tacceleration: number,\n\ttorque: number,\n\tisMoving: number,\n\tengaged: number,\n\tspeedRampingState: number,\n\tvoltage: Enum.RCServoVoltage | PUNK.ENUM,\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n}\n\nabstract class RCServoBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: RCServoData;\n\t/**\n\t * **PositionChange** event\n\t *  * `position` - The position value\n\t * ---\n\t * An event that occurs when the position changes on a RC servo motor.\n\t */\n\tonPositionChange: ((position: number) => void) | null = null;\n\t/** @internal */\n\t_gotPositionChangeErrorEvent?: boolean;\n\t/**\n\t * **VelocityChange** event\n\t *  * `velocity` - The velocity value\n\t * ---\n\t * An event that occurs when the velocity changes on a RC servo motor.\n\t */\n\tonVelocityChange: ((velocity: number) => void) | null = null;\n\t/** @internal */\n\t_gotVelocityChangeErrorEvent?: boolean;\n\t/**\n\t * **TargetPositionReached** event\n\t *  * `position` - The position value\n\t * ---\n\t * Occurs when the RC servo motor has reached the `targetPosition`.\n\t * \n\t * *   The controller cannot know if the RC servo motor has physically reached the target position. When `targetPosition` is reached, it simply means the controller pulse width output is matching its target.\n\t */\n\tonTargetPositionReached: ((position: number) => void) | null = null;\n\t/** @internal */\n\t_gotTargetPositionReachedErrorEvent?: boolean;\n\n\t/**\n\t * The RC Servo class controls the signal being sent to the servo motors from the Phidget controller in order to control their position. This class provides control of the position, velocity, acceleration, and supply voltage of the attached servo.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.RC_SERVO;\n\t\tthis.name = \"RCServo\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETACCELERATION:\n\t\t\tthis.data.acceleration = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Acceleration', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETENGAGED:\n\t\t\tthis.data.engaged = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Engaged', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.SETMINPULSEWIDTH:\n\t\t\tthis.data.minPulseWidth = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('MinPulseWidth', bp);\n\t\t\tbreak;\n\t\tcase BP.SETMAXPULSEWIDTH:\n\t\t\tthis.data.maxPulseWidth = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('MaxPulseWidth', bp);\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETSPEEDRAMPINGSTATE:\n\t\t\tthis.data.speedRampingState = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('SpeedRampingState', bp);\n\t\t\tbreak;\n\t\tcase BP.SETTARGETPOSITION:\n\t\t\tthis.data.targetPosition = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetPosition', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDUTYCYCLE:\n\t\t\tthis.data.torque = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Torque', bp);\n\t\t\tbreak;\n\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\tthis.data.velocityLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('VelocityLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.SETVOLTAGE:\n\t\t\tthis.data.voltage = bp.entries[0].v as Enum.RCServoVoltage;\n\t\t\tthis._FIREPropertyChange('Voltage', bp);\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): RCServoData {\n\t\treturn {\n\t\t\tmaxPulseWidthLimit: PUNK.DBL,\n\t\t\tmaxPulseWidth: PUNK.DBL,\n\t\t\tmaxPosition: PUNK.DBL,\n\t\t\tmaxVelocityLimit: PUNK.DBL,\n\t\t\tmaxAcceleration: PUNK.DBL,\n\t\t\tmaxTorque: PUNK.DBL,\n\t\t\tminTorque: PUNK.DBL,\n\t\t\tminPulseWidthLimit: PUNK.DBL,\n\t\t\tminPulseWidth: PUNK.DBL,\n\t\t\tminPosition: PUNK.DBL,\n\t\t\tminVelocityLimit: PUNK.DBL,\n\t\t\tminAcceleration: PUNK.DBL,\n\t\t\tposition: PUNK.DBL,\n\t\t\ttargetPosition: PUNK.DBL,\n\t\t\tvelocityLimit: PUNK.DBL,\n\t\t\tvelocity: PUNK.DBL,\n\t\t\tacceleration: PUNK.DBL,\n\t\t\ttorque: PUNK.DBL,\n\t\t\tisMoving: PUNK.BOOL,\n\t\t\tengaged: PUNK.BOOL,\n\t\t\tspeedRampingState: PUNK.BOOL,\n\t\t\tvoltage: PUNK.ENUM,\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\t\tthis.data.maxPulseWidthLimit = 4000;\n\t\t\tthis.data.maxPulseWidth = 2450;\n\t\t\tthis.data.maxPosition = 180;\n\t\t\tthis.data.maxVelocityLimit = 781250;\n\t\t\tthis.data.maxAcceleration = 3906250;\n\t\t\tthis.data.minPulseWidthLimit = 0.063;\n\t\t\tthis.data.minPulseWidth = 550;\n\t\t\tthis.data.minPosition = 0;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 156.25;\n\t\t\tthis.data.velocityLimit = 1900;\n\t\t\tthis.data.acceleration = 3800;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.speedRampingState = 1;\n\t\t\tthis.data.voltage = Enum.RCServoVoltage.VOLTS_5_0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\tthis.data.maxPulseWidthLimit = 4000;\n\t\t\tthis.data.maxPulseWidth = 2450;\n\t\t\tthis.data.maxPosition = 180;\n\t\t\tthis.data.maxVelocityLimit = 781250;\n\t\t\tthis.data.maxAcceleration = 3906250;\n\t\t\tthis.data.minPulseWidthLimit = 0.063;\n\t\t\tthis.data.minPulseWidth = 550;\n\t\t\tthis.data.minPosition = 0;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 156.25;\n\t\t\tthis.data.velocityLimit = 1900;\n\t\t\tthis.data.acceleration = 3800;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.speedRampingState = 1;\n\t\t\tthis.data.voltage = Enum.RCServoVoltage.VOLTS_5_0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\tthis.data.maxPulseWidthLimit = 4000;\n\t\t\tthis.data.maxPulseWidth = 2450;\n\t\t\tthis.data.maxPosition = 180;\n\t\t\tthis.data.maxVelocityLimit = 781250;\n\t\t\tthis.data.maxAcceleration = 3906250;\n\t\t\tthis.data.minPulseWidthLimit = 0.063;\n\t\t\tthis.data.minPulseWidth = 550;\n\t\t\tthis.data.minPosition = 0;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 156.25;\n\t\t\tthis.data.targetPosition = 1500;\n\t\t\tthis.data.velocityLimit = 1900;\n\t\t\tthis.data.acceleration = 3800;\n\t\t\tthis.data.isMoving = 0;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.speedRampingState = 1;\n\t\t\tthis.data.voltage = Enum.RCServoVoltage.VOLTS_5_0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_100:\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_110:\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._RCC1000_RCSERVO_200:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.targetPosition });\n\t\t\tawait bp.send(this._ch, BP.SETTARGETPOSITION);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * When changing velocity, the RC servo motor will accelerate/decelerate at this rate.\n\t * \n\t * *   The acceleration is bounded by `maxAcceleration` and `minAcceleration`.\n\t * \n\t * *   Using the **default settings** this acceleration will correspond acceleration of servo arm in **degrees/s2**, for many standard RC servos.\n\t * \n\t * *   `speedRampingState` controls whether or not the acceleration value is actually applied when trying to reach a target position.\n\t * *   There is a practical limit on how fast your RC servo motor can accelerate. This is based on the load and physical design of the motor.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget acceleration() { return this.getAcceleration(); }\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * \n\t * *   This value depends on `minPosition`/`maxPosition` and `minPulseWidth`/`maxPulseWidth`\n\t * .\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum acceleration that `acceleration` can be set to.\n\t * \n\t * *   This value depends on `minPosition`/`maxPosition` and `minPulseWidth`/`maxPulseWidth`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `VelocityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * When engaged, a RC servo motor has the ability to be positioned. When disengaged, no commands are sent to the RC servo motor.\n\t * \n\t * *   There is no position feedback to the controller, so the RC servo motor will immediately snap to the `targetPosition` after being engaged from a disengaged state.\n\t * *   This property is useful for relaxing a servo once it has reached a given position.\n\t * *   If you are concerned about tracking position accurately, you should not disengage the motor while `isMoving` is true.\n\t * @throws {@link PhidgetError}\n\t */\n\tget engaged() { return this.getEngaged(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * `isMoving` returns true if the RC servo motor is currently in motion.\n\t * \n\t * *   The controller cannot know if the RC servo motor is physically moving. When `isMoving` is false, it simply means there are no commands in the pipeline to the RC servo motor.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isMoving() { return this.getIsMoving(); }\n\t/**\n\t * The most recent position of the RC servo motor that the controller has reported.\n\t * \n\t * *   This value will always be between `minPosition` and `maxPosition`.\n\t * \n\t * *   Using the **default settings** this position will correspond to the rotation of the servo arm in **degrees**, for many standard RC servos.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget position() { return this.getPosition(); }\n\t/**\n\t * The minimum position that `targetPosition` can be set to.\n\t * \n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPosition() { return this.getMinPosition(); }\n\tset minPosition(minPosition: number) { this.setMinPosition(minPosition); }\n\t/**\n\t * The maximum position `targetPosition` can be set to.\n\t * \n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPosition() { return this.getMaxPosition(); }\n\tset maxPosition(maxPosition: number) { this.setMaxPosition(maxPosition); }\n\t/**\n\t * The `minPulseWidth` represents the minimum pulse width that your RC servo motor specifies.\n\t * \n\t * *   This value can be found in the data sheet of most RC servo motors.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPulseWidth() { return this.getMinPulseWidth(); }\n\t/**\n\t * The `maxPulseWidth` represents the maximum pulse width that your RC servo motor specifies.\n\t * \n\t * *   This value can be found in the data sheet of most RC servo motors.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPulseWidth() { return this.getMaxPulseWidth(); }\n\t/**\n\t * The minimum pulse width that `minPulseWidth` can be set to.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPulseWidthLimit() { return this.getMinPulseWidthLimit(); }\n\t/**\n\t * The maximum pulse width that `maxPulseWidth` can be set to.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPulseWidthLimit() { return this.getMaxPulseWidthLimit(); }\n\t/**\n\t * When speed ramping state is enabled, the controller will take the `acceleration` and `velocityLimit` properties into account when moving the RC servo motor, usually resulting in smooth motion. If speed ramping state is not enabled, the controller will simply set the RC servo motor to the requested position.\n\t * @throws {@link PhidgetError}\n\t */\n\tget speedRampingState() { return this.getSpeedRampingState(); }\n\t/**\n\t * If the RC servo motor is configured and `targetPosition` is set, the controller will continuously try to reach targeted position.\n\t * \n\t * *   The target position is bounded by `minPosition` and `maxPosition`.\n\t * \n\t * *   Using the **default settings** this position will correspond to the rotation of the servo arm in **degrees**, for many standard RC servos.\n\t * \n\t * *   If the RC servo motor is not engaged, then the position cannot be read.\n\t * *   The position can still be set while the RC servo motor is not engaged. Once engaged, the RC servo motor will snap to position, assuming it is not there already.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t * ### Position and Pulse Width\n\t * \n\t * *   An RC servo motor's position is controlled using a type of **Pulse Width Modulation**, sending voltage pulses of a given time span, or **Pulse Width** to the servo.\n\t * *   The servo translates the **Pulse Width** of the control signal to a corresponding position of the servo arm.\n\t * *   Knowing this, a servo's range of motion can be thought of in terms of a `minPulseWidth` and a `maxPulseWidth` corresponding to range of pulse widths that produce the servo arm's full **range of movement**.\n\t * \n\t * *   In Phidget22, you can adjust the `minPulseWidth` and `maxPulseWidth` stored by the library to match the desired **range of movement** you expect from your servo.\n\t * \n\t * *   Since directly setting the timing of RC servo pulse widths is not very intuitive for most purpses, we map these pulse widths to a user-defied _**Minimum**_ and _**Maximum**_ **Position**.This allows you to define the servo's position in terms best suited to your application, such as degrees, fractions of a rotation, or even some measure of speed for a continuous-rotation servo.\n\t * *   By setting the servo's `targetPosition` to `maxPosition`, the controller will send pulses of `maxPulseWidth` to the servo.\n\t *     *   Similarly, `minPosition` will send pulses of `minPulseWidth` to the servo\n\t *     *   `maxPosition` can be set smaller than `minPosition` to invert movement of the servo, if it helps your application.\n\t * *   Setting a `targetPosition` will transate the position between `minPosition` and `maxPosition` to a corresponding **Pulse Width** between `minPulseWidth` and `maxPulseWidth`, in turn sending the servo arm to the desired position.\n\t * *   Setting `velocityLimit` and `acceleration` for your servo will limit the rate of change of the servo's position in terms of one _**UserUnit**_ per second (or /s2). Here, a _**UserUnit**_ is whatever distance is maked by the change of the `targetPosition` by **1.0**\n\t * \n\t * ### Adjusting the Servo's Limits\n\t * \n\t * *   **To tune your program to a specific servo:**\n\t * \n\t * 1.  First adjust the servo's range of motion by setting the `maxPulseWidth` and `minPulseWidth`. You can use the default values for these _(or the ones on your servo's datasheet)_ as a starting point.\n\t * 2.  Send the servo to `maxPosition` and `minPosition` to check the results. Repeat steps 1 and 2 as nessesarry.\n\t * 3.  Set the `maxPosition` and `minPosition` to match whatever numbers you find best suited to your application.\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetPosition() { return this.getTargetPosition(); }\n\t/**\n\t * The `torque` is a ratio of the maximum available torque.\n\t * \n\t * *   The torque is bounded by `minTorque` and `maxTorque`\n\t * *   Increasing the torque will increase the speed and power consumption of the RC servo motor.\n\t * @throws {@link PhidgetError}\n\t */\n\tget torque() { return this.getTorque(); }\n\t/**\n\t * The minimum value that `torque` can be set to.\n\t * \n\t * *   `torque` is a ratio of the maximum available torque, therefore the minimum torque is a unitless constant.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minTorque() { return this.getMinTorque(); }\n\t/**\n\t * The maximum value that `torque` can be set to.\n\t * \n\t * *   `torque` is a ratio of the maximum available torque, therefore the minimum torque is a unitless constant.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxTorque() { return this.getMaxTorque(); }\n\t/**\n\t * The velocity that the RC servo motor is being driven at.\n\t * \n\t * *   A negative value means the RC servo motor is moving towards a lower position.\n\t * *   The velocity range of the RC servo motor will be from -`velocityLimit` to +`velocityLimit`, depending on direction.\n\t * *   This is not the actual physical velocity of the RC servo motor.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocity() { return this.getVelocity(); }\n\t/**\n\t * When moving, the RC servo motor velocity will be limited by this value.*   The velocity limit is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * \n\t * *   Using the **default settings** this velocity will correspond to the maximum speed of rotation of servo arm in **degrees/s**, for many standard RC servos.\n\t * \n\t * *   `speedRampingState` controls whether or not the velocity limit value is actually applied when trying to reach a target position.\n\t * *   The velocity range of the RC servo motor will be from -`velocityLimit` to +`velocityLimit`, depending on direction.\n\t * *   Note that when this value is set to 0, the RC servo motor will not move.\n\t * *   There is a practical limit on how fast your servo can rotate, based on the physical design of the motor.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocityLimit() { return this.getVelocityLimit(); }\n\t/**\n\t * The minimum velocity `velocityLimit` can be set to.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVelocityLimit() { return this.getMinVelocityLimit(); }\n\t/**\n\t * The maximum velocity `velocityLimit` can be set to. This value depends on `minPosition`/`maxPosition` and `minPulseWidth`/`maxPulseWidth`.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVelocityLimit() { return this.getMaxVelocityLimit(); }\n\t/**\n\t * The supply voltage for the RC servo motor.\n\t * \n\t * *   If your controller supports multiple RC servo motors, every motor will have the same supply voltage. It is not possible to set individual supply voltages.\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltage() { return this.getVoltage(); }\n\n\t/**\n\t * When changing velocity, the RC servo motor will accelerate/decelerate at this rate.\n\t * \n\t * *   The acceleration is bounded by `maxAcceleration` and `minAcceleration`.\n\t * \n\t * *   Using the **default settings** this acceleration will correspond acceleration of servo arm in **degrees/s2**, for many standard RC servos.\n\t * \n\t * *   `speedRampingState` controls whether or not the acceleration value is actually applied when trying to reach a target position.\n\t * *   There is a practical limit on how fast your RC servo motor can accelerate. This is based on the load and physical design of the motor.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getAcceleration(): number;\n\t/**\n\t * When changing velocity, the RC servo motor will accelerate/decelerate at this rate.\n\t * \n\t * *   The acceleration is bounded by `maxAcceleration` and `minAcceleration`.\n\t * \n\t * *   Using the **default settings** this acceleration will correspond acceleration of servo arm in **degrees/s2**, for many standard RC servos.\n\t * \n\t * *   `speedRampingState` controls whether or not the acceleration value is actually applied when trying to reach a target position.\n\t * *   There is a practical limit on how fast your RC servo motor can accelerate. This is based on the load and physical design of the motor.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t * @param acceleration - The acceleration value\n\t */\n\tabstract setAcceleration(acceleration: number): Promise<void>;\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * \n\t * *   This value depends on `minPosition`/`maxPosition` and `minPulseWidth`/`maxPulseWidth`\n\t * .\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinAcceleration(): number;\n\t/**\n\t * The maximum acceleration that `acceleration` can be set to.\n\t * \n\t * *   This value depends on `minPosition`/`maxPosition` and `minPulseWidth`/`maxPulseWidth`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxAcceleration(): number;\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `VelocityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `VelocityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * When engaged, a RC servo motor has the ability to be positioned. When disengaged, no commands are sent to the RC servo motor.\n\t * \n\t * *   There is no position feedback to the controller, so the RC servo motor will immediately snap to the `targetPosition` after being engaged from a disengaged state.\n\t * *   This property is useful for relaxing a servo once it has reached a given position.\n\t * *   If you are concerned about tracking position accurately, you should not disengage the motor while `isMoving` is true.\n\t * @returns The engaged value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetEngaged(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.engaged === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.engaged);\n\t}\n\n\t/**\n\t * When engaged, a RC servo motor has the ability to be positioned. When disengaged, no commands are sent to the RC servo motor.\n\t * \n\t * *   There is no position feedback to the controller, so the RC servo motor will immediately snap to the `targetPosition` after being engaged from a disengaged state.\n\t * *   This property is useful for relaxing a servo once it has reached a given position.\n\t * *   If you are concerned about tracking position accurately, you should not disengage the motor while `isMoving` is true.\n\t * @throws {@link PhidgetError}\n\t * @param engaged - The engaged value\n\t */\n\tasync setEngaged(engaged: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (engaged !== false && engaged !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (engaged ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENGAGED);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For RC Servo channels, this will disengage the servo. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * `isMoving` returns true if the RC servo motor is currently in motion.\n\t * \n\t * *   The controller cannot know if the RC servo motor is physically moving. When `isMoving` is false, it simply means there are no commands in the pipeline to the RC servo motor.\n\t * @returns The moving value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIsMoving(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.isMoving === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.isMoving);\n\t}\n\n\t/**\n\t * The most recent position of the RC servo motor that the controller has reported.\n\t * \n\t * *   This value will always be between `minPosition` and `maxPosition`.\n\t * \n\t * *   Using the **default settings** this position will correspond to the rotation of the servo arm in **degrees**, for many standard RC servos.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getPosition(): number;\n\t/**\n\t * The minimum position that `targetPosition` can be set to.\n\t * \n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t * @param minPosition - The position value\n\t */\n\tabstract setMinPosition(minPosition: number): void;\n\t/**\n\t * The minimum position that `targetPosition` can be set to.\n\t * \n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPosition(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPosition === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPosition);\n\t}\n\n\t/**\n\t * The maximum position `targetPosition` can be set to.\n\t * \n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t * @param maxPosition - The position value\n\t */\n\tabstract setMaxPosition(maxPosition: number): void;\n\t/**\n\t * The maximum position `targetPosition` can be set to.\n\t * \n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPosition(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPosition === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPosition);\n\t}\n\n\t/**\n\t * The `minPulseWidth` represents the minimum pulse width that your RC servo motor specifies.\n\t * \n\t * *   This value can be found in the data sheet of most RC servo motors.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t * @param minPulseWidth - The pulse width value\n\t */\n\tasync setMinPulseWidth(minPulseWidth: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: minPulseWidth });\n\t\tawait bp.send(this._ch, BP.SETMINPULSEWIDTH);\n\t}\n\n\t/**\n\t * The `minPulseWidth` represents the minimum pulse width that your RC servo motor specifies.\n\t * \n\t * *   This value can be found in the data sheet of most RC servo motors.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The pulse width value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPulseWidth(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPulseWidth === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPulseWidth);\n\t}\n\n\t/**\n\t * The `maxPulseWidth` represents the maximum pulse width that your RC servo motor specifies.\n\t * \n\t * *   This value can be found in the data sheet of most RC servo motors.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t * @param maxPulseWidth - The pulse width value\n\t */\n\tasync setMaxPulseWidth(maxPulseWidth: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: maxPulseWidth });\n\t\tawait bp.send(this._ch, BP.SETMAXPULSEWIDTH);\n\t}\n\n\t/**\n\t * The `maxPulseWidth` represents the maximum pulse width that your RC servo motor specifies.\n\t * \n\t * *   This value can be found in the data sheet of most RC servo motors.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The pulse width value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPulseWidth(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPulseWidth === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPulseWidth);\n\t}\n\n\t/**\n\t * The minimum pulse width that `minPulseWidth` can be set to.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The pulse width value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPulseWidthLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPulseWidthLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPulseWidthLimit);\n\t}\n\n\t/**\n\t * The maximum pulse width that `maxPulseWidth` can be set to.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The pulse width value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPulseWidthLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPulseWidthLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPulseWidthLimit);\n\t}\n\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * When speed ramping state is enabled, the controller will take the `acceleration` and `velocityLimit` properties into account when moving the RC servo motor, usually resulting in smooth motion. If speed ramping state is not enabled, the controller will simply set the RC servo motor to the requested position.\n\t * @returns The speed ramping state value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSpeedRampingState(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.speedRampingState === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.speedRampingState);\n\t}\n\n\t/**\n\t * When speed ramping state is enabled, the controller will take the `acceleration` and `velocityLimit` properties into account when moving the RC servo motor, usually resulting in smooth motion. If speed ramping state is not enabled, the controller will simply set the RC servo motor to the requested position.\n\t * @throws {@link PhidgetError}\n\t * @param speedRampingState - The speed ramping state value\n\t */\n\tasync setSpeedRampingState(speedRampingState: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (speedRampingState !== false && speedRampingState !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (speedRampingState ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETSPEEDRAMPINGSTATE);\n\t}\n\n\t/**\n\t * If the RC servo motor is configured and `targetPosition` is set, the controller will continuously try to reach targeted position.\n\t * \n\t * *   The target position is bounded by `minPosition` and `maxPosition`.\n\t * \n\t * *   Using the **default settings** this position will correspond to the rotation of the servo arm in **degrees**, for many standard RC servos.\n\t * \n\t * *   If the RC servo motor is not engaged, then the position cannot be read.\n\t * *   The position can still be set while the RC servo motor is not engaged. Once engaged, the RC servo motor will snap to position, assuming it is not there already.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t * ### Position and Pulse Width\n\t * \n\t * *   An RC servo motor's position is controlled using a type of **Pulse Width Modulation**, sending voltage pulses of a given time span, or **Pulse Width** to the servo.\n\t * *   The servo translates the **Pulse Width** of the control signal to a corresponding position of the servo arm.\n\t * *   Knowing this, a servo's range of motion can be thought of in terms of a `minPulseWidth` and a `maxPulseWidth` corresponding to range of pulse widths that produce the servo arm's full **range of movement**.\n\t * \n\t * *   In Phidget22, you can adjust the `minPulseWidth` and `maxPulseWidth` stored by the library to match the desired **range of movement** you expect from your servo.\n\t * \n\t * *   Since directly setting the timing of RC servo pulse widths is not very intuitive for most purpses, we map these pulse widths to a user-defied _**Minimum**_ and _**Maximum**_ **Position**.This allows you to define the servo's position in terms best suited to your application, such as degrees, fractions of a rotation, or even some measure of speed for a continuous-rotation servo.\n\t * *   By setting the servo's `targetPosition` to `maxPosition`, the controller will send pulses of `maxPulseWidth` to the servo.\n\t *     *   Similarly, `minPosition` will send pulses of `minPulseWidth` to the servo\n\t *     *   `maxPosition` can be set smaller than `minPosition` to invert movement of the servo, if it helps your application.\n\t * *   Setting a `targetPosition` will transate the position between `minPosition` and `maxPosition` to a corresponding **Pulse Width** between `minPulseWidth` and `maxPulseWidth`, in turn sending the servo arm to the desired position.\n\t * *   Setting `velocityLimit` and `acceleration` for your servo will limit the rate of change of the servo's position in terms of one _**UserUnit**_ per second (or /s2). Here, a _**UserUnit**_ is whatever distance is maked by the change of the `targetPosition` by **1.0**\n\t * \n\t * ### Adjusting the Servo's Limits\n\t * \n\t * *   **To tune your program to a specific servo:**\n\t * \n\t * 1.  First adjust the servo's range of motion by setting the `maxPulseWidth` and `minPulseWidth`. You can use the default values for these _(or the ones on your servo's datasheet)_ as a starting point.\n\t * 2.  Send the servo to `maxPosition` and `minPosition` to check the results. Repeat steps 1 and 2 as nessesarry.\n\t * 3.  Set the `maxPosition` and `minPosition` to match whatever numbers you find best suited to your application.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getTargetPosition(): number;\n\t/**\n\t * If the RC servo motor is configured and `targetPosition` is set, the controller will continuously try to reach targeted position.\n\t * \n\t * *   The target position is bounded by `minPosition` and `maxPosition`.\n\t * \n\t * *   Using the **default settings** this position will correspond to the rotation of the servo arm in **degrees**, for many standard RC servos.\n\t * \n\t * *   If the RC servo motor is not engaged, then the position cannot be read.\n\t * *   The position can still be set while the RC servo motor is not engaged. Once engaged, the RC servo motor will snap to position, assuming it is not there already.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t * \n\t * ### Position and Pulse Width\n\t * \n\t * *   An RC servo motor's position is controlled using a type of **Pulse Width Modulation**, sending voltage pulses of a given time span, or **Pulse Width** to the servo.\n\t * *   The servo translates the **Pulse Width** of the control signal to a corresponding position of the servo arm.\n\t * *   Knowing this, a servo's range of motion can be thought of in terms of a `minPulseWidth` and a `maxPulseWidth` corresponding to range of pulse widths that produce the servo arm's full **range of movement**.\n\t * \n\t * *   In Phidget22, you can adjust the `minPulseWidth` and `maxPulseWidth` stored by the library to match the desired **range of movement** you expect from your servo.\n\t * \n\t * *   Since directly setting the timing of RC servo pulse widths is not very intuitive for most purpses, we map these pulse widths to a user-defied _**Minimum**_ and _**Maximum**_ **Position**.This allows you to define the servo's position in terms best suited to your application, such as degrees, fractions of a rotation, or even some measure of speed for a continuous-rotation servo.\n\t * *   By setting the servo's `targetPosition` to `maxPosition`, the controller will send pulses of `maxPulseWidth` to the servo.\n\t *     *   Similarly, `minPosition` will send pulses of `minPulseWidth` to the servo\n\t *     *   `maxPosition` can be set smaller than `minPosition` to invert movement of the servo, if it helps your application.\n\t * *   Setting a `targetPosition` will transate the position between `minPosition` and `maxPosition` to a corresponding **Pulse Width** between `minPulseWidth` and `maxPulseWidth`, in turn sending the servo arm to the desired position.\n\t * *   Setting `velocityLimit` and `acceleration` for your servo will limit the rate of change of the servo's position in terms of one _**UserUnit**_ per second (or /s2). Here, a _**UserUnit**_ is whatever distance is maked by the change of the `targetPosition` by **1.0**\n\t * \n\t * ### Adjusting the Servo's Limits\n\t * \n\t * *   **To tune your program to a specific servo:**\n\t * \n\t * 1.  First adjust the servo's range of motion by setting the `maxPulseWidth` and `minPulseWidth`. You can use the default values for these _(or the ones on your servo's datasheet)_ as a starting point.\n\t * 2.  Send the servo to `maxPosition` and `minPosition` to check the results. Repeat steps 1 and 2 as nessesarry.\n\t * 3.  Set the `maxPosition` and `minPosition` to match whatever numbers you find best suited to your application.\n\t * @throws {@link PhidgetError}\n\t * @param targetPosition - The position value\n\t */\n\tabstract setTargetPosition(targetPosition: number): Promise<void>;\n\t/**\n\t * The `torque` is a ratio of the maximum available torque.\n\t * \n\t * *   The torque is bounded by `minTorque` and `maxTorque`\n\t * *   Increasing the torque will increase the speed and power consumption of the RC servo motor.\n\t * @returns The torque value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTorque(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.torque === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.torque);\n\t}\n\n\t/**\n\t * The `torque` is a ratio of the maximum available torque.\n\t * \n\t * *   The torque is bounded by `minTorque` and `maxTorque`\n\t * *   Increasing the torque will increase the speed and power consumption of the RC servo motor.\n\t * @throws {@link PhidgetError}\n\t * @param torque - The torque value.\n\t */\n\tasync setTorque(torque: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (torque < this.data.minTorque || torque > this.data.maxTorque)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minTorque + \" - \" + this.data.maxTorque + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: torque });\n\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t}\n\n\t/**\n\t * The minimum value that `torque` can be set to.\n\t * \n\t * *   `torque` is a ratio of the maximum available torque, therefore the minimum torque is a unitless constant.\n\t * @returns The torque value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinTorque(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minTorque === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minTorque);\n\t}\n\n\t/**\n\t * The maximum value that `torque` can be set to.\n\t * \n\t * *   `torque` is a ratio of the maximum available torque, therefore the minimum torque is a unitless constant.\n\t * @returns The torque value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxTorque(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxTorque === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxTorque);\n\t}\n\n\t/**\n\t * The velocity that the RC servo motor is being driven at.\n\t * \n\t * *   A negative value means the RC servo motor is moving towards a lower position.\n\t * *   The velocity range of the RC servo motor will be from -`velocityLimit` to +`velocityLimit`, depending on direction.\n\t * *   This is not the actual physical velocity of the RC servo motor.\n\t * \n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVelocity(): number;\n\t/**\n\t * When moving, the RC servo motor velocity will be limited by this value.*   The velocity limit is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * \n\t * *   Using the **default settings** this velocity will correspond to the maximum speed of rotation of servo arm in **degrees/s**, for many standard RC servos.\n\t * \n\t * *   `speedRampingState` controls whether or not the velocity limit value is actually applied when trying to reach a target position.\n\t * *   The velocity range of the RC servo motor will be from -`velocityLimit` to +`velocityLimit`, depending on direction.\n\t * *   Note that when this value is set to 0, the RC servo motor will not move.\n\t * *   There is a practical limit on how fast your servo can rotate, based on the physical design of the motor.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVelocityLimit(): number;\n\t/**\n\t * When moving, the RC servo motor velocity will be limited by this value.*   The velocity limit is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * \n\t * *   Using the **default settings** this velocity will correspond to the maximum speed of rotation of servo arm in **degrees/s**, for many standard RC servos.\n\t * \n\t * *   `speedRampingState` controls whether or not the velocity limit value is actually applied when trying to reach a target position.\n\t * *   The velocity range of the RC servo motor will be from -`velocityLimit` to +`velocityLimit`, depending on direction.\n\t * *   Note that when this value is set to 0, the RC servo motor will not move.\n\t * *   There is a practical limit on how fast your servo can rotate, based on the physical design of the motor.\n\t * *   The units for `targetPosition`, `velocityLimit`, and `acceleration` are configured by scaling the internal timing (set with `minPulseWidth` and `maxPulseWidth`) to a user specified range with `minPosition` and `maxPosition`.\n\t *   \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @throws {@link PhidgetError}\n\t * @param velocityLimit - The velocity value\n\t */\n\tabstract setVelocityLimit(velocityLimit: number): Promise<void>;\n\t/**\n\t * The minimum velocity `velocityLimit` can be set to.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinVelocityLimit(): number;\n\t/**\n\t * The maximum velocity `velocityLimit` can be set to. This value depends on `minPosition`/`maxPosition` and `minPulseWidth`/`maxPulseWidth`.  \n\t * \n\t * See `targetPosition` for a deeper explanation of how the settings of your RC Servo controller interact to move your servo.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxVelocityLimit(): number;\n\t/**\n\t * The supply voltage for the RC servo motor.\n\t * \n\t * *   If your controller supports multiple RC servo motors, every motor will have the same supply voltage. It is not possible to set individual supply voltages.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltage(): Enum.RCServoVoltage {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltage === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.voltage);\n\t}\n\n\t/**\n\t * The supply voltage for the RC servo motor.\n\t * \n\t * *   If your controller supports multiple RC servo motors, every motor will have the same supply voltage. It is not possible to set individual supply voltages.\n\t * @throws {@link PhidgetError}\n\t * @param voltage - The voltage value\n\t */\n\tasync setVoltage(voltage: Enum.RCServoVoltage): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedRCServoVoltage(this._ch!, voltage))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified RCServoVoltage is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: voltage });\n\t\tawait bp.send(this._ch, BP.SETVOLTAGE);\n\t}\n\n}\nexport { RCServoBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { RCServoBase } from './RCServo.gen';\nimport { ErrorCode } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { logEventException } from '../Logging';\n\n/** @public */\nclass RCServo extends RCServoBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.SETENGAGED:\n\t\t\t\tif (bp.getBoolean(0) === true && this.data.velocityLimit !== 0 && this.data.position !== this.data.targetPosition)\n\t\t\t\t\tthis.data.isMoving = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\tif (this.data.engaged && bp.getNumber(0) !== 0 && this.data.position !== this.data.targetPosition)\n\t\t\t\t\tthis.data.isMoving = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETTARGETPOSITION:\n\t\t\t\tif (this.data.engaged && this.data.velocityLimit !== 0 && this.data.position !== bp.getNumber(0))\n\t\t\t\t\tthis.data.isMoving = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.POSITIONCHANGE:\n\t\t\t\tthis.data.position = bp.getNumber(0);\n\t\t\t\tif (this._isAttachedDone && this.onPositionChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onPositionChange(this._positionUser(this.data.position));\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase BP.VELOCITYCHANGE:\n\t\t\t\tthis.data.velocity = bp.getNumber(0);\n\t\t\t\tif (this._isAttachedDone && this.onVelocityChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onVelocityChange(this._velocityUser(this.data.velocity));\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase BP.TARGETPOSITIONREACHED:\n\t\t\t\tthis.data.position = bp.getNumber(0);\n\t\t\t\tthis.data.isMoving = 0;\n\t\t\t\tif (this._isAttachedDone && this.onTargetPositionReached) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onTargetPositionReached(this._positionUser(this.data.position));\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_positionUser(position_us: number) {\n\n\t\treturn (this.data.minPosition +\n\t\t\t((position_us - this.data.minPulseWidth) / (this.data.maxPulseWidth - this.data.minPulseWidth)) *\n\t\t\tthis.data.maxPosition - this.data.minPosition);\n\t}\n\t/** @internal */\n\t_positionUS(position_user: number) {\n\n\t\tif (this.data.maxPosition > this.data.minPosition)\n\t\t\treturn (this.data.minPulseWidth +\n\t\t\t\t((this.data.maxPulseWidth - this.data.minPulseWidth) *\n\t\t\t\t\t(position_user - this.data.minPosition)) /\n\t\t\t\t(this.data.maxPosition - this.data.minPosition));\n\n\t\treturn (this.data.maxPulseWidth +\n\t\t\t((this.data.maxPulseWidth - this.data.minPulseWidth) *\n\t\t\t\t(position_user - this.data.maxPosition)) /\n\t\t\t(this.data.maxPosition - this.data.minPosition));\n\t}\n\t/** @internal */\n\t_velocityUser(velocity_us: number) {\n\n\t\treturn ((Math.abs((this.data.maxPosition - this.data.minPosition)) * velocity_us) /\n\t\t\t(this.data.maxPulseWidth - this.data.minPulseWidth));\n\t}\n\t/** @internal */\n\t_velocityUS(velocity_user: number) {\n\n\t\treturn (((this.data.maxPulseWidth - this.data.minPulseWidth) * velocity_user) /\n\t\t\tMath.abs(this.data.maxPosition - this.data.minPosition));\n\t}\n\t/** @internal */\n\t_accelUser(accel_us: number) {\n\n\t\treturn (((Math.abs((this.data.maxPosition - this.data.minPosition)) * accel_us) /\n\t\t\t(this.data.maxPulseWidth - this.data.minPulseWidth)));\n\t}\n\t/** @internal */\n\t_accelUS(accel_user: number) {\n\n\t\treturn (((this.data.maxPulseWidth - this.data.minPulseWidth) * accel_user) /\n\t\t\tMath.abs(this.data.maxPosition - this.data.minPosition));\n\t}\n\n\tgetAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.acceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._accelUser(this.data.acceleration));\n\t}\n\n\tgetMinAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._accelUser(this.data.minAcceleration));\n\t}\n\n\tgetMaxAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._accelUser(this.data.maxAcceleration));\n\t}\n\n\tgetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.position === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._positionUser(this.data.position));\n\t}\n\n\tsetMaxPosition(maxPosition: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.maxPosition = maxPosition;\n\t}\n\n\tsetMinPosition(minPosition: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.minPosition = minPosition;\n\t}\n\n\tgetTargetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetPosition === PUNK.DBL)\n\t\t\tthrow (new PhidgetError(ErrorCode.UNKNOWN_VALUE));\n\n\t\treturn this._positionUser(this.data.targetPosition);\n\t}\n\n\tgetVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._velocityUser(this.data.velocity));\n\t}\n\n\tgetVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._velocityUser(this.data.velocityLimit));\n\t}\n\n\tgetMinVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVelocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._velocityUser(this.data.minVelocityLimit));\n\t}\n\n\tgetMaxVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVelocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this._velocityUser(this.data.maxVelocityLimit));\n\t}\n\n\tasync setAcceleration(acceleration: number) {\n\t\tthis._assertOpen();\n\n\t\tacceleration = this._accelUS(acceleration);\n\n\t\tif (acceleration < this.data.minAcceleration || acceleration > this.data.maxAcceleration)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minAcceleration + \" - \" + this.maxAcceleration + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: acceleration });\n\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t}\n\n\tasync setTargetPosition(targetPosition: number) {\n\t\tthis._assertOpen();\n\n\t\ttargetPosition = this._positionUS(targetPosition);\n\n\t\tif (targetPosition < this.data.minPulseWidth || targetPosition > this.data.maxPulseWidth)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minPosition + \" - \" + this.maxPosition + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: targetPosition });\n\t\tawait bp.send(this._ch, BP.SETTARGETPOSITION);\n\t}\n\n\tasync setVelocityLimit(velocityLimit: number) {\n\t\tthis._assertOpen();\n\n\t\tvelocityLimit = this._velocityUS(velocityLimit);\n\n\t\tif (velocityLimit < this.data.minVelocityLimit || velocityLimit > this.data.maxVelocityLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minVelocityLimit + \" - \" + this.maxVelocityLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: velocityLimit });\n\t\tawait bp.send(this._ch, BP.SETVELOCITYLIMIT);\n\t}\n}\n\nexport { RCServo };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface VoltageOutputData {\n\tenabled: number,\n\tmaxVoltage: number,\n\tminVoltage: number,\n\tvoltage: number,\n\tvoltageOutputRange: Enum.VoltageOutputRange | PUNK.ENUM,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n}\n\nabstract class VoltageOutputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: VoltageOutputData;\n\n\t/**\n\t * The Voltage Output class controls the variable DC voltage output on a Phidget board. This class provides settings for the output voltage as well as various safety controls.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.VOLTAGE_OUTPUT;\n\t\tthis.name = \"VoltageOutput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETENABLED:\n\t\t\tthis.data.enabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Enabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETVOLTAGE:\n\t\t\tthis.data.voltage = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Voltage', bp);\n\t\t\tbreak;\n\t\tcase BP.SETVOLTAGERANGE:\n\t\t\tthis.data.voltageOutputRange = bp.entries[0].v as Enum.VoltageOutputRange;\n\t\t\tthis._FIREPropertyChange('VoltageOutputRange', bp);\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): VoltageOutputData {\n\t\treturn {\n\t\t\tenabled: PUNK.BOOL,\n\t\t\tmaxVoltage: PUNK.DBL,\n\t\t\tminVoltage: PUNK.DBL,\n\t\t\tvoltage: PUNK.DBL,\n\t\t\tvoltageOutputRange: PUNK.ENUM,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.maxVoltage = 4.2;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.voltage = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.maxVoltage = 4.2;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.voltage = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.voltage = 0;\n\t\t\tthis.data.voltageOutputRange = Enum.VoltageOutputRange.VOLTS_10;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.voltage = 0;\n\t\t\tthis.data.voltageOutputRange = Enum.VoltageOutputRange.VOLTS_10;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_100:\n\t\tcase DeviceChannelUID._OUT1000_VOLTAGEOUTPUT_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.enabled });\n\t\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltage });\n\t\t\tawait bp.send(this._ch, BP.SETVOLTAGE);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_100:\n\t\tcase DeviceChannelUID._OUT1001_VOLTAGEOUTPUT_110:\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_100:\n\t\tcase DeviceChannelUID._OUT1002_VOLTAGEOUTPUT_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.voltageOutputRange });\n\t\t\tawait bp.send(this._ch, BP.SETVOLTAGERANGE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * Enable the output voltage by setting `enabled` to true.\n\t * \n\t * *   Disable the output by seting `enabled` to false to save power.\n\t * @throws {@link PhidgetError}\n\t */\n\tget enabled() { return this.getEnabled(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The voltage value that the channel will output.\n\t * \n\t * *   The `voltage` value is bounded by `minVoltage` and `maxVoltage`.\n\t * *   The voltage value will not be output until `enabled` is set to true.\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltage() { return this.getVoltage(); }\n\t/**\n\t * The minimum value that `voltage` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVoltage() { return this.getMinVoltage(); }\n\t/**\n\t * The maximum value that `voltage` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVoltage() { return this.getMaxVoltage(); }\n\t/**\n\t * Choose a `voltageOutputRange` that best suits your application.\n\t * \n\t * *   Changing the `voltageOutputRange` will also affect the `minVoltage` and `maxVoltage` values.\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltageOutputRange() { return this.getVoltageOutputRange(); }\n\n\t/**\n\t * Enable the output voltage by setting `enabled` to true.\n\t * \n\t * *   Disable the output by seting `enabled` to false to save power.\n\t * @throws {@link PhidgetError}\n\t * @param enabled - The enabled value\n\t */\n\tasync setEnabled(enabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (enabled !== false && enabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (enabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t}\n\n\t/**\n\t * Enable the output voltage by setting `enabled` to true.\n\t * \n\t * *   Disable the output by seting `enabled` to false to save power.\n\t * @returns The enabled value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.enabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.enabled);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For Voltage Output channels, this will set the output voltage to 0V. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * The voltage value that the channel will output.\n\t * \n\t * *   The `voltage` value is bounded by `minVoltage` and `maxVoltage`.\n\t * *   The voltage value will not be output until `enabled` is set to true.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.voltage);\n\t}\n\n\t/**\n\t * The voltage value that the channel will output.\n\t * \n\t * *   The `voltage` value is bounded by `minVoltage` and `maxVoltage`.\n\t * *   The voltage value will not be output until `enabled` is set to true.\n\t * @throws {@link PhidgetError}\n\t * @param voltage - The voltage value\n\t */\n\tasync setVoltage(voltage: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (voltage < this.data.minVoltage || voltage > this.data.maxVoltage)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minVoltage + \" - \" + this.data.maxVoltage + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: voltage });\n\t\tawait bp.send(this._ch, BP.SETVOLTAGE);\n\t}\n\n\t/**\n\t * The minimum value that `voltage` can be set to.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVoltage);\n\t}\n\n\t/**\n\t * The maximum value that `voltage` can be set to.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVoltage);\n\t}\n\n\t/**\n\t * Choose a `voltageOutputRange` that best suits your application.\n\t * \n\t * *   Changing the `voltageOutputRange` will also affect the `minVoltage` and `maxVoltage` values.\n\t * @returns The output range value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltageOutputRange(): Enum.VoltageOutputRange {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltageOutputRange === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.voltageOutputRange);\n\t}\n\n\t/**\n\t * Choose a `voltageOutputRange` that best suits your application.\n\t * \n\t * *   Changing the `voltageOutputRange` will also affect the `minVoltage` and `maxVoltage` values.\n\t * @throws {@link PhidgetError}\n\t * @param voltageOutputRange - The output range value\n\t */\n\tasync setVoltageOutputRange(voltageOutputRange: Enum.VoltageOutputRange): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedVoltageOutputRange(this._ch!, voltageOutputRange))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified VoltageOutputRange is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: voltageOutputRange });\n\t\tawait bp.send(this._ch, BP.SETVOLTAGERANGE);\n\t}\n\n}\nexport { VoltageOutputBase };\n","import { VoltageOutputBase } from './VoltageOutput.gen';\nimport { VoltageOutputRange } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket } from '../BridgePacket';\n\n/** @public */\nclass VoltageOutput extends VoltageOutputBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tswitch (this.data.voltageOutputRange) {\n\t\t\t\t\tcase VoltageOutputRange.VOLTS_10:\n\t\t\t\t\t\tthis.data.minVoltage = -10;\n\t\t\t\t\t\tthis.data.maxVoltage = 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageOutputRange.VOLTS_5:\n\t\t\t\t\t\tthis.data.minVoltage = 0;\n\t\t\t\t\t\tthis.data.maxVoltage = 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._FIREPropertyChange('MinVoltage', bp);\n\t\t\t\tthis._FIREPropertyChange('MaxVoltage', bp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport { VoltageOutput };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface AccelerometerData {\n\tdataInterval: number,\n\ttimestamp: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxAcceleration: readonly [number, number, number],\n\tmaxAccelerationChangeTrigger: number,\n\tminDataInterval: number,\n\tminAcceleration: readonly [number, number, number],\n\tminAccelerationChangeTrigger: number,\n\tacceleration: readonly [number, number, number],\n\taccelerationChangeTrigger: number,\n\taxisCount: number,\n\tprecision: Enum.SpatialPrecision | PUNK.ENUM,\n\theatingEnabled: number,\n}\n\nabstract class AccelerometerBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: AccelerometerData;\n\t/**\n\t * **AccelerationChange** event\n\t *  * `acceleration` - The acceleration values\n\t *  * `timestamp` - The timestamp value\n\t * ---\n\t * The most recent acceleration values the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `accelerationChangeTrigger` has been set to a non-zero value, the `AccelerationChange` event will not occur until the acceleration has changed by at least the `accelerationChangeTrigger` value.\n\t */\n\tonAccelerationChange: ((acceleration: readonly [number, number, number], timestamp: number) => void) | null = null;\n\t/** @internal */\n\t_gotAccelerationChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Accelerometer class is used to gather acceleration data from Phidget accelerometer boards. Phidget accelerometers usually have multiple sensors, each oriented in a different axis, so multiple dimensions of acceleration can be recorded.\n\t * \n\t * If the Phidget you're using also has a gyroscope and a magnetometer, you may want to use the Spatial class in order to get all of the data at the same time, in a single event.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.ACCELEROMETER;\n\t\tthis.name = \"Accelerometer\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.accelerationChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('AccelerationChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETHEATINGENABLED:\n\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSPATIALPRECISION:\n\t\t\tthis.data.precision = bp.entries[0].v as Enum.SpatialPrecision;\n\t\t\tthis._FIREPropertyChange('Precision', bp);\n\t\t\tbreak;\n\t\tcase BP.ACCELERATIONCHANGE: {\n\t\t\tthis.data.acceleration = bp.entries[0].v as [number, number, number];\n\t\t\tthis.data.timestamp = bp.entries[1].v as number;\n\t\t\tif (this._isAttachedDone && this.onAccelerationChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onAccelerationChange(this.data.acceleration, this.data.timestamp);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): AccelerometerData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\ttimestamp: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxAcceleration: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tmaxAccelerationChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminAcceleration: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tminAccelerationChangeTrigger: PUNK.DBL,\n\t\t\tacceleration: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\taccelerationChangeTrigger: PUNK.DBL,\n\t\t\taxisCount: PUNK.INT32,\n\t\t\tprecision: PUNK.ENUM,\n\t\t\theatingEnabled: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 100;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 10;\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 8;\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.acceleration = (<AccelerometerDevice>this._ch!.parent).data.acceleration[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 8;\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.LOW;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 8;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.LOW;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0109_ACCELEROMETER_100:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.timestamp = (<SpatialDevice>this._ch!.parent).data.timestamp[this._ch!.index];\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.acceleration = (<SpatialDevice>this._ch!.parent).data.acceleration[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HYBRID;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.timestamp = (<SpatialDevice>this._ch!.parent).data.timestamp[this._ch!.index];\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.maxAcceleration = [16, 16, 16];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.minAcceleration = [-16, -16, -16];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.acceleration = (<SpatialDevice>this._ch!.parent).data.acceleration[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HIGH;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.maxAcceleration = [16, 16, 16];\n\t\t\tthis.data.maxAccelerationChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.minAcceleration = [-16, -16, -16];\n\t\t\tthis.data.minAccelerationChangeTrigger = 0;\n\t\t\tthis.data.accelerationChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HIGH;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1100_ACCELEROMETER_200:\n\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_USB:\n\t\tcase DeviceChannelUID._MOT0100_ACCELEROMETER_100_VINT:\n\t\tcase DeviceChannelUID._MOT1101_ACCELEROMETER_100:\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_ACCELEROMETER_300:\n\t\tcase DeviceChannelUID._MOT0109_ACCELEROMETER_100:\n\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_USB:\n\t\tcase DeviceChannelUID._MOT0110_ACCELEROMETER_100_VINT:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.accelerationChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.acceleration.includes(PUNK.DBL) ||\n\t\t\tthis.data.timestamp == PUNK.DBL)\n\t\t\t&& ! this._gotAccelerationChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(!this.data.acceleration.includes(PUNK.DBL) &&\n\t\t\tthis.data.timestamp != PUNK.DBL)\n\t\t\tif (this.onAccelerationChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onAccelerationChange(this.data.acceleration, this.data.timestamp);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The most recent acceleration value that the channel has reported.\n\t * \n\t * *   This value will always be between `minAcceleration` and `maxAcceleration`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget acceleration() { return this.getAcceleration(); }\n\t/**\n\t * The minimum value the `AccelerationChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum value the `AccelerationChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * The channel will not issue a `AccelerationChange` event until the acceleration value has changed by the amount specified by the `accelerationChangeTrigger`.\n\t * \n\t * *   Setting the `accelerationChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget accelerationChangeTrigger() { return this.getAccelerationChangeTrigger(); }\n\t/**\n\t * The minimum value that `accelerationChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAccelerationChangeTrigger() { return this.getMinAccelerationChangeTrigger(); }\n\t/**\n\t * The maximum value that `accelerationChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAccelerationChangeTrigger() { return this.getMaxAccelerationChangeTrigger(); }\n\t/**\n\t * The number of axes the channel can measure acceleration on.\n\t * \n\t * *   See your device's User Guide for more information about the number of axes and their orientation.\n\t * @throws {@link PhidgetError}\n\t */\n\tget axisCount() { return this.getAxisCount(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `AccelerationChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `AccelerationChange` events can also be affected by the `accelerationChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t */\n\tget heatingEnabled() { return this.getHeatingEnabled(); }\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget precision() { return this.getPrecision(); }\n\t/**\n\t * The most recent timestamp value that the channel has reported. This is an extremely accurate time measurement streamed from the device.\n\t * \n\t * *   If your application requires a time measurement, you should use this value over a local software timestamp.\n\t * @throws {@link PhidgetError}\n\t */\n\tget timestamp() { return this.getTimestamp(); }\n\n\t/**\n\t * The most recent acceleration value that the channel has reported.\n\t * \n\t * *   This value will always be between `minAcceleration` and `maxAcceleration`.\n\t * @returns The acceleration values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAcceleration(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.acceleration.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.acceleration);\n\t}\n\n\t/**\n\t * The minimum value the `AccelerationChange` event will report.\n\t * @returns The minimum acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAcceleration(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAcceleration);\n\t}\n\n\t/**\n\t * The maximum value the `AccelerationChange` event will report.\n\t * @returns The maximum acceleration values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAcceleration(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAcceleration);\n\t}\n\n\t/**\n\t * The channel will not issue a `AccelerationChange` event until the acceleration value has changed by the amount specified by the `accelerationChangeTrigger`.\n\t * \n\t * *   Setting the `accelerationChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAccelerationChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.accelerationChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.accelerationChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `AccelerationChange` event until the acceleration value has changed by the amount specified by the `accelerationChangeTrigger`.\n\t * \n\t * *   Setting the `accelerationChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param accelerationChangeTrigger - The change trigger value\n\t */\n\tasync setAccelerationChangeTrigger(accelerationChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (accelerationChangeTrigger < this.data.minAccelerationChangeTrigger || accelerationChangeTrigger > this.data.maxAccelerationChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minAccelerationChangeTrigger + \" - \" + this.data.maxAccelerationChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: accelerationChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `accelerationChangeTrigger` can be set to.\n\t * @returns The minimum change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAccelerationChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAccelerationChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAccelerationChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `accelerationChangeTrigger` can be set to.\n\t * @returns The maximum change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAccelerationChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAccelerationChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAccelerationChangeTrigger);\n\t}\n\n\t/**\n\t * The number of axes the channel can measure acceleration on.\n\t * \n\t * *   See your device's User Guide for more information about the number of axes and their orientation.\n\t * @returns The number of axes\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAxisCount(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.axisCount === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.axisCount);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `AccelerationChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `AccelerationChange` events can also be affected by the `accelerationChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `AccelerationChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `AccelerationChange` events can also be affected by the `accelerationChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The minimum data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @returns Whether self-heating temperature stabilization is enabled\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHeatingEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.heatingEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.heatingEnabled);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t * @param heatingEnabled - Whether self-heating temperature stabilization is enabled\n\t */\n\tasync setHeatingEnabled(heatingEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (heatingEnabled !== false && heatingEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (heatingEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETHEATINGENABLED);\n\t}\n\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @returns The sensor precision value\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetPrecision(): Enum.SpatialPrecision {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.precision === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.precision);\n\t}\n\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @throws {@link PhidgetError}\n\t * @param precision - The sensor precision value\n\t * @internal\n\t */\n\tasync setPrecision(precision: Enum.SpatialPrecision): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedSpatialPrecision(this._ch!, precision))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified SpatialPrecision is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: precision });\n\t\tawait bp.send(this._ch, BP.SETSPATIALPRECISION);\n\t}\n\n\t/**\n\t * The most recent timestamp value that the channel has reported. This is an extremely accurate time measurement streamed from the device.\n\t * \n\t * *   If your application requires a time measurement, you should use this value over a local software timestamp.\n\t * @returns The timestamp value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTimestamp(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.timestamp === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.timestamp);\n\t}\n\n}\nimport { type AccelerometerDevice } from '../usb/device/AccelerometerDevice';\nimport { type SpatialDevice } from '../usb/device/SpatialDevice';\nexport { AccelerometerBase };\n","import { AccelerometerBase } from './Accelerometer.gen';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { BridgePacket, PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass Accelerometer extends AccelerometerBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.DATAINTERVALCHANGE:\r\n\t\t\t\tif (bp.entryCount > 1)\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\r\n\t\t\t\tthis._FIREPropertyChange('DataInterval');\r\n\t\t\t\tthis._FIREPropertyChange('DataRate');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.HEATINGENABLEDCHANGE:\r\n\t\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\r\n\t\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.acceleration = [PUNK.DBL, PUNK.DBL, PUNK.DBL];\r\n\t\t\t\tthis.data.timestamp = PUNK.DBL;\r\n\t\t\t\tthis._gotAccelerationChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { Accelerometer };","var global = require('../internals/global');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar TypeError = global.TypeError;\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aCallable(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(O);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var length = arguments.length;\n    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n  }\n});\n","require('../../../modules/es.array.reduce');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').reduce;\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/reduce');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.reduce;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.reduce) ? method : own;\n};\n","var parent = require('../../es/instance/reduce');\n\nmodule.exports = parent;\n","module.exports = require(\"core-js-pure/stable/instance/reduce\");","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport * as Struct from '../Structs.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface VoltageInputData {\n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tpowerSupply: Enum.PowerSupply | PUNK.ENUM,\n\tsensorType: Enum.VoltageSensorType | PUNK.ENUM,\n\tsensorUnit: Struct.UnitInfo | null,\n\tsensorValue: number,\n\tvoltage: number,\n\tminVoltage: number,\n\tmaxVoltage: number,\n\tvoltageChangeTrigger: number,\n\tminVoltageChangeTrigger: number,\n\tmaxVoltageChangeTrigger: number,\n\tvoltageRange: Enum.VoltageRange | PUNK.ENUM,\n\tsensorValueChangeTrigger: number,\n}\n\nabstract class VoltageInputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: VoltageInputData;\n\t/**\n\t * **VoltageChange** event\n\t *  * `voltage` - Measured voltage\n\t * ---\n\t * The most recent voltage value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `voltageChangeTrigger` has been set to a non-zero value, the `VoltageChange` event will not occur until the voltage has changed by at least the `voltageChangeTrigger` value.\n\t * *   If `sensorType` is supported and set to anything other then `phidget22.VoltageSensorType.VOLTAGE`, this event will not fire.\n\t */\n\tonVoltageChange: ((voltage: number) => void) | null = null;\n\t/** @internal */\n\t_gotVoltageChangeErrorEvent?: boolean;\n\t/**\n\t * **SensorChange** event\n\t *  * `sensorValue` - The sensor value\n\t *  * `sensorUnit` - The sensor unit information corresponding to the sensor value.\n\n*   Helps keep track of the type of information being calculated from the voltage input.\n\t * ---\n\t * The most recent sensor value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `sensorValueChangeTrigger` has been set to a non-zero value, the `SensorChange` event will not occur until the sensor value has changed by at least the `sensorValueChangeTrigger` value.\n\t * *   This event only fires when `sensorType` is not set to `phidget22.VoltageSensorType.VOLTAGE`\n\t */\n\tonSensorChange: ((sensorValue: number, sensorUnit: Struct.UnitInfo) => void) | null = null;\n\t/** @internal */\n\t_gotSensorChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Voltage Input class measures the voltage across the input of a Phidget with a voltage input. This may be a sensor designed to measure voltage directly, or it could be an input designed to interface with 0-5V sensors.\n\t * \n\t * For 0-5V sensors, this class supports conversion to sensor data with units specific to the Phidget sensor being used, to make reading these sensors easy.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.VOLTAGE_INPUT;\n\t\tthis.name = \"VoltageInput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETPOWERSUPPLY:\n\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\n\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSENSORTYPE:\n\t\t\tthis.data.sensorType = bp.entries[0].v as Enum.VoltageSensorType;\n\t\t\tthis._FIREPropertyChange('SensorType', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSENSORVALUECHANGETRIGGER:\n\t\t\tthis.data.sensorValueChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('SensorValueChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.voltageChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('VoltageChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETVOLTAGERANGE:\n\t\t\tthis.data.voltageRange = bp.entries[0].v as Enum.VoltageRange;\n\t\t\tthis._FIREPropertyChange('VoltageRange', bp);\n\t\t\tbreak;\n\t\tcase BP.SENSORCHANGE: {\n\t\t\tthis.data.sensorValue = bp.entries[0].v as number;\n\t\t\tconst sensorUnit: Struct.UnitInfo = {\n\t\t\t\tunit: bp.entries[\"UnitInfo.unit\"].v as Enum.Unit,\n\t\t\t\tname: bp.entries[\"UnitInfo.name\"].v as string,\n\t\t\t\tsymbol: bp.entries[\"UnitInfo.symbol\"].v as string,\n\t\t\t}\n\t\t\tthis.data.sensorUnit = sensorUnit;\n\t\t\tif (this._isAttachedDone && this.onSensorChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onSensorChange(this.data.sensorValue, this.data.sensorUnit);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): VoltageInputData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tpowerSupply: PUNK.ENUM,\n\t\t\tsensorType: PUNK.ENUM,\n\t\t\tsensorUnit: null,\n\t\t\tsensorValue: PUNK.DBL,\n\t\t\tvoltage: PUNK.DBL,\n\t\t\tminVoltage: PUNK.DBL,\n\t\t\tmaxVoltage: PUNK.DBL,\n\t\t\tvoltageChangeTrigger: PUNK.DBL,\n\t\t\tminVoltageChangeTrigger: PUNK.DBL,\n\t\t\tmaxVoltageChangeTrigger: PUNK.DBL,\n\t\t\tvoltageRange: PUNK.ENUM,\n\t\t\tsensorValueChangeTrigger: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.voltage = (<InterfaceKitDevice>this._ch!.parent).data.voltage[this._ch!.index];\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5.456;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_200:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.minDataInterval = 32;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 31.25;\n\t\t\tthis.data.voltage = (<TemperatureSensorDevice>this._ch!.parent).data.voltage[this._ch!.index];\n\t\t\tthis.data.minVoltage = -0.01001;\n\t\t\tthis.data.maxVoltage = 0.07741;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 0.08742;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5.25;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 50;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 20;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = -2;\n\t\t\tthis.data.maxVoltage = 2;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 4;\n\t\t\tthis.data.voltageRange = Enum.VoltageRange.MILLIVOLTS_400;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5.25;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.powerSupply = Enum.PowerSupply.VOLTS_12;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.powerSupply = Enum.PowerSupply.VOLTS_12;\n\t\t\tthis.data.sensorType = Enum.VoltageSensorType.VOLTAGE;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 5.25;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 5;\n\t\t\tthis.data.sensorValueChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 40;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 32;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minVoltage = 0;\n\t\t\tthis.data.maxVoltage = 40;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 20;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.minVoltage = -0.011;\n\t\t\tthis.data.maxVoltage = 0.079;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 0.09;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 80;\n\t\t\tthis.data.voltageRange = Enum.VoltageRange.VOLTS_40;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 40;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 25;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 80;\n\t\t\tthis.data.voltageRange = Enum.VoltageRange.AUTO;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 12;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 83.33333333333333;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 80;\n\t\t\tthis.data.voltageRange = Enum.VoltageRange.AUTO;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 40;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 25;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 2;\n\t\t\tthis.data.voltageRange = Enum.VoltageRange.AUTO;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 12;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 83.33333333333333;\n\t\t\tthis.data.voltageChangeTrigger = 0;\n\t\t\tthis.data.minVoltageChangeTrigger = 0;\n\t\t\tthis.data.maxVoltageChangeTrigger = 2;\n\t\t\tthis.data.voltageRange = Enum.VoltageRange.AUTO;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1018_VOLTAGEINPUT_1000:\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._HUB_VOLTAGEINPUT_110:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1000_VOLTAGEINPUT_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.sensorType });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.sensorValueChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1048_VOLTAGEINPUT_200:\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._SAF1000_VOLTAGEINPUT_110:\n\t\tcase DeviceChannelUID._STC1003_VOLTAGEINPUT_200:\n\t\tcase DeviceChannelUID._STC1005_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._TMP1100_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._TMP1101_VOLTAGEINPUT_200:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ADP1000_VOLTAGEINPUT_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.sensorType });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.voltageRange });\n\t\t\tawait bp.send(this._ch, BP.SETVOLTAGERANGE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.sensorValueChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_VOLTAGEINPUT_120:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.powerSupply });\n\t\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.sensorType });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.sensorValueChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1000_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_110:\n\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.voltageChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.voltageRange });\n\t\t\tawait bp.send(this._ch, BP.SETVOLTAGERANGE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t */\n\tget powerSupply() { return this.getPowerSupply(); }\n\t/**\n\t * We sell a variety of analog sensors that do not have their own API, they simply output a voltage that can be converted to a digital value using a specific formula. By matching the `sensorType` to your analog sensor, the correct formula will automatically be applied to data when you get the `sensorValue` or subscribe to the `SensorChange` event.\n\t * \n\t * *   The `SensorChange` event has its own change trigger associated with it: `sensorValueChangeTrigger`.\n\t * *   Any data from getting the `sensorValue` or subscribing to the `SensorChange` event will have a `sensorUnit` associated with it.\n\t * \n\t * **Note:** Unlike other properties such as `Phidget.deviceSerialNumber` or `Phidget.channel`, `sensorType` is set after the device is opened, not before.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorType() { return this.getSensorType(); }\n\t/**\n\t * The unit of measurement that applies to the sensor values of the `sensorType` that has been selected.\n\t * \n\t * *   Helps keep track of the type of information being calculated from the voltage input.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorUnit() { return this.getSensorUnit(); }\n\t/**\n\t * The most recent sensor value that the channel has reported.\n\t * \n\t * *   Use `sensorUnit` to get the measurement units that are associated with the `sensorValue`\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorValue() { return this.getSensorValue(); }\n\t/**\n\t * The channel will not issue a `SensorChange` event until the sensor value has changed by the amount specified by the `sensorValueChangeTrigger`.\n\t * \n\t * *   Setting the `sensorValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensorValueChangeTrigger() { return this.getSensorValueChangeTrigger(); }\n\t/**\n\t * The most recent voltage value that the channel has reported.\n\t * \n\t * *   This value will always be between `minVoltage` and `maxVoltage`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltage() { return this.getVoltage(); }\n\t/**\n\t * The minimum value the `VoltageChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVoltage() { return this.getMinVoltage(); }\n\t/**\n\t * The maximum value the `VoltageChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVoltage() { return this.getMaxVoltage(); }\n\t/**\n\t * The channel will not issue a `VoltageChange` event until the voltage value has changed by the amount specified by the `voltageChangeTrigger`.\n\t * \n\t * *   Setting the `voltageChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltageChangeTrigger() { return this.getVoltageChangeTrigger(); }\n\t/**\n\t * The minimum value that `voltageChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVoltageChangeTrigger() { return this.getMinVoltageChangeTrigger(); }\n\t/**\n\t * The maximum value that `voltageChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVoltageChangeTrigger() { return this.getMaxVoltageChangeTrigger(); }\n\t/**\n\t * The voltage range you choose should allow you to measure the full range of your input signal.\n\t * \n\t * *   A larger `voltageRange` equates to less resolution.\n\t * *   If a `Saturation` event occurs, increase the voltage range.\n\t * @throws {@link PhidgetError}\n\t */\n\tget voltageRange() { return this.getVoltageRange(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the change trigger.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @returns The power supply value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPowerSupply(): Enum.PowerSupply {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.powerSupply === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.powerSupply);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t * @param powerSupply - The power supply value\n\t */\n\tasync setPowerSupply(powerSupply: Enum.PowerSupply): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedPowerSupply(this._ch!, powerSupply))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified PowerSupply is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: powerSupply });\n\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t}\n\n\t/**\n\t * We sell a variety of analog sensors that do not have their own API, they simply output a voltage that can be converted to a digital value using a specific formula. By matching the `sensorType` to your analog sensor, the correct formula will automatically be applied to data when you get the `sensorValue` or subscribe to the `SensorChange` event.\n\t * \n\t * *   The `SensorChange` event has its own change trigger associated with it: `sensorValueChangeTrigger`.\n\t * *   Any data from getting the `sensorValue` or subscribing to the `SensorChange` event will have a `sensorUnit` associated with it.\n\t * \n\t * **Note:** Unlike other properties such as `Phidget.deviceSerialNumber` or `Phidget.channel`, `sensorType` is set after the device is opened, not before.\n\t * @returns The sensor type value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorType(): Enum.VoltageSensorType {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorType === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorType);\n\t}\n\n\t/**\n\t * We sell a variety of analog sensors that do not have their own API, they simply output a voltage that can be converted to a digital value using a specific formula. By matching the `sensorType` to your analog sensor, the correct formula will automatically be applied to data when you get the `sensorValue` or subscribe to the `SensorChange` event.\n\t * \n\t * *   The `SensorChange` event has its own change trigger associated with it: `sensorValueChangeTrigger`.\n\t * *   Any data from getting the `sensorValue` or subscribing to the `SensorChange` event will have a `sensorUnit` associated with it.\n\t * \n\t * **Note:** Unlike other properties such as `Phidget.deviceSerialNumber` or `Phidget.channel`, `sensorType` is set after the device is opened, not before.\n\t * @throws {@link PhidgetError}\n\t * @param sensorType - The sensor type value\n\t */\n\tasync setSensorType(sensorType: Enum.VoltageSensorType): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedVoltageSensorType(this._ch!, sensorType))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified VoltageSensorType is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: sensorType });\n\t\tawait bp.send(this._ch, BP.SETSENSORTYPE);\n\t}\n\n\t/**\n\t * The unit of measurement that applies to the sensor values of the `sensorType` that has been selected.\n\t * \n\t * *   Helps keep track of the type of information being calculated from the voltage input.\n\t * @returns The sensor unit information corresponding to the `sensorValue`.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorUnit(): Struct.UnitInfo {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorUnit === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorUnit);\n\t}\n\n\t/**\n\t * The most recent sensor value that the channel has reported.\n\t * \n\t * *   Use `sensorUnit` to get the measurement units that are associated with the `sensorValue`\n\t * @returns The sensor value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorValue(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorValue === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorValue);\n\t}\n\n\t/**\n\t * The channel will not issue a `SensorChange` event until the sensor value has changed by the amount specified by the `sensorValueChangeTrigger`.\n\t * \n\t * *   Setting the `sensorValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensorValueChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensorValueChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensorValueChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `SensorChange` event until the sensor value has changed by the amount specified by the `sensorValueChangeTrigger`.\n\t * \n\t * *   Setting the `sensorValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param sensorValueChangeTrigger - The change trigger value\n\t */\n\tasync setSensorValueChangeTrigger(sensorValueChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: sensorValueChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETSENSORVALUECHANGETRIGGER);\n\t}\n\n\t/**\n\t * The most recent voltage value that the channel has reported.\n\t * \n\t * *   This value will always be between `minVoltage` and `maxVoltage`.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltage === PUNK.DBL || Number.isNaN(this.data.voltage))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.voltage > this.data.maxVoltage)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.voltage < this.data.minVoltage)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.voltage);\n\t}\n\n\t/**\n\t * The minimum value the `VoltageChange` event will report.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVoltage);\n\t}\n\n\t/**\n\t * The maximum value the `VoltageChange` event will report.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVoltage);\n\t}\n\n\t/**\n\t * The channel will not issue a `VoltageChange` event until the voltage value has changed by the amount specified by the `voltageChangeTrigger`.\n\t * \n\t * *   Setting the `voltageChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltageChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltageChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.voltageChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `VoltageChange` event until the voltage value has changed by the amount specified by the `voltageChangeTrigger`.\n\t * \n\t * *   Setting the `voltageChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param voltageChangeTrigger - The change trigger value\n\t */\n\tasync setVoltageChangeTrigger(voltageChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (voltageChangeTrigger < this.data.minVoltageChangeTrigger || voltageChangeTrigger > this.data.maxVoltageChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minVoltageChangeTrigger + \" - \" + this.data.maxVoltageChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: voltageChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `voltageChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVoltageChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVoltageChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVoltageChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `voltageChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVoltageChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVoltageChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVoltageChangeTrigger);\n\t}\n\n\t/**\n\t * The voltage range you choose should allow you to measure the full range of your input signal.\n\t * \n\t * *   A larger `voltageRange` equates to less resolution.\n\t * *   If a `Saturation` event occurs, increase the voltage range.\n\t * @returns The voltage range value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVoltageRange(): Enum.VoltageRange {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.voltageRange === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.voltageRange);\n\t}\n\n\t/**\n\t * The voltage range you choose should allow you to measure the full range of your input signal.\n\t * \n\t * *   A larger `voltageRange` equates to less resolution.\n\t * *   If a `Saturation` event occurs, increase the voltage range.\n\t * @throws {@link PhidgetError}\n\t * @param voltageRange - The voltage range value\n\t */\n\tasync setVoltageRange(voltageRange: Enum.VoltageRange): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedVoltageRange(this._ch!, voltageRange))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified VoltageRange is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: voltageRange });\n\t\tawait bp.send(this._ch, BP.SETVOLTAGERANGE);\n\t}\n\n}\nimport { type InterfaceKitDevice } from '../usb/device/InterfaceKitDevice';\nimport { type TemperatureSensorDevice } from '../usb/device/TemperatureSensorDevice';\nexport { VoltageInputBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { VoltageInputBase } from './VoltageInput.gen';\nimport { Units } from '../AnalogSensor';\nimport { ErrorCode, ErrorEventCode, VoltageSensorType, Unit, VoltageRange, PowerSupply } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { PhidgetError } from '../PhidgetError';\nimport { RoundDouble } from '../Utils';\nimport { type UnitInfo } from '../Structs.gen';\nimport { logEventException } from '../Logging';\nimport { Channel } from '../Channel';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\ninterface VoltageInputPrivate {\n\tvoltageBuffer: number[],\n\tvoltageBufferIndex: number,\n\tvoltageBufferReady: boolean,\n\tmotionSensorCountdown: number,\n\tmotionSensorBaseline: number,\n\tVOLTAGE_BUFFER_LEN: number\n}\n\n/** @public */\nclass VoltageInput extends VoltageInputBase {\n\t/** @internal */\n\t_private: VoltageInputPrivate;\n\n\t/** @internal */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._private = {\n\t\t\tvoltageBuffer: [],\n\t\t\tvoltageBufferIndex: 0,\n\t\t\tvoltageBufferReady: false,\n\t\t\tmotionSensorCountdown: 0,\n\t\t\tmotionSensorBaseline: PUNK.DBL,\n\t\t\tVOLTAGE_BUFFER_LEN: 25\n\t\t};\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.DATAINTERVALCHANGE:\n\t\t\t\tif (bp.entryCount > 1)\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\n\t\t\t\telse\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\n\t\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.MINDATAINTERVALCHANGE:\n\t\t\t\tthis.data.minDataInterval = bp.getNumber(0);\n\t\t\t\tthis._FIREPropertyChange('MinDataInterval', bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETSENSORTYPE:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tthis._bangSensorVoltage();\n\t\t\t\tswitch (this.data.sensorType) {\n\t\t\t\t\tcase VoltageSensorType.PN_MOT2002_LOW:\n\t\t\t\t\tcase VoltageSensorType.PN_MOT2002_MED:\n\t\t\t\t\tcase VoltageSensorType.PN_MOT2002_HIGH: {\n\t\t\t\t\t\tconst subbp = new BridgePacket();\n\t\t\t\t\t\tsubbp.set({ name: '0', type: 'u', value: 200 });\n\t\t\t\t\t\tsubbp.sendToChannel(this._ch!, BP.SETDATAINTERVAL);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase BP.VOLTAGECHANGE: { // moved out of VoltageInput.gen.js\n\t\t\t\tthis.data.voltage = bp.getNumber('0');\n\t\t\t\tthis._updateVoltageBuffer(this.data.voltage);\n\t\t\t\tconst sentSensorEvent = this._bangSensorVoltage(true);\n\t\t\t\tif (sentSensorEvent && this._ch!.conn._isRemote)\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase BP.SETVOLTAGERANGE:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tswitch (this.data.voltageRange) {\n\t\t\t\t\tcase VoltageRange.MILLIVOLTS_10:\t/* Range ±10mV DC */\n\t\t\t\t\t\tthis.data.minVoltage = -0.01;\n\t\t\t\t\t\tthis.data.maxVoltage = 0.01;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.MILLIVOLTS_40:\t/* Range ±40mV DC */\n\t\t\t\t\t\tthis.data.minVoltage = -0.04;\n\t\t\t\t\t\tthis.data.maxVoltage = 0.04;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.MILLIVOLTS_200:\t/* Range ±200mV DC */\n\t\t\t\t\t\tthis.data.minVoltage = -0.2;\n\t\t\t\t\t\tthis.data.maxVoltage = 0.2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.MILLIVOLTS_312_5:\t/* Range ±312.5mV DC */\n\t\t\t\t\t\tthis.data.minVoltage = -0.3125;\n\t\t\t\t\t\tthis.data.maxVoltage = 0.3125;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.MILLIVOLTS_400:\t/* Range ±400mV DC */\n\t\t\t\t\t\tthis.data.minVoltage = -0.4;\n\t\t\t\t\t\tthis.data.maxVoltage = 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.MILLIVOLTS_1000:\t/* Range ±1000mV DC */\n\t\t\t\t\t\tthis.data.minVoltage = -1.0;\n\t\t\t\t\t\tthis.data.maxVoltage = 1.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.VOLTS_2:\t\t\t/* Range ±2V DC */\n\t\t\t\t\t\tthis.data.minVoltage = -2.0;\n\t\t\t\t\t\tthis.data.maxVoltage = 2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.VOLTS_5:\t\t\t/* Range ±5V DC */\n\t\t\t\t\t\tthis.data.minVoltage = -5.0;\n\t\t\t\t\t\tthis.data.maxVoltage = 5.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.VOLTS_15:\t\t\t/* Range ±15V DC */\n\t\t\t\t\t\tthis.data.minVoltage = -15.0;\n\t\t\t\t\t\tthis.data.maxVoltage = 15.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.VOLTS_40:\t\t\t/* Range ±40V DC */\n\t\t\t\t\t\tthis.data.minVoltage = -40.0;\n\t\t\t\t\t\tthis.data.maxVoltage = 40.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase VoltageRange.AUTO:\t\t\t\t/* Auto-range mode changes based on the present voltage measurements. */\n\t\t\t\t\t\tswitch (this._ch!.chDef.uid) {\n\t\t\t\t\t\t\tcase DeviceChannelUID._VCP1001_VOLTAGEINPUT_100:\n\t\t\t\t\t\t\t\tthis.data.minVoltage = -40.0;\n\t\t\t\t\t\t\t\tthis.data.maxVoltage = 40.0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase DeviceChannelUID._VCP1002_VOLTAGEINPUT_100:\n\t\t\t\t\t\t\t\tthis.data.minVoltage = -1.0;\n\t\t\t\t\t\t\t\tthis.data.maxVoltage = 1.0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._FIREPropertyChange('MinVoltage', bp);\n\t\t\t\tthis._FIREPropertyChange('MaxVoltage', bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.POWERSUPPLYCHANGE:\n\t\t\t\tthis.data.powerSupply = bp.entries[0].v as PowerSupply;\n\t\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_errorHandler(code: ErrorEventCode) {\n\t\tswitch (code) {\n\t\t\tcase ErrorEventCode.SATURATION:\n\t\t\t\tthis.data.voltage = PUNK.DBL;\n\t\t\t\tthis.data.sensorValue = PUNK.DBL;\n\t\t\t\tthis._gotVoltageChangeErrorEvent = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tsuper._initAfterOpen();\n\n\t\tthis._private = {\n\t\t\tvoltageBuffer: [],\n\t\t\tvoltageBufferIndex: 0,\n\t\t\tvoltageBufferReady: false,\n\t\t\tmotionSensorCountdown: 0,\n\t\t\tmotionSensorBaseline: PUNK.DBL,\n\t\t\tVOLTAGE_BUFFER_LEN: 25\n\t\t};\n\n\t\tif (this.data.sensorType === PUNK.ENUM)\n\t\t\tthis.data.sensorType = VoltageSensorType.VOLTAGE;\n\t\tthis.data.sensorUnit = this._getVoltageSensorUnit(this.data.sensorType);\n\t\tthis.data.sensorValue = this._getVoltageSensorValue(this.data.voltage, this.data.sensorType);\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.voltage == PUNK.DBL)\n\t\t\t&& !this._gotVoltageChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn super._hasInitialState();\n\t}\n\n\t/** @internal */\n\t_fireInitialEvents() {\n\n\t\tif (this.data.sensorType != VoltageSensorType.VOLTAGE) {\n\t\t\tif (this.data.sensorValue != PUNK.DBL &&\n\t\t\t\tthis.data.sensorUnit != null)\n\t\t\t\tif (this.onSensorChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onSensorChange(this.data.sensorValue, this.data.sensorUnit);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t} else {\n\t\t\tif (this.data.voltage != PUNK.DBL)\n\t\t\t\tif (this.onVoltageChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onVoltageChange(this.data.voltage);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t}\n\t\tsuper._fireInitialEvents();\n\t}\n\n\t/** @internal */\n\t_bangSensorVoltage(includeVoltage = false) {\n\t\tlet sensorValue;\n\t\tlet unitInfo;\n\n\t\tlet sentSensorEvent = false;\n\n\t\tif (this._ch!.supportedBridgePacket(BP.SENSORCHANGE) && this._ch!.conn._isLocal && this.data.sensorType !== VoltageSensorType.VOLTAGE) {\n\t\t\tsensorValue = this._getVoltageSensorValue(this.data.voltage, this.data.sensorType);\n\t\t\tif (!this._getSensorValueInRange(sensorValue, this.data.sensorType)) {\n\t\t\t\tthis.data.sensorValue = PUNK.DBL;\n\t\t\t\tif (this._isAttachedDone) {\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'd', value: ErrorEventCode.OUT_OF_RANGE });\n\t\t\t\t\tbp.set({ name: '1', type: 's', value: 'Sensor value is outside the valid range for this sensor.' });\n\t\t\t\t\tthis._ch!.sendErrorEvent(bp);\n\t\t\t\t}\n\t\t\t} else if (this.data.sensorValue === PUNK.DBL || Math.abs(sensorValue - this.data.sensorValue) >= this.data.sensorValueChangeTrigger) {\n\t\t\t\tthis.data.sensorValue = sensorValue;\n\t\t\t\tif (this._isAttachedDone) {\n\t\t\t\t\tunitInfo = this._getVoltageSensorUnit(this.data.sensorType);\n\t\t\t\t\tconst bp = new BridgePacket();\n\t\t\t\t\tbp.set({ name: '0', type: 'g', value: sensorValue });\n\t\t\t\t\tbp.set({ name: 'UnitInfo.unit', type: 'g', value: unitInfo.unit });\n\t\t\t\t\tbp.set({ name: 'UnitInfo.name', type: 's', value: unitInfo.name });\n\t\t\t\t\tbp.set({ name: 'UnitInfo.symbol', type: 's', value: unitInfo.symbol });\n\t\t\t\t\tbp.sendToChannel(this._ch!, BP.SENSORCHANGE);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsentSensorEvent = true;\n\t\t} else if (includeVoltage) {\n\t\t\tthis.data.sensorUnit = this._getVoltageSensorUnit(this.data.sensorType);\n\t\t\tthis.data.sensorValue = this._getVoltageSensorValue(this.data.voltage, this.data.sensorType);\n\n\t\t\tif (this._isAttachedDone && this.onVoltageChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onVoltageChange(this.data.voltage);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t}\n\n\t\treturn sentSensorEvent;\n\t}\n\n\t/** @internal */\n\t_updateVoltageBuffer(voltage: number) {\n\n\t\tthis._private.voltageBuffer.push(voltage);\n\t\tif (this._private.voltageBuffer.length >= this._private.VOLTAGE_BUFFER_LEN) {\n\t\t\tthis._private.voltageBufferReady = true;\n\t\t\tif (this._private.voltageBuffer.length > this._private.VOLTAGE_BUFFER_LEN)\n\t\t\t\tthis._private.voltageBuffer.shift();\t//keep the buffer at VOLTAGE_BUFFER_LEN, keep most recent data.\n\t\t}\n\t}\n\n\t/** @internal */\n\t_getVoltageSensorValue(voltage: number, sensorType: VoltageSensorType | PUNK.ENUM): number {\n\t\tif (voltage === PUNK.DBL)\n\t\t\treturn PUNK.DBL;\n\n\t\tswitch (sensorType) {\n\t\t\tcase VoltageSensorType.PN_1114:\n\t\t\t\treturn RoundDouble((voltage / 0.02 - 50), 3);    //Degrees Celsius\n\t\t\tcase VoltageSensorType.PN_1117:\n\t\t\t\treturn RoundDouble((voltage * 12 - 30), 3);  // V\n\t\t\tcase VoltageSensorType.PN_1123:\n\t\t\t\treturn RoundDouble((voltage * 12 - 30), 3);  //V\n\t\t\tcase VoltageSensorType.PN_1127:\n\t\t\t\treturn RoundDouble((voltage * 200), 2);  //lux\n\t\t\tcase VoltageSensorType.PN_1130_PH:\n\t\t\t\treturn RoundDouble((voltage * 3.56 - 1.889), 4); //pH\n\t\t\tcase VoltageSensorType.PN_1130_ORP:\n\t\t\t\treturn RoundDouble(((2.5 - voltage) / 1.037), 5) // ORP (V)\n\t\t\tcase VoltageSensorType.PN_1132:\n\t\t\t\treturn RoundDouble((voltage / 0.225), 4);    // mA\n\t\t\tcase VoltageSensorType.PN_1133:\n\t\t\t\treturn RoundDouble((16.801 * Math.log(voltage * 200) + 9.872), 4);   //dB\n\t\t\tcase VoltageSensorType.PN_1135:\n\t\t\t\treturn RoundDouble(((voltage - 2.5) / 0.0681), 3); // V\n\t\t\tcase VoltageSensorType.PN_1142:\n\t\t\t\treturn RoundDouble((voltage * 295.7554 + 33.67076), 2); // lux  NOTE: user should really calculate using calibration values\n\t\t\tcase VoltageSensorType.PN_1143:\n\t\t\t\treturn RoundDouble((Math.exp(voltage * 4.77 - 0.56905)), 4); // lux  NOTE: user should really calculate using calibration values\n\t\t\tcase VoltageSensorType.PN_3500:\n\t\t\t\treturn RoundDouble((voltage / 0.5), 4); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3501:\n\t\t\t\treturn RoundDouble((voltage / 0.2), 4); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3502:\n\t\t\t\treturn RoundDouble((voltage / 0.1), 4); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3503:\n\t\t\t\treturn RoundDouble((voltage / 0.05), 3); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3507:\n\t\t\t\treturn RoundDouble((voltage * 50), 3); // V AC\n\t\t\tcase VoltageSensorType.PN_3508:\n\t\t\t\treturn RoundDouble((voltage * 50), 3); // V AC\n\t\t\tcase VoltageSensorType.PN_3509:\n\t\t\t\treturn RoundDouble((voltage * 40), 3); // V DC\n\t\t\tcase VoltageSensorType.PN_3510:\n\t\t\t\treturn RoundDouble((voltage * 15), 4); // V DC\n\t\t\tcase VoltageSensorType.PN_3511:\n\t\t\t\treturn RoundDouble((voltage * 2), 4); // mA\n\t\t\tcase VoltageSensorType.PN_3512:\n\t\t\t\treturn RoundDouble((voltage * 20), 3); // mA\n\t\t\tcase VoltageSensorType.PN_3513:\n\t\t\t\treturn RoundDouble((voltage * 200), 2); // mA\n\t\t\tcase VoltageSensorType.PN_3514:\n\t\t\t\treturn RoundDouble((voltage * 1500), 1); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3515:\n\t\t\t\treturn RoundDouble((voltage * 1500), 1); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3516:\n\t\t\t\treturn RoundDouble((voltage * 250), 2); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3517:\n\t\t\t\treturn RoundDouble((voltage * 250), 2); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3518:\n\t\t\t\treturn RoundDouble((voltage * 110), 3); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3519:\n\t\t\t\treturn RoundDouble((voltage * 330), 2); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3584:\n\t\t\t\treturn RoundDouble((voltage * 10), 4); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3585:\n\t\t\t\treturn RoundDouble((voltage * 20), 3); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3586:\n\t\t\t\treturn RoundDouble((voltage * 50), 3); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3587:\n\t\t\t\treturn RoundDouble((voltage * 20 - 50), 3); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3588:\n\t\t\t\treturn RoundDouble((voltage * 40 - 100), 3); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3589:\n\t\t\t\treturn RoundDouble((voltage * 100 - 250), 3); // DC Amps\n\t\t\tcase VoltageSensorType.PN_MOT2002_LOW:\n\t\t\t\treturn this._doMotionSensorCalculations(0.8) ? 1 : 0;\n\t\t\tcase VoltageSensorType.PN_MOT2002_MED:\n\t\t\t\treturn this._doMotionSensorCalculations(0.4) ? 1 : 0;\n\t\t\tcase VoltageSensorType.PN_MOT2002_HIGH:\n\t\t\t\treturn this._doMotionSensorCalculations(0.04) ? 1 : 0;\n\t\t\tcase VoltageSensorType.PN_VCP4114:\n\t\t\t\treturn RoundDouble(((voltage - 2.5) / 0.0625), 3); // DC Amps\n\t\t\tcase VoltageSensorType.VOLTAGE:\n\t\t\tdefault:\n\t\t\t\treturn voltage;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_getSensorValueInRange(sensorValue: number, sensorType: VoltageSensorType | PUNK.ENUM): boolean {\n\t\tif (sensorValue === PUNK.DBL) {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (sensorType) {\n\t\t\tcase VoltageSensorType.PN_1114:\n\t\t\t\treturn ((sensorValue >= -40.0) && (sensorValue <= 125.0)); // Degrees Celcius\n\t\t\tcase VoltageSensorType.PN_1117:\n\t\t\t\treturn ((sensorValue >= -30.0) && (sensorValue <= 30.0)); // V\n\t\t\tcase VoltageSensorType.PN_1123:\n\t\t\t\treturn ((sensorValue >= -30.0) && (sensorValue <= 30.0)); // V\n\t\t\tcase VoltageSensorType.PN_1127:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 1000.0)); // lux\n\t\t\tcase VoltageSensorType.PN_1130_PH:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 14.0)); // pH\n\t\t\tcase VoltageSensorType.PN_1130_ORP:\n\t\t\t\treturn ((sensorValue >= -2.0) && (sensorValue <= 2.0)); // ORP (V)\n\t\t\tcase VoltageSensorType.PN_1132:\n\t\t\t\treturn ((sensorValue >= 4.0) && (sensorValue <= 20.0)); // mA\n\t\t\tcase VoltageSensorType.PN_1133:\n\t\t\t\treturn ((sensorValue >= 50.0) && (sensorValue <= 100.0)); // dB\n\t\t\tcase VoltageSensorType.PN_1135:\n\t\t\t\treturn ((sensorValue >= -30.0) && (sensorValue <= 30.0)); // V\n\t\t\tcase VoltageSensorType.PN_1142:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 1000.0)); // lux  NOTE: user should really calculate using calibration values\n\t\t\tcase VoltageSensorType.PN_1143:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 70000.0)); // lux  NOTE: user should really calculate using calibration values\n\t\t\tcase VoltageSensorType.PN_3500:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 10.0)); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3501:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 25.0)); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3502:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 50.0)); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3503:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // RMS Amps\n\t\t\tcase VoltageSensorType.PN_3507:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 250.0)); // V AC\n\t\t\tcase VoltageSensorType.PN_3508:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 250.0)); // V AC\n\t\t\tcase VoltageSensorType.PN_3509:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 200.0)); // V DC\n\t\t\tcase VoltageSensorType.PN_3510:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 75.0)); // V DC\n\t\t\tcase VoltageSensorType.PN_3511:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 10.0)); // mA\n\t\t\tcase VoltageSensorType.PN_3512:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // mA\n\t\t\tcase VoltageSensorType.PN_3513:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 1000.0)); // mA\n\t\t\tcase VoltageSensorType.PN_3514:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 7500.0)); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3515:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 7500.0)); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3516:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 1250.0)); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3517:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 1250.0)); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3518:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 550.0)); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3519:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 1650.0)); // W  NOTE: User must determine offset\n\t\t\tcase VoltageSensorType.PN_3584:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 50.0)); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3585:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 100.0)); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3586:\n\t\t\t\treturn ((sensorValue >= 0.0) && (sensorValue <= 250.0)); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3587:\n\t\t\t\treturn ((sensorValue >= -50.0) && (sensorValue <= 50.0)); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3588:\n\t\t\t\treturn ((sensorValue >= -100.0) && (sensorValue <= 100.0)); // DC Amps\n\t\t\tcase VoltageSensorType.PN_3589:\n\t\t\t\treturn ((sensorValue >= -250.0) && (sensorValue <= 250.0)); // DC Amps\n\t\t\tcase VoltageSensorType.PN_MOT2002_LOW:\n\t\t\tcase VoltageSensorType.PN_MOT2002_MED:\n\t\t\tcase VoltageSensorType.PN_MOT2002_HIGH:\n\t\t\t\treturn ((this._private as VoltageInputPrivate).motionSensorBaseline !== PUNK.DBL);\n\t\t\tcase VoltageSensorType.PN_VCP4114:\n\t\t\t\treturn ((sensorValue >= -25.0) && (sensorValue <= 25.0)); // DC Amps\n\t\t\tcase VoltageSensorType.VOLTAGE:\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_getVoltageSensorUnit(sensorType: VoltageSensorType | PUNK.ENUM): UnitInfo {\n\n\t\tswitch (sensorType) {\n\t\t\tcase VoltageSensorType.PN_1130_PH:\n\t\t\t\treturn Units[Unit.PH];\n\n\t\t\tcase VoltageSensorType.PN_1114:\n\t\t\t\treturn Units[Unit.DEGREE_CELCIUS];\n\n\t\t\tcase VoltageSensorType.PN_1127:\n\t\t\tcase VoltageSensorType.PN_1142:\n\t\t\tcase VoltageSensorType.PN_1143:\n\t\t\t\treturn Units[Unit.LUX];\n\n\t\t\tcase VoltageSensorType.PN_1132:\n\t\t\tcase VoltageSensorType.PN_3511:\n\t\t\tcase VoltageSensorType.PN_3512:\n\t\t\tcase VoltageSensorType.PN_3513:\n\t\t\t\treturn Units[Unit.MILLIAMPERE];\n\n\t\t\tcase VoltageSensorType.PN_1133:\n\t\t\t\treturn Units[Unit.DECIBEL];\n\n\t\t\tcase VoltageSensorType.PN_3500:\n\t\t\tcase VoltageSensorType.PN_3501:\n\t\t\tcase VoltageSensorType.PN_3502:\n\t\t\tcase VoltageSensorType.PN_3503:\n\t\t\tcase VoltageSensorType.PN_3584:\n\t\t\tcase VoltageSensorType.PN_3585:\n\t\t\tcase VoltageSensorType.PN_3586:\n\t\t\tcase VoltageSensorType.PN_3587:\n\t\t\tcase VoltageSensorType.PN_3588:\n\t\t\tcase VoltageSensorType.PN_3589:\n\t\t\tcase VoltageSensorType.PN_VCP4114:\n\t\t\t\treturn Units[Unit.AMPERE];\n\n\t\t\tcase VoltageSensorType.PN_3514:\n\t\t\tcase VoltageSensorType.PN_3515:\n\t\t\tcase VoltageSensorType.PN_3516:\n\t\t\tcase VoltageSensorType.PN_3517:\n\t\t\tcase VoltageSensorType.PN_3518:\n\t\t\tcase VoltageSensorType.PN_3519:\n\t\t\t\treturn Units[Unit.WATT];\n\n\t\t\tcase VoltageSensorType.PN_MOT2002_LOW:\n\t\t\tcase VoltageSensorType.PN_MOT2002_MED:\n\t\t\tcase VoltageSensorType.PN_MOT2002_HIGH:\n\t\t\t\treturn Units[Unit.BOOLEAN];\n\n\t\t\tcase VoltageSensorType.PN_1117:\n\t\t\tcase VoltageSensorType.PN_1123:\n\t\t\tcase VoltageSensorType.PN_1130_ORP:\n\t\t\tcase VoltageSensorType.PN_1135:\n\t\t\tcase VoltageSensorType.PN_3507:\n\t\t\tcase VoltageSensorType.PN_3508:\n\t\t\tcase VoltageSensorType.PN_3509:\n\t\t\tcase VoltageSensorType.PN_3510:\n\t\t\tcase VoltageSensorType.VOLTAGE:\n\t\t\tdefault:\n\t\t\t\treturn Units[Unit.VOLT];\n\t\t}\n\t}\n\n\t/** @internal */\n\t_doMotionSensorCalculations(threshold: number): boolean | PUNK.BOOL {\n\t\tconst p = this._private;\n\n\t\tconst voltageBuffer = p.voltageBuffer;\n\t\tconst index = p.voltageBufferIndex;\n\t\tlet startAvgDiff = 0;\n\t\tlet endAvgDiff = 0;\n\t\tlet longTermAvg = 0;\n\t\tlet longTermDiff = 0;\n\t\tlet triggered = false;\n\n\t\tif (p.voltageBufferReady) {\n\t\t\tlongTermAvg = voltageBuffer.reduce((prev, curr) => prev + curr) / p.VOLTAGE_BUFFER_LEN;\n\n\t\t\tlongTermDiff = voltageBuffer.reduce((prev, curr) => prev + Math.abs(curr - longTermAvg), 0) / p.VOLTAGE_BUFFER_LEN;\n\n\t\t\tif (longTermDiff < 0.1) {\n\t\t\t\tp.motionSensorBaseline = longTermAvg;\n\t\t\t} else if (p.motionSensorBaseline === PUNK.DBL) {\n\t\t\t\treturn PUNK.BOOL;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 5; i++) {\n\t\t\t\tstartAvgDiff += Math.abs(voltageBuffer[((index + p.VOLTAGE_BUFFER_LEN) - (i + 5)) % p.VOLTAGE_BUFFER_LEN] - p.motionSensorBaseline);\n\t\t\t\tendAvgDiff += Math.abs(voltageBuffer[((index + p.VOLTAGE_BUFFER_LEN) - i) % p.VOLTAGE_BUFFER_LEN] - p.motionSensorBaseline);\n\t\t\t}\n\n\t\t\tstartAvgDiff /= 5;\n\t\t\tendAvgDiff /= 5;\n\n\t\t\tif (p.motionSensorCountdown !== 0) {\n\t\t\t\tp.motionSensorCountdown--;\n\t\t\t\ttriggered = true;\n\t\t\t}\n\n\t\t\tif (startAvgDiff > threshold && endAvgDiff > threshold) {\n\t\t\t\tp.motionSensorCountdown = 10;\n\t\t\t\ttriggered = true;\n\t\t\t}\n\n\t\t\treturn triggered;\n\t\t}\n\n\t\treturn PUNK.BOOL;\n\t}\n}\n\nexport { VoltageInput };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface CapacitiveTouchData {\n\ttouchValueChangeTrigger: number,\n\tminTouchValueChangeTrigger: number,\n\tmaxTouchValueChangeTrigger: number,\n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tsensitivity: number,\n\tminSensitivity: number,\n\tmaxSensitivity: number,\n\tmaxTouchValue: number,\n\tminTouchValue: number,\n\ttouchValue: number,\n\tisTouched: number,\n}\n\nabstract class CapacitiveTouchBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: CapacitiveTouchData;\n\t/**\n\t * **Touch** event\n\t *  * `touchValue` - Value of the touch input axis.\n\t * ---\n\t * The most recent touch value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `touchValueChangeTrigger` has been set to a non-zero value, the `Touch` event will not occur until the touch value has changed by at least the `touchValueChangeTrigger` value.\n\t */\n\tonTouch: ((touchValue: number) => void) | null = null;\n\t/** @internal */\n\t_gotTouchErrorEvent?: boolean;\n\t/**\n\t * **TouchEnd** event\n\t * ---\n\t * The channel will report a `TouchEnd` event to signify that it is no longer detecting a touch.\n\t */\n\tonTouchEnd: (() => void) | null = null;\n\t/** @internal */\n\t_gotTouchEndErrorEvent?: boolean;\n\n\t/**\n\t * The Capacitive Touch class gathers input data from capacitive buttons and sliders on Phidget boards.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.CAPACITIVE_TOUCH;\n\t\tthis.name = \"CapacitiveTouch\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSENSITIVITY:\n\t\t\tthis.data.sensitivity = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Sensitivity', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.touchValueChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TouchValueChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.TOUCHINPUTVALUECHANGE: {\n\t\t\tthis.data.touchValue = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onTouch) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onTouch(this.data.touchValue);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.TOUCHINPUTEND: {\n\t\t\tif (this._isAttachedDone && this.onTouchEnd) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onTouchEnd();\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): CapacitiveTouchData {\n\t\treturn {\n\t\t\ttouchValueChangeTrigger: PUNK.DBL,\n\t\t\tminTouchValueChangeTrigger: PUNK.DBL,\n\t\t\tmaxTouchValueChangeTrigger: PUNK.DBL,\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tsensitivity: PUNK.DBL,\n\t\t\tminSensitivity: PUNK.DBL,\n\t\t\tmaxSensitivity: PUNK.DBL,\n\t\t\tmaxTouchValue: PUNK.DBL,\n\t\t\tminTouchValue: PUNK.DBL,\n\t\t\ttouchValue: PUNK.DBL,\n\t\t\tisTouched: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\t\tthis.data.touchValueChangeTrigger = 0;\n\t\t\tthis.data.minTouchValueChangeTrigger = 0;\n\t\t\tthis.data.maxTouchValueChangeTrigger = 1;\n\t\t\tthis.data.dataInterval = 25;\n\t\t\tthis.data.minDataInterval = 25;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 40;\n\t\t\tthis.data.sensitivity = 0.2;\n\t\t\tthis.data.minSensitivity = 0;\n\t\t\tthis.data.maxSensitivity = 1;\n\t\t\tthis.data.maxTouchValue = 1;\n\t\t\tthis.data.minTouchValue = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\t\tthis.data.touchValueChangeTrigger = 0;\n\t\t\tthis.data.minTouchValueChangeTrigger = 0;\n\t\t\tthis.data.maxTouchValueChangeTrigger = 0.5;\n\t\t\tthis.data.dataInterval = 20;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 250;\n\t\t\tthis.data.minDataRate = 4;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.sensitivity = 0.5;\n\t\t\tthis.data.minSensitivity = 0;\n\t\t\tthis.data.maxSensitivity = 1;\n\t\t\tthis.data.maxTouchValue = 1;\n\t\t\tthis.data.minTouchValue = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\tthis.data.touchValueChangeTrigger = 0;\n\t\t\tthis.data.minTouchValueChangeTrigger = 0;\n\t\t\tthis.data.maxTouchValueChangeTrigger = 0.5;\n\t\t\tthis.data.dataInterval = 20;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 250;\n\t\t\tthis.data.minDataRate = 4;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.sensitivity = 0.7;\n\t\t\tthis.data.minSensitivity = 0;\n\t\t\tthis.data.maxSensitivity = 1;\n\t\t\tthis.data.maxTouchValue = 1;\n\t\t\tthis.data.minTouchValue = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._HIN1000_CAPACITIVETOUCH_100:\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_BUTTONS_100:\n\t\tcase DeviceChannelUID._HIN1001_CAPACITIVETOUCH_WHEEL_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.touchValueChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.sensitivity });\n\t\t\tawait bp.send(this._ch, BP.SETSENSITIVITY);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.touchValue == PUNK.DBL)\n\t\t\t&& ! this._gotTouchErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.touchValue != PUNK.DBL)\n\t\t\tif (this.onTouch)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onTouch(this.data.touchValue);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `Touch` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `Touch` events can also be affected by the `touchValueChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Determines the sensitivity of all capacitive regions on the device.\n\t * \n\t * *   Higher values result in greater touch sensitivity.\n\t * *   The sensitivity value is bounded by `minSensitivity` and `maxSensitivity`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sensitivity() { return this.getSensitivity(); }\n\t/**\n\t * The minimum value that `sensitivity` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minSensitivity() { return this.getMinSensitivity(); }\n\t/**\n\t * The maximum value that `sensitivity` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxSensitivity() { return this.getMaxSensitivity(); }\n\t/**\n\t * The most recent touch state that the channel has reported.\n\t * \n\t * *   This will be 0 or 1\n\t * \n\t * *   0 is not touched\n\t * *   1 is touched\n\t * @throws {@link PhidgetError}\n\t */\n\tget isTouched() { return this.getIsTouched(); }\n\t/**\n\t * The most recent touch value that the channel has reported.\n\t * \n\t * *   This will be 0 or 1 for button-type inputs, or a ratio between 0-1 for axis-type inputs.\n\t * *   This value is bounded by `minTouchValue` and `maxTouchValue`\n\t * *   The value is not reset when the touch ends\n\t * @throws {@link PhidgetError}\n\t */\n\tget touchValue() { return this.getTouchValue(); }\n\t/**\n\t * The minimum value the `Touch` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minTouchValue() { return this.getMinTouchValue(); }\n\t/**\n\t * The maximum value the `Touch` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxTouchValue() { return this.getMaxTouchValue(); }\n\t/**\n\t * The channel will not issue a `Touch` event until the touch value has changed by the amount specified by the `touchValueChangeTrigger`.\n\t * \n\t * *   Setting the `touchValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget touchValueChangeTrigger() { return this.getTouchValueChangeTrigger(); }\n\t/**\n\t * The minimum value that `touchValueChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minTouchValueChangeTrigger() { return this.getMinTouchValueChangeTrigger(); }\n\t/**\n\t * The maximum value that `touchValueChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxTouchValueChangeTrigger() { return this.getMaxTouchValueChangeTrigger(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `Touch` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `Touch` events can also be affected by the `touchValueChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `Touch` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `Touch` events can also be affected by the `touchValueChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The minimum data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The maximum data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent touch state that the channel has reported.\n\t * \n\t * *   This will be 0 or 1\n\t * \n\t * *   0 is not touched\n\t * *   1 is touched\n\t * @returns The touched state\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIsTouched(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.isTouched === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.isTouched);\n\t}\n\n\t/**\n\t * Determines the sensitivity of all capacitive regions on the device.\n\t * \n\t * *   Higher values result in greater touch sensitivity.\n\t * *   The sensitivity value is bounded by `minSensitivity` and `maxSensitivity`.\n\t * @returns The sensitivity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSensitivity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sensitivity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.sensitivity);\n\t}\n\n\t/**\n\t * Determines the sensitivity of all capacitive regions on the device.\n\t * \n\t * *   Higher values result in greater touch sensitivity.\n\t * *   The sensitivity value is bounded by `minSensitivity` and `maxSensitivity`.\n\t * @throws {@link PhidgetError}\n\t * @param sensitivity - The sensitivity value\n\t */\n\tasync setSensitivity(sensitivity: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (sensitivity < this.data.minSensitivity || sensitivity > this.data.maxSensitivity)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minSensitivity + \" - \" + this.data.maxSensitivity + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: sensitivity });\n\t\tawait bp.send(this._ch, BP.SETSENSITIVITY);\n\t}\n\n\t/**\n\t * The minimum value that `sensitivity` can be set to.\n\t * @returns The minimum sensitivity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinSensitivity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minSensitivity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minSensitivity);\n\t}\n\n\t/**\n\t * The maximum value that `sensitivity` can be set to.\n\t * @returns The maximum sensitivity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxSensitivity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxSensitivity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxSensitivity);\n\t}\n\n\t/**\n\t * The most recent touch value that the channel has reported.\n\t * \n\t * *   This will be 0 or 1 for button-type inputs, or a ratio between 0-1 for axis-type inputs.\n\t * *   This value is bounded by `minTouchValue` and `maxTouchValue`\n\t * *   The value is not reset when the touch ends\n\t * @returns The touch input value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTouchValue(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.touchValue === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.touchValue);\n\t}\n\n\t/**\n\t * The minimum value the `Touch` event will report.\n\t * @returns The minimum touch input value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinTouchValue(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minTouchValue === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minTouchValue);\n\t}\n\n\t/**\n\t * The maximum value the `Touch` event will report.\n\t * @returns The maximum touch input value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxTouchValue(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxTouchValue === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxTouchValue);\n\t}\n\n\t/**\n\t * The channel will not issue a `Touch` event until the touch value has changed by the amount specified by the `touchValueChangeTrigger`.\n\t * \n\t * *   Setting the `touchValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTouchValueChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.touchValueChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.touchValueChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `Touch` event until the touch value has changed by the amount specified by the `touchValueChangeTrigger`.\n\t * \n\t * *   Setting the `touchValueChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param touchValueChangeTrigger - The change trigger value\n\t */\n\tasync setTouchValueChangeTrigger(touchValueChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (touchValueChangeTrigger < this.data.minTouchValueChangeTrigger || touchValueChangeTrigger > this.data.maxTouchValueChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minTouchValueChangeTrigger + \" - \" + this.data.maxTouchValueChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: touchValueChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `touchValueChangeTrigger` can be set to.\n\t * @returns The minimum change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinTouchValueChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minTouchValueChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minTouchValueChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `touchValueChangeTrigger` can be set to.\n\t * @returns The maximum change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxTouchValueChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxTouchValueChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxTouchValueChangeTrigger);\n\t}\n\n}\nexport { CapacitiveTouchBase };\n","import { CapacitiveTouchBase } from './CapacitiveTouch.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket } from '../BridgePacket';\n\n/** @public */\nclass CapacitiveTouch extends CapacitiveTouchBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.TOUCHINPUTVALUECHANGE:\n\t\t\t\tthis.data.isTouched = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t\tcase BP.TOUCHINPUTEND:\n\t\t\t\tthis.data.isTouched = 0;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport { CapacitiveTouch };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface RFIDData {\n\tlastTagString: string | null,\n\tlastTagProtocol: Enum.RFIDProtocol | PUNK.ENUM, \n\tantennaEnabled: number,\n\ttagPresent: number,\n}\n\nabstract class RFIDBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: RFIDData;\n\t/**\n\t * **Tag** event\n\t *  * `tag` - Data from the tag\n\t *  * `protocol` - Communication protocol of the tag\n\t * ---\n\t * Occurs when an RFID tag is read.\n\t */\n\tonTag: ((tag: string, protocol: Enum.RFIDProtocol) => void) | null = null;\n\t/** @internal */\n\t_gotTagErrorEvent?: boolean;\n\t/**\n\t * **TagLost** event\n\t *  * `tag` - Data from the lost tag\n\t *  * `protocol` - Communication protocol of the lost tag\n\t * ---\n\t * Occurs when an RFID tag that was being read is no longer seen by the reader. Typically this indicates the tag has been removed from the read range, though it could also happen due to interference from multiple tags entering the read range at the same time.\n\t */\n\tonTagLost: ((tag: string, protocol: Enum.RFIDProtocol) => void) | null = null;\n\t/** @internal */\n\t_gotTagLostErrorEvent?: boolean;\n\n\t/**\n\t * The RFID class provides methods for Phidget RFID boards to read and write (if writing is supported) to RFID tags.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.RFID;\n\t\tthis.name = \"RFID\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETANTENNAON:\n\t\t\tthis.data.antennaEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('AntennaEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.WRITE:\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): RFIDData {\n\t\treturn {\n\t\t\tlastTagString: null,\n\t\t\tlastTagProtocol: 0, \n\t\t\tantennaEnabled: PUNK.BOOL,\n\t\t\ttagPresent: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\t// This should never be called as no USB Phidgets that use this calls are supported\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\t// This should never be called as no USB Phidgets that use this calls are supported\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The on/off state of the antenna.\n\t * \n\t * *   You can turn the antenna off to save power.\n\t * *   You must turn the antenna on in order to detect and read RFID tags.\n\t * @throws {@link PhidgetError}\n\t */\n\tget antennaEnabled() { return this.getAntennaEnabled(); }\n\t/**\n\t * This property is true if a compatibile RFID tag is being read by the reader.\n\t * \n\t * *   `TagPresent` will remain true until the tag is out of range and can no longer be read.\n\t * @throws {@link PhidgetError}\n\t */\n\tget tagPresent() { return this.getTagPresent(); }\n\n\t/**\n\t * The on/off state of the antenna.\n\t * \n\t * *   You can turn the antenna off to save power.\n\t * *   You must turn the antenna on in order to detect and read RFID tags.\n\t * @returns The state of the antenna\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAntennaEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.antennaEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.antennaEnabled);\n\t}\n\n\t/**\n\t * The on/off state of the antenna.\n\t * \n\t * *   You can turn the antenna off to save power.\n\t * *   You must turn the antenna on in order to detect and read RFID tags.\n\t * @throws {@link PhidgetError}\n\t * @param antennaEnabled - The state of the antenna\n\t */\n\tasync setAntennaEnabled(antennaEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (antennaEnabled !== false && antennaEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (antennaEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETANTENNAON);\n\t}\n\n\t/**\n\t * Gets the most recently read tag's data, even if that tag is no longer within read range.\n\t * \n\t * *   Only valid after at least one tag has been read.\n\t * @returns\n\t * \t- tagString: The data stored on the most recently read tag\n\t * \t- protocol: Protocol of the most recently read tag\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getLastTag(): {tagString: string, protocol: Enum.RFIDProtocol};\n\t/**\n\t * This property is true if a compatibile RFID tag is being read by the reader.\n\t * \n\t * *   `TagPresent` will remain true until the tag is out of range and can no longer be read.\n\t * @returns Tag is in range\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTagPresent(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.tagPresent === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.tagPresent);\n\t}\n\n\t/**\n\t * Writes data to the tag being currently read by the reader.\n\t * \n\t * *   You cannot write to a read-only or locked tag.\n\t * @throws {@link PhidgetError}\n\t * @param tagString - The data to write to the tag\n\t * @param protocol - The communication protocol to use\n\t * @param lockTag - If true, permanently locks the tag so that it cannot be re-written after this write.\n\t */\n\tasync write(tagString: string, protocol: Enum.RFIDProtocol, lockTag: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: tagString });\n\n\t\tif (!SEnum.supportedRFIDProtocol(this._ch!, protocol))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified RFIDProtocol is unsupported by this device.\");\n\n\t\tbp.set({ name: \"1\", type: \"d\", value: protocol });\n\n\t\tif (lockTag !== false && lockTag !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"2\", type: \"d\", value: (lockTag ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.WRITE);\n\t}\n\n}\nexport { RFIDBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { RFIDBase } from './RFID.gen';\nimport { PhidgetLock } from '../PhidgetLock';\nimport { ErrorCode, RFIDProtocol } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { Channel } from '../Channel';\nimport { logEventException } from '../Logging';\n\n/** @internal */\ninterface RFIDPrivate {\n\tlatestTagString: string,\n\tresolveLatestTag?: (tag: string) => void\n}\n\n/** @public */\nclass RFID extends RFIDBase {\n\t/** @internal */\n\t_transactionLock: PhidgetLock;\n\t/** @internal */\n\t_private: RFIDPrivate;\n\n\t/** @internal */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._transactionLock = new PhidgetLock();\n\t\tthis._private = {\n\t\t\tlatestTagString: ''\n\t\t};\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tsuper._initAfterOpen();\n\t\tthis._private = {\n\t\t\tlatestTagString: ''\n\t\t};\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.TAG: {\n\t\t\t\tthis.data.tagPresent = 1;\n\t\t\t\tconst tag = bp.getString(0) as string;\n\t\t\t\tconst protocol = bp.getNumber(1) as RFIDProtocol;\n\t\t\t\tif (this._isAttachedDone && this.onTag) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onTag(tag, protocol);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tthis.data.lastTagString = tag;\n\t\t\t\tthis.data.lastTagProtocol = protocol;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase BP.TAGLOST: {\n\t\t\t\tthis.data.tagPresent = 0;\n\t\t\t\tconst tag = bp.getString(0) as string;\n\t\t\t\tconst protocol = bp.getNumber(1) as RFIDProtocol;\n\t\t\t\tif (this._isAttachedDone && this.onTagLost) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onTagLost(tag, protocol);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase BP.SETANTENNAON:\n\t\t\t\tif (this.data.tagPresent === PUNK.BOOL)\n\t\t\t\t\tthis.data.tagPresent = 0;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetLastTag() {\n\t\tthis._assertOpen();\n\n\t\tif (!this.data.lastTagString)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ({\n\t\t\ttagString: this.data.lastTagString,\n\t\t\tprotocol: this.data.lastTagProtocol as RFIDProtocol\n\t\t});\n\t}\n\n\t/** @internal */\n\t_setLatestTagString(tagString: string) {\n\t\tthis._private.latestTagString = tagString;\n\t\tif (this._private.resolveLatestTag)\n\t\t\tthis._private.resolveLatestTag(tagString);\n\t}\n\n\t/** @internal */\n\tasync _waitForTag(expectedString: string, timeout: number) {\n\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\tconst timer = setTimeout(reject, timeout);\n\t\t\tthis._private.resolveLatestTag = function (tagString: string) {\n\t\t\t\tif (expectedString && expectedString === tagString) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport { RFID };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Struct from '../Structs.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface GPSData {\n\taltitude: number,\n\tdate: Struct.GPSDate | null,\n\theading: number,\n\tlatitude: number,\n\tlongitude: number,\n\tNMEAData: Struct.NMEAData | null,\n\tpositionFixState: number,\n\ttime: Struct.GPSTime | null,\n\tvelocity: number,\n}\n\nabstract class GPSBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: GPSData;\n\t/**\n\t * **PositionChange** event\n\t *  * `latitude` - The current latitude\n\t *  * `longitude` - The current longitude\n\t *  * `altitude` - The current altitude\n\t * ---\n\t * The most recent values the channel has measured will be reported in this event, which occurs when the GPS position changes.\n\t */\n\tonPositionChange: ((latitude: number, longitude: number, altitude: number) => void) | null = null;\n\t/** @internal */\n\t_gotPositionChangeErrorEvent?: boolean;\n\t/**\n\t * **HeadingChange** event\n\t *  * `heading` - The current heading\n\t *  * `velocity` - The current velocity\n\t * ---\n\t * The most recent heading and velocity values will be reported in this event, which occurs when the GPS heading changes.\n\t */\n\tonHeadingChange: ((heading: number, velocity: number) => void) | null = null;\n\t/** @internal */\n\t_gotHeadingChangeErrorEvent?: boolean;\n\t/**\n\t * **PositionFixStateChange** event\n\t *  * `positionFixState` - The state of the position fix. True indicates a fix is obtained. False indicates no fix found.\n\t * ---\n\t * Occurs when a position fix is obtained or lost.\n\t */\n\tonPositionFixStateChange: ((positionFixState: boolean) => void) | null = null;\n\t/** @internal */\n\t_gotPositionFixStateChangeErrorEvent?: boolean;\n\n\t/**\n\t * The GPS class is used to configure and gather data from Phidgets GPS sensors, and gives you access to variables from GPS data packets.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.GPS;\n\t\tthis.name = \"GPS\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.HEADINGCHANGE: {\n\t\t\tthis.data.heading = bp.entries[0].v as number;\n\t\t\tthis.data.velocity = bp.entries[1].v as number;\n\t\t\tif (this._isAttachedDone && this.onHeadingChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onHeadingChange(this.data.heading, this.data.velocity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.POSITIONCHANGE: {\n\t\t\tthis.data.latitude = bp.entries[0].v as number;\n\t\t\tthis.data.longitude = bp.entries[1].v as number;\n\t\t\tthis.data.altitude = bp.entries[2].v as number;\n\t\t\tif (this._isAttachedDone && this.onPositionChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPositionChange(this.data.latitude, this.data.longitude, this.data.altitude);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.POSITIONFIXSTATUSCHANGE: {\n\t\t\tthis.data.positionFixState = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onPositionFixStateChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPositionFixStateChange(!!this.data.positionFixState);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): GPSData {\n\t\treturn {\n\t\t\taltitude: PUNK.DBL,\n\t\t\tdate: null,\n\t\t\theading: PUNK.DBL,\n\t\t\tlatitude: PUNK.DBL,\n\t\t\tlongitude: PUNK.DBL,\n\t\t\tNMEAData: null,\n\t\t\tpositionFixState: PUNK.BOOL,\n\t\t\ttime: null,\n\t\t\tvelocity: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\t// This should never be called as no USB Phidgets that use this calls are supported\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\t// This should never be called as no USB Phidgets that use this calls are supported\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.heading == PUNK.DBL ||\n\t\t\tthis.data.velocity == PUNK.DBL)\n\t\t\t&& ! this._gotHeadingChangeErrorEvent)\n\t\t\treturn false;\n\t\tif ((this.data.latitude == PUNK.DBL ||\n\t\t\tthis.data.longitude == PUNK.DBL ||\n\t\t\tthis.data.altitude == PUNK.DBL)\n\t\t\t&& ! this._gotPositionChangeErrorEvent)\n\t\t\treturn false;\n\t\tif ((this.data.positionFixState == PUNK.BOOL)\n\t\t\t&& ! this._gotPositionFixStateChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.heading != PUNK.DBL &&\n\t\t\tthis.data.velocity != PUNK.DBL)\n\t\t\tif (this.onHeadingChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onHeadingChange(this.data.heading, this.data.velocity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t\tif(this.data.latitude != PUNK.DBL &&\n\t\t\tthis.data.longitude != PUNK.DBL &&\n\t\t\tthis.data.altitude != PUNK.DBL)\n\t\t\tif (this.onPositionChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPositionChange(this.data.latitude, this.data.longitude, this.data.altitude);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t\tif(this.data.positionFixState != PUNK.BOOL)\n\t\t\tif (this.onPositionFixStateChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPositionFixStateChange(!!this.data.positionFixState);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The altitude above mean sea level in meters.\n\t * @throws {@link PhidgetError}\n\t */\n\tget altitude() { return this.getAltitude(); }\n\t/**\n\t * The UTC date of the last received position.\n\t * @throws {@link PhidgetError}\n\t */\n\tget date() { return this.getDate(); }\n\t/**\n\t * The current date and time in UTC\n\t * @throws {@link PhidgetError}\n\t */\n\tget dateAndTime() { return this.getDateAndTime(); }\n\t/**\n\t * The current true course over ground of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tget heading() { return this.getHeading(); }\n\t/**\n\t * The latitude of the GPS in degrees\n\t * @throws {@link PhidgetError}\n\t */\n\tget latitude() { return this.getLatitude(); }\n\t/**\n\t * The longitude of the GPS.\n\t * @throws {@link PhidgetError}\n\t */\n\tget longitude() { return this.getLongitude(); }\n\t/**\n\t * The NMEA data structure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget NMEAData() { return this.getNMEAData(); }\n\t/**\n\t * The status of the position fix\n\t * \n\t * *   True if a fix is available and latitude, longitude, and altitude can be read. False if the fix is not available.\n\t * @throws {@link PhidgetError}\n\t */\n\tget positionFixState() { return this.getPositionFixState(); }\n\t/**\n\t * The current UTC time of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tget time() { return this.getTime(); }\n\t/**\n\t * The current speed over ground of the GPS.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocity() { return this.getVelocity(); }\n\n\t/**\n\t * The altitude above mean sea level in meters.\n\t * @returns Altitude of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAltitude(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.altitude === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.altitude);\n\t}\n\n\t/**\n\t * The UTC date of the last received position.\n\t * @returns Date of last position\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDate(): Struct.GPSDate {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.date === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.date);\n\t}\n\n\t/**\n\t * The current date and time in UTC\n\t * @returns Current date and time\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDateAndTime(): Date;\n\t/**\n\t * The current true course over ground of the GPS\n\t * @returns Heading of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHeading(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.heading === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.heading);\n\t}\n\n\t/**\n\t * The latitude of the GPS in degrees\n\t * @returns Latitude of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tgetLatitude(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.latitude === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.latitude);\n\t}\n\n\t/**\n\t * The longitude of the GPS.\n\t * @returns Longtidue of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tgetLongitude(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.longitude === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.longitude);\n\t}\n\n\t/**\n\t * The NMEA data structure.\n\t * @returns NMEA Data structure\n\t * @throws {@link PhidgetError}\n\t */\n\tgetNMEAData(): Struct.NMEAData {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.NMEAData === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.NMEAData);\n\t}\n\n\t/**\n\t * The status of the position fix\n\t * \n\t * *   True if a fix is available and latitude, longitude, and altitude can be read. False if the fix is not available.\n\t * @returns Status of the position fix\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPositionFixState(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.positionFixState === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.positionFixState);\n\t}\n\n\t/**\n\t * The current UTC time of the GPS\n\t * @returns Current time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTime(): Struct.GPSTime {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.time === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.time);\n\t}\n\n\t/**\n\t * The current speed over ground of the GPS.\n\t * @returns Velocity of the GPS\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.velocity);\n\t}\n\n}\nexport { GPSBase };\n","import { GPSBase } from './GPS.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket } from '../BridgePacket';\nimport { PhidgetError } from '../PhidgetError';\nimport { ErrorCode } from '../Enumerations.gen';\nimport { GPGGA, GPGSA, GPRMC, GPVTG, NMEAData } from '../Structs.gen';\n\nfunction readGPGGA(bp: BridgePacket): GPGGA {\n\treturn {\n\t\tlatitude: bp.getNumber(\"GPGGA.latitude\"),\n\t\tlongitude: bp.getNumber(\"GPGGA.longitude\"),\n\t\tfixQuality: bp.getNumber(\"GPGGA.fixQuality\"),\n\t\tnumSatellites: bp.getNumber(\"GPGGA.numSatellites\"),\n\t\thorizontalDilution: bp.getNumber(\"GPGGA.horizontalDilution\"),\n\t\taltitude: bp.getNumber(\"GPGGA.altitude\"),\n\t\theightOfGeoid: bp.getNumber(\"GPGGA.heightOfGeoid\")\n\t};\n}\n\nfunction readGPGSA(bp: BridgePacket): GPGSA {\n\treturn {\n\t\tmode: String.fromCharCode(bp.getNumber(\"GPGSA.mode\")),\n\t\tfixType: bp.getNumber(\"GPGSA.fixType\"),\n\t\tsatUsed: bp.getArray(\"GPGSA.satUsed\") as [number, number, number, number, number, number, number, number, number, number, number, number],\n\t\tposnDilution: bp.getNumber(\"GPGSA.posnDilution\"),\n\t\thorizDilution: bp.getNumber(\"GPGSA.horizDilution\"),\n\t\tvertDilution: bp.getNumber(\"GPGSA.vertDilution\")\n\t};\n}\n\nfunction readGPRMC(bp: BridgePacket): GPRMC {\n\treturn {\n\t\tstatus: String.fromCharCode(bp.getNumber(\"GPRMC.status\")),\n\t\tlatitude: bp.getNumber(\"GPRMC.latitude\"),\n\t\tlongitude: bp.getNumber(\"GPRMC.longitude\"),\n\t\tspeedKnots: bp.getNumber(\"GPRMC.speedKnots\"),\n\t\theading: bp.getNumber(\"GPRMC.heading\"),\n\t\tmagneticVariation: bp.getNumber(\"GPRMC.magneticVariation\"),\n\t\tmode: String.fromCharCode(bp.getNumber(\"GPRMC.mode\"))\n\t};\n}\n\nfunction readGPVTG(bp: BridgePacket): GPVTG {\n\treturn {\n\t\ttrueHeading: bp.getNumber(\"GPVTG.trueHeading\"),\n\t\tmagneticHeading: bp.getNumber(\"GPVTG.magneticHeading\"),\n\t\tspeedKnots: bp.getNumber(\"GPVTG.speedKnots\"),\n\t\tspeed: bp.getNumber(\"GPVTG.speed\"),\n\t\tmode: String.fromCharCode(bp.getNumber(\"GPVTG.mode\"))\n\t};\n}\n\nfunction readNMEAData(bp: BridgePacket): NMEAData {\n\treturn {\n\t\tGGA: readGPGGA(bp),\n\t\tGSA: readGPGSA(bp),\n\t\tRMC: readGPRMC(bp),\n\t\tVTG: readGPVTG(bp)\n\t};\n}\n\n/** @public */\nclass GPS extends GPSBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.DATA:\n\t\t\t\tthis.data.NMEAData = readNMEAData(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.TIME:\n\t\t\t\tthis.data.time = {\n\t\t\t\t\ttm_ms: bp.getNumber(\"GPSTime.tm_ms\"),\n\t\t\t\t\ttm_sec: bp.getNumber(\"GPSTime.tm_sec\"),\n\t\t\t\t\ttm_min: bp.getNumber(\"GPSTime.tm_min\"),\n\t\t\t\t\ttm_hour: bp.getNumber(\"GPSTime.tm_hour\")\n\t\t\t\t};\n\t\t\t\tbreak;\n\n\t\t\tcase BP.DATE:\n\t\t\t\tthis.data.date = {\n\t\t\t\t\ttm_mday: bp.getNumber(\"GPSDate.tm_mday\"),\n\t\t\t\t\ttm_mon: bp.getNumber(\"GPSDate.tm_mon\"),\n\t\t\t\t\ttm_year: bp.getNumber(\"GPSDate.tm_year\")\n\t\t\t\t};\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetDateAndTime() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.time === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\tif (this.data.date === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\tconst date = new Date(Date.UTC(this.data.date.tm_year, this.data.date.tm_mon, this.data.date.tm_mday,\n\t\t\tthis.data.time.tm_hour, this.data.time.tm_min, this.data.time.tm_sec, this.data.time.tm_ms));\n\n\t\treturn date;\n\t}\n}\n\nexport { GPS };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface GyroscopeData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxAngularRate: readonly [number, number, number],\n\tminDataInterval: number,\n\tminAngularRate: readonly [number, number, number],\n\tangularRate: readonly [number, number, number],\n\taxisCount: number,\n\ttimestamp: number,\n\tprecision: Enum.SpatialPrecision | PUNK.ENUM,\n\theatingEnabled: number,\n}\n\nabstract class GyroscopeBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: GyroscopeData;\n\t/**\n\t * **AngularRateUpdate** event\n\t *  * `angularRate` - The angular rate values\n\t *  * `timestamp` - The timestamp value\n\t * ---\n\t * The most recent angular rate and timestamp values the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t */\n\tonAngularRateUpdate: ((angularRate: readonly [number, number, number], timestamp: number) => void) | null = null;\n\t/** @internal */\n\t_gotAngularRateUpdateErrorEvent?: boolean;\n\n\t/**\n\t * The Gyroscope class reports rotational data from the Phidget containing a gyroscope chip for use in your code. Phidget gyroscopes usually have multiple sensors, each oriented in a different axis, so multiple dimensions of heading can be recorded.\n\t * \n\t * If the Phidget you're using also has an accelerometer and a magnetometer, you may want to use the Spatial classin order to get all of the data at the same time, in a single event.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.GYROSCOPE;\n\t\tthis.name = \"Gyroscope\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETHEATINGENABLED:\n\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSPATIALPRECISION:\n\t\t\tthis.data.precision = bp.entries[0].v as Enum.SpatialPrecision;\n\t\t\tthis._FIREPropertyChange('Precision', bp);\n\t\t\tbreak;\n\t\tcase BP.ZERO:\n\t\t\tbreak;\n\t\tcase BP.ANGULARRATEUPDATE: {\n\t\t\tthis.data.angularRate = bp.entries[0].v as [number, number, number];\n\t\t\tthis.data.timestamp = bp.entries[1].v as number;\n\t\t\tif (this._isAttachedDone && this.onAngularRateUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onAngularRateUpdate(this.data.angularRate, this.data.timestamp);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): GyroscopeData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxAngularRate: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminAngularRate: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tangularRate: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\taxisCount: PUNK.INT32,\n\t\t\ttimestamp: PUNK.DBL,\n\t\t\tprecision: PUNK.ENUM,\n\t\t\theatingEnabled: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.LOW;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0109_GYROSCOPE_100:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.angularRate = (<SpatialDevice>this._ch!.parent).data.angularRate[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.timestamp = (<SpatialDevice>this._ch!.parent).data.timestamp[this._ch!.index];\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HYBRID;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.angularRate = (<SpatialDevice>this._ch!.parent).data.angularRate[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.timestamp = (<SpatialDevice>this._ch!.parent).data.timestamp[this._ch!.index];\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HIGH;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HIGH;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_GYROSCOPE_100:\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_200:\n\t\tcase DeviceChannelUID._MOT1102_GYROSCOPE_300:\n\t\tcase DeviceChannelUID._MOT0109_GYROSCOPE_100:\n\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_USB:\n\t\tcase DeviceChannelUID._MOT0110_GYROSCOPE_100_VINT:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.angularRate.includes(PUNK.DBL) ||\n\t\t\tthis.data.timestamp == PUNK.DBL)\n\t\t\t&& ! this._gotAngularRateUpdateErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(!this.data.angularRate.includes(PUNK.DBL) &&\n\t\t\tthis.data.timestamp != PUNK.DBL)\n\t\t\tif (this.onAngularRateUpdate)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onAngularRateUpdate(this.data.angularRate, this.data.timestamp);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The most recent angular rate value that the channel has reported.\n\t * \n\t * *   This value will always be between `minAngularRate` and `maxAngularRate`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget angularRate() { return this.getAngularRate(); }\n\t/**\n\t * The minimum value the `AngularRateUpdate` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAngularRate() { return this.getMinAngularRate(); }\n\t/**\n\t * The maximum value the `AngularRateUpdate` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAngularRate() { return this.getMaxAngularRate(); }\n\t/**\n\t * The number of axes the channel can measure angular rate on.\n\t * \n\t * *   See your device's User Guide for more information about the number of axes and their orientation.\n\t * @throws {@link PhidgetError}\n\t */\n\tget axisCount() { return this.getAxisCount(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `AngularRateUpdate` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t */\n\tget heatingEnabled() { return this.getHeatingEnabled(); }\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget precision() { return this.getPrecision(); }\n\t/**\n\t * The most recent timestamp value that the channel has reported. This is an extremely accurate time measurement streamed from the device.\n\t * \n\t * *   If your application requires a time measurement, you should use this value over a local software timestamp.\n\t * @throws {@link PhidgetError}\n\t */\n\tget timestamp() { return this.getTimestamp(); }\n\n\t/**\n\t * The most recent angular rate value that the channel has reported.\n\t * \n\t * *   This value will always be between `minAngularRate` and `maxAngularRate`.\n\t * @returns The last reported angular rate\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAngularRate(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.angularRate.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.angularRate);\n\t}\n\n\t/**\n\t * The minimum value the `AngularRateUpdate` event will report.\n\t * @returns The angular rate values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAngularRate(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAngularRate.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAngularRate);\n\t}\n\n\t/**\n\t * The maximum value the `AngularRateUpdate` event will report.\n\t * @returns The angular rate values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAngularRate(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAngularRate.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAngularRate);\n\t}\n\n\t/**\n\t * The number of axes the channel can measure angular rate on.\n\t * \n\t * *   See your device's User Guide for more information about the number of axes and their orientation.\n\t * @returns Axis count value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAxisCount(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.axisCount === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.axisCount);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `AngularRateUpdate` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `AngularRateUpdate` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @returns Whether self-heating temperature stabilization is enabled\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHeatingEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.heatingEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.heatingEnabled);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t * @param heatingEnabled - Whether self-heating temperature stabilization is enabled\n\t */\n\tasync setHeatingEnabled(heatingEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (heatingEnabled !== false && heatingEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (heatingEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETHEATINGENABLED);\n\t}\n\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @returns The sensor precision value\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetPrecision(): Enum.SpatialPrecision {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.precision === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.precision);\n\t}\n\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @throws {@link PhidgetError}\n\t * @param precision - The sensor precision value\n\t * @internal\n\t */\n\tasync setPrecision(precision: Enum.SpatialPrecision): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedSpatialPrecision(this._ch!, precision))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified SpatialPrecision is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: precision });\n\t\tawait bp.send(this._ch, BP.SETSPATIALPRECISION);\n\t}\n\n\t/**\n\t * The most recent timestamp value that the channel has reported. This is an extremely accurate time measurement streamed from the device.\n\t * \n\t * *   If your application requires a time measurement, you should use this value over a local software timestamp.\n\t * @returns The timestamp value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTimestamp(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.timestamp === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.timestamp);\n\t}\n\n\t/**\n\t * Re-zeros the gyroscope in 1-2 seconds.\n\t * \n\t * *   The device must be stationary when zeroing.\n\t * *   The angular rate will be reported as 0.0°/s while zeroing.\n\t * *   Zeroing the gyroscope is a method of compensating for the drift that is inherent to all gyroscopes. See your device's User Guide for more information on dealing with drift.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync zero(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.ZERO);\n\t}\n\n}\nimport { type SpatialDevice } from '../usb/device/SpatialDevice';\nexport { GyroscopeBase };\n","import { GyroscopeBase } from './Gyroscope.gen';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { BridgePacket, PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass Gyroscope extends GyroscopeBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.DATAINTERVALCHANGE:\r\n\t\t\t\tif (bp.entryCount > 1)\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\r\n\t\t\t\tthis._FIREPropertyChange('DataInterval');\r\n\t\t\t\tthis._FIREPropertyChange('DataRate');\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase BP.HEATINGENABLEDCHANGE:\r\n\t\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\r\n\t\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.angularRate = [PUNK.DBL, PUNK.DBL, PUNK.DBL];\r\n\t\t\t\tthis.data.timestamp = PUNK.DBL;\r\n\t\t\t\tthis._gotAngularRateUpdateErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { Gyroscope };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface MagnetometerData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxMagneticField: readonly [number, number, number],\n\tmaxMagneticFieldChangeTrigger: number,\n\tminDataInterval: number,\n\tminMagneticField: readonly [number, number, number],\n\tminMagneticFieldChangeTrigger: number,\n\tmagneticField: readonly [number, number, number],\n\tmagneticFieldChangeTrigger: number,\n\taxisCount: number,\n\ttimestamp: number,\n\theatingEnabled: number,\n}\n\nabstract class MagnetometerBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: MagnetometerData;\n\t/**\n\t * **MagneticFieldChange** event\n\t *  * `magneticField` - The magnetic field values\n\t *  * `timestamp` - The timestamp value\n\t * ---\n\t * The most recent magnetic field values the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `magneticFieldChangeTrigger` has been set to a non-zero value, the `MagneticFieldChange` event will not occur until the field strength has changed by at least the `magneticFieldChangeTrigger` value.\n\t */\n\tonMagneticFieldChange: ((magneticField: readonly [number, number, number], timestamp: number) => void) | null = null;\n\t/** @internal */\n\t_gotMagneticFieldChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Magnetometer class gathers magnetic compass data from Phidget boards. Phidget magnetometers usually have multiple sensors, each oriented in a different axis, so multiple dimensions of compass bearing can be recorded.\n\t * \n\t * If the Phidget you're using also has a gyroscope and an accelerometer, you may want to use the Spatial class in order to get all of the data at the same time, in a single event.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.MAGNETOMETER;\n\t\tthis.name = \"Magnetometer\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETHEATINGENABLED:\n\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.magneticFieldChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('MagneticFieldChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.FIELDSTRENGTHCHANGE: {\n\t\t\tthis.data.magneticField = bp.entries[0].v as [number, number, number];\n\t\t\tthis.data.timestamp = bp.entries[1].v as number;\n\t\t\tif (this._isAttachedDone && this.onMagneticFieldChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onMagneticFieldChange(this.data.magneticField, this.data.timestamp);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): MagnetometerData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxMagneticField: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tmaxMagneticFieldChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminMagneticField: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tminMagneticFieldChangeTrigger: PUNK.DBL,\n\t\t\tmagneticField: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tmagneticFieldChangeTrigger: PUNK.DBL,\n\t\t\taxisCount: PUNK.INT32,\n\t\t\ttimestamp: PUNK.DBL,\n\t\t\theatingEnabled: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.maxMagneticFieldChangeTrigger = 8;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tthis.data.minMagneticFieldChangeTrigger = 0;\n\t\t\tthis.data.magneticFieldChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0109_MAGNETOMETER_100:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.maxMagneticField = [50, 50, 50];\n\t\t\tthis.data.maxMagneticFieldChangeTrigger = 100;\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minMagneticField = [-50, -50, -50];\n\t\t\tthis.data.minMagneticFieldChangeTrigger = 0;\n\t\t\tthis.data.magneticField = (<SpatialDevice>this._ch!.parent).data.magneticField[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.magneticFieldChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.timestamp = (<SpatialDevice>this._ch!.parent).data.timestamp[this._ch!.index];\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 100;\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.maxMagneticFieldChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 10;\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tthis.data.minMagneticFieldChangeTrigger = 0;\n\t\t\tthis.data.magneticField = (<SpatialDevice>this._ch!.parent).data.magneticField[this._ch!.index] as [number, number, number];\n\t\t\tthis.data.magneticFieldChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.timestamp = (<SpatialDevice>this._ch!.parent).data.timestamp[this._ch!.index];\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 100;\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.maxMagneticFieldChangeTrigger = 16;\n\t\t\tthis.data.minDataInterval = 10;\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tthis.data.minMagneticFieldChangeTrigger = 0;\n\t\t\tthis.data.magneticFieldChangeTrigger = 0;\n\t\t\tthis.data.axisCount = 3;\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_MAGNETOMETER_100:\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_200:\n\t\tcase DeviceChannelUID._MOT1102_MAGNETOMETER_300:\n\t\tcase DeviceChannelUID._MOT0109_MAGNETOMETER_100:\n\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_USB:\n\t\tcase DeviceChannelUID._MOT0110_MAGNETOMETER_100_VINT:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.magneticFieldChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.magneticField.includes(PUNK.DBL) ||\n\t\t\tthis.data.timestamp == PUNK.DBL)\n\t\t\t&& ! this._gotMagneticFieldChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(!this.data.magneticField.includes(PUNK.DBL) &&\n\t\t\tthis.data.timestamp != PUNK.DBL)\n\t\t\tif (this.onMagneticFieldChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onMagneticFieldChange(this.data.magneticField, this.data.timestamp);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The number of axes the channel can measure field strength on.\n\t * \n\t * *   See your device's User Guide for more information about the number of axes and their orientation.\n\t * @throws {@link PhidgetError}\n\t */\n\tget axisCount() { return this.getAxisCount(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `MagneticFieldChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `MagneticFieldChange` events can also be affected by the `magneticFieldChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t */\n\tget heatingEnabled() { return this.getHeatingEnabled(); }\n\t/**\n\t * The most recent field strength value that the channel has reported.\n\t * \n\t * *   This value will always be between `minMagneticField` and `maxMagneticField`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget magneticField() { return this.getMagneticField(); }\n\t/**\n\t * The minimum value the `MagneticFieldChange` event will report.Any readings outside this range will result in a `Saturation` event. This check is done after calibration values have been applied, which will affect your magnetometer's range accordingly.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minMagneticField() { return this.getMinMagneticField(); }\n\t/**\n\t * The maximum value the `MagneticFieldChange` event will report.Any readings outside this range will result in a `Saturation` event. This check is done after calibration values have been applied, which will affect your magnetometer's range accordingly.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxMagneticField() { return this.getMaxMagneticField(); }\n\t/**\n\t * The channel will not issue a `MagneticFieldChange` event until the field strength value has changed by the amount specified by the `magneticFieldChangeTrigger`.\n\t * \n\t * *   Setting the `magneticFieldChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget magneticFieldChangeTrigger() { return this.getMagneticFieldChangeTrigger(); }\n\t/**\n\t * The minimum value that `magneticFieldChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minMagneticFieldChangeTrigger() { return this.getMinMagneticFieldChangeTrigger(); }\n\t/**\n\t * The maximum value that `magneticFieldChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxMagneticFieldChangeTrigger() { return this.getMaxMagneticFieldChangeTrigger(); }\n\t/**\n\t * The most recent timestamp value that the channel has reported. This is an extremely accurate time measurement streamed from the device.\n\t * \n\t * *   If your application requires a time measurement, you should use this value over a local software timestamp.\n\t * @throws {@link PhidgetError}\n\t */\n\tget timestamp() { return this.getTimestamp(); }\n\n\t/**\n\t * The number of axes the channel can measure field strength on.\n\t * \n\t * *   See your device's User Guide for more information about the number of axes and their orientation.\n\t * @returns The axis count value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAxisCount(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.axisCount === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.axisCount);\n\t}\n\n\t/**\n\t * Calibrate your device for the environment it will be used in.\n\t * \n\t * *   Due to physical location, hard and soft iron offsets, and even bias errors, your device should be calibrated. We have created a calibration program that will provide you with the `MagnetometerCorrectionParameters` for your specific situation. See your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t * @param magneticField - Ambient magnetic field value.\n\t * @param offset0 - Provided by calibration program.\n\t * @param offset1 - Provided by calibration program.\n\t * @param offset2 - Provided by calibration program.\n\t * @param gain0 - Provided by calibration program.\n\t * @param gain1 - Provided by calibration program.\n\t * @param gain2 - Provided by calibration program.\n\t * @param T0 - Provided by calibration program.\n\t * @param T1 - Provided by calibration program.\n\t * @param T2 - Provided by calibration program.\n\t * @param T3 - Provided by calibration program.\n\t * @param T4 - Provided by calibration program.\n\t * @param T5 - Provided by calibration program.\n\t */\n\tasync setCorrectionParameters(magneticField: number, offset0: number, offset1: number, offset2: number, gain0: number, gain1: number, gain2: number, T0: number, T1: number, T2: number, T3: number, T4: number, T5: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: magneticField });\n\t\tbp.set({ name: \"1\", type: \"g\", value: offset0 });\n\t\tbp.set({ name: \"2\", type: \"g\", value: offset1 });\n\t\tbp.set({ name: \"3\", type: \"g\", value: offset2 });\n\t\tbp.set({ name: \"4\", type: \"g\", value: gain0 });\n\t\tbp.set({ name: \"5\", type: \"g\", value: gain1 });\n\t\tbp.set({ name: \"6\", type: \"g\", value: gain2 });\n\t\tbp.set({ name: \"7\", type: \"g\", value: T0 });\n\t\tbp.set({ name: \"8\", type: \"g\", value: T1 });\n\t\tbp.set({ name: \"9\", type: \"g\", value: T2 });\n\t\tbp.set({ name: \"10\", type: \"g\", value: T3 });\n\t\tbp.set({ name: \"11\", type: \"g\", value: T4 });\n\t\tbp.set({ name: \"12\", type: \"g\", value: T5 });\n\t\tawait bp.send(this._ch, BP.SETCORRECTIONPARAMETERS);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `MagneticFieldChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `MagneticFieldChange` events can also be affected by the `magneticFieldChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `MagneticFieldChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `MagneticFieldChange` events can also be affected by the `magneticFieldChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @returns Whether self-heating temperature stabilization is enabled\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHeatingEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.heatingEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.heatingEnabled);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables onboard heating elements to bring the board up to a known temperature to minimize ambient temerature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t * @param heatingEnabled - Whether self-heating temperature stabilization is enabled\n\t */\n\tasync setHeatingEnabled(heatingEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (heatingEnabled !== false && heatingEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (heatingEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETHEATINGENABLED);\n\t}\n\n\t/**\n\t * The most recent field strength value that the channel has reported.\n\t * \n\t * *   This value will always be between `minMagneticField` and `maxMagneticField`.\n\t * @returns The channel's measured MagneticField\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMagneticField(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.magneticField.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.magneticField);\n\t}\n\n\t/**\n\t * The minimum value the `MagneticFieldChange` event will report.Any readings outside this range will result in a `Saturation` event. This check is done after calibration values have been applied, which will affect your magnetometer's range accordingly.\n\t * @returns The field strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinMagneticField(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minMagneticField.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minMagneticField);\n\t}\n\n\t/**\n\t * The maximum value the `MagneticFieldChange` event will report.Any readings outside this range will result in a `Saturation` event. This check is done after calibration values have been applied, which will affect your magnetometer's range accordingly.\n\t * @returns The field strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxMagneticField(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxMagneticField.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxMagneticField);\n\t}\n\n\t/**\n\t * The channel will not issue a `MagneticFieldChange` event until the field strength value has changed by the amount specified by the `magneticFieldChangeTrigger`.\n\t * \n\t * *   Setting the `magneticFieldChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMagneticFieldChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.magneticFieldChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.magneticFieldChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `MagneticFieldChange` event until the field strength value has changed by the amount specified by the `magneticFieldChangeTrigger`.\n\t * \n\t * *   Setting the `magneticFieldChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param magneticFieldChangeTrigger - The change trigger value\n\t */\n\tasync setMagneticFieldChangeTrigger(magneticFieldChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (magneticFieldChangeTrigger < this.data.minMagneticFieldChangeTrigger || magneticFieldChangeTrigger > this.data.maxMagneticFieldChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minMagneticFieldChangeTrigger + \" - \" + this.data.maxMagneticFieldChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: magneticFieldChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `magneticFieldChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinMagneticFieldChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minMagneticFieldChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minMagneticFieldChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `magneticFieldChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxMagneticFieldChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxMagneticFieldChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxMagneticFieldChangeTrigger);\n\t}\n\n\t/**\n\t * Resets the `MagnetometerCorrectionParameters` to their default values.\n\t * \n\t * *   Due to physical location, hard and soft iron offsets, and even bias errors, your device should be calibrated. We have created a calibration program that will provide you with the `MagnetometerCorrectionParameters` for your specific situation. See your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetCorrectionParameters(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.RESETCORRECTIONPARAMETERS);\n\t}\n\n\t/**\n\t * Saves the `MagnetometerCorrectionParameters`.\n\t * \n\t * *   Due to physical location, hard and soft iron offsets, and even bias errors, your device should be calibrated. We have created a calibration program that will provide you with the `MagnetometerCorrectionParameters` for your specific situation. See your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync saveCorrectionParameters(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.SAVECORRECTIONPARAMETERS);\n\t}\n\n\t/**\n\t * The most recent timestamp value that the channel has reported. This is an extremely accurate time measurement streamed from the device.\n\t * \n\t * *   If your application requires a time measurement, you should use this value over a local software timestamp.\n\t * @returns The timestamp value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTimestamp(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.timestamp === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.timestamp);\n\t}\n\n}\nimport { type SpatialDevice } from '../usb/device/SpatialDevice';\nexport { MagnetometerBase };\n","import { MagnetometerBase } from './Magnetometer.gen';\r\nimport { PhidgetLock } from '../PhidgetLock';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { Channel } from '../Channel';\r\nimport { BridgePacket, PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass Magnetometer extends MagnetometerBase {\r\n\t/** @internal */\r\n\ttransactionLock: PhidgetLock;\r\n\r\n\t/** @internal */\r\n\tconstructor();\r\n\t/** @internal */\r\n\tconstructor(ch?: Channel);\r\n\tconstructor(ch?: Channel) {\r\n\t\tsuper(ch);\r\n\t\tthis.transactionLock = new PhidgetLock();\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.DATAINTERVALCHANGE:\r\n\t\t\t\tif (bp.entryCount > 1)\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\r\n\t\t\t\tthis._FIREPropertyChange('DataInterval');\r\n\t\t\t\tthis._FIREPropertyChange('DataRate');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.HEATINGENABLEDCHANGE:\r\n\t\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\r\n\t\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.magneticField = [PUNK.DBL, PUNK.DBL, PUNK.DBL];\r\n\t\t\t\tthis.data.timestamp = PUNK.DBL;\r\n\t\t\t\tthis._gotMagneticFieldChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { Magnetometer };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport * as Struct from '../Structs.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface SpatialData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tprecision: Enum.SpatialPrecision | PUNK.ENUM,\n\talgorithm: Enum.SpatialAlgorithm | PUNK.ENUM,\n\talgorithmMagnetometerGain: number,\n\tmaxAcceleration: readonly [number, number, number],\n\tminAcceleration: readonly [number, number, number],\n\tmaxAngularRate: readonly [number, number, number],\n\tminAngularRate: readonly [number, number, number],\n\tmaxMagneticField: readonly [number, number, number],\n\tminMagneticField: readonly [number, number, number],\n\theatingEnabled: number,\n\tquaternion: Struct.SpatialQuaternion | null,\n\teulerAngles: Struct.SpatialEulerAngles | null,\n}\n\nabstract class SpatialBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: SpatialData;\n\t/**\n\t * **SpatialData** event\n\t *  * `acceleration` - The acceleration vaulues\n\t *  * `angularRate` - The angular rate values\n\t *  * `magneticField` - The field strength values\n\t *  * `timestamp` - The timestamp value\n\t * ---\n\t * The most recent values that your channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t */\n\tonSpatialData: ((acceleration: readonly [number, number, number], angularRate: readonly [number, number, number], magneticField: readonly [number, number, number], timestamp: number) => void) | null = null;\n\t/** @internal */\n\t_gotSpatialDataErrorEvent?: boolean;\n\t/**\n\t * **AlgorithmData** event\n\t *  * `quaternion` - The quaternion value - \\[x, y, z, w\\]\n\t *  * `timestamp` - The timestamp value\n\t * ---\n\t * The most recent IMU/AHRS Quaternion will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t */\n\tonAlgorithmData: ((quaternion: readonly [number, number, number, number], timestamp: number) => void) | null = null;\n\t/** @internal */\n\t_gotAlgorithmDataErrorEvent?: boolean;\n\n\t/**\n\t * The Spatial class simultaneously gathers data from the acceleromter, gyroscope and magnetometer on a Phidget board.\n\t * \n\t * You can also use the individual classes for these sensors if you want to handle the data in separate events.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.SPATIAL;\n\t\tthis.name = \"Spatial\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETAHRSPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.SETSPATIALALGORITHM:\n\t\t\tthis.data.algorithm = bp.entries[0].v as Enum.SpatialAlgorithm;\n\t\t\tthis._FIREPropertyChange('Algorithm', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSPATIALALGORITHMMAGGAIN:\n\t\t\tthis.data.algorithmMagnetometerGain = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('AlgorithmMagnetometerGain', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETHEATINGENABLED:\n\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCORRECTIONPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.SETSPATIALPRECISION:\n\t\t\tthis.data.precision = bp.entries[0].v as Enum.SpatialPrecision;\n\t\t\tthis._FIREPropertyChange('Precision', bp);\n\t\t\tbreak;\n\t\tcase BP.RESETCORRECTIONPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.SAVECORRECTIONPARAMETERS:\n\t\t\tbreak;\n\t\tcase BP.ZEROSPATIALALGORITHM:\n\t\t\tbreak;\n\t\tcase BP.ZERO:\n\t\t\tbreak;\n\t\tcase BP.SPATIALDATA: {\n\t\t\tif (this._isAttachedDone && this.onSpatialData) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onSpatialData(bp.entries[0].v as readonly [number, number, number], bp.entries[1].v as readonly [number, number, number], bp.entries[2].v as readonly [number, number, number], bp.entries[3].v as number);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): SpatialData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tprecision: PUNK.ENUM,\n\t\t\talgorithm: PUNK.ENUM,\n\t\t\talgorithmMagnetometerGain: PUNK.DBL,\n\t\t\tmaxAcceleration: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tminAcceleration: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tmaxAngularRate: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tminAngularRate: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tmaxMagneticField: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tminMagneticField: [PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\theatingEnabled: PUNK.BOOL,\n\t\t\tquaternion: null,\n\t\t\teulerAngles: null,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.LOW;\n\t\t\tthis.data.algorithm = Enum.SpatialAlgorithm.NONE;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.LOW;\n\t\t\tthis.data.algorithm = Enum.SpatialAlgorithm.AHRS;\n\t\t\tthis.data.algorithmMagnetometerGain = 0.005;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0109_SPATIAL_100:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HYBRID;\n\t\t\tthis.data.algorithm = Enum.SpatialAlgorithm.AHRS;\n\t\t\tthis.data.algorithmMagnetometerGain = 0.005;\n\t\t\tthis.data.maxAcceleration = [8, 8, 8];\n\t\t\tthis.data.minAcceleration = [-8, -8, -8];\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.maxMagneticField = [50, 50, 50];\n\t\t\tthis.data.minMagneticField = [-50, -50, -50];\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tthis.data.quaternion = (<SpatialDevice>this._ch!.parent).data.quaternion[this._ch!.index];\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataInterval = 1;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 1000;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HIGH;\n\t\t\tthis.data.algorithm = Enum.SpatialAlgorithm.AHRS;\n\t\t\tthis.data.maxAcceleration = [16, 16, 16];\n\t\t\tthis.data.minAcceleration = [-16, -16, -16];\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tthis.data.quaternion = (<SpatialDevice>this._ch!.parent).data.quaternion[this._ch!.index];\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataInterval = 2;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 500;\n\t\t\tthis.data.precision = Enum.SpatialPrecision.HIGH;\n\t\t\tthis.data.algorithm = Enum.SpatialAlgorithm.AHRS;\n\t\t\tthis.data.maxAcceleration = [16, 16, 16];\n\t\t\tthis.data.minAcceleration = [-16, -16, -16];\n\t\t\tthis.data.maxAngularRate = [2000, 2000, 2000];\n\t\t\tthis.data.minAngularRate = [-2000, -2000, -2000];\n\t\t\tthis.data.maxMagneticField = [8, 8, 8];\n\t\t\tthis.data.minMagneticField = [-8, -8, -8];\n\t\t\tthis.data.heatingEnabled = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._MOT1101_SPATIAL_100:\n\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_USB:\n\t\tcase DeviceChannelUID._MOT0110_SPATIAL_100_VINT:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_200:\n\t\tcase DeviceChannelUID._MOT1102_SPATIAL_300:\n\t\tcase DeviceChannelUID._MOT0109_SPATIAL_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.algorithmMagnetometerGain });\n\t\t\tawait bp.send(this._ch, BP.SETSPATIALALGORITHMMAGGAIN);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The minimum acceleration the sensor will measure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum acceleration the sensor will measure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * Selects the IMU/AHRS algorithm.\n\t * @throws {@link PhidgetError}\n\t */\n\tget algorithm() { return this.getAlgorithm(); }\n\t/**\n\t * Sets the gain for the magnetometer in the AHRS algorithm. Lower gains reduce sensor noise while slowing response time.\n\t * @throws {@link PhidgetError}\n\t */\n\tget algorithmMagnetometerGain() { return this.getAlgorithmMagnetometerGain(); }\n\t/**\n\t * The minimum angular rate the sensor will measure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAngularRate() { return this.getMinAngularRate(); }\n\t/**\n\t * The maximum angular rate the sensor will measure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAngularRate() { return this.getMaxAngularRate(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `SpatialData` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Gets the latest device orientation in the form of Euler angles. (Pitch, roll, and yaw)\n\t * @throws {@link PhidgetError}\n\t */\n\tget eulerAngles() { return this.getEulerAngles(); }\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables on-board heating elements to bring the board up to a known temperature to minimize ambient temperature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t */\n\tget heatingEnabled() { return this.getHeatingEnabled(); }\n\t/**\n\t * The minimum field strength the sensor will measure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minMagneticField() { return this.getMinMagneticField(); }\n\t/**\n\t * The maximum field strength the sensor will measure.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxMagneticField() { return this.getMaxMagneticField(); }\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget precision() { return this.getPrecision(); }\n\t/**\n\t * Gets the latest AHRS/IMU quaternion sent from the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget quaternion() { return this.getQuaternion(); }\n\n\t/**\n\t * The minimum acceleration the sensor will measure.\n\t * @returns The minimum acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAcceleration(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAcceleration);\n\t}\n\n\t/**\n\t * The maximum acceleration the sensor will measure.\n\t * @returns The maximum acceleration values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAcceleration(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAcceleration);\n\t}\n\n\t/**\n\t * Calibrate your device for the environment it will be used in.\n\t * \n\t * *   Setting these parameters will allow you to tune the AHRS algorithm on the device to your specific application.\n\t * @throws {@link PhidgetError}\n\t * @param angularVelocityThreshold - The maximum angular velocity reading where the device is assumed to be \"at rest\"\n\t * @param angularVelocityDeltaThreshold - The acceptable amount of change in angular velocity between measurements before movement is assumed.\n\t * @param accelerationThreshold - The maximum acceleration applied to the device (minus gravity) where it is assumed to be \"at rest\". This is also the maximum acceleration allowable before the device stops correcting to the acceleration vector.\n\t * @param magTime - The time it will take to correct the heading 95% of the way to aligning with the compass (in seconds),up to 15 degrees of error. Beyond 15 degrees, this is the time it will take for the bearing to move 45 degrees towards the compass reading. Remember you can zero the algorithm at any time to instantly realign the spatial with acceleration and magnetic field vectors regardless of magnitude.\n\t * @param accelTime - The time it will take to correct the pitch and roll 95% of the way to aligning with the accelerometer (in seconds).\n\t * @param biasTime - The time it will take to have the gyro biases settle to within 95% of the measured steady state (in seconds).\n\t */\n\tasync setAHRSParameters(angularVelocityThreshold: number, angularVelocityDeltaThreshold: number, accelerationThreshold: number, magTime: number, accelTime: number, biasTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: angularVelocityThreshold });\n\t\tbp.set({ name: \"1\", type: \"g\", value: angularVelocityDeltaThreshold });\n\t\tbp.set({ name: \"2\", type: \"g\", value: accelerationThreshold });\n\t\tbp.set({ name: \"3\", type: \"g\", value: magTime });\n\t\tbp.set({ name: \"4\", type: \"g\", value: accelTime });\n\t\tbp.set({ name: \"5\", type: \"g\", value: biasTime });\n\t\tawait bp.send(this._ch, BP.SETAHRSPARAMETERS);\n\t}\n\n\t/**\n\t * Selects the IMU/AHRS algorithm.\n\t * @returns The sensor algorithm\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAlgorithm(): Enum.SpatialAlgorithm {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.algorithm === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.algorithm);\n\t}\n\n\t/**\n\t * Selects the IMU/AHRS algorithm.\n\t * @throws {@link PhidgetError}\n\t * @param algorithm - The sensor algorithm\n\t */\n\tasync setAlgorithm(algorithm: Enum.SpatialAlgorithm): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedSpatialAlgorithm(this._ch!, algorithm))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified SpatialAlgorithm is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: algorithm });\n\t\tawait bp.send(this._ch, BP.SETSPATIALALGORITHM);\n\t}\n\n\t/**\n\t * Sets the gain for the magnetometer in the AHRS algorithm. Lower gains reduce sensor noise while slowing response time.\n\t * @returns The AHRS algorithm magnetometer gain\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAlgorithmMagnetometerGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.algorithmMagnetometerGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.algorithmMagnetometerGain);\n\t}\n\n\t/**\n\t * Sets the gain for the magnetometer in the AHRS algorithm. Lower gains reduce sensor noise while slowing response time.\n\t * @throws {@link PhidgetError}\n\t * @param algorithmMagnetometerGain - The AHRS algorithm magnetometer gain\n\t */\n\tasync setAlgorithmMagnetometerGain(algorithmMagnetometerGain: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: algorithmMagnetometerGain });\n\t\tawait bp.send(this._ch, BP.SETSPATIALALGORITHMMAGGAIN);\n\t}\n\n\t/**\n\t * The minimum angular rate the sensor will measure.\n\t * @returns The angular rate values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAngularRate(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAngularRate.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAngularRate);\n\t}\n\n\t/**\n\t * The maximum angular rate the sensor will measure.\n\t * @returns The angular rate values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAngularRate(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAngularRate.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAngularRate);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `SpatialData` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `SpatialData` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Gets the latest device orientation in the form of Euler angles. (Pitch, roll, and yaw)\n\t * @returns Gets the latest device orientation in the form of Euler angles.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getEulerAngles(): Struct.SpatialEulerAngles;\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables on-board heating elements to bring the board up to a known temperature to minimize ambient temperature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @returns Whether self-heating temperature stabilization is enabled\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHeatingEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.heatingEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.heatingEnabled);\n\t}\n\n\t/**\n\t * Set to TRUE to enable the temperature stabilization feature of this device. This enables on-board heating elements to bring the board up to a known temperature to minimize ambient temperature effects on the sensor's reading. You can leave this setting FALSE to conserve power consumption.  \n\t *   \n\t * If you enable heating, it is strongly recommended to keep the board in its enclosure to keep it insulated from moving air.  \n\t *   \n\t * This property is shared by any and all spatial-related objects on this device (Accelerometer, Gyroscope, Magnetometer, Spatial)\n\t * @throws {@link PhidgetError}\n\t * @param heatingEnabled - Whether self-heating temperature stabilization is enabled\n\t */\n\tasync setHeatingEnabled(heatingEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (heatingEnabled !== false && heatingEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (heatingEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETHEATINGENABLED);\n\t}\n\n\t/**\n\t * The minimum field strength the sensor will measure.\n\t * @returns The field strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinMagneticField(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minMagneticField.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minMagneticField);\n\t}\n\n\t/**\n\t * The maximum field strength the sensor will measure.\n\t * @returns The field strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxMagneticField(): readonly [number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxMagneticField.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxMagneticField);\n\t}\n\n\t/**\n\t * Calibrate your device for the environment it will be used in.\n\t * \n\t * *   Due to physical location, hard and soft iron offsets, and even bias errors, your device should be calibrated. We have created a calibration program that will provide you with the `MagnetometerCorrectionParameters` for your specific situation. See your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t * @param magneticField - Ambient magnetic field value.\n\t * @param offset0 - Provided by calibration program.\n\t * @param offset1 - Provided by calibration program.\n\t * @param offset2 - Provided by calibration program.\n\t * @param gain0 - Provided by calibration program.\n\t * @param gain1 - Provided by calibration program.\n\t * @param gain2 - Provided by calibration program.\n\t * @param T0 - Provided by calibration program.\n\t * @param T1 - Provided by calibration program.\n\t * @param T2 - Provided by calibration program.\n\t * @param T3 - Provided by calibration program.\n\t * @param T4 - Provided by calibration program.\n\t * @param T5 - Provided by calibration program.\n\t */\n\tasync setMagnetometerCorrectionParameters(magneticField: number, offset0: number, offset1: number, offset2: number, gain0: number, gain1: number, gain2: number, T0: number, T1: number, T2: number, T3: number, T4: number, T5: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: magneticField });\n\t\tbp.set({ name: \"1\", type: \"g\", value: offset0 });\n\t\tbp.set({ name: \"2\", type: \"g\", value: offset1 });\n\t\tbp.set({ name: \"3\", type: \"g\", value: offset2 });\n\t\tbp.set({ name: \"4\", type: \"g\", value: gain0 });\n\t\tbp.set({ name: \"5\", type: \"g\", value: gain1 });\n\t\tbp.set({ name: \"6\", type: \"g\", value: gain2 });\n\t\tbp.set({ name: \"7\", type: \"g\", value: T0 });\n\t\tbp.set({ name: \"8\", type: \"g\", value: T1 });\n\t\tbp.set({ name: \"9\", type: \"g\", value: T2 });\n\t\tbp.set({ name: \"10\", type: \"g\", value: T3 });\n\t\tbp.set({ name: \"11\", type: \"g\", value: T4 });\n\t\tbp.set({ name: \"12\", type: \"g\", value: T5 });\n\t\tawait bp.send(this._ch, BP.SETCORRECTIONPARAMETERS);\n\t}\n\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @returns The sensor precision value\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetPrecision(): Enum.SpatialPrecision {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.precision === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.precision);\n\t}\n\n\t/**\n\t * Selects between high/low precision sensing chips.\n\t * @throws {@link PhidgetError}\n\t * @param precision - The sensor precision value\n\t * @internal\n\t */\n\tasync setPrecision(precision: Enum.SpatialPrecision): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedSpatialPrecision(this._ch!, precision))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified SpatialPrecision is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: precision });\n\t\tawait bp.send(this._ch, BP.SETSPATIALPRECISION);\n\t}\n\n\t/**\n\t * Gets the latest AHRS/IMU quaternion sent from the device.\n\t * @returns Gets the latest AHRS/IMU quaternion sent from the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getQuaternion(): Struct.SpatialQuaternion;\n\t/**\n\t * Resets the `MagnetometerCorrectionParameters` to their default values.\n\t * \n\t * *   Due to physical location, hard and soft iron offsets, and even bias errors, your device should be calibrated. We have created a calibration program that will provide you with the `MagnetometerCorrectionParameters` for your specific situation. See your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetMagnetometerCorrectionParameters(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.RESETCORRECTIONPARAMETERS);\n\t}\n\n\t/**\n\t * Saves the `MagnetometerCorrectionParameters`.\n\t * \n\t * *   Due to physical location, hard and soft iron offsets, and even bias errors, your device should be calibrated. We have created a calibration program that will provide you with the `MagnetometerCorrectionParameters` for your specific situation. See your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync saveMagnetometerCorrectionParameters(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.SAVECORRECTIONPARAMETERS);\n\t}\n\n\t/**\n\t * Zeros the AHRS algorithm.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync zeroAlgorithm(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.ZEROSPATIALALGORITHM);\n\t}\n\n\t/**\n\t * Re-zeros the gyroscope in 1-2 seconds.\n\t * \n\t * *   The device must be stationary when zeroing.\n\t * *   The angular rate will be reported as 0.0°/s while zeroing.\n\t * *   Zeroing the gyroscope is a method of compensating for the drift that is inherent to all gyroscopes. See your device's User Guide for more information on dealing with drift.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync zeroGyro(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.ZERO);\n\t}\n\n}\nimport { type SpatialDevice } from '../usb/device/SpatialDevice';\nexport { SpatialBase };\n","import { SpatialBase } from './Spatial.gen';\r\nimport { PhidgetLock } from '../PhidgetLock';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { ErrorCode } from '../Enumerations.gen';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { BridgePacket } from '../BridgePacket';\r\nimport { Channel } from '../Channel';\r\nimport { type SpatialQuaternion, type SpatialEulerAngles } from '../Structs.gen';\r\nimport { logEventException } from '../Logging';\r\n\r\n/** @public */\r\nclass Spatial extends SpatialBase {\r\n\t/** @internal */\r\n\t_transactionLock: PhidgetLock;\r\n\r\n\t/** @internal */\r\n\tconstructor();\r\n\t/** @internal */\r\n\tconstructor(ch?: Channel);\r\n\tconstructor(ch?: Channel) {\r\n\t\tsuper(ch);\r\n\t\tthis._transactionLock = new PhidgetLock();\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.DATAINTERVALCHANGE: {\r\n\t\t\t\tif (bp.entryCount > 1)\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\r\n\t\t\t\tthis._FIREPropertyChange('DataInterval');\r\n\t\t\t\tthis._FIREPropertyChange('DataRate');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase BP.SPATIALALGDATA: {\r\n\t\t\t\tconst quaternion = bp.getArray(0) as [number, number, number, number];\r\n\t\t\t\tconst timestamp = bp.getNumber(1);\r\n\r\n\t\t\t\tthis.data.quaternion = {\r\n\t\t\t\t\tx: quaternion[0],\r\n\t\t\t\t\ty: quaternion[1],\r\n\t\t\t\t\tz: quaternion[2],\r\n\t\t\t\t\tw: quaternion[3]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._isAttachedDone && this.onAlgorithmData) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.onAlgorithmData(quaternion, timestamp);\r\n\t\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase BP.HEATINGENABLEDCHANGE:\r\n\t\t\t\tthis.data.heatingEnabled = bp.entries[0].v as number;\r\n\t\t\t\tthis._FIREPropertyChange('HeatingEnabled', bp);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_hasInitialState() {\r\n\t\tif (this.data.quaternion === null)\r\n\t\t\treturn false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetQuaternion(): SpatialQuaternion {\r\n\t\tthis._assertOpen();\r\n\r\n\t\tif (this.data.quaternion === null)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\treturn (this.data.quaternion);\r\n\t}\r\n\r\n\tgetEulerAngles(): SpatialEulerAngles {\r\n\t\tthis._assertOpen();\r\n\r\n\t\tif (this.data.quaternion === null)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\tconst roll_rad = Math.atan2(2.0 * (this.data.quaternion.x * this.data.quaternion.w + this.data.quaternion.y * this.data.quaternion.z), 1 - 2.0 * (this.data.quaternion.x * this.data.quaternion.x + this.data.quaternion.y * this.data.quaternion.y));\r\n\t\tconst pitch_rad = Math.asin(2.0 * (this.data.quaternion.w * this.data.quaternion.y - this.data.quaternion.z * this.data.quaternion.x));\r\n\t\tconst heading_rad = Math.atan2(2.0 * (this.data.quaternion.w * this.data.quaternion.z + this.data.quaternion.x * this.data.quaternion.y), 1 - 2.0 * (this.data.quaternion.y * this.data.quaternion.y + this.data.quaternion.z * this.data.quaternion.z));\r\n\r\n\t\t// Convert radians to degrees\r\n\t\tconst eulerAngles = {\r\n\t\t\theading: heading_rad * 180.0 / Math.PI,\r\n\t\t\tpitch: pitch_rad * 180.0 / Math.PI,\r\n\t\t\troll: roll_rad * 180.0 / Math.PI\r\n\t\t};\r\n\r\n\t\treturn (eulerAngles);\r\n\t}\r\n}\r\n\r\nexport { Spatial };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface TemperatureSensorData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxTemperature: number,\n\tmaxTemperatureChangeTrigger: number,\n\tminDataInterval: number,\n\tminTemperature: number,\n\tminTemperatureChangeTrigger: number,\n\ttemperature: number,\n\ttemperatureChangeTrigger: number,\n\tRTDType: Enum.RTDType | PUNK.ENUM,\n\tRTDWireSetup: Enum.RTDWireSetup | PUNK.ENUM,\n\tthermocoupleType: Enum.ThermocoupleType | PUNK.ENUM,\n}\n\nabstract class TemperatureSensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: TemperatureSensorData;\n\t/**\n\t * **TemperatureChange** event\n\t *  * `temperature` - The temperature\n\t * ---\n\t * The most recent temperature value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `temperatureChangeTrigger` has been set to a non-zero value, the `TemperatureChange` event will not occur until the temperature has changed by at least the `temperatureChangeTrigger` value.\n\t */\n\tonTemperatureChange: ((temperature: number) => void) | null = null;\n\t/** @internal */\n\t_gotTemperatureChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Temperature Sensor class gathers data from the temperature sensor on a Phidget board. This includes on-board ambient temperature sensors, connected thermocouples or platinum RTDs, and IR temperature sensors. This class is also used to measure the temperature on some high-power Phidget boards such as motor controllers for safety reasons.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.TEMPERATURE_SENSOR;\n\t\tthis.name = \"TemperatureSensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETRTDTYPE:\n\t\t\tthis.data.RTDType = bp.entries[0].v as Enum.RTDType;\n\t\t\tthis._FIREPropertyChange('RTDType', bp);\n\t\t\tbreak;\n\t\tcase BP.SETRTDWIRESETUP:\n\t\t\tthis.data.RTDWireSetup = bp.entries[0].v as Enum.RTDWireSetup;\n\t\t\tthis._FIREPropertyChange('RTDWireSetup', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.temperatureChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TemperatureChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETTHERMOCOUPLETYPE:\n\t\t\tthis.data.thermocoupleType = bp.entries[0].v as Enum.ThermocoupleType;\n\t\t\tthis._FIREPropertyChange('ThermocoupleType', bp);\n\t\t\tbreak;\n\t\tcase BP.TEMPERATURECHANGE: {\n\t\t\tthis.data.temperature = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onTemperatureChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onTemperatureChange(this.data.temperature);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): TemperatureSensorData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxTemperature: PUNK.DBL,\n\t\t\tmaxTemperatureChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminTemperature: PUNK.DBL,\n\t\t\tminTemperatureChangeTrigger: PUNK.DBL,\n\t\t\ttemperature: PUNK.DBL,\n\t\t\ttemperatureChangeTrigger: PUNK.DBL,\n\t\t\tRTDType: PUNK.ENUM,\n\t\t\tRTDWireSetup: PUNK.ENUM,\n\t\t\tthermocoupleType: PUNK.ENUM,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 31.25;\n\t\t\tthis.data.maxTemperature = (<TemperatureSensorDevice>this._ch!.parent).data.maxTemperature[this._ch!.index];\n\t\t\tthis.data.maxTemperatureChangeTrigger = 1000;\n\t\t\tthis.data.minDataInterval = 32;\n\t\t\tthis.data.minTemperature = (<TemperatureSensorDevice>this._ch!.parent).data.minTemperature[this._ch!.index];\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperature = (<TemperatureSensorDevice>this._ch!.parent).data.temperature[this._ch!.index];\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tthis.data.thermocoupleType = Enum.ThermocoupleType.K;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 31.25;\n\t\t\tthis.data.maxTemperature = 150;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 100;\n\t\t\tthis.data.minDataInterval = 32;\n\t\t\tthis.data.minTemperature = -55;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperature = (<TemperatureSensorDevice>this._ch!.parent).data.temperature[this._ch!.index];\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\t\tthis.data.dataInterval = 500;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 2;\n\t\t\tthis.data.maxTemperature = 125;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 165;\n\t\t\tthis.data.minDataInterval = 500;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxTemperature = 125;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 165;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\tthis.data.dataInterval = 500;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 2;\n\t\t\tthis.data.maxTemperature = 85;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 125;\n\t\t\tthis.data.minDataInterval = 500;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 20;\n\t\t\tthis.data.maxTemperature = 85;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 125;\n\t\t\tthis.data.minDataInterval = 50;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 250;\n\t\t\tthis.data.maxTemperature = 85;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 125;\n\t\t\tthis.data.minDataInterval = 4;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperature = (<SpatialDevice>this._ch!.parent).data.temperature[this._ch!.index];\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 100;\n\t\t\tthis.data.maxTemperature = 85;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 125;\n\t\t\tthis.data.minDataInterval = 10;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperature = (<SpatialDevice>this._ch!.parent).data.temperature[this._ch!.index];\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 100;\n\t\t\tthis.data.maxTemperature = 85;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 125;\n\t\t\tthis.data.minDataInterval = 10;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxTemperature = 1370;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 1640;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.minTemperature = -270;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tthis.data.thermocoupleType = Enum.ThermocoupleType.K;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\tthis.data.dataInterval = 500;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 3.3333333333333335;\n\t\t\tthis.data.maxTemperature = 85;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 125;\n\t\t\tthis.data.minDataInterval = 300;\n\t\t\tthis.data.minTemperature = -40;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 4;\n\t\t\tthis.data.maxTemperature = 850;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 1050;\n\t\t\tthis.data.minDataInterval = 250;\n\t\t\tthis.data.minTemperature = -200;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tthis.data.RTDType = Enum.RTDType.PT1000_3850;\n\t\t\tthis.data.RTDWireSetup = Enum.RTDWireSetup.WIRES_4;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\tthis.data.dataInterval = 333;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 3.003003003003003;\n\t\t\tthis.data.maxTemperature = 850;\n\t\t\tthis.data.maxTemperatureChangeTrigger = 1050;\n\t\t\tthis.data.minDataInterval = 333;\n\t\t\tthis.data.minTemperature = -200;\n\t\t\tthis.data.minTemperatureChangeTrigger = 0;\n\t\t\tthis.data.temperatureChangeTrigger = 0;\n\t\t\tthis.data.RTDType = Enum.RTDType.PT1000_3850;\n\t\t\tthis.data.RTDWireSetup = Enum.RTDWireSetup.WIRES_4;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_THERMOCOUPLE_200:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.temperatureChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.thermocoupleType });\n\t\t\tawait bp.send(this._ch, BP.SETTHERMOCOUPLETYPE);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1048_TEMPERATURESENSOR_IC_200:\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1100_TEMPERATURESENSOR_IC_120:\n\t\tcase DeviceChannelUID._HUM1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._HUM1001_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._MOT0109_TEMPERATURESENSOR_100:\n\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_USB:\n\t\tcase DeviceChannelUID._MOT0110_TEMPERATURESENSOR_100_VINT:\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._SAF1000_TEMPERATURESENSOR_IC_110:\n\t\tcase DeviceChannelUID._TMP1100_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._TMP1101_TEMPERATURESENSOR_IC_200:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.temperatureChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_100:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_200:\n\t\tcase DeviceChannelUID._DCC1000_TEMPERATURESENSOR_IC_210:\n\t\tcase DeviceChannelUID._TMP1000_TEMPERATURESENSOR_IC_100:\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_100:\n\t\tcase DeviceChannelUID._TMP1200_TEMPERATURESENSOR_RTD_300:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.temperatureChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.RTDType });\n\t\t\tawait bp.send(this._ch, BP.SETRTDTYPE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.RTDWireSetup });\n\t\t\tawait bp.send(this._ch, BP.SETRTDWIRESETUP);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.temperature == PUNK.DBL)\n\t\t\t&& ! this._gotTemperatureChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.temperature != PUNK.DBL)\n\t\t\tif (this.onTemperatureChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onTemperatureChange(this.data.temperature);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `TemperatureChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `TemperatureChange` events can also be affected by the `temperatureChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The `RTDType` must correspond to the RTD type you are using in your application.\n\t * \n\t * *   If you are unsure which `RTDType` to use, visit your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tget RTDType() { return this.getRTDType(); }\n\t/**\n\t * The `RTDWireSetup` must correspond to the wire configuration you are using in your application.\n\t * \n\t * *   If you are unsure which `RTDWireSetup` to use, visit your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tget RTDWireSetup() { return this.getRTDWireSetup(); }\n\t/**\n\t * The most recent temperature value that the channel has reported.\n\t * \n\t * *   This value will always be between `minTemperature` and `maxTemperature`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget temperature() { return this.getTemperature(); }\n\t/**\n\t * The minimum value the `TemperatureChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minTemperature() { return this.getMinTemperature(); }\n\t/**\n\t * The maximum value the `TemperatureChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxTemperature() { return this.getMaxTemperature(); }\n\t/**\n\t * The channel will not issue a `TemperatureChange` event until the temperature value has changed by the amount specified by the `temperatureChangeTrigger`.\n\t * \n\t * *   Setting the `temperatureChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget temperatureChangeTrigger() { return this.getTemperatureChangeTrigger(); }\n\t/**\n\t * The minimum value that `temperatureChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minTemperatureChangeTrigger() { return this.getMinTemperatureChangeTrigger(); }\n\t/**\n\t * The maximum value that `temperatureChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxTemperatureChangeTrigger() { return this.getMaxTemperatureChangeTrigger(); }\n\t/**\n\t * The `thermocoupleType` must correspond to the thermocouple type you are using in your application.\n\t * \n\t * *   If you are unsure which `thermocoupleType` to use, visit the [Thermocouple Primer](https://www.phidgets.com/docs/Thermocouple_Primer) for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tget thermocoupleType() { return this.getThermocoupleType(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `TemperatureChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `TemperatureChange` events can also be affected by the `temperatureChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `TemperatureChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `TemperatureChange` events can also be affected by the `temperatureChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The `RTDType` must correspond to the RTD type you are using in your application.\n\t * \n\t * *   If you are unsure which `RTDType` to use, visit your device's User Guide for more information.\n\t * @returns The RTD type\n\t * @throws {@link PhidgetError}\n\t */\n\tgetRTDType(): Enum.RTDType {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.RTDType === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.RTDType);\n\t}\n\n\t/**\n\t * The `RTDType` must correspond to the RTD type you are using in your application.\n\t * \n\t * *   If you are unsure which `RTDType` to use, visit your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t * @param RTDType - The RTD type\n\t */\n\tasync setRTDType(RTDType: Enum.RTDType): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedRTDType(this._ch!, RTDType))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified RTDType is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: RTDType });\n\t\tawait bp.send(this._ch, BP.SETRTDTYPE);\n\t}\n\n\t/**\n\t * The `RTDWireSetup` must correspond to the wire configuration you are using in your application.\n\t * \n\t * *   If you are unsure which `RTDWireSetup` to use, visit your device's User Guide for more information.\n\t * @returns The RTD wire setup\n\t * @throws {@link PhidgetError}\n\t */\n\tgetRTDWireSetup(): Enum.RTDWireSetup {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.RTDWireSetup === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.RTDWireSetup);\n\t}\n\n\t/**\n\t * The `RTDWireSetup` must correspond to the wire configuration you are using in your application.\n\t * \n\t * *   If you are unsure which `RTDWireSetup` to use, visit your device's User Guide for more information.\n\t * @throws {@link PhidgetError}\n\t * @param RTDWireSetup - The RTD wire setup\n\t */\n\tasync setRTDWireSetup(RTDWireSetup: Enum.RTDWireSetup): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedRTDWireSetup(this._ch!, RTDWireSetup))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified RTDWireSetup is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: RTDWireSetup });\n\t\tawait bp.send(this._ch, BP.SETRTDWIRESETUP);\n\t}\n\n\t/**\n\t * The most recent temperature value that the channel has reported.\n\t * \n\t * *   This value will always be between `minTemperature` and `maxTemperature`.\n\t * @returns The temperature value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTemperature(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.temperature === PUNK.DBL || Number.isNaN(this.data.temperature))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.temperature > this.data.maxTemperature)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.temperature < this.data.minTemperature)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.temperature);\n\t}\n\n\t/**\n\t * The minimum value the `TemperatureChange` event will report.\n\t * @returns The temperature value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinTemperature(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minTemperature === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minTemperature);\n\t}\n\n\t/**\n\t * The maximum value the `TemperatureChange` event will report.\n\t * @returns The temperature value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxTemperature(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxTemperature === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxTemperature);\n\t}\n\n\t/**\n\t * The channel will not issue a `TemperatureChange` event until the temperature value has changed by the amount specified by the `temperatureChangeTrigger`.\n\t * \n\t * *   Setting the `temperatureChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTemperatureChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.temperatureChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.temperatureChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `TemperatureChange` event until the temperature value has changed by the amount specified by the `temperatureChangeTrigger`.\n\t * \n\t * *   Setting the `temperatureChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param temperatureChangeTrigger - The change trigger value\n\t */\n\tasync setTemperatureChangeTrigger(temperatureChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (temperatureChangeTrigger < this.data.minTemperatureChangeTrigger || temperatureChangeTrigger > this.data.maxTemperatureChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minTemperatureChangeTrigger + \" - \" + this.data.maxTemperatureChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: temperatureChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `temperatureChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinTemperatureChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minTemperatureChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minTemperatureChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `temperatureChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxTemperatureChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxTemperatureChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxTemperatureChangeTrigger);\n\t}\n\n\t/**\n\t * The `thermocoupleType` must correspond to the thermocouple type you are using in your application.\n\t * \n\t * *   If you are unsure which `thermocoupleType` to use, visit the [Thermocouple Primer](https://www.phidgets.com/docs/Thermocouple_Primer) for more information.\n\t * @returns The thermocouple type\n\t * @throws {@link PhidgetError}\n\t */\n\tgetThermocoupleType(): Enum.ThermocoupleType {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.thermocoupleType === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.thermocoupleType);\n\t}\n\n\t/**\n\t * The `thermocoupleType` must correspond to the thermocouple type you are using in your application.\n\t * \n\t * *   If you are unsure which `thermocoupleType` to use, visit the [Thermocouple Primer](https://www.phidgets.com/docs/Thermocouple_Primer) for more information.\n\t * @throws {@link PhidgetError}\n\t * @param thermocoupleType - The thermocouple type\n\t */\n\tasync setThermocoupleType(thermocoupleType: Enum.ThermocoupleType): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedThermocoupleType(this._ch!, thermocoupleType))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified ThermocoupleType is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: thermocoupleType });\n\t\tawait bp.send(this._ch, BP.SETTHERMOCOUPLETYPE);\n\t}\n\n}\nimport { type TemperatureSensorDevice } from '../usb/device/TemperatureSensorDevice';\nimport { type SpatialDevice } from '../usb/device/SpatialDevice';\nexport { TemperatureSensorBase };\n","import { TemperatureSensorBase } from './TemperatureSensor.gen';\r\nimport { ThermocoupleType, ErrorEventCode, RTDWireSetup } from '../Enumerations.gen';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { BridgePacket, PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass TemperatureSensor extends TemperatureSensorBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.DATAINTERVALCHANGE:\r\n\t\t\t\tif (bp.entryCount > 1)\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(1);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.data.dataInterval = bp.getNumber(0);\r\n\t\t\t\tthis._FIREPropertyChange('DataInterval');\r\n\t\t\t\tthis._FIREPropertyChange('DataRate');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/*\r\n\t\t\t * Set the temperature to unknown if the RTD or thermocouple type is changed.\r\n\t\t\t * For thermocouples, reset the max/min range based on thermocouple type.\r\n\t\t\t */\r\n\t\t\tcase BP.SETRTDTYPE:\r\n\t\t\t\tthis.data.temperature = PUNK.DBL;\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BP.SETTHERMOCOUPLETYPE:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tthis.data.temperature = PUNK.DBL;\r\n\t\t\t\tswitch (this.data.thermocoupleType) {\r\n\t\t\t\t\tcase ThermocoupleType.J:\r\n\t\t\t\t\t\tthis.data.minTemperature = 0;\r\n\t\t\t\t\t\tthis.data.maxTemperature = 750;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ThermocoupleType.K:\r\n\t\t\t\t\t\tthis.data.minTemperature = -200;\r\n\t\t\t\t\t\tthis.data.maxTemperature = 1250;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ThermocoupleType.E:\r\n\t\t\t\t\t\tthis.data.minTemperature = -200;\r\n\t\t\t\t\t\tthis.data.maxTemperature = 900;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ThermocoupleType.T:\r\n\t\t\t\t\t\tthis.data.minTemperature = -200;\r\n\t\t\t\t\t\tthis.data.maxTemperature = 350;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis._FIREPropertyChange('MinTemperature', bp);\r\n\t\t\t\tthis._FIREPropertyChange('MaxTemperature', bp);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase BP.RTDWIRESETUPCHANGE:\r\n\t\t\t\tthis.data.RTDWireSetup = bp.entries[0].v as RTDWireSetup;\r\n\t\t\t\tthis._FIREPropertyChange('RTDWireSetup', bp);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\tcase ErrorEventCode.OUT_OF_RANGE:\r\n\t\t\t\tthis.data.temperature = PUNK.DBL;\r\n\t\t\t\tthis._gotTemperatureChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { TemperatureSensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface EncoderData {\n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxPositionChangeTrigger: number,\n\tminPositionChangeTrigger: number,\n\tposition: number,\n\tindexPosition: number,\n\tpositionChangeTrigger: number,\n\tenabled: number,\n\tIOMode: Enum.EncoderIOMode | PUNK.ENUM,\n}\n\nabstract class EncoderBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: EncoderData;\n\t/**\n\t * **PositionChange** event\n\t *  * `positionChange` - The amount the position changed since the last change event\n\t *  * `timeChange` - The time elapsed since the last change event in milliseconds\n\t *  * `indexTriggered` - True if the index was passed since the last change event\n\t * ---\n\t * The most recent values the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `positionChangeTrigger` has been set to a non-zero value, the `PositionChange` event will not occur until the position has changed by at least the `positionChangeTrigger` value.\n\t */\n\tonPositionChange: ((positionChange: number, timeChange: number, indexTriggered: boolean) => void) | null = null;\n\t/** @internal */\n\t_gotPositionChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Encoder class is used to read position data from quadrature encoders in order to track linear or rotary movement. If the device supports an index pin as a reference point, you can also access it through this class.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.ENCODER;\n\t\tthis.name = \"Encoder\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETENABLED:\n\t\t\tthis.data.enabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Enabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETIOMODE:\n\t\t\tthis.data.IOMode = bp.entries[0].v as Enum.EncoderIOMode;\n\t\t\tthis._FIREPropertyChange('IOMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.positionChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('PositionChangeTrigger', bp);\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): EncoderData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxPositionChangeTrigger: PUNK.UINT32,\n\t\t\tminPositionChangeTrigger: PUNK.UINT32,\n\t\t\tposition: PUNK.INT64,\n\t\t\tindexPosition: PUNK.INT64,\n\t\t\tpositionChangeTrigger: PUNK.UINT32,\n\t\t\tenabled: PUNK.BOOL,\n\t\t\tIOMode: PUNK.ENUM,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1047_ENCODER_200:\n\t\tcase DeviceChannelUID._1047_ENCODER_300:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.minDataInterval = 8;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 125;\n\t\t\tthis.data.maxPositionChangeTrigger = 10000;\n\t\t\tthis.data.minPositionChangeTrigger = 0;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.indexPosition = 0;\n\t\t\tthis.data.positionChangeTrigger = 0;\n\t\t\tthis.data.enabled = 1;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\t\tthis.data.dataInterval = 256;\n\t\t\tthis.data.minDataInterval = 8;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 125;\n\t\t\tthis.data.maxPositionChangeTrigger = 10000;\n\t\t\tthis.data.minPositionChangeTrigger = 0;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.indexPosition = 0;\n\t\t\tthis.data.positionChangeTrigger = 0;\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.IOMode = Enum.EncoderIOMode.PUSH_PULL;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxPositionChangeTrigger = 60000000;\n\t\t\tthis.data.minPositionChangeTrigger = 0;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.indexPosition = 0;\n\t\t\tthis.data.positionChangeTrigger = 0;\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.IOMode = Enum.EncoderIOMode.PUSH_PULL;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 50;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 20;\n\t\t\tthis.data.maxPositionChangeTrigger = 60000000;\n\t\t\tthis.data.minPositionChangeTrigger = 0;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.indexPosition = 0;\n\t\t\tthis.data.positionChangeTrigger = 0;\n\t\t\tthis.data.enabled = 1;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxPositionChangeTrigger = 60000000;\n\t\t\tthis.data.minPositionChangeTrigger = 0;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.indexPosition = 0;\n\t\t\tthis.data.positionChangeTrigger = 0;\n\t\t\tthis.data.enabled = 1;\n\t\t\tthis.data.IOMode = Enum.EncoderIOMode.PUSH_PULL;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 1000;\n\t\t\tthis.data.minDataRate = 1;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxPositionChangeTrigger = 60000000;\n\t\t\tthis.data.minPositionChangeTrigger = 0;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.positionChangeTrigger = 0;\n\t\t\tthis.data.enabled = 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1047_ENCODER_200:\n\t\tcase DeviceChannelUID._1047_ENCODER_300:\n\t\tcase DeviceChannelUID._HIN1101_ENCODER_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.positionChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.enabled });\n\t\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._1057_ENCODER_400:\n\t\tcase DeviceChannelUID._ENC1000_ENCODER_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.positionChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.enabled });\n\t\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.IOMode });\n\t\t\tawait bp.send(this._ch, BP.SETIOMODE);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_200:\n\t\tcase DeviceChannelUID._DCC1000_ENCODER_210:\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1001_ENCODER_120:\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_100:\n\t\tcase DeviceChannelUID._DCC1002_ENCODER_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.positionChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The enabled state of the encoder.\n\t * @throws {@link PhidgetError}\n\t */\n\tget enabled() { return this.getEnabled(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PositionChange` events can also be affected by the `positionChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent position of the index channel calculated by the Phidgets library.\n\t * \n\t * *   The index channel will usually pulse once per rotation.\n\t * *   Setting the encoder position will move the index position the same amount so their relative position stays the same.\n\t * *   Index position is tracked locally as the last position at which the index was triggered. Setting position will only affect the local copy of the index position value. This means that index positions seen by multiple network applications may not agree.\n\t * @throws {@link PhidgetError}\n\t */\n\tget indexPosition() { return this.getIndexPosition(); }\n\t/**\n\t * The encoder interface mode. Match the mode to the type of encoder you have attached.\n\t * \n\t * *   It is recommended to only change this when the encoder disabled in order to avoid unexpected results.\n\t * @throws {@link PhidgetError}\n\t */\n\tget IOMode() { return this.getIOMode(); }\n\t/**\n\t * The most recent position value calculated by the Phidgets library.\n\t * \n\t * *   Position counts quadrature edges within a quadrature cycle. This means there are four counts per full quadrature cycle.\n\t * *   Position is tracked locally as the total position change from the time the channel is opened. Setting position will only affect the local copy of the position value. This means that positions seen by multiple network applications may not agree.\n\t * @throws {@link PhidgetError}\n\t */\n\tget position() { return this.getPosition(); }\n\tset position(position: number) { this.setPosition(position); }\n\t/**\n\t * The channel will not issue a `PositionChange` event until the position value has changed by the amount specified by the `positionChangeTrigger`.\n\t * \n\t * *   Setting the `positionChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget positionChangeTrigger() { return this.getPositionChangeTrigger(); }\n\t/**\n\t * The minimum value that `positionChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPositionChangeTrigger() { return this.getMinPositionChangeTrigger(); }\n\t/**\n\t * The maximum value that `positionChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPositionChangeTrigger() { return this.getMaxPositionChangeTrigger(); }\n\n\t/**\n\t * The enabled state of the encoder.\n\t * @throws {@link PhidgetError}\n\t * @param enabled - The enabled value\n\t */\n\tasync setEnabled(enabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (enabled !== false && enabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (enabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t}\n\n\t/**\n\t * The enabled state of the encoder.\n\t * @returns The enabled value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.enabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.enabled);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PositionChange` events can also be affected by the `positionChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PositionChange` events can also be affected by the `positionChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent position of the index channel calculated by the Phidgets library.\n\t * \n\t * *   The index channel will usually pulse once per rotation.\n\t * *   Setting the encoder position will move the index position the same amount so their relative position stays the same.\n\t * *   Index position is tracked locally as the last position at which the index was triggered. Setting position will only affect the local copy of the index position value. This means that index positions seen by multiple network applications may not agree.\n\t * @returns The index position value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIndexPosition(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.indexPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.indexPosition);\n\t}\n\n\t/**\n\t * The encoder interface mode. Match the mode to the type of encoder you have attached.\n\t * \n\t * *   It is recommended to only change this when the encoder disabled in order to avoid unexpected results.\n\t * @returns The IO mode value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIOMode(): Enum.EncoderIOMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.IOMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.IOMode);\n\t}\n\n\t/**\n\t * The encoder interface mode. Match the mode to the type of encoder you have attached.\n\t * \n\t * *   It is recommended to only change this when the encoder disabled in order to avoid unexpected results.\n\t * @throws {@link PhidgetError}\n\t * @param IOMode - The IO mode value.\n\t */\n\tasync setIOMode(IOMode: Enum.EncoderIOMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedEncoderIOMode(this._ch!, IOMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified EncoderIOMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: IOMode });\n\t\tawait bp.send(this._ch, BP.SETIOMODE);\n\t}\n\n\t/**\n\t * The most recent position value calculated by the Phidgets library.\n\t * \n\t * *   Position counts quadrature edges within a quadrature cycle. This means there are four counts per full quadrature cycle.\n\t * *   Position is tracked locally as the total position change from the time the channel is opened. Setting position will only affect the local copy of the position value. This means that positions seen by multiple network applications may not agree.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPosition(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.position === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.position);\n\t}\n\n\t/**\n\t * The most recent position value calculated by the Phidgets library.\n\t * \n\t * *   Position counts quadrature edges within a quadrature cycle. This means there are four counts per full quadrature cycle.\n\t * *   Position is tracked locally as the total position change from the time the channel is opened. Setting position will only affect the local copy of the position value. This means that positions seen by multiple network applications may not agree.\n\t * @throws {@link PhidgetError}\n\t * @param position - The position value\n\t */\n\tabstract setPosition(position: number): void;\n\t/**\n\t * The channel will not issue a `PositionChange` event until the position value has changed by the amount specified by the `positionChangeTrigger`.\n\t * \n\t * *   Setting the `positionChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPositionChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.positionChangeTrigger === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.positionChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `PositionChange` event until the position value has changed by the amount specified by the `positionChangeTrigger`.\n\t * \n\t * *   Setting the `positionChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param positionChangeTrigger - The change trigger value\n\t */\n\tasync setPositionChangeTrigger(positionChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (positionChangeTrigger < this.data.minPositionChangeTrigger || positionChangeTrigger > this.data.maxPositionChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minPositionChangeTrigger + \" - \" + this.data.maxPositionChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: positionChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `positionChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPositionChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPositionChangeTrigger === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPositionChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `positionChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPositionChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPositionChangeTrigger === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPositionChangeTrigger);\n\t}\n\n}\nexport { EncoderBase };\n","import { EncoderBase } from './Encoder.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { logEventException } from '../Logging';\n\n/** @public */\nclass Encoder extends EncoderBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.POSITIONCHANGE: {\n\t\t\t\tconst positionChange = bp.getNumber(0);\n\t\t\t\tconst timeChange = bp.getNumber(1);\n\t\t\t\tconst indexTriggered = bp.getBoolean(2) as boolean;\n\t\t\t\tlet indexPosition = 0;\n\t\t\t\tif (indexTriggered) {\n\t\t\t\t\tindexPosition = bp.getNumber(3);\n\t\t\t\t\tthis.data.indexPosition = this.data.position + indexPosition;\n\t\t\t\t}\n\t\t\t\tthis.data.position += positionChange;\n\t\t\t\tif (this._isAttachedDone && this.onPositionChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onPositionChange(positionChange, timeChange, indexTriggered)\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetPosition(position: number) {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.indexPosition != PUNK.INT64)\n\t\t\tthis.data.indexPosition += (position - this.data.position);\n\t\tthis.data.position = position;\n\t}\n}\n\nexport { Encoder };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface FrequencyCounterData {\n\ttotalTicksSinceLastCount: number, \n\tfrequencyPrecision: number, \n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxFrequency: number,\n\tmaxFrequencyCutoff: number,\n\tminFrequencyCutoff: number,\n\tcount: number,\n\ttimeElapsed: number,\n\tfrequencyCutoff: number,\n\tfrequency: number,\n\tfilterType: Enum.FrequencyFilterType | PUNK.ENUM,\n\tpowerSupply: Enum.PowerSupply | PUNK.ENUM,\n\tinputMode: Enum.InputMode | PUNK.ENUM,\n\tenabled: number,\n}\n\nabstract class FrequencyCounterBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: FrequencyCounterData;\n\t/**\n\t * **FrequencyChange** event\n\t *  * `frequency` - The calculated frequency of the signal\n\t * ---\n\t * The most recent frequency value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t */\n\tonFrequencyChange: ((frequency: number) => void) | null = null;\n\t/** @internal */\n\t_gotFrequencyChangeErrorEvent?: boolean;\n\t/**\n\t * **CountChange** event\n\t *  * `counts` - The pulse count of the signal\n\t *  * `timeChange` - The change in elapsed time since the last change\n\t * ---\n\t * The most recent values the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t */\n\tonCountChange: ((counts: number, timeChange: number) => void) | null = null;\n\t/** @internal */\n\t_gotCountChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Frequency Counter class is used to measure the frequency of pulses in an electronic signal, or to count the pulses in the signal. Such signals can come from other electronics, or certain sensors that have a pulse output.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.FREQUENCY_COUNTER;\n\t\tthis.name = \"FrequencyCounter\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETENABLED:\n\t\t\tthis.data.enabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Enabled', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFILTERTYPE:\n\t\t\tthis.data.filterType = bp.entries[0].v as Enum.FrequencyFilterType;\n\t\t\tthis._FIREPropertyChange('FilterType', bp);\n\t\t\tbreak;\n\t\tcase BP.SETINPUTMODE:\n\t\t\tthis.data.inputMode = bp.entries[0].v as Enum.InputMode;\n\t\t\tthis._FIREPropertyChange('InputMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETPOWERSUPPLY:\n\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\n\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\tbreak;\n\t\tcase BP.COUNTCHANGE: {\n\t\t\tif (this._isAttachedDone && this.onCountChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onCountChange(bp.entries[0].v as number, bp.entries[1].v as number);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.FREQUENCYCHANGE: {\n\t\t\tthis.data.frequency = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onFrequencyChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onFrequencyChange(this.data.frequency);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): FrequencyCounterData {\n\t\treturn {\n\t\t\ttotalTicksSinceLastCount: 0, \n\t\t\tfrequencyPrecision: 0, \n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxFrequency: PUNK.DBL,\n\t\t\tmaxFrequencyCutoff: PUNK.DBL,\n\t\t\tminFrequencyCutoff: PUNK.DBL,\n\t\t\tcount: PUNK.UINT64,\n\t\t\ttimeElapsed: PUNK.DBL,\n\t\t\tfrequencyCutoff: PUNK.DBL,\n\t\t\tfrequency: PUNK.DBL,\n\t\t\tfilterType: PUNK.ENUM,\n\t\t\tpowerSupply: PUNK.ENUM,\n\t\t\tinputMode: PUNK.ENUM,\n\t\t\tenabled: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxFrequency = 1000000;\n\t\t\tthis.data.maxFrequencyCutoff = 10;\n\t\t\tthis.data.minFrequencyCutoff = 0.01;\n\t\t\tthis.data.count = 0;\n\t\t\tthis.data.timeElapsed = 0;\n\t\t\tthis.data.frequencyCutoff = 1;\n\t\t\tthis.data.frequency = 0;\n\t\t\tthis.data.filterType = Enum.FrequencyFilterType.LOGIC_LEVEL;\n\t\t\tthis.data.powerSupply = Enum.PowerSupply.VOLTS_12;\n\t\t\tthis.data.inputMode = Enum.InputMode.NPN;\n\t\t\tthis.data.enabled = 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_100:\n\t\tcase DeviceChannelUID._DAQ1400_FREQUENCYCOUNTER_120:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.powerSupply });\n\t\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.inputMode });\n\t\t\tawait bp.send(this._ch, BP.SETINPUTMODE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.frequency == PUNK.DBL)\n\t\t\t&& ! this._gotFrequencyChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.frequency != PUNK.DBL)\n\t\t\tif (this.onFrequencyChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onFrequencyChange(this.data.frequency);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The most recent count value the channel has reported.\n\t * \n\t * *   The count represents the total number of pulses since the the channel was opened, or last reset.\n\t * @throws {@link PhidgetError}\n\t */\n\tget count() { return this.getCount(); }\n\t/**\n\t * Enables or disables the channel.\n\t * \n\t * *   When a channel is disabled, it will not longer register counts, therefore the `timeElapsed` and `count` will not be updated until the channel is re-enabled.\n\t * @throws {@link PhidgetError}\n\t */\n\tget enabled() { return this.getEnabled(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `CountChange` / `FrequencyChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Determines the signal type that the channel responds to.\n\t * \n\t * *   The filter type is chosen based on the type of input signal. See the `phidget22.FrequencyFilterType` entry under Enumerations for more information.\n\t * @throws {@link PhidgetError}\n\t */\n\tget filterType() { return this.getFilterType(); }\n\t/**\n\t * The most recent frequency value that the channel has reported.\n\t * \n\t * *   This value will always be between 0 Hz and `maxFrequency`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget frequency() { return this.getFrequency(); }\n\t/**\n\t * The maximum value the `FrequencyChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFrequency() { return this.getMaxFrequency(); }\n\t/**\n\t * The frequency at which zero hertz is assumed.\n\t * \n\t * *   This means any frequency at or below the `frequencyCutoff` value will be reported as 0 Hz.\n\t * \n\t * *   This property is stored locally, so other users who have this Phidget open over a network connection won't see the effects of your selected cutoff.\n\t * @throws {@link PhidgetError}\n\t */\n\tget frequencyCutoff() { return this.getFrequencyCutoff(); }\n\tset frequencyCutoff(frequencyCutoff: number) { this.setFrequencyCutoff(frequencyCutoff); }\n\t/**\n\t * The minimum value that `frequencyCutoff` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFrequencyCutoff() { return this.getMinFrequencyCutoff(); }\n\t/**\n\t * The maximum value that `frequencyCutoff` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFrequencyCutoff() { return this.getMaxFrequencyCutoff(); }\n\t/**\n\t * The input polarity mode for your channel.\n\t * \n\t * *   See your device's User Guide for more information about what value to chooose for the `inputMode`\n\t * @throws {@link PhidgetError}\n\t */\n\tget inputMode() { return this.getInputMode(); }\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t */\n\tget powerSupply() { return this.getPowerSupply(); }\n\t/**\n\t * The amount of time the frequency counter has been enabled for.\n\t * \n\t * *   This property complements `count`, the total number of pulses detected since the channel was opened, or last reset.\n\t * @throws {@link PhidgetError}\n\t */\n\tget timeElapsed() { return this.getTimeElapsed(); }\n\n\t/**\n\t * The most recent count value the channel has reported.\n\t * \n\t * *   The count represents the total number of pulses since the the channel was opened, or last reset.\n\t * @returns The count value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCount(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.count === PUNK.UINT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.count);\n\t}\n\n\t/**\n\t * Enables or disables the channel.\n\t * \n\t * *   When a channel is disabled, it will not longer register counts, therefore the `timeElapsed` and `count` will not be updated until the channel is re-enabled.\n\t * @throws {@link PhidgetError}\n\t * @param enabled - The enabled value\n\t */\n\tasync setEnabled(enabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (enabled !== false && enabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (enabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t}\n\n\t/**\n\t * Enables or disables the channel.\n\t * \n\t * *   When a channel is disabled, it will not longer register counts, therefore the `timeElapsed` and `count` will not be updated until the channel is re-enabled.\n\t * @returns The enabled value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.enabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.enabled);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `CountChange` / `FrequencyChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `CountChange` / `FrequencyChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Determines the signal type that the channel responds to.\n\t * \n\t * *   The filter type is chosen based on the type of input signal. See the `phidget22.FrequencyFilterType` entry under Enumerations for more information.\n\t * @returns The filter value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFilterType(): Enum.FrequencyFilterType {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.filterType === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.filterType);\n\t}\n\n\t/**\n\t * Determines the signal type that the channel responds to.\n\t * \n\t * *   The filter type is chosen based on the type of input signal. See the `phidget22.FrequencyFilterType` entry under Enumerations for more information.\n\t * @throws {@link PhidgetError}\n\t * @param filterType - The filter value\n\t */\n\tasync setFilterType(filterType: Enum.FrequencyFilterType): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedFrequencyFilterType(this._ch!, filterType))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified FrequencyFilterType is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: filterType });\n\t\tawait bp.send(this._ch, BP.SETFILTERTYPE);\n\t}\n\n\t/**\n\t * The most recent frequency value that the channel has reported.\n\t * \n\t * *   This value will always be between 0 Hz and `maxFrequency`.\n\t * @returns The frequency value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFrequency(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.frequency === PUNK.DBL || Number.isNaN(this.data.frequency))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.frequency > this.data.maxFrequency)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\n\t\treturn (this.data.frequency);\n\t}\n\n\t/**\n\t * The maximum value the `FrequencyChange` event will report.\n\t * @returns The frequency value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFrequency(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFrequency === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFrequency);\n\t}\n\n\t/**\n\t * The frequency at which zero hertz is assumed.\n\t * \n\t * *   This means any frequency at or below the `frequencyCutoff` value will be reported as 0 Hz.\n\t * \n\t * *   This property is stored locally, so other users who have this Phidget open over a network connection won't see the effects of your selected cutoff.\n\t * @returns The frequency cutoff value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFrequencyCutoff(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.frequencyCutoff === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.frequencyCutoff);\n\t}\n\n\t/**\n\t * The frequency at which zero hertz is assumed.\n\t * \n\t * *   This means any frequency at or below the `frequencyCutoff` value will be reported as 0 Hz.\n\t * \n\t * *   This property is stored locally, so other users who have this Phidget open over a network connection won't see the effects of your selected cutoff.\n\t * @throws {@link PhidgetError}\n\t * @param frequencyCutoff - The frequency cutoff value\n\t */\n\tabstract setFrequencyCutoff(frequencyCutoff: number): void;\n\t/**\n\t * The minimum value that `frequencyCutoff` can be set to.\n\t * @returns The frequency value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFrequencyCutoff(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFrequencyCutoff === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFrequencyCutoff);\n\t}\n\n\t/**\n\t * The maximum value that `frequencyCutoff` can be set to.\n\t * @returns The frequency value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFrequencyCutoff(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFrequencyCutoff === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFrequencyCutoff);\n\t}\n\n\t/**\n\t * The input polarity mode for your channel.\n\t * \n\t * *   See your device's User Guide for more information about what value to chooose for the `inputMode`\n\t * @returns The input mode value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetInputMode(): Enum.InputMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.inputMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.inputMode);\n\t}\n\n\t/**\n\t * The input polarity mode for your channel.\n\t * \n\t * *   See your device's User Guide for more information about what value to chooose for the `inputMode`\n\t * @throws {@link PhidgetError}\n\t * @param inputMode - The input mode value\n\t */\n\tasync setInputMode(inputMode: Enum.InputMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedInputMode(this._ch!, inputMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified InputMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: inputMode });\n\t\tawait bp.send(this._ch, BP.SETINPUTMODE);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @returns The power supply value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPowerSupply(): Enum.PowerSupply {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.powerSupply === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.powerSupply);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t * @param powerSupply - The power supply value\n\t */\n\tasync setPowerSupply(powerSupply: Enum.PowerSupply): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedPowerSupply(this._ch!, powerSupply))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified PowerSupply is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: powerSupply });\n\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t}\n\n\t/**\n\t * Resets the `count` and `timeElapsed`.\n\t * \n\t * *   For best results, reset should be called when the channel is disabled.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract reset(): void;\n\t/**\n\t * The amount of time the frequency counter has been enabled for.\n\t * \n\t * *   This property complements `count`, the total number of pulses detected since the channel was opened, or last reset.\n\t * @returns The time value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTimeElapsed(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.timeElapsed === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.timeElapsed);\n\t}\n\n}\nexport { FrequencyCounterBase };\n","import { FrequencyCounterBase } from './FrequencyCounter.gen';\nimport { ErrorCode } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { RoundDouble } from '../Utils';\nimport { logEventException } from '../Logging';\nimport * as Enum from '../Enumerations.gen';\n\n/** @public */\nclass FrequencyCounter extends FrequencyCounterBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.FREQUENCYDATA: {\n\t\t\t\tconst ticks = bp.getNumber(0);\n\t\t\t\tconst counts = bp.getNumber(1);\n\t\t\t\tconst ticksAtLastCount = bp.getNumber(2);\n\t\t\t\tlet cutoffTime;\n\t\t\t\tlet precision;\n\t\t\t\tlet d;\n\n\t\t\t\tthis.data.timeElapsed += ticks;\n\t\t\t\tthis.data.count += counts;\n\n\t\t\t\tif (counts == 0) {\n\t\t\t\t\tif (Number.isNaN(this.data.totalTicksSinceLastCount))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tthis.data.totalTicksSinceLastCount += ticks;\n\t\t\t\t\t//only accumulate counts up to cutoff\n\t\t\t\t\tcutoffTime = Math.round(1000 / this.data.frequencyCutoff);\n\n\t\t\t\t\tif (this.data.totalTicksSinceLastCount > cutoffTime) {\n\t\t\t\t\t\tthis.data.frequency = 0;\n\n\t\t\t\t\t\t//Fire one event with 0 counts to indicate that the Timeout has elapsed and frequency is now 0\n\n\t\t\t\t\t\tif (this._isAttachedDone && this.onCountChange) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.onCountChange(0, this.data.totalTicksSinceLastCount);\n\t\t\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._isAttachedDone && this.onFrequencyChange) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.onFrequencyChange(this.data.frequency);\n\t\t\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.data.totalTicksSinceLastCount = Number.NaN;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// 1st count(s) since a timeout (or 1st read packet since opening)\n\t\t\t\t// don't try to calculate frequency because we don't know the 'ticks at first count'\n\t\t\t\tif (Number.isNaN(this.data.totalTicksSinceLastCount)) {\n\t\t\t\t\tthis.data.totalTicksSinceLastCount = ticks - ticksAtLastCount;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst countTimeSpan = this.data.totalTicksSinceLastCount + ticksAtLastCount; //in ms\n\t\t\t\tthis.data.totalTicksSinceLastCount = ticks - ticksAtLastCount;\n\n\t\t\t\td = this.data.frequencyCutoff;\n\t\t\t\tprecision = 2;\n\t\t\t\twhile (d < 1) {\n\t\t\t\t\tprecision++;\n\t\t\t\t\td *= 10;\n\t\t\t\t}\n\n\t\t\t\tthis.data.frequency = RoundDouble((counts / (countTimeSpan / 1000.0)), precision);\n\n\t\t\t\tif (this._isAttachedDone && this.onCountChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onCountChange(counts, countTimeSpan);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tif (this._isAttachedDone && this.onFrequencyChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onFrequencyChange(this.data.frequency);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase BP.SETENABLED:\n\t\t\t\tif (!bp.getBoolean(0))\n\t\t\t\t\tthis.data.frequency = PUNK.DBL;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.POWERSUPPLYCHANGE:\n\t\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\n\t\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\t\tbreak;\n\t\t\tcase BP.INPUTMODECHANGE:\n\t\t\t\tthis.data.inputMode = bp.entries[0].v as Enum.InputMode;\n\t\t\t\tthis._FIREPropertyChange('InputMode', bp);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetFrequencyCutoff(frequencyCutoff: number) {\n\t\tthis._assertOpen();\n\n\t\tif (frequencyCutoff < this.data.minFrequencyCutoff || frequencyCutoff > this.data.maxFrequencyCutoff)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minFrequencyCutoff + \" - \" + this.data.maxFrequencyCutoff + \".\");\n\n\t\tthis.data.frequencyCutoff = frequencyCutoff;\n\t}\n\n\treset() {\n\t\tthis._assertOpen();\n\n\t\tthis.data.count = 0;\n\t\tthis.data.timeElapsed = 0;\n\t\tthis.data.frequency = PUNK.DBL;\n\t}\n}\n\nexport { FrequencyCounter };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Struct from '../Structs.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface IRData {\n\tlastCodeInfo: Struct.IRCodeInfo | null,\n\tlastLearnedCodeInfo: Struct.IRCodeInfo | null,\n\tlastCodeStr: string | null,\n\tlastCodeBitCount: number, \n\tlastLearnedCodeStr: string | null,\n}\n\nabstract class IRBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: IRData;\n\t/**\n\t * **Code** event\n\t *  * `code` - The code string\n\t *  * `bitCount` - The length of the received code in bits\n\t *  * `isRepeat` - 'true' if a repeat is detected\n\t * ---\n\t * This event is fired every time a code is received and correctly decoded.\n\t * \n\t * *   The code is represented by a hexadecimal string (array of bytes) with a length of 1/4 of `bitCount`.\n\t * *   The MSBit is considered to be the first bit received and will be in array index 0 of `code`\n\t * *   Repeat will be true if a repeat is detected (either timing wise or via a repeat code)\n\t * \n\t * *   False repeasts can happen if two separate button presses happen close together\n\t */\n\tonCode: ((code: string, bitCount: number, isRepeat: boolean) => void) | null = null;\n\t/** @internal */\n\t_gotCodeErrorEvent?: boolean;\n\t/**\n\t * **Learn** event\n\t *  * `code` - The code string\n\t *  * `codeInfo` - Contains the data for characterizing the code.\n\t * ---\n\t * This event fires when a button has been held down long enough for the channel to have learned the CodeInfo values\n\t * \n\t * *   A code is usually learned after 1 second, or after 4 repeats.\n\t */\n\tonLearn: ((code: string, codeInfo: Struct.IRCodeInfo) => void) | null = null;\n\t/** @internal */\n\t_gotLearnErrorEvent?: boolean;\n\t/**\n\t * **RawData** event\n\t *  * `data` - The data being received\n\t * ---\n\t * This event will fire every time the channel gets more data\n\t * \n\t * *   This will happen at most once every 8ms.\n\t */\n\tonRawData: ((data: readonly number[]) => void) | null = null;\n\t/** @internal */\n\t_gotRawDataErrorEvent?: boolean;\n\n\t/**\n\t * The Infrared Remote class lets you read and transmit command codes from infrared remotes that the majority of household appliances use. You can use this class to construct and transmit commands from scratch, or learn and retransmit codes from the remote controller of your appliance.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.IR;\n\t\tthis.name = \"IR\";\n\t\tthis.data = this._initData();\n\t}\n\t/**\n\t * The value for a long space in raw data\n\t */\n\tstatic get RAW_DATA_LONG_SPACE() { return 4294967295; }\n\t/**\n\t * Maximum bit count for sent / received data\n\t */\n\tstatic get MAX_CODE_BIT_COUNT() { return 128; }\n\t/**\n\t * Maximum bit count for sent / received data\n\t */\n\tstatic get MAX_CODE_STRING_LENGTH() { return 33; }\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.TRANSMIT:\n\t\t\tbreak;\n\t\tcase BP.TRANSMITRAW:\n\t\t\tbreak;\n\t\tcase BP.TRANSMITREPEAT:\n\t\t\tbreak;\n\t\tcase BP.RAWDATA: {\n\t\t\tif (this._isAttachedDone && this.onRawData) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onRawData(bp.entries[0].v as readonly number[]);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): IRData {\n\t\treturn {\n\t\t\tlastCodeInfo: null,\n\t\t\tlastLearnedCodeInfo: null,\n\t\t\tlastCodeStr: null,\n\t\t\tlastCodeBitCount: 0, \n\t\t\tlastLearnedCodeStr: null,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._1055_IR_200_VINT:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\n\t/**\n\t * The last code the channel has received.\n\t * \n\t * *   The code is represented by a hexadecimal string (array of bytes).\n\t * @returns\n\t * \t- code: The last received code\n\t * \t- bitCount: length of the received code in bits\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getLastCode(): {code: string, bitCount: number};\n\t/**\n\t * The last code the channel has learned.\n\t * \n\t * *   The code is represented by a hexadecimal string (array of bytes).\n\t * *   The `codeInfo` structure holds data that describes the learned code.\n\t * @returns\n\t * \t- code: The last learned code\n\t * \t- codeInfo: contains the data for characterizing the code\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getLastLearnedCode(): {code: string, codeInfo: Struct.IRCodeInfo};\n\t/**\n\t * Transmits a code\n\t * \n\t * *   `code` data is transmitted MSBit first.\n\t * *   MSByte is in array index 0 of `code`\n\t * *   LSBit is right justified, therefore, MSBit may be in bit position 0-7 (of array index 0) depending on the bit count.\n\t * @throws {@link PhidgetError}\n\t * @param code - code data\n\t * @param codeInfo - contains the data for characterizing the code.\n\t */\n\tabstract transmit(code: string, codeInfo: Struct.IRCodeInfo): Promise<void>;\n\t/**\n\t * Transmits **raw** data as a series of pulses and spaces.\n\t * \n\t * *   `data` must start and end with a pulse.\n\t *     *   Each element is a positive time in μs\n\t * *   `dataLength` has a maximum length of 200, however, streams should be kept must shorter than this (less than 100ms between gaps).\n\t * \n\t * *   `dataLength` must be an odd number\n\t * \n\t * *   Leave `carrierFrequency` as 0 for default.\n\t * \n\t * *   `carrierFrequency` has a range of 10kHz - 1MHz\n\t * \n\t * *   Leave `dutyCycle` as 0 for default\n\t * \n\t * *   `dutyCycle` can have a value between 0.1 and 0.5\n\t * \n\t * *   Specifying a `gap` will guarantee a gap time (no transmitting) after data is sent.\n\t * \n\t * *   gap time is in μs\n\t * *   gap time can be set to 0\n\t * @throws {@link PhidgetError}\n\t * @param data - data to send.\n\t * @param carrierFrequency - carrier frequency in Hz\n\t * @param dutyCycle - the duty cycle\n\t * @param gap - the gap time.\n\t */\n\tabstract transmitRaw(data: readonly number[], carrierFrequency: number, dutyCycle: number, gap: number): Promise<void>;\n\t/**\n\t * Transmits a repeat of the last transmited code.\n\t * \n\t * *   Depending on the CodeInfo structure, this may be a retransmission of the code itself, or there may be a special repeat code.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync transmitRepeat(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.TRANSMITREPEAT);\n\t}\n\n}\nexport { IRBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { IRBase } from './IR.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { ErrorCode, IRCodeEncoding, IRCodeLength } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket } from '../BridgePacket';\nimport { type IRCodeInfo } from '../Structs.gen';\nimport { logEventException } from '../Logging';\n\n/** @public */\nclass IR extends IRBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.REPEAT:\n\t\t\t\tif (this._isAttachedDone && this.onCode) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onCode(this.data.lastCodeStr!, this.data.lastCodeBitCount, true);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BP.CODE:\n\t\t\t\tthis.data.lastCodeStr = bp.getString(0) as string;\n\t\t\t\tthis.data.lastCodeBitCount = bp.getNumber(1);\n\t\t\t\tif (this._isAttachedDone && this.onCode) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onCode(this.data.lastCodeStr, this.data.lastCodeBitCount, bp.getBoolean(2) as boolean);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase BP.LEARN: {\n\t\t\t\t// NOTE: Since the incoming toggle mask is a fixed length byte array, we need to convert to a string and trim nulls\n\t\t\t\t// eslint-disable-next-line no-control-regex\n\t\t\t\tconst toggleString = String.fromCharCode(...bp.getArray(\"CodeInfo.toggleMask\")).replace(/\\u0000/g, '');\n\n\t\t\t\t// trim trailing zeros from the repeat array\n\t\t\t\tconst repeatArr = bp.getArray(\"CodeInfo.repeat\");\n\t\t\t\twhile (repeatArr[repeatArr.length - 1] === 0)\n\t\t\t\t\trepeatArr.pop();\n\n\t\t\t\tthis.data.lastLearnedCodeStr = bp.getString(\"0\") as string;\n\t\t\t\tthis.data.lastLearnedCodeInfo = {\n\t\t\t\t\tbitCount: bp.getNumber(\"CodeInfo.bitCount\"),\n\t\t\t\t\tencoding: bp.getNumber(\"CodeInfo.encoding\") as IRCodeEncoding,\n\t\t\t\t\tlength: bp.getNumber(\"CodeInfo.length\") as IRCodeLength,\n\t\t\t\t\tgap: bp.getNumber(\"CodeInfo.gap\"),\n\t\t\t\t\ttrail: bp.getNumber(\"CodeInfo.trail\"),\n\t\t\t\t\theader: bp.getArray(\"CodeInfo.header\") as [number, number],\n\t\t\t\t\tone: bp.getArray(\"CodeInfo.one\") as [number, number],\n\t\t\t\t\tzero: bp.getArray(\"CodeInfo.zero\") as [number, number],\n\t\t\t\t\trepeat: repeatArr,\n\t\t\t\t\tminRepeat: bp.getNumber(\"CodeInfo.minRepeat\"),\n\t\t\t\t\tdutyCycle: bp.getNumber(\"CodeInfo.dutyCycle\"),\n\t\t\t\t\tcarrierFrequency: bp.getNumber(\"CodeInfo.carrierFrequency\"),\n\t\t\t\t\ttoggleMask: toggleString,\n\t\t\t\t};\n\t\t\t\tif (this._isAttachedDone && this.onLearn) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onLearn(this.data.lastLearnedCodeStr, this.data.lastLearnedCodeInfo);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync transmit(code: string, ci: Partial<IRCodeInfo>) {\n\t\tthis._assertOpen();\n\n\t\t// Defaults\n\t\tconst codeInfo: IRCodeInfo = {\n\t\t\tbitCount: 0,\n\t\t\tencoding: IRCodeEncoding.SPACE,\n\t\t\tlength: IRCodeLength.CONSTANT,\n\t\t\tgap: 0,\n\t\t\ttrail: 0,\n\t\t\tminRepeat: 0,\n\t\t\tdutyCycle: 0,\n\t\t\tcarrierFrequency: 0,\n\t\t\theader: [0, 0],\n\t\t\tone: [0, 0],\n\t\t\tzero: [0, 0],\n\t\t\trepeat: [],\n\t\t\ttoggleMask: ''\n\t\t}\n\n\t\tif (ci.bitCount !== undefined)\n\t\t\tcodeInfo.bitCount = ci.bitCount;\n\t\tif (ci.encoding !== undefined)\n\t\t\tcodeInfo.encoding = ci.encoding;\n\t\tif (ci.length !== undefined)\n\t\t\tcodeInfo.length = ci.length;\n\t\tif (ci.gap !== undefined)\n\t\t\tcodeInfo.gap = ci.gap;\n\t\tif (ci.trail !== undefined)\n\t\t\tcodeInfo.trail = ci.trail;\n\t\tif (ci.minRepeat !== undefined)\n\t\t\tcodeInfo.minRepeat = ci.minRepeat;\n\t\tif (ci.dutyCycle !== undefined)\n\t\t\tcodeInfo.dutyCycle = ci.dutyCycle;\n\t\tif (ci.carrierFrequency !== undefined)\n\t\t\tcodeInfo.carrierFrequency = ci.carrierFrequency;\n\n\t\tif (ci.header !== undefined) {\n\t\t\tif (!Array.isArray(ci.header))\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - header must be Array');\n\t\t\tif (ci.header.length != 2)\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - header must have length 2');\n\t\t\tcodeInfo.header = ci.header;\n\t\t}\n\n\t\tif (ci.one !== undefined) {\n\t\t\tif (!Array.isArray(ci.one))\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - one must be Array');\n\t\t\tif (ci.one.length != 2)\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - one must have length 2');\n\t\t\tcodeInfo.one = ci.one;\n\t\t}\n\n\t\tif (ci.zero !== undefined) {\n\t\t\tif (!Array.isArray(ci.zero))\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - zero must be Array');\n\t\t\tif (ci.zero.length != 2)\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - zero must have length 2');\n\t\t\tcodeInfo.zero = ci.zero;\n\t\t}\n\n\t\t// repeat has a fixed length of 26 bytes and must be zero filled\n\t\tconst repeatArr: number[] = new Array(26).fill(0);\n\t\tif (ci.repeat !== undefined) {\n\t\t\tif (!Array.isArray(ci.repeat))\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - repeat must be Array');\n\t\t\tif (ci.repeat.length > 26)\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - repeat must have length <= 26');\n\n\t\t\tfor (let i = 0; i < ci.repeat.length; i++)\n\t\t\t\trepeatArr[i] = ci.repeat[i];\n\t\t}\n\n\t\t// toggle mask has a fixed length of 33 bytes and must be zero filled\n\t\tconst toggleMaskArr: number[] = new Array(33).fill(0);\n\t\tif (ci.toggleMask !== undefined) {\n\t\t\tif (typeof ci.toggleMask !== 'string')\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - toggleMask must be a string');\n\t\t\tif (ci.toggleMask.length > 33)\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, 'invalid value - toggleMask must have length <= 33');\n\n\t\t\tfor (let i = 0; i < ci.toggleMask.length; i++)\n\t\t\t\ttoggleMaskArr[i] = ci.toggleMask.charCodeAt(i);\n\t\t}\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: 'code', type: 's', value: code });\n\t\tbp.set({ name: 'CodeInfo.bitCount', type: 'u', value: codeInfo.bitCount });\n\t\tbp.set({ name: 'CodeInfo.encoding', type: 'd', value: codeInfo.encoding });\n\t\tbp.set({ name: 'CodeInfo.length', type: 'd', value: codeInfo.length });\n\t\tbp.set({ name: 'CodeInfo.gap', type: 'u', value: codeInfo.gap });\n\t\tbp.set({ name: 'CodeInfo.trail', type: 'u', value: codeInfo.trail });\n\t\tbp.set({ name: 'CodeInfo.header', type: 'U', value: codeInfo.header });\n\t\tbp.set({ name: 'CodeInfo.one', type: 'U', value: codeInfo.one });\n\t\tbp.set({ name: 'CodeInfo.zero', type: 'U', value: codeInfo.zero });\n\t\tbp.set({ name: 'CodeInfo.repeat', type: 'U', value: repeatArr });\n\t\tbp.set({ name: 'CodeInfo.minRepeat', type: 'u', value: codeInfo.minRepeat });\n\t\tbp.set({ name: 'CodeInfo.dutyCycle', type: 'g', value: codeInfo.dutyCycle });\n\t\tbp.set({ name: 'CodeInfo.carrierFrequency', type: 'u', value: codeInfo.carrierFrequency });\n\t\tbp.set({ name: 'CodeInfo.toggleMask', type: 'R', value: toggleMaskArr });\n\t\tawait bp.send(this._ch, BP.TRANSMIT);\n\t}\n\n\tasync transmitRaw(data: readonly number[], carrierFrequency = 0, dutyCycle = 0, gap = 0) {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: 'data', type: 'U', value: data });\n\t\tbp.set({ name: 'carrierFrequency', type: 'u', value: carrierFrequency });\n\t\tbp.set({ name: 'dutyCycle', type: 'g', value: dutyCycle });\n\t\tbp.set({ name: 'gap', type: 'u', value: gap });\n\t\tawait bp.send(this._ch, BP.TRANSMITRAW);\n\t}\n\n\tgetLastCode() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.lastCodeStr == undefined)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ({ code: this.data.lastCodeStr, bitCount: this.data.lastCodeBitCount });\n\t}\n\n\tgetLastLearnedCode(): { code: string; codeInfo: IRCodeInfo; } {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.lastLearnedCodeStr == undefined || this.data.lastLearnedCodeInfo == undefined)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ({ code: this.data.lastLearnedCodeStr, codeInfo: this.data.lastLearnedCodeInfo });\n\t}\n}\n\nexport { IR };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PHSensorData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxPH: number,\n\tmaxPHChangeTrigger: number,\n\tminDataInterval: number,\n\tminPH: number,\n\tminPHChangeTrigger: number,\n\tPH: number,\n\tPHChangeTrigger: number,\n\tcorrectionTemperature: number,\n\tminCorrectionTemperature: number,\n\tmaxCorrectionTemperature: number,\n}\n\nabstract class PHSensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: PHSensorData;\n\t/**\n\t * **PHChange** event\n\t *  * `PH` - The current pH\n\t * ---\n\t * The most recent pH value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `PHChangeTrigger` has been set to a non-zero value, the `PHChange` event will not occur until the pH has changed by at least the `PHChangeTrigger` value.\n\t */\n\tonPHChange: ((PH: number) => void) | null = null;\n\t/** @internal */\n\t_gotPHChangeErrorEvent?: boolean;\n\n\t/**\n\t * The PH Sensor class gathers data from a pH sensor type Phidget board.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.PH_SENSOR;\n\t\tthis.name = \"PHSensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETCORRECTIONTEMPERATURE:\n\t\t\tthis.data.correctionTemperature = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CorrectionTemperature', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.PHChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('PHChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.PHCHANGE: {\n\t\t\tthis.data.PH = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onPHChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPHChange(this.data.PH);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): PHSensorData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxPH: PUNK.DBL,\n\t\t\tmaxPHChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminPH: PUNK.DBL,\n\t\t\tminPHChangeTrigger: PUNK.DBL,\n\t\t\tPH: PUNK.DBL,\n\t\t\tPHChangeTrigger: PUNK.DBL,\n\t\t\tcorrectionTemperature: PUNK.DBL,\n\t\t\tminCorrectionTemperature: PUNK.DBL,\n\t\t\tmaxCorrectionTemperature: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 20;\n\t\t\tthis.data.maxPH = 14;\n\t\t\tthis.data.maxPHChangeTrigger = 14;\n\t\t\tthis.data.minDataInterval = 50;\n\t\t\tthis.data.minPH = 0;\n\t\t\tthis.data.minPHChangeTrigger = 0;\n\t\t\tthis.data.PHChangeTrigger = 0;\n\t\t\tthis.data.correctionTemperature = 25;\n\t\t\tthis.data.minCorrectionTemperature = 0;\n\t\t\tthis.data.maxCorrectionTemperature = 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._ADP1000_PHSENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.PHChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.correctionTemperature });\n\t\t\tawait bp.send(this._ch, BP.SETCORRECTIONTEMPERATURE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.PH == PUNK.DBL)\n\t\t\t&& ! this._gotPHChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.PH != PUNK.DBL)\n\t\t\tif (this.onPHChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPHChange(this.data.PH);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * Set this property to the measured temperature of the solution to correct the slope of the pH conversion for temperature.\n\t * @throws {@link PhidgetError}\n\t */\n\tget correctionTemperature() { return this.getCorrectionTemperature(); }\n\t/**\n\t * The minimum value that `correctionTemperature` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCorrectionTemperature() { return this.getMinCorrectionTemperature(); }\n\t/**\n\t * The maximum value that `correctionTemperature` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCorrectionTemperature() { return this.getMaxCorrectionTemperature(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PHChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PHChange` events can also be affected by the `PHChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent pH value that the channel has reported.\n\t * \n\t * *   This value will always be between `minPH` and `maxPH`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget PH() { return this.getPH(); }\n\t/**\n\t * The minimum value the `PHChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPH() { return this.getMinPH(); }\n\t/**\n\t * The maximum value the `PHChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPH() { return this.getMaxPH(); }\n\t/**\n\t * The channel will not issue a `PHChange` event until the pH value has changed by the amount specified by the `PHChangeTrigger`.\n\t * \n\t * *   Setting the `PHChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget PHChangeTrigger() { return this.getPHChangeTrigger(); }\n\t/**\n\t * The minimum value that `PHChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPHChangeTrigger() { return this.getMinPHChangeTrigger(); }\n\t/**\n\t * The maximum value that `PHChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPHChangeTrigger() { return this.getMaxPHChangeTrigger(); }\n\n\t/**\n\t * Set this property to the measured temperature of the solution to correct the slope of the pH conversion for temperature.\n\t * @returns The temperature of the solution to correct the pH measurement.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCorrectionTemperature(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.correctionTemperature === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.correctionTemperature);\n\t}\n\n\t/**\n\t * Set this property to the measured temperature of the solution to correct the slope of the pH conversion for temperature.\n\t * @throws {@link PhidgetError}\n\t * @param correctionTemperature - The temperature of the solution to correct the pH measurement.\n\t */\n\tasync setCorrectionTemperature(correctionTemperature: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (correctionTemperature < this.data.minCorrectionTemperature || correctionTemperature > this.data.maxCorrectionTemperature)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCorrectionTemperature + \" - \" + this.data.maxCorrectionTemperature + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: correctionTemperature });\n\t\tawait bp.send(this._ch, BP.SETCORRECTIONTEMPERATURE);\n\t}\n\n\t/**\n\t * The minimum value that `correctionTemperature` can be set to.\n\t * @returns The minimum temperature that can be corrected for.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCorrectionTemperature(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCorrectionTemperature === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCorrectionTemperature);\n\t}\n\n\t/**\n\t * The maximum value that `correctionTemperature` can be set to.\n\t * @returns The maximum temperature that can be corrected for.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCorrectionTemperature(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCorrectionTemperature === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCorrectionTemperature);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PHChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PHChange` events can also be affected by the `PHChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PHChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PHChange` events can also be affected by the `PHChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent pH value that the channel has reported.\n\t * \n\t * *   This value will always be between `minPH` and `maxPH`.\n\t * @returns The pH value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPH(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.PH === PUNK.DBL || Number.isNaN(this.data.PH))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.PH > this.data.maxPH)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.PH < this.data.minPH)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.PH);\n\t}\n\n\t/**\n\t * The minimum value the `PHChange` event will report.\n\t * @returns The pH value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPH(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPH === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPH);\n\t}\n\n\t/**\n\t * The maximum value the `PHChange` event will report.\n\t * @returns The pH value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPH(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPH === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPH);\n\t}\n\n\t/**\n\t * The channel will not issue a `PHChange` event until the pH value has changed by the amount specified by the `PHChangeTrigger`.\n\t * \n\t * *   Setting the `PHChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPHChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.PHChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.PHChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `PHChange` event until the pH value has changed by the amount specified by the `PHChangeTrigger`.\n\t * \n\t * *   Setting the `PHChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param PHChangeTrigger - The change trigger value\n\t */\n\tasync setPHChangeTrigger(PHChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (PHChangeTrigger < this.data.minPHChangeTrigger || PHChangeTrigger > this.data.maxPHChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minPHChangeTrigger + \" - \" + this.data.maxPHChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: PHChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `PHChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPHChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPHChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPHChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `PHChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPHChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPHChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPHChangeTrigger);\n\t}\n\n}\nexport { PHSensorBase };\n","import { PHSensorBase } from './PHSensor.gen';\r\n/** @public */\r\nclass PHSensor extends PHSensorBase { }\r\nexport { PHSensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface DCMotorData {\n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tcurrentLimit: number,\n\tmaxCurrentLimit: number,\n\tminCurrentLimit: number,\n\tcurrentRegulatorGain: number,\n\tmaxCurrentRegulatorGain: number,\n\tminCurrentRegulatorGain: number,\n\ttargetVelocity: number,\n\tmaxVelocity: number,\n\tminVelocity: number,\n\tmaxAcceleration: number,\n\tminAcceleration: number,\n\tacceleration: number,\n\ttargetBrakingStrength: number,\n\tmaxBrakingStrength: number,\n\tminBrakingStrength: number,\n\tbackEMFSensingState: number,\n\tbackEMF: number,\n\tfanMode: Enum.FanMode | PUNK.ENUM,\n\tvelocity: number,\n\tbrakingStrength: number,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n}\n\nabstract class DCMotorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: DCMotorData;\n\t/**\n\t * **BrakingStrengthChange** event\n\t *  * `brakingStrength` - The most recent braking strength value will be reported in this event.\n\n*   This event will occur only when the value of braking strength has changed\n*   See `targetBrakingStrength` for details about what this number represents.\n\t * ---\n\t * Occurs when the motor braking strength changes.\n\t */\n\tonBrakingStrengthChange: ((brakingStrength: number) => void) | null = null;\n\t/** @internal */\n\t_gotBrakingStrengthChangeErrorEvent?: boolean;\n\t/**\n\t * **VelocityUpdate** event\n\t *  * `velocity` - The most recent velocity value will be reported in this event.\n\t * ---\n\t * Occurs at a rate defined by the `dataInterval`.\n\t */\n\tonVelocityUpdate: ((velocity: number) => void) | null = null;\n\t/** @internal */\n\t_gotVelocityUpdateErrorEvent?: boolean;\n\t/**\n\t * **BackEMFChange** event\n\t *  * `backEMF` - The back EMF voltage from the motor\n\t * ---\n\t * The most recent back emf value will be reported in this event.\n\t */\n\tonBackEMFChange: ((backEMF: number) => void) | null = null;\n\t/** @internal */\n\t_gotBackEMFChangeErrorEvent?: boolean;\n\n\t/**\n\t * The DC Motor class controls the power applied to attached DC motors to affect its speed and direction. It can also contain various other control and monitoring functions that aid in the control of DC motors.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.DC_MOTOR;\n\t\tthis.name = \"DCMotor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETACCELERATION:\n\t\t\tthis.data.acceleration = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Acceleration', bp);\n\t\t\tbreak;\n\t\tcase BP.SETBACKEMFSENSINGSTATE:\n\t\t\tthis.data.backEMFSensingState = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('BackEMFSensingState', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURRENTLIMIT:\n\t\t\tthis.data.currentLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURRENTREGULATORGAIN:\n\t\t\tthis.data.currentRegulatorGain = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentRegulatorGain', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.SETFANMODE:\n\t\t\tthis.data.fanMode = bp.entries[0].v as Enum.FanMode;\n\t\t\tthis._FIREPropertyChange('FanMode', bp);\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\tthis.data.targetBrakingStrength = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetBrakingStrength', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDUTYCYCLE:\n\t\t\tthis.data.targetVelocity = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetVelocity', bp);\n\t\t\tbreak;\n\t\tcase BP.BACKEMFCHANGE: {\n\t\t\tthis.data.backEMF = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onBackEMFChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onBackEMFChange(this.data.backEMF);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.BRAKINGSTRENGTHCHANGE: {\n\t\t\tthis.data.brakingStrength = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onBrakingStrengthChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onBrakingStrengthChange(this.data.brakingStrength);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.DUTYCYCLECHANGE: {\n\t\t\tthis.data.velocity = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onVelocityUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onVelocityUpdate(this.data.velocity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): DCMotorData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tcurrentLimit: PUNK.DBL,\n\t\t\tmaxCurrentLimit: PUNK.DBL,\n\t\t\tminCurrentLimit: PUNK.DBL,\n\t\t\tcurrentRegulatorGain: PUNK.DBL,\n\t\t\tmaxCurrentRegulatorGain: PUNK.DBL,\n\t\t\tminCurrentRegulatorGain: PUNK.DBL,\n\t\t\ttargetVelocity: PUNK.DBL,\n\t\t\tmaxVelocity: PUNK.DBL,\n\t\t\tminVelocity: PUNK.DBL,\n\t\t\tmaxAcceleration: PUNK.DBL,\n\t\t\tminAcceleration: PUNK.DBL,\n\t\t\tacceleration: PUNK.DBL,\n\t\t\ttargetBrakingStrength: PUNK.DBL,\n\t\t\tmaxBrakingStrength: PUNK.DBL,\n\t\t\tminBrakingStrength: PUNK.DBL,\n\t\t\tbackEMFSensingState: PUNK.BOOL,\n\t\t\tbackEMF: PUNK.DBL,\n\t\t\tfanMode: PUNK.ENUM,\n\t\t\tvelocity: PUNK.DBL,\n\t\t\tbrakingStrength: PUNK.DBL,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 25;\n\t\t\tthis.data.minCurrentLimit = 2;\n\t\t\tthis.data.currentRegulatorGain = 10;\n\t\t\tthis.data.maxCurrentRegulatorGain = 100;\n\t\t\tthis.data.minCurrentRegulatorGain = 1;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.fanMode = Enum.FanMode.AUTO;\n\t\t\tthis.data.velocity = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 25;\n\t\t\tthis.data.minCurrentLimit = 2;\n\t\t\tthis.data.currentRegulatorGain = 10;\n\t\t\tthis.data.maxCurrentRegulatorGain = 100;\n\t\t\tthis.data.minCurrentRegulatorGain = 1;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.fanMode = Enum.FanMode.AUTO;\n\t\t\tthis.data.velocity = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.velocity = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.velocity = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 4;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.velocity = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 4;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.velocity = 0;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_200:\n\t\tcase DeviceChannelUID._DCC1000_DCMOTOR_210:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.targetVelocity });\n\t\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1001_DCMOTOR_120:\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1002_DCMOTOR_110:\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1003_DCMOTOR_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.currentLimit });\n\t\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.targetVelocity });\n\t\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.acceleration });\n\t\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.targetBrakingStrength });\n\t\t\tawait bp.send(this._ch, BP.SETBRAKINGDUTYCYCLE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.backEMF == PUNK.DBL)\n\t\t\t&& ! this._gotBackEMFChangeErrorEvent)\n\t\t\treturn false;\n\t\tif ((this.data.brakingStrength == PUNK.DBL)\n\t\t\t&& ! this._gotBrakingStrengthChangeErrorEvent)\n\t\t\treturn false;\n\t\tif ((this.data.velocity == PUNK.DBL)\n\t\t\t&& ! this._gotVelocityUpdateErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.backEMF != PUNK.DBL)\n\t\t\tif (this.onBackEMFChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onBackEMFChange(this.data.backEMF);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t\tif(this.data.brakingStrength != PUNK.DBL)\n\t\t\tif (this.onBrakingStrengthChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onBrakingStrengthChange(this.data.brakingStrength);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t\tif(this.data.velocity != PUNK.DBL)\n\t\t\tif (this.onVelocityUpdate)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onVelocityUpdate(this.data.velocity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   The acceleration is bounded by `minAcceleration` and `maxAcceleration`\n\t * @throws {@link PhidgetError}\n\t */\n\tget acceleration() { return this.getAcceleration(); }\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * The most recent `backEMF` value that the controller has reported.\n\t * @throws {@link PhidgetError}\n\t */\n\tget backEMF() { return this.getBackEMF(); }\n\t/**\n\t * When `backEMFSensingState` is enabled, the controller will measure and report the `backEMF`.\n\t * \n\t * *   The motor will coast (freewheel) 5% of the time while the back EMF is being measured (800μs every 16ms). Therefore, at a `velocity` of 100%, the motor will only be driven for 95% of the time.\n\t * @throws {@link PhidgetError}\n\t */\n\tget backEMFSensingState() { return this.getBackEMFSensingState(); }\n\t/**\n\t * The most recent braking strength value that the controller has reported. See `targetBrakingStrength` for details.\n\t * @throws {@link PhidgetError}\n\t */\n\tget brakingStrength() { return this.getBrakingStrength(); }\n\t/**\n\t * The minimum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minBrakingStrength() { return this.getMinBrakingStrength(); }\n\t/**\n\t * The maximum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxBrakingStrength() { return this.getMaxBrakingStrength(); }\n\t/**\n\t * The controller will limit the current through the motor to the `currentLimit` value.\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentLimit() { return this.getCurrentLimit(); }\n\t/**\n\t * The minimum value that `currentLimit` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentLimit() { return this.getMinCurrentLimit(); }\n\t/**\n\t * The maximum value that `currentLimit` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentLimit() { return this.getMaxCurrentLimit(); }\n\t/**\n\t * Depending on power supply voltage and motor coil inductance, current through the motor can change relatively slowly or extremely rapidly. A physically larger DC Motor will typically have a lower inductance, requiring a higher current regulator gain. A higher power supply voltage will result in motor current changing more rapidly, requiring a higher current regulator gain. If the current regulator gain is too small, spikes in current will occur, causing large variations in torque, and possibly damaging the motor controller. If the current regulator gain is too high, the current will jitter, causing the motor to sound 'rough', especially when changing directions.  \n\t *   \n\t * As a rule of thumb, we recommend setting this value as follows:  \n\t * \n\t * CurrentRegulatorGain = CurrentLimit \\* (Voltage / 12)\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentRegulatorGain() { return this.getCurrentRegulatorGain(); }\n\t/**\n\t * The minimum value that `currentRegulatorGain` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentRegulatorGain() { return this.getMinCurrentRegulatorGain(); }\n\t/**\n\t * The maximum value that `currentRegulatorGain` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentRegulatorGain() { return this.getMaxCurrentRegulatorGain(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `VelocityUpdate` / `BrakingStrengthChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * \n\t * *   Note: `BrakingStrengthChange` events will only fire if a change in braking has occurred.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the controller will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @throws {@link PhidgetError}\n\t */\n\tget fanMode() { return this.getFanMode(); }\n\t/**\n\t * This setting allows you to choose how hard the motor will resist being turned when it is not being driven forward or reverse (`velocity` = 0). The `targetBrakingStrength` sets the relative amount of electrical braking to be applied to the DC motor, with `minBrakingStrength` corresponding to no braking (free-wheeling), and `maxBrakingStrength` indicating full braking.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free-wheeling. This means:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor (`velocity` = 0), due to its momentum.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   As `targetBrakingStrength` increases, this will engage electrical braking of the DC motor. This means:\n\t *     *   The motor will stop more quickly if it is in motion when braking is requested.\n\t *     *   The motor shaft will resist rotation by outside forces.\n\t * *   Braking will be added gradually, according to the `acceleration` setting, once the motor controller's `velocity` reaches 0.0\n\t * *   Braking will be immediately stopped when a new (non-zero) `targetVelocity` is set, and the motor will accelerate to the requested velocity.\n\t * *   Braking mode is enabled by setting the `velocity` to 0.0\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetBrakingStrength() { return this.getTargetBrakingStrength(); }\n\t/**\n\t * The average voltage across the motor is based on the `targetVelocity` value.\n\t * \n\t * *   At a constant load, increasing the target velocity will increase the speed of the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * *   Setting `targetVelocity` to `minVelocity` will stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   The units of `targetVelocity` and `acceleration` refer to 'duty cycle'. This is because the controller controls velocity by rapidly switching the power on/off (i.e. changing the duty cycle) in order to manipulate the voltage across the motor.\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetVelocity() { return this.getTargetVelocity(); }\n\t/**\n\t * The most recent velocity value that the controller has reported.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocity() { return this.getVelocity(); }\n\t/**\n\t * The minimum value that `targetVelocity` can be set to.\n\t * \n\t * *   Set the `targetVelocity` to `minVelocity` to stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVelocity() { return this.getMinVelocity(); }\n\t/**\n\t * The maximum value that `targetVelocity` can be set to.\n\t * \n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVelocity() { return this.getMaxVelocity(); }\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   The acceleration is bounded by `minAcceleration` and `maxAcceleration`\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAcceleration(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.acceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.acceleration);\n\t}\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   The acceleration is bounded by `minAcceleration` and `maxAcceleration`\n\t * @throws {@link PhidgetError}\n\t * @param acceleration - The acceleration value\n\t */\n\tasync setAcceleration(acceleration: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (acceleration < this.data.minAcceleration || acceleration > this.data.maxAcceleration)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minAcceleration + \" - \" + this.data.maxAcceleration + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: acceleration });\n\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t}\n\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * @returns The acceleration value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAcceleration(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAcceleration);\n\t}\n\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * @returns The acceleration value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAcceleration(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAcceleration);\n\t}\n\n\t/**\n\t * The most recent `backEMF` value that the controller has reported.\n\t * @returns The back EMF value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBackEMF(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.backEMF === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.backEMF);\n\t}\n\n\t/**\n\t * When `backEMFSensingState` is enabled, the controller will measure and report the `backEMF`.\n\t * \n\t * *   The motor will coast (freewheel) 5% of the time while the back EMF is being measured (800μs every 16ms). Therefore, at a `velocity` of 100%, the motor will only be driven for 95% of the time.\n\t * @returns The back EMF state\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBackEMFSensingState(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.backEMFSensingState === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.backEMFSensingState);\n\t}\n\n\t/**\n\t * When `backEMFSensingState` is enabled, the controller will measure and report the `backEMF`.\n\t * \n\t * *   The motor will coast (freewheel) 5% of the time while the back EMF is being measured (800μs every 16ms). Therefore, at a `velocity` of 100%, the motor will only be driven for 95% of the time.\n\t * @throws {@link PhidgetError}\n\t * @param backEMFSensingState - The back EMF state\n\t */\n\tasync setBackEMFSensingState(backEMFSensingState: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (backEMFSensingState !== false && backEMFSensingState !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (backEMFSensingState ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETBACKEMFSENSINGSTATE);\n\t}\n\n\t/**\n\t * The most recent braking strength value that the controller has reported. See `targetBrakingStrength` for details.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.brakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.brakingStrength);\n\t}\n\n\t/**\n\t * The minimum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minBrakingStrength);\n\t}\n\n\t/**\n\t * The maximum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxBrakingStrength);\n\t}\n\n\t/**\n\t * The controller will limit the current through the motor to the `currentLimit` value.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentLimit);\n\t}\n\n\t/**\n\t * The controller will limit the current through the motor to the `currentLimit` value.\n\t * @throws {@link PhidgetError}\n\t * @param currentLimit - The current value\n\t */\n\tasync setCurrentLimit(currentLimit: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentLimit < this.data.minCurrentLimit || currentLimit > this.data.maxCurrentLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentLimit + \" - \" + this.data.maxCurrentLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentLimit });\n\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t}\n\n\t/**\n\t * The minimum value that `currentLimit` can be set to.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentLimit);\n\t}\n\n\t/**\n\t * The maximum value that `currentLimit` can be set to.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentLimit);\n\t}\n\n\t/**\n\t * Depending on power supply voltage and motor coil inductance, current through the motor can change relatively slowly or extremely rapidly. A physically larger DC Motor will typically have a lower inductance, requiring a higher current regulator gain. A higher power supply voltage will result in motor current changing more rapidly, requiring a higher current regulator gain. If the current regulator gain is too small, spikes in current will occur, causing large variations in torque, and possibly damaging the motor controller. If the current regulator gain is too high, the current will jitter, causing the motor to sound 'rough', especially when changing directions.  \n\t *   \n\t * As a rule of thumb, we recommend setting this value as follows:  \n\t * \n\t * CurrentRegulatorGain = CurrentLimit \\* (Voltage / 12)\n\t * @returns The current regulator gain value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentRegulatorGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentRegulatorGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentRegulatorGain);\n\t}\n\n\t/**\n\t * Depending on power supply voltage and motor coil inductance, current through the motor can change relatively slowly or extremely rapidly. A physically larger DC Motor will typically have a lower inductance, requiring a higher current regulator gain. A higher power supply voltage will result in motor current changing more rapidly, requiring a higher current regulator gain. If the current regulator gain is too small, spikes in current will occur, causing large variations in torque, and possibly damaging the motor controller. If the current regulator gain is too high, the current will jitter, causing the motor to sound 'rough', especially when changing directions.  \n\t *   \n\t * As a rule of thumb, we recommend setting this value as follows:  \n\t * \n\t * CurrentRegulatorGain = CurrentLimit \\* (Voltage / 12)\n\t * @throws {@link PhidgetError}\n\t * @param currentRegulatorGain - The current regulator gain value\n\t */\n\tasync setCurrentRegulatorGain(currentRegulatorGain: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentRegulatorGain < this.data.minCurrentRegulatorGain || currentRegulatorGain > this.data.maxCurrentRegulatorGain)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentRegulatorGain + \" - \" + this.data.maxCurrentRegulatorGain + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentRegulatorGain });\n\t\tawait bp.send(this._ch, BP.SETCURRENTREGULATORGAIN);\n\t}\n\n\t/**\n\t * The minimum value that `currentRegulatorGain` can be set to.\n\t * @returns The current regulator gain value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentRegulatorGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentRegulatorGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentRegulatorGain);\n\t}\n\n\t/**\n\t * The maximum value that `currentRegulatorGain` can be set to.\n\t * @returns The current regulator gain value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentRegulatorGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentRegulatorGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentRegulatorGain);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `VelocityUpdate` / `BrakingStrengthChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * \n\t * *   Note: `BrakingStrengthChange` events will only fire if a change in braking has occurred.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `VelocityUpdate` / `BrakingStrengthChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * \n\t * *   Note: `BrakingStrengthChange` events will only fire if a change in braking has occurred.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For DC Motor channels, this will disengage the motor. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the controller will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @returns The fan mode\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFanMode(): Enum.FanMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.fanMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.fanMode);\n\t}\n\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the controller will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @throws {@link PhidgetError}\n\t * @param fanMode - The fan mode\n\t */\n\tasync setFanMode(fanMode: Enum.FanMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedFanMode(this._ch!, fanMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified FanMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: fanMode });\n\t\tawait bp.send(this._ch, BP.SETFANMODE);\n\t}\n\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * This setting allows you to choose how hard the motor will resist being turned when it is not being driven forward or reverse (`velocity` = 0). The `targetBrakingStrength` sets the relative amount of electrical braking to be applied to the DC motor, with `minBrakingStrength` corresponding to no braking (free-wheeling), and `maxBrakingStrength` indicating full braking.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free-wheeling. This means:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor (`velocity` = 0), due to its momentum.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   As `targetBrakingStrength` increases, this will engage electrical braking of the DC motor. This means:\n\t *     *   The motor will stop more quickly if it is in motion when braking is requested.\n\t *     *   The motor shaft will resist rotation by outside forces.\n\t * *   Braking will be added gradually, according to the `acceleration` setting, once the motor controller's `velocity` reaches 0.0\n\t * *   Braking will be immediately stopped when a new (non-zero) `targetVelocity` is set, and the motor will accelerate to the requested velocity.\n\t * *   Braking mode is enabled by setting the `velocity` to 0.0\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTargetBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.targetBrakingStrength);\n\t}\n\n\t/**\n\t * This setting allows you to choose how hard the motor will resist being turned when it is not being driven forward or reverse (`velocity` = 0). The `targetBrakingStrength` sets the relative amount of electrical braking to be applied to the DC motor, with `minBrakingStrength` corresponding to no braking (free-wheeling), and `maxBrakingStrength` indicating full braking.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free-wheeling. This means:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor (`velocity` = 0), due to its momentum.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   As `targetBrakingStrength` increases, this will engage electrical braking of the DC motor. This means:\n\t *     *   The motor will stop more quickly if it is in motion when braking is requested.\n\t *     *   The motor shaft will resist rotation by outside forces.\n\t * *   Braking will be added gradually, according to the `acceleration` setting, once the motor controller's `velocity` reaches 0.0\n\t * *   Braking will be immediately stopped when a new (non-zero) `targetVelocity` is set, and the motor will accelerate to the requested velocity.\n\t * *   Braking mode is enabled by setting the `velocity` to 0.0\n\t * @throws {@link PhidgetError}\n\t * @param targetBrakingStrength - The braking strength value\n\t */\n\tasync setTargetBrakingStrength(targetBrakingStrength: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: targetBrakingStrength });\n\t\tawait bp.send(this._ch, BP.SETBRAKINGDUTYCYCLE);\n\t}\n\n\t/**\n\t * The average voltage across the motor is based on the `targetVelocity` value.\n\t * \n\t * *   At a constant load, increasing the target velocity will increase the speed of the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * *   Setting `targetVelocity` to `minVelocity` will stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   The units of `targetVelocity` and `acceleration` refer to 'duty cycle'. This is because the controller controls velocity by rapidly switching the power on/off (i.e. changing the duty cycle) in order to manipulate the voltage across the motor.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTargetVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.targetVelocity);\n\t}\n\n\t/**\n\t * The average voltage across the motor is based on the `targetVelocity` value.\n\t * \n\t * *   At a constant load, increasing the target velocity will increase the speed of the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * *   Setting `targetVelocity` to `minVelocity` will stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   The units of `targetVelocity` and `acceleration` refer to 'duty cycle'. This is because the controller controls velocity by rapidly switching the power on/off (i.e. changing the duty cycle) in order to manipulate the voltage across the motor.\n\t * @throws {@link PhidgetError}\n\t * @param targetVelocity - The velocity value\n\t */\n\tasync setTargetVelocity(targetVelocity: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: targetVelocity });\n\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t}\n\n\t/**\n\t * The most recent velocity value that the controller has reported.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.velocity);\n\t}\n\n\t/**\n\t * The minimum value that `targetVelocity` can be set to.\n\t * \n\t * *   Set the `targetVelocity` to `minVelocity` to stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVelocity);\n\t}\n\n\t/**\n\t * The maximum value that `targetVelocity` can be set to.\n\t * \n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVelocity);\n\t}\n\n}\nexport { DCMotorBase };\n","import { DCMotorBase } from './DCMotor.gen';\r\n\r\n/** @public */\r\nclass DCMotor extends DCMotorBase { }\r\nexport { DCMotor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface CurrentInputData {\n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxCurrent: number,\n\tmaxCurrentChangeTrigger: number,\n\tminCurrent: number,\n\tminCurrentChangeTrigger: number,\n\tcurrent: number,\n\tcurrentChangeTrigger: number,\n\tpowerSupply: Enum.PowerSupply | PUNK.ENUM,\n}\n\nabstract class CurrentInputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: CurrentInputData;\n\t/**\n\t * **CurrentChange** event\n\t *  * `current` - The current value\n\t * ---\n\t * The most recent current value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `currentChangeTrigger` has been set to a non-zero value, the `CurrentChange` event will not occur until the current value has changed by at least the `currentChangeTrigger` value.\n\t */\n\tonCurrentChange: ((current: number) => void) | null = null;\n\t/** @internal */\n\t_gotCurrentChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Current Input class is used to measure current flowing through the Phidget from outside sources.\n\t * \n\t * This class may be used on a simple current sensor, or sometimes on a more complex Phidget that measures the amount of current flowing through an attached device, such as a motor controller, for diagnostic or control purposes.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.CURRENT_INPUT;\n\t\tthis.name = \"CurrentInput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.currentChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETPOWERSUPPLY:\n\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\n\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\tbreak;\n\t\tcase BP.CURRENTCHANGE: {\n\t\t\tthis.data.current = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onCurrentChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onCurrentChange(this.data.current);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): CurrentInputData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxCurrent: PUNK.DBL,\n\t\t\tmaxCurrentChangeTrigger: PUNK.DBL,\n\t\t\tminCurrent: PUNK.DBL,\n\t\t\tminCurrentChangeTrigger: PUNK.DBL,\n\t\t\tcurrent: PUNK.DBL,\n\t\t\tcurrentChangeTrigger: PUNK.DBL,\n\t\t\tpowerSupply: PUNK.ENUM,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxCurrent = 0.02;\n\t\t\tthis.data.maxCurrentChangeTrigger = 0.016;\n\t\t\tthis.data.minCurrent = 0.0005;\n\t\t\tthis.data.minCurrentChangeTrigger = 0;\n\t\t\tthis.data.currentChangeTrigger = 0;\n\t\t\tthis.data.powerSupply = Enum.PowerSupply.VOLTS_12;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.maxCurrent = 30;\n\t\t\tthis.data.maxCurrentChangeTrigger = 60;\n\t\t\tthis.data.minCurrent = -30;\n\t\t\tthis.data.minCurrentChangeTrigger = 0;\n\t\t\tthis.data.currentChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxCurrent = 25;\n\t\t\tthis.data.maxCurrentChangeTrigger = 25;\n\t\t\tthis.data.minCurrent = -25;\n\t\t\tthis.data.minCurrentChangeTrigger = 0;\n\t\t\tthis.data.currentChangeTrigger = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DAQ1400_CURRENTINPUT_120:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.currentChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.powerSupply });\n\t\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._VCP1100_CURRENTINPUT_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.currentChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_100:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_200:\n\t\tcase DeviceChannelUID._DCC1000_CURRENTINPUT_210:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.current == PUNK.DBL)\n\t\t\t&& ! this._gotCurrentChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.current != PUNK.DBL)\n\t\t\tif (this.onCurrentChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onCurrentChange(this.data.current);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The most recent current value that the channel has reported.\n\t * \n\t * *   This value will always be between `minCurrent` and `maxCurrent`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget current() { return this.getCurrent(); }\n\t/**\n\t * The minimum value the `CurrentChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrent() { return this.getMinCurrent(); }\n\t/**\n\t * The maximum value the `CurrentChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrent() { return this.getMaxCurrent(); }\n\t/**\n\t * The channel will not issue a `CurrentChange` event until the current value has changed by the amount specified by the `currentChangeTrigger`.\n\t * \n\t * *   Setting the `currentChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentChangeTrigger() { return this.getCurrentChangeTrigger(); }\n\t/**\n\t * The minimum value that `currentChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentChangeTrigger() { return this.getMinCurrentChangeTrigger(); }\n\t/**\n\t * The maximum value that `currentChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentChangeTrigger() { return this.getMaxCurrentChangeTrigger(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `CurrentChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `CurrentChange` events can also be affected by the `currentChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t */\n\tget powerSupply() { return this.getPowerSupply(); }\n\n\t/**\n\t * The most recent current value that the channel has reported.\n\t * \n\t * *   This value will always be between `minCurrent` and `maxCurrent`.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrent(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.current === PUNK.DBL || Number.isNaN(this.data.current))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.current > this.data.maxCurrent)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.current < this.data.minCurrent)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.current);\n\t}\n\n\t/**\n\t * The minimum value the `CurrentChange` event will report.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrent(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrent === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrent);\n\t}\n\n\t/**\n\t * The maximum value the `CurrentChange` event will report.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrent(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrent === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrent);\n\t}\n\n\t/**\n\t * The channel will not issue a `CurrentChange` event until the current value has changed by the amount specified by the `currentChangeTrigger`.\n\t * \n\t * *   Setting the `currentChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `CurrentChange` event until the current value has changed by the amount specified by the `currentChangeTrigger`.\n\t * \n\t * *   Setting the `currentChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param currentChangeTrigger - The change trigger value\n\t */\n\tasync setCurrentChangeTrigger(currentChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentChangeTrigger < this.data.minCurrentChangeTrigger || currentChangeTrigger > this.data.maxCurrentChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentChangeTrigger + \" - \" + this.data.maxCurrentChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `currentChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `currentChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentChangeTrigger);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `CurrentChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `CurrentChange` events can also be affected by the `currentChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `CurrentChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `CurrentChange` events can also be affected by the `currentChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @returns The power supply value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPowerSupply(): Enum.PowerSupply {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.powerSupply === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.powerSupply);\n\t}\n\n\t/**\n\t * Choose the power supply voltage.\n\t * \n\t * *   Set this to the voltage specified in the attached sensor's data sheet to power it.\n\t * \n\t * *   Set to `phidget22.PowerSupply.OFF` to turn off the supply to save power.\n\t * @throws {@link PhidgetError}\n\t * @param powerSupply - The power supply value\n\t */\n\tasync setPowerSupply(powerSupply: Enum.PowerSupply): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedPowerSupply(this._ch!, powerSupply))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified PowerSupply is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: powerSupply });\n\t\tawait bp.send(this._ch, BP.SETPOWERSUPPLY);\n\t}\n\n}\nexport { CurrentInputBase };\n","import { CurrentInputBase } from './CurrentInput.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { ErrorEventCode } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport * as Enum from '../Enumerations.gen';\n\n/** @public */\nclass CurrentInput extends CurrentInputBase {\n\n\t/** @internal */\n\t_errorHandler(code: ErrorEventCode) {\n\t\tswitch (code) {\n\t\t\tcase ErrorEventCode.SATURATION:\n\t\t\t\tthis.data.current = PUNK.DBL;\n\t\t\t\tthis._gotCurrentChangeErrorEvent = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.POWERSUPPLYCHANGE:\n\t\t\t\tthis.data.powerSupply = bp.entries[0].v as Enum.PowerSupply;\n\t\t\t\tthis._FIREPropertyChange('PowerSupply', bp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport { CurrentInput };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface StepperData {\n\tpositionOffset: number, \n\tdataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tholdingCurrentLimit: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tmaxPosition: number,\n\tmaxVelocityLimit: number,\n\tmaxAcceleration: number,\n\tmaxCurrentLimit: number,\n\tminPosition: number,\n\tminVelocityLimit: number,\n\tminAcceleration: number,\n\tminCurrentLimit: number,\n\tcontrolMode: Enum.StepperControlMode | PUNK.ENUM,\n\tposition: number,\n\ttargetPosition: number,\n\tvelocityLimit: number,\n\tvelocity: number,\n\tacceleration: number,\n\tcurrentLimit: number,\n\tisMoving: number,\n\tengaged: number,\n\trescaleFactor: number,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n}\n\nabstract class StepperBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: StepperData;\n\t/**\n\t * **PositionChange** event\n\t *  * `position` - The current stepper position\n\t * ---\n\t * Occurs when the controller updates the stepper motor position.\n\t * \n\t * *   This event will still fire even if the motor is blocked from physically moving or misses steps.\n\t */\n\tonPositionChange: ((position: number) => void) | null = null;\n\t/** @internal */\n\t_gotPositionChangeErrorEvent?: boolean;\n\t/**\n\t * **VelocityChange** event\n\t *  * `velocity` - Velocity of the stepper. Sign indicates direction.\n\t * ---\n\t * Occurs when the stepper motor velocity changes.\n\t */\n\tonVelocityChange: ((velocity: number) => void) | null = null;\n\t/** @internal */\n\t_gotVelocityChangeErrorEvent?: boolean;\n\t/**\n\t * **Stopped** event\n\t * ---\n\t * Occurs when the motor controller stops.\n\t * \n\t * *   The motor may still be physically moving if the inertia is great enough to make it misstep.\n\t */\n\tonStopped: (() => void) | null = null;\n\t/** @internal */\n\t_gotStoppedErrorEvent?: boolean;\n\n\t/**\n\t * The Stepper class powers and controls the stepper motor connected to the Phidget controller, allowing you to change the position, velocity, acceleration, and current limit.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.STEPPER;\n\t\tthis.name = \"Stepper\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETACCELERATION:\n\t\t\tthis.data.acceleration = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Acceleration', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCONTROLMODE:\n\t\t\tthis.data.controlMode = bp.entries[0].v as Enum.StepperControlMode;\n\t\t\tthis._FIREPropertyChange('ControlMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURRENTLIMIT:\n\t\t\tthis.data.currentLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETENGAGED:\n\t\t\tthis.data.engaged = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Engaged', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.SETHOLDINGCURRENTLIMIT:\n\t\t\tthis.data.holdingCurrentLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('HoldingCurrentLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETTARGETPOSITION:\n\t\t\tthis.data.targetPosition = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetPosition', bp);\n\t\t\tbreak;\n\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\tthis.data.velocityLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('VelocityLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.STOPPED: {\n\t\t\tif (this._isAttachedDone && this.onStopped) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onStopped();\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): StepperData {\n\t\treturn {\n\t\t\tpositionOffset: 0, \n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tholdingCurrentLimit: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tmaxPosition: PUNK.INT64,\n\t\t\tmaxVelocityLimit: PUNK.DBL,\n\t\t\tmaxAcceleration: PUNK.DBL,\n\t\t\tmaxCurrentLimit: PUNK.DBL,\n\t\t\tminPosition: PUNK.INT64,\n\t\t\tminVelocityLimit: PUNK.DBL,\n\t\t\tminAcceleration: PUNK.DBL,\n\t\t\tminCurrentLimit: PUNK.DBL,\n\t\t\tcontrolMode: PUNK.ENUM,\n\t\t\tposition: PUNK.INT64,\n\t\t\ttargetPosition: PUNK.INT64,\n\t\t\tvelocityLimit: PUNK.DBL,\n\t\t\tvelocity: PUNK.DBL,\n\t\t\tacceleration: PUNK.DBL,\n\t\t\tcurrentLimit: PUNK.DBL,\n\t\t\tisMoving: PUNK.BOOL,\n\t\t\tengaged: PUNK.BOOL,\n\t\t\trescaleFactor: PUNK.DBL,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.maxVelocityLimit = 115000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.maxCurrentLimit = 4;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.controlMode = Enum.StepperControlMode.STEP;\n\t\t\tthis.data.velocityLimit = 10000;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.maxVelocityLimit = 115000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.maxCurrentLimit = 4;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.controlMode = Enum.StepperControlMode.STEP;\n\t\t\tthis.data.velocityLimit = 10000;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.maxVelocityLimit = 115000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.maxCurrentLimit = 2.5;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.controlMode = Enum.StepperControlMode.STEP;\n\t\t\tthis.data.velocityLimit = 10000;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.maxVelocityLimit = 115000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.maxCurrentLimit = 2.5;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.controlMode = Enum.StepperControlMode.STEP;\n\t\t\tthis.data.velocityLimit = 10000;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.maxVelocityLimit = 115000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.maxCurrentLimit = 8;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.controlMode = Enum.StepperControlMode.STEP;\n\t\t\tthis.data.velocityLimit = 10000;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.maxVelocityLimit = 115000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.maxCurrentLimit = 8;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.minAcceleration = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.controlMode = Enum.StepperControlMode.STEP;\n\t\t\tthis.data.velocityLimit = 10000;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._STC1000_STEPPER_100:\n\t\tcase DeviceChannelUID._STC1000_STEPPER_110:\n\t\tcase DeviceChannelUID._STC1001_STEPPER_100:\n\t\tcase DeviceChannelUID._STC1001_STEPPER_110:\n\t\tcase DeviceChannelUID._STC1002_STEPPER_100:\n\t\tcase DeviceChannelUID._STC1002_STEPPER_110:\n\t\tcase DeviceChannelUID._STC1003_STEPPER_100:\n\t\tcase DeviceChannelUID._STC1003_STEPPER_110:\n\t\tcase DeviceChannelUID._STC1003_STEPPER_200:\n\t\tcase DeviceChannelUID._STC1005_STEPPER_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.controlMode });\n\t\t\tawait bp.send(this._ch, BP.SETCONTROLMODE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.velocityLimit });\n\t\t\tawait bp.send(this._ch, BP.SETVELOCITYLIMIT);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.acceleration });\n\t\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.currentLimit });\n\t\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * *   Changing the acceleration value while the stepper is in motion (especially at speeds higher than 1000 1/16th steps/s) can cause unpredictable results due to the inability of the processor tocalculate a new acceleration curve quickly enough. Generally you should wait until the motor is stationary until calling this function.\n\t * @throws {@link PhidgetError}\n\t */\n\tget acceleration() { return this.getAcceleration(); }\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * Use `phidget22.StepperControlMode.STEP` mode when you want to set a `targetPosition` for the Stepper motor. Use `phidget22.StepperControlMode.RUN` mode when you simply want the Stepper motor to rotate continuously in a specific direction.  \n\t *   \n\t * Changing the control mode while the motor is running will not have an effect on the motor's movements until a new `targetPosition` or `velocityLimit` is set.  \n\t *   \n\t * In `phidget22.StepperControlMode.RUN` mode, setting a `velocityLimit` will also set the target position of the controller to `minPosition` or `maxPosition`, corresponding to the direction of movement.\n\t * @throws {@link PhidgetError}\n\t */\n\tget controlMode() { return this.getControlMode(); }\n\t/**\n\t * The current through the motor will be limited by the `currentLimit`.\n\t * \n\t * *   See your Stepper motor's data sheet for more information about what value the `currentLimit` should be.\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentLimit() { return this.getCurrentLimit(); }\n\t/**\n\t * The minimum value that `currentLimit` and `holdingCurrentLimit` can be set to.\n\t * \n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentLimit() { return this.getMinCurrentLimit(); }\n\t/**\n\t * The maximum value that `currentLimit` and `holdingCurrentLimit` can be set to.\n\t * \n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentLimit() { return this.getMaxCurrentLimit(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `VelocityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * When this property is true, the controller will supply power to the motor coils.\n\t * \n\t * *   The controller must be `engaged` in order to move the Stepper motor, or have it hold position.\n\t * @throws {@link PhidgetError}\n\t */\n\tget engaged() { return this.getEngaged(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The `holdingCurrentLimit` will activate when the `targetPosition` has been reached. It will limit current through the motor.\n\t * \n\t * *   When the motor is not stopped, the current through the motor is limited by the `currentLimit`.\n\t * *   If no `holdingCurrentLimit` is specified, the `currentLimit` value will persist when the motor is stopped.\n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @throws {@link PhidgetError}\n\t */\n\tget holdingCurrentLimit() { return this.getHoldingCurrentLimit(); }\n\t/**\n\t * `isMoving` returns true while the controller is sending commands to the motor. Note: there is no feedback to the controller, so it does not know whether the motor shaft is actually moving or not.\n\t * @throws {@link PhidgetError}\n\t */\n\tget isMoving() { return this.getIsMoving(); }\n\t/**\n\t * The most recent position value that the controller has reported.\n\t * \n\t * *   This value will always be between `minPosition` and `maxPosition`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget position() { return this.getPosition(); }\n\t/**\n\t * The minimum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPosition() { return this.getMinPosition(); }\n\t/**\n\t * The maximum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPosition() { return this.getMaxPosition(); }\n\t/**\n\t * Applies a factor to the \\[user units\\] per step to all movement parameters to make the units in your application is more intuitive.\n\t * \n\t * *   For example, starting from position 0 and setting a new position with a rescale factor, the stepper will move `position` / `rescaleFactor` steps.\n\t * *   In this way, units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t *   \n\t * \n\t * RescaleFactor = (1/16) \\* (MotorStepAngle/Degrees Per UserUnit)\n\t * @throws {@link PhidgetError}\n\t */\n\tget rescaleFactor() { return this.getRescaleFactor(); }\n\tset rescaleFactor(rescaleFactor: number) { this.setRescaleFactor(rescaleFactor); }\n\t/**\n\t * If the controller is configured and the `targetPosition` is set, the Stepper motor will move towards the `targetPosition` at the specified `acceleration` and `velocity`.\n\t * \n\t * *   `targetPosition` is only used when the `controlMode` is set to step mode.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetPosition() { return this.getTargetPosition(); }\n\t/**\n\t * The most recent velocity value that the controller has reported.\n\t * \n\t * *   This value is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocity() { return this.getVelocity(); }\n\t/**\n\t * When moving, the Stepper motor velocity will be limited by this value.\n\t * \n\t * *   The `velocityLimit` is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   When in step mode, the `minVelocityLimit` has a value of 0. This is because the sign (±) of the `targetPosition` will indicate the direction.\n\t * *   When in run mode, the `minVelocityLimit` has a value of -`maxVelocityLimit`. This is because there is no target position, so the direction is defined by the sign (±) of the `velocityLimit`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * *   While `velocityLimit` is listed as a double, it is rounded down to an integer number of 1/16th steps when sent to the board since the board is limited by a minimum unit of 1/16th steps/s. This is especially important to consider when using different `rescaleFactor` values where converting to units of, for example, RPM results in 1.5RPM (80 1/16th steps/s) and 1.509375 RPM (80.5 1/16th steps/s) both being sent to the board as 80 1/16th steps/s.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocityLimit() { return this.getVelocityLimit(); }\n\t/**\n\t * The minimum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVelocityLimit() { return this.getMinVelocityLimit(); }\n\t/**\n\t * The maximum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVelocityLimit() { return this.getMaxVelocityLimit(); }\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * *   Changing the acceleration value while the stepper is in motion (especially at speeds higher than 1000 1/16th steps/s) can cause unpredictable results due to the inability of the processor tocalculate a new acceleration curve quickly enough. Generally you should wait until the motor is stationary until calling this function.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getAcceleration(): number;\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * *   Changing the acceleration value while the stepper is in motion (especially at speeds higher than 1000 1/16th steps/s) can cause unpredictable results due to the inability of the processor tocalculate a new acceleration curve quickly enough. Generally you should wait until the motor is stationary until calling this function.\n\t * @throws {@link PhidgetError}\n\t * @param acceleration - The acceleration value\n\t */\n\tabstract setAcceleration(acceleration: number): Promise<void>;\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinAcceleration(): number;\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxAcceleration(): number;\n\t/**\n\t * Use `phidget22.StepperControlMode.STEP` mode when you want to set a `targetPosition` for the Stepper motor. Use `phidget22.StepperControlMode.RUN` mode when you simply want the Stepper motor to rotate continuously in a specific direction.  \n\t *   \n\t * Changing the control mode while the motor is running will not have an effect on the motor's movements until a new `targetPosition` or `velocityLimit` is set.  \n\t *   \n\t * In `phidget22.StepperControlMode.RUN` mode, setting a `velocityLimit` will also set the target position of the controller to `minPosition` or `maxPosition`, corresponding to the direction of movement.\n\t * @returns The control mode value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetControlMode(): Enum.StepperControlMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.controlMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.controlMode);\n\t}\n\n\t/**\n\t * Use `phidget22.StepperControlMode.STEP` mode when you want to set a `targetPosition` for the Stepper motor. Use `phidget22.StepperControlMode.RUN` mode when you simply want the Stepper motor to rotate continuously in a specific direction.  \n\t *   \n\t * Changing the control mode while the motor is running will not have an effect on the motor's movements until a new `targetPosition` or `velocityLimit` is set.  \n\t *   \n\t * In `phidget22.StepperControlMode.RUN` mode, setting a `velocityLimit` will also set the target position of the controller to `minPosition` or `maxPosition`, corresponding to the direction of movement.\n\t * @throws {@link PhidgetError}\n\t * @param controlMode - The control mode value\n\t */\n\tasync setControlMode(controlMode: Enum.StepperControlMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedStepperControlMode(this._ch!, controlMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified StepperControlMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: controlMode });\n\t\tawait bp.send(this._ch, BP.SETCONTROLMODE);\n\t}\n\n\t/**\n\t * The current through the motor will be limited by the `currentLimit`.\n\t * \n\t * *   See your Stepper motor's data sheet for more information about what value the `currentLimit` should be.\n\t * @returns The current limit value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentLimit);\n\t}\n\n\t/**\n\t * The current through the motor will be limited by the `currentLimit`.\n\t * \n\t * *   See your Stepper motor's data sheet for more information about what value the `currentLimit` should be.\n\t * @throws {@link PhidgetError}\n\t * @param currentLimit - The current limit value\n\t */\n\tasync setCurrentLimit(currentLimit: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentLimit < this.data.minCurrentLimit || currentLimit > this.data.maxCurrentLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentLimit + \" - \" + this.data.maxCurrentLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentLimit });\n\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t}\n\n\t/**\n\t * The minimum value that `currentLimit` and `holdingCurrentLimit` can be set to.\n\t * \n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @returns The current limit\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentLimit);\n\t}\n\n\t/**\n\t * The maximum value that `currentLimit` and `holdingCurrentLimit` can be set to.\n\t * \n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @returns The current limit\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentLimit);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `VelocityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `VelocityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * When this property is true, the controller will supply power to the motor coils.\n\t * \n\t * *   The controller must be `engaged` in order to move the Stepper motor, or have it hold position.\n\t * @returns The engaged state\n\t * @throws {@link PhidgetError}\n\t */\n\tgetEngaged(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.engaged === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.engaged);\n\t}\n\n\t/**\n\t * When this property is true, the controller will supply power to the motor coils.\n\t * \n\t * *   The controller must be `engaged` in order to move the Stepper motor, or have it hold position.\n\t * @throws {@link PhidgetError}\n\t * @param engaged - The engaged state\n\t */\n\tasync setEngaged(engaged: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (engaged !== false && engaged !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (engaged ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENGAGED);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For Stepper Motor channels, this will disengage the motor. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * The `holdingCurrentLimit` will activate when the `targetPosition` has been reached. It will limit current through the motor.\n\t * \n\t * *   When the motor is not stopped, the current through the motor is limited by the `currentLimit`.\n\t * *   If no `holdingCurrentLimit` is specified, the `currentLimit` value will persist when the motor is stopped.\n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHoldingCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.holdingCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.holdingCurrentLimit);\n\t}\n\n\t/**\n\t * The `holdingCurrentLimit` will activate when the `targetPosition` has been reached. It will limit current through the motor.\n\t * \n\t * *   When the motor is not stopped, the current through the motor is limited by the `currentLimit`.\n\t * *   If no `holdingCurrentLimit` is specified, the `currentLimit` value will persist when the motor is stopped.\n\t * *   Reference your controller's User Guide for more information about how the `holdingCurrentLimit` and `currentLimit` can be used in your application.\n\t * @throws {@link PhidgetError}\n\t * @param holdingCurrentLimit - The current value\n\t */\n\tasync setHoldingCurrentLimit(holdingCurrentLimit: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: holdingCurrentLimit });\n\t\tawait bp.send(this._ch, BP.SETHOLDINGCURRENTLIMIT);\n\t}\n\n\t/**\n\t * `isMoving` returns true while the controller is sending commands to the motor. Note: there is no feedback to the controller, so it does not know whether the motor shaft is actually moving or not.\n\t * @returns The moving state\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIsMoving(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.isMoving === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.isMoving);\n\t}\n\n\t/**\n\t * The most recent position value that the controller has reported.\n\t * \n\t * *   This value will always be between `minPosition` and `maxPosition`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getPosition(): number;\n\t/**\n\t * The minimum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinPosition(): number;\n\t/**\n\t * The maximum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxPosition(): number;\n\t/**\n\t * Adds an offset (positive or negative) to the current position and target position.\n\t * \n\t * *   This is especially useful for zeroing position.\n\t * @throws {@link PhidgetError}\n\t * @param positionOffset - Amount to offset the position by\n\t */\n\tabstract addPositionOffset(positionOffset: number): void;\n\t/**\n\t * Applies a factor to the \\[user units\\] per step to all movement parameters to make the units in your application is more intuitive.\n\t * \n\t * *   For example, starting from position 0 and setting a new position with a rescale factor, the stepper will move `position` / `rescaleFactor` steps.\n\t * *   In this way, units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t *   \n\t * \n\t * RescaleFactor = (1/16) \\* (MotorStepAngle/Degrees Per UserUnit)\n\t * @returns The rescale factor value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetRescaleFactor(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.rescaleFactor === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.rescaleFactor);\n\t}\n\n\t/**\n\t * Applies a factor to the \\[user units\\] per step to all movement parameters to make the units in your application is more intuitive.\n\t * \n\t * *   For example, starting from position 0 and setting a new position with a rescale factor, the stepper will move `position` / `rescaleFactor` steps.\n\t * *   In this way, units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t *   \n\t * \n\t * RescaleFactor = (1/16) \\* (MotorStepAngle/Degrees Per UserUnit)\n\t * @throws {@link PhidgetError}\n\t * @param rescaleFactor - The rescale factor value\n\t */\n\tabstract setRescaleFactor(rescaleFactor: number): void;\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * If the controller is configured and the `targetPosition` is set, the Stepper motor will move towards the `targetPosition` at the specified `acceleration` and `velocity`.\n\t * \n\t * *   `targetPosition` is only used when the `controlMode` is set to step mode.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getTargetPosition(): number;\n\t/**\n\t * If the controller is configured and the `targetPosition` is set, the Stepper motor will move towards the `targetPosition` at the specified `acceleration` and `velocity`.\n\t * \n\t * *   `targetPosition` is only used when the `controlMode` is set to step mode.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @throws {@link PhidgetError}\n\t * @param targetPosition - The position value\n\t */\n\tabstract setTargetPosition(targetPosition: number): Promise<void>;\n\t/**\n\t * The most recent velocity value that the controller has reported.\n\t * \n\t * *   This value is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVelocity(): number;\n\t/**\n\t * When moving, the Stepper motor velocity will be limited by this value.\n\t * \n\t * *   The `velocityLimit` is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   When in step mode, the `minVelocityLimit` has a value of 0. This is because the sign (±) of the `targetPosition` will indicate the direction.\n\t * *   When in run mode, the `minVelocityLimit` has a value of -`maxVelocityLimit`. This is because there is no target position, so the direction is defined by the sign (±) of the `velocityLimit`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * *   While `velocityLimit` is listed as a double, it is rounded down to an integer number of 1/16th steps when sent to the board since the board is limited by a minimum unit of 1/16th steps/s. This is especially important to consider when using different `rescaleFactor` values where converting to units of, for example, RPM results in 1.5RPM (80 1/16th steps/s) and 1.509375 RPM (80.5 1/16th steps/s) both being sent to the board as 80 1/16th steps/s.\n\t * @returns Velocity limit\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVelocityLimit(): number;\n\t/**\n\t * When moving, the Stepper motor velocity will be limited by this value.\n\t * \n\t * *   The `velocityLimit` is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   When in step mode, the `minVelocityLimit` has a value of 0. This is because the sign (±) of the `targetPosition` will indicate the direction.\n\t * *   When in run mode, the `minVelocityLimit` has a value of -`maxVelocityLimit`. This is because there is no target position, so the direction is defined by the sign (±) of the `velocityLimit`.\n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * *   While `velocityLimit` is listed as a double, it is rounded down to an integer number of 1/16th steps when sent to the board since the board is limited by a minimum unit of 1/16th steps/s. This is especially important to consider when using different `rescaleFactor` values where converting to units of, for example, RPM results in 1.5RPM (80 1/16th steps/s) and 1.509375 RPM (80.5 1/16th steps/s) both being sent to the board as 80 1/16th steps/s.\n\t * @throws {@link PhidgetError}\n\t * @param velocityLimit - Velocity limit\n\t */\n\tabstract setVelocityLimit(velocityLimit: number): Promise<void>;\n\t/**\n\t * The minimum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The velocity limit value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinVelocityLimit(): number;\n\t/**\n\t * The maximum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocity`, and `acceleration` can be set by the user through the `rescaleFactor`.The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * *   The default units for this motor controller are **1/16steps per count**.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxVelocityLimit(): number;\n}\nexport { StepperBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { StepperBase } from './Stepper.gen';\nimport { ErrorCode, StepperControlMode } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { logEventException } from '../Logging';\n\n/** @public */\nclass Stepper extends StepperBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.POSITIONCHANGE:\n\t\t\t\tthis.data.position = bp.getNumber(0);\n\t\t\t\tif (this._isAttachedDone && this.onPositionChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onPositionChange((this.data.position + this.data.positionOffset) * this.data.rescaleFactor)\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase BP.VELOCITYCHANGE:\n\t\t\t\tthis.data.velocity = bp.getNumber(0);\n\t\t\t\tif (this._isAttachedDone && this.onVelocityChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onVelocityChange(this.data.velocity * this.data.rescaleFactor);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETCONTROLMODE:\n\t\t\t\tswitch (bp.getNumber(0)) {\n\t\t\t\t\tcase StepperControlMode.STEP:\n\t\t\t\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase StepperControlMode.RUN:\n\t\t\t\t\t\tthis.data.minVelocityLimit = -this.data.maxVelocityLimit;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.STOPPED:\n\t\t\t\tthis.data.isMoving = 0;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETENGAGED:\n\t\t\t\tif (bp.getBoolean(0) == true && this.data.velocityLimit !== 0 && this.data.position !== this.data.targetPosition)\n\t\t\t\t\tthis.data.isMoving = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETVELOCITYLIMIT:\n\t\t\t\tif (this.data.engaged && bp.getNumber(0) !== 0 && this.data.position !== this.data.targetPosition)\n\t\t\t\t\tthis.data.isMoving = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tcase BP.SETTARGETPOSITION:\n\t\t\t\tif (this.data.engaged && this.data.velocityLimit !== 0 && this.data.position !== bp.getNumber(0))\n\t\t\t\t\tthis.data.isMoving = 1;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tsuper._initAfterOpen();\n\n\t\t// Make sure these are always readable from the user\n\t\t//  We have sent the reset packet, so we know these are all 0, even if we haven't heard from firmware\n\t\t//  Some devices NEVER send back status if these aren't changed from 0, which violates POLA in the user API\n\t\tif (this.data.position == PUNK.INT64)\n\t\t\tthis.data.position = 0;\n\t\tif (this.data.velocity == PUNK.DBL)\n\t\t\tthis.data.velocity = 0;\n\t\tif (this.data.isMoving == PUNK.BOOL)\n\t\t\tthis.data.isMoving = 0;\n\t}\n\n\tgetAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.acceleration === PUNK.DBL)\n\t\t\tthrow (new PhidgetError(ErrorCode.UNKNOWN_VALUE));\n\n\t\treturn (this.data.acceleration * this.data.rescaleFactor);\n\t}\n\n\tasync setAcceleration(acceleration: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcAccel = acceleration / this.data.rescaleFactor;\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: calcAccel });\n\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t}\n\n\tgetMinAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAcceleration * this.data.rescaleFactor);\n\t}\n\n\tgetMaxAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAcceleration * this.data.rescaleFactor);\n\t}\n\n\tgetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.position === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.position + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tgetMinPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.minPosition + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tgetMaxPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.maxPosition + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tsetRescaleFactor(rescaleFactor: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.rescaleFactor = rescaleFactor;\n\t}\n\n\tgetTargetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.targetPosition + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tasync setTargetPosition(targetPosition: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcPosition = (targetPosition / this.data.rescaleFactor) - this.data.positionOffset;\n\n\t\tif (calcPosition < this.data.minPosition || calcPosition > this.data.maxPosition)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minPosition + \" - \" + this.maxPosition + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"l\", value: calcPosition });\n\t\tawait bp.send(this._ch, BP.SETTARGETPOSITION);\n\t}\n\n\tgetVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.velocity * this.data.rescaleFactor);\n\t}\n\n\tgetVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.velocityLimit * this.data.rescaleFactor);\n\t}\n\n\tasync setVelocityLimit(velocityLimit: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcLimit = velocityLimit / this.data.rescaleFactor;\n\n\t\tif (calcLimit < this.data.minVelocityLimit || calcLimit > this.data.maxVelocityLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minVelocityLimit + \" - \" + this.maxVelocityLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: calcLimit });\n\t\tawait bp.send(this._ch, BP.SETVELOCITYLIMIT);\n\t}\n\n\tgetMaxVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVelocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVelocityLimit * this.data.rescaleFactor);\n\t}\n\n\tgetMinVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVelocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVelocityLimit * this.data.rescaleFactor);\n\t}\n\n\taddPositionOffset(positionOffset: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.positionOffset += (positionOffset / this.data.rescaleFactor);\n\t}\n}\n\nexport { Stepper };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface LCDData {\n\tfontWidth: [number, number, number],\n\tfontHeight: [number, number, number],\n\tbacklight: number,\n\tminBacklight: number,\n\tmaxBacklight: number,\n\tcontrast: number,\n\tminContrast: number,\n\tmaxContrast: number,\n\tcursorBlink: number,\n\tcursorOn: number,\n\tframeBuffer: number,\n\theight: number,\n\twidth: number,\n\tscreenSize: Enum.LCDScreenSize | PUNK.ENUM,\n\tsleeping: number,\n\tautoFlush: number,\n}\n\nabstract class LCDBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: LCDData;\n\n\t/**\n\t * The LCD class allows you to control various liquid crystal displays. It offers control of displayed text as well as screen settings and custom character creation.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.LCD;\n\t\tthis.name = \"LCD\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETBACKLIGHT:\n\t\t\tthis.data.backlight = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Backlight', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHARACTERBITMAP:\n\t\t\tbreak;\n\t\tcase BP.CLEAR:\n\t\t\tbreak;\n\t\tcase BP.SETCONTRAST:\n\t\t\tthis.data.contrast = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Contrast', bp);\n\t\t\tbreak;\n\t\tcase BP.COPY:\n\t\t\tbreak;\n\t\tcase BP.SETCURSORBLINK:\n\t\t\tthis.data.cursorBlink = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CursorBlink', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURSORON:\n\t\t\tthis.data.cursorOn = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CursorOn', bp);\n\t\t\tbreak;\n\t\tcase BP.DRAWLINE:\n\t\t\tbreak;\n\t\tcase BP.DRAWPIXEL:\n\t\t\tbreak;\n\t\tcase BP.DRAWRECT:\n\t\t\tbreak;\n\t\tcase BP.FLUSH:\n\t\t\tbreak;\n\t\tcase BP.SETFRAMEBUFFER:\n\t\t\tthis.data.frameBuffer = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('FrameBuffer', bp);\n\t\t\tbreak;\n\t\tcase BP.INITIALIZE:\n\t\t\tbreak;\n\t\tcase BP.SAVEFRAMEBUFFER:\n\t\t\tbreak;\n\t\tcase BP.SETSCREENSIZE:\n\t\t\tthis.data.screenSize = bp.entries[0].v as Enum.LCDScreenSize;\n\t\t\tthis._FIREPropertyChange('ScreenSize', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSLEEP:\n\t\t\tthis.data.sleeping = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Sleeping', bp);\n\t\t\tbreak;\n\t\tcase BP.WRITEBITMAP:\n\t\t\tbreak;\n\t\tcase BP.WRITETEXT:\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): LCDData {\n\t\treturn {\n\t\t\tfontWidth: [PUNK.UINT8, PUNK.UINT8, PUNK.UINT8],\n\t\t\tfontHeight: [PUNK.UINT8, PUNK.UINT8, PUNK.UINT8],\n\t\t\tbacklight: PUNK.DBL,\n\t\t\tminBacklight: PUNK.DBL,\n\t\t\tmaxBacklight: PUNK.DBL,\n\t\t\tcontrast: PUNK.DBL,\n\t\t\tminContrast: PUNK.DBL,\n\t\t\tmaxContrast: PUNK.DBL,\n\t\t\tcursorBlink: PUNK.BOOL,\n\t\t\tcursorOn: PUNK.BOOL,\n\t\t\tframeBuffer: PUNK.INT32,\n\t\t\theight: PUNK.INT32,\n\t\t\twidth: PUNK.INT32,\n\t\t\tscreenSize: PUNK.ENUM,\n\t\t\tsleeping: PUNK.BOOL,\n\t\t\tautoFlush: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\tthis.data.backlight = 0;\n\t\t\tthis.data.minBacklight = 0;\n\t\t\tthis.data.maxBacklight = 1;\n\t\t\tthis.data.contrast = 0.25;\n\t\t\tthis.data.minContrast = 0;\n\t\t\tthis.data.maxContrast = 1;\n\t\t\tthis.data.frameBuffer = 0;\n\t\t\tthis.data.height = 64;\n\t\t\tthis.data.width = 128;\n\t\t\tthis.data.screenSize = Enum.LCDScreenSize.DIMENSIONS_64X128;\n\t\t\tthis.data.sleeping = 1;\n\t\t\tthis.data.autoFlush = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._LCD1100_LCD_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.contrast });\n\t\t\tawait bp.send(this._ch, BP.SETCONTRAST);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.frameBuffer });\n\t\t\tawait bp.send(this._ch, BP.SETFRAMEBUFFER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * Set to true to automatically flush the LCD screen after every message that writes to the LCD.\n\t * @throws {@link PhidgetError}\n\t */\n\tget autoFlush() { return this.getAutoFlush(); }\n\tset autoFlush(autoFlush: boolean) { this.setAutoFlush(autoFlush); }\n\t/**\n\t * The `backlight` affects the brightness of the LCD screen.\n\t * \n\t * *   `backlight` is bounded by `minBacklight` and `maxBacklight`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget backlight() { return this.getBacklight(); }\n\t/**\n\t * The minimum value that `backlight` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minBacklight() { return this.getMinBacklight(); }\n\t/**\n\t * The maximum value that `backlight` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxBacklight() { return this.getMaxBacklight(); }\n\t/**\n\t * Contrast level of the text or graphic pixels.\n\t * \n\t * *   A higher contrast will make the image darker.\n\t * *   `contrast` is bounded by `minContrast` and `maxContrast`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget contrast() { return this.getContrast(); }\n\t/**\n\t * The minimum value that `contrast` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minContrast() { return this.getMinContrast(); }\n\t/**\n\t * The maximum value that `contrast` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxContrast() { return this.getMaxContrast(); }\n\t/**\n\t * When `cursorBlink` is true, the device will cause the cursor to periodically blink.\n\t * @throws {@link PhidgetError}\n\t */\n\tget cursorBlink() { return this.getCursorBlink(); }\n\t/**\n\t * When `cursorOn` is true, the device will underline to the cursor position.\n\t * @throws {@link PhidgetError}\n\t */\n\tget cursorOn() { return this.getCursorOn(); }\n\t/**\n\t * The frame buffer that is currently being used.\n\t * \n\t * *   Commands sent to the device are performed on this buffer.\n\t * @throws {@link PhidgetError}\n\t */\n\tget frameBuffer() { return this.getFrameBuffer(); }\n\t/**\n\t * The height of the LCD screen attached to the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget height() { return this.getHeight(); }\n\t/**\n\t * The size of the LCD screen attached to the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget screenSize() { return this.getScreenSize(); }\n\t/**\n\t * The on/off state of `sleeping`. Putting the device to sleep turns off the display and backlight in order to save power.\n\t * \n\t * *   The device will still take commands while asleep, and will wake up if the screen is flushed, or if the contrast or backlight are changed.\n\t * *   When the device wakes up, it will return to its last known state, taking into account any changes that happened while asleep.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sleeping() { return this.getSleeping(); }\n\t/**\n\t * The width of the LCD screen attached to the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget width() { return this.getWidth(); }\n\n\t/**\n\t * Set to true to automatically flush the LCD screen after every message that writes to the LCD.\n\t * @returns Allows setting the LCD to flush the screen automatically\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAutoFlush(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.autoFlush === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.autoFlush);\n\t}\n\n\t/**\n\t * Set to true to automatically flush the LCD screen after every message that writes to the LCD.\n\t * @throws {@link PhidgetError}\n\t * @param autoFlush - Allows setting the LCD to flush the screen automatically\n\t */\n\tabstract setAutoFlush(autoFlush: boolean): void;\n\t/**\n\t * The `backlight` affects the brightness of the LCD screen.\n\t * \n\t * *   `backlight` is bounded by `minBacklight` and `maxBacklight`.\n\t * @returns The backlight value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBacklight(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.backlight === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.backlight);\n\t}\n\n\t/**\n\t * The `backlight` affects the brightness of the LCD screen.\n\t * \n\t * *   `backlight` is bounded by `minBacklight` and `maxBacklight`.\n\t * @throws {@link PhidgetError}\n\t * @param backlight - The backlight value\n\t */\n\tasync setBacklight(backlight: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (backlight < this.data.minBacklight || backlight > this.data.maxBacklight)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minBacklight + \" - \" + this.data.maxBacklight + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: backlight });\n\t\tawait bp.send(this._ch, BP.SETBACKLIGHT);\n\t}\n\n\t/**\n\t * The minimum value that `backlight` can be set to.\n\t * @returns The backlight value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinBacklight(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minBacklight === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minBacklight);\n\t}\n\n\t/**\n\t * The maximum value that `backlight` can be set to.\n\t * @returns The backlight value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxBacklight(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxBacklight === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxBacklight);\n\t}\n\n\t/**\n\t * Create a bitmap and select a character to represent it. Now, when you use the specific character, the bitmap will show in it's place.\n\t * @throws {@link PhidgetError}\n\t * @param font - The font the character belongs to\n\t * @param character - The character to be changed, in a null-terminated string.\n\t * @param bitmap - Bitmap array\n\t */\n\tabstract setCharacterBitmap(font: Enum.LCDFont, character: string, bitmap: readonly number[]): Promise<void>;\n\t/**\n\t * The maximum number of characters that can fit on the frame buffer for the specified font.\n\t * @returns The maximum number of characters for the font\n\t * @throws {@link PhidgetError}\n\t * @param font - The specified font\n\t */\n\tabstract getMaxCharacters(font: Enum.LCDFont): number;\n\t/**\n\t * Clears all pixels in the current frame buffer.\n\t * \n\t * *   Changes made to the frame buffer must be flushed to the LCD screen using `flush()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync clear(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.CLEAR);\n\t}\n\n\t/**\n\t * Contrast level of the text or graphic pixels.\n\t * \n\t * *   A higher contrast will make the image darker.\n\t * *   `contrast` is bounded by `minContrast` and `maxContrast`.\n\t * @returns The contrast value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetContrast(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.contrast === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.contrast);\n\t}\n\n\t/**\n\t * Contrast level of the text or graphic pixels.\n\t * \n\t * *   A higher contrast will make the image darker.\n\t * *   `contrast` is bounded by `minContrast` and `maxContrast`.\n\t * @throws {@link PhidgetError}\n\t * @param contrast - The contrast value\n\t */\n\tasync setContrast(contrast: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (contrast < this.data.minContrast || contrast > this.data.maxContrast)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minContrast + \" - \" + this.data.maxContrast + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: contrast });\n\t\tawait bp.send(this._ch, BP.SETCONTRAST);\n\t}\n\n\t/**\n\t * The minimum value that `contrast` can be set to.\n\t * @returns The contrast value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinContrast(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minContrast === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minContrast);\n\t}\n\n\t/**\n\t * The maximum value that `contrast` can be set to.\n\t * @returns The contrast value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxContrast(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxContrast === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxContrast);\n\t}\n\n\t/**\n\t * Copies all pixels from a specified rectangular region to another.\n\t * @throws {@link PhidgetError}\n\t * @param sourceFramebuffer - Index number of the frame buffer containing the source rectangle\n\t * @param destFramebuffer - Index number of the frame buffer containing the destination rectangle\n\t * @param sourceX1 - X coordinate of upper left corner of source rectangle\n\t * @param sourceY1 - Y coordinate of upper left corner of source rectangle\n\t * @param sourceX2 - X coordinate of bottom right corner of source rectangle\n\t * @param sourceY2 - Y coordinate of bottom right corner of source rectangle\n\t * @param destX - X coordinate of upper left corner of destination rectangle\n\t * @param destY - Y coordinate of upper left corner of destination rectangle\n\t * @param inverted - If true, copied pixels are inverted\n\t */\n\tasync copy(sourceFramebuffer: number, destFramebuffer: number, sourceX1: number, sourceY1: number, sourceX2: number, sourceY2: number, destX: number, destY: number, inverted: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: sourceFramebuffer });\n\t\tbp.set({ name: \"1\", type: \"d\", value: destFramebuffer });\n\t\tbp.set({ name: \"2\", type: \"d\", value: sourceX1 });\n\t\tbp.set({ name: \"3\", type: \"d\", value: sourceY1 });\n\t\tbp.set({ name: \"4\", type: \"d\", value: sourceX2 });\n\t\tbp.set({ name: \"5\", type: \"d\", value: sourceY2 });\n\t\tbp.set({ name: \"6\", type: \"d\", value: destX });\n\t\tbp.set({ name: \"7\", type: \"d\", value: destY });\n\n\t\tif (inverted !== false && inverted !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"8\", type: \"d\", value: (inverted ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.COPY);\n\t}\n\n\t/**\n\t * When `cursorBlink` is true, the device will cause the cursor to periodically blink.\n\t * @returns The cursor blink mode\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCursorBlink(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.cursorBlink === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.cursorBlink);\n\t}\n\n\t/**\n\t * When `cursorBlink` is true, the device will cause the cursor to periodically blink.\n\t * @throws {@link PhidgetError}\n\t * @param cursorBlink - The cursor blink mode\n\t */\n\tasync setCursorBlink(cursorBlink: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (cursorBlink !== false && cursorBlink !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (cursorBlink ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETCURSORBLINK);\n\t}\n\n\t/**\n\t * When `cursorOn` is true, the device will underline to the cursor position.\n\t * @returns The cursor on value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCursorOn(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.cursorOn === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.cursorOn);\n\t}\n\n\t/**\n\t * When `cursorOn` is true, the device will underline to the cursor position.\n\t * @throws {@link PhidgetError}\n\t * @param cursorOn - The cursor on value\n\t */\n\tasync setCursorOn(cursorOn: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (cursorOn !== false && cursorOn !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (cursorOn ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETCURSORON);\n\t}\n\n\t/**\n\t * Draws a straight line in the current frame buffer between two specified points\n\t * \n\t * *   Changes made to the frame buffer must be flushed to the LCD screen using `flush()`.\n\t * @throws {@link PhidgetError}\n\t * @param x1 - X coordinate of the first point\n\t * @param y1 - Y coordinate of the first point\n\t * @param x2 - X coordinate of the second point\n\t * @param y2 - Y coordinate of the second point\n\t */\n\tasync drawLine(x1: number, y1: number, x2: number, y2: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: x1 });\n\t\tbp.set({ name: \"1\", type: \"d\", value: y1 });\n\t\tbp.set({ name: \"2\", type: \"d\", value: x2 });\n\t\tbp.set({ name: \"3\", type: \"d\", value: y2 });\n\t\tawait bp.send(this._ch, BP.DRAWLINE);\n\t}\n\n\t/**\n\t * Draws, erases, or inverts a single specified pixel.\n\t * \n\t * *   Changes made to the frame buffer must be flushed to the LCD screen using `flush()`.\n\t * @throws {@link PhidgetError}\n\t * @param x - The X coordinate of the pixel\n\t * @param y - The Y coordinate of the pixel\n\t * @param pixelState - The new state of the pixel.\n\t */\n\tasync drawPixel(x: number, y: number, pixelState: Enum.LCDPixelState): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: x });\n\t\tbp.set({ name: \"1\", type: \"d\", value: y });\n\n\t\tif (!SEnum.supportedLCDPixelState(this._ch!, pixelState))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified LCDPixelState is unsupported by this device.\");\n\n\t\tbp.set({ name: \"2\", type: \"d\", value: pixelState });\n\t\tawait bp.send(this._ch, BP.DRAWPIXEL);\n\t}\n\n\t/**\n\t * Draws a rectangle in the current frame buffer using the specified points\n\t * \n\t * *   Changes made to the frame buffer must be flushed to the LCD screen using `flush()`.\n\t * @throws {@link PhidgetError}\n\t * @param x1 - The X coordinate of the top-left corner of the rectangle\n\t * @param y1 - The Y coordinate of the top-left corner of the rectangle\n\t * @param x2 - The X coordinate of the bottom-right corner of the rectangle\n\t * @param y2 - The Y coordinate of the bottom-right corner of the rectangle\n\t * @param filled - If true, the rectangle will be solid. If false, just a single pixel outline.\n\t * @param inverted - If true, clears the region instead of drawing\n\t */\n\tasync drawRect(x1: number, y1: number, x2: number, y2: number, filled: boolean, inverted: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: x1 });\n\t\tbp.set({ name: \"1\", type: \"d\", value: y1 });\n\t\tbp.set({ name: \"2\", type: \"d\", value: x2 });\n\t\tbp.set({ name: \"3\", type: \"d\", value: y2 });\n\n\t\tif (filled !== false && filled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"4\", type: \"d\", value: (filled ? 1 : 0) });\n\n\t\tif (inverted !== false && inverted !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"5\", type: \"d\", value: (inverted ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.DRAWRECT);\n\t}\n\n\t/**\n\t * Flushes the buffered LCD contents to the LCD screen.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync flush(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FLUSH);\n\t}\n\n\t/**\n\t * Gets the size of the specified font.\n\t * @returns\n\t * \t- width: The width of the font\n\t * \t- height: The height of the font\n\t * @throws {@link PhidgetError}\n\t * @param font - The specified font\n\t */\n\tabstract getFontSize(font: Enum.LCDFont): {width: number, height: number};\n\t/**\n\t * Sets the size of the specified font.\n\t * @throws {@link PhidgetError}\n\t * @param font - The specified font\n\t * @param width - The width of the font\n\t * @param height - The height of the font\n\t */\n\tasync setFontSize(font: Enum.LCDFont, width: number, height: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedLCDFont(this._ch!, font))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified LCDFont is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: font });\n\t\tbp.set({ name: \"1\", type: \"d\", value: width });\n\t\tbp.set({ name: \"2\", type: \"d\", value: height });\n\t\tawait bp.send(this._ch, BP.SETFONTSIZE);\n\t}\n\n\t/**\n\t * The frame buffer that is currently being used.\n\t * \n\t * *   Commands sent to the device are performed on this buffer.\n\t * @returns The current frame buffer\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFrameBuffer(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.frameBuffer === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.frameBuffer);\n\t}\n\n\t/**\n\t * The frame buffer that is currently being used.\n\t * \n\t * *   Commands sent to the device are performed on this buffer.\n\t * @throws {@link PhidgetError}\n\t * @param frameBuffer - The current frame buffer\n\t */\n\tasync setFrameBuffer(frameBuffer: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: frameBuffer });\n\t\tawait bp.send(this._ch, BP.SETFRAMEBUFFER);\n\t}\n\n\t/**\n\t * The height of the LCD screen attached to the channel.\n\t * @returns The height value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHeight(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.height === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.height);\n\t}\n\n\t/**\n\t * Initializes the Text LCD display\n\t * @throws {@link PhidgetError}\n\t */\n\tasync initialize(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.INITIALIZE);\n\t}\n\n\t/**\n\t * Writes the specified frame buffer to flash memory\n\t * \n\t * *   Use sparingly. The flash memory is only designed to be written to 10,000 times before it may become unusable. This method can only be called one time each time the channel is opened.\n\t * @throws {@link PhidgetError}\n\t * @param frameBuffer - The frame buffer to be saved\n\t */\n\tasync saveFrameBuffer(frameBuffer: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: frameBuffer });\n\t\tawait bp.send(this._ch, BP.SAVEFRAMEBUFFER);\n\t}\n\n\t/**\n\t * The size of the LCD screen attached to the channel.\n\t * @returns The screen size\n\t * @throws {@link PhidgetError}\n\t */\n\tgetScreenSize(): Enum.LCDScreenSize {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.screenSize === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.screenSize);\n\t}\n\n\t/**\n\t * The size of the LCD screen attached to the channel.\n\t * @throws {@link PhidgetError}\n\t * @param screenSize - The screen size\n\t */\n\tasync setScreenSize(screenSize: Enum.LCDScreenSize): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedLCDScreenSize(this._ch!, screenSize))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified LCDScreenSize is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: screenSize });\n\t\tawait bp.send(this._ch, BP.SETSCREENSIZE);\n\t}\n\n\t/**\n\t * The on/off state of `sleeping`. Putting the device to sleep turns off the display and backlight in order to save power.\n\t * \n\t * *   The device will still take commands while asleep, and will wake up if the screen is flushed, or if the contrast or backlight are changed.\n\t * *   When the device wakes up, it will return to its last known state, taking into account any changes that happened while asleep.\n\t * @returns The sleep status\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSleeping(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sleeping === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.sleeping);\n\t}\n\n\t/**\n\t * The on/off state of `sleeping`. Putting the device to sleep turns off the display and backlight in order to save power.\n\t * \n\t * *   The device will still take commands while asleep, and will wake up if the screen is flushed, or if the contrast or backlight are changed.\n\t * *   When the device wakes up, it will return to its last known state, taking into account any changes that happened while asleep.\n\t * @throws {@link PhidgetError}\n\t * @param sleeping - The sleep status\n\t */\n\tasync setSleeping(sleeping: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (sleeping !== false && sleeping !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (sleeping ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETSLEEP);\n\t}\n\n\t/**\n\t * The width of the LCD screen attached to the channel.\n\t * @returns The width value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetWidth(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.width === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.width);\n\t}\n\n\t/**\n\t * Draws a bitmap to the current frame buffer at the given location.\n\t * \n\t * *   Each byte in the array represents one pixel in row-major order.\n\t * *   Changes made to the frame buffer must be flushed to the LCD screen using `flush()`.\n\t * @throws {@link PhidgetError}\n\t * @param xPosition - The X coordinate of the bitmap\n\t * @param yPosition - The Y coordinate of the bitmap\n\t * @param xSize - The length of each row in the bitmap\n\t * @param ySize - The number of rows in the bitmap\n\t * @param bitmap - The bitmap to be drawn\n\t */\n\tabstract writeBitmap(xPosition: number, yPosition: number, xSize: number, ySize: number, bitmap: readonly number[]): Promise<void>;\n\t/**\n\t * Writes text to the current frame buffer at the specified location\n\t * \n\t * *   Changes made to the frame buffer must be flushed to the LCD screen using `flush()`.\n\t * @throws {@link PhidgetError}\n\t * @param font - The font of the text\n\t * @param xPosition - The X position of the start of the text string\n\t * @param yPosition - The Y position of the start of the text string\n\t * @param text - The text to be written\n\t */\n\tasync writeText(font: Enum.LCDFont, xPosition: number, yPosition: number, text: string): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedLCDFont(this._ch!, font))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified LCDFont is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: font });\n\t\tbp.set({ name: \"1\", type: \"d\", value: xPosition });\n\t\tbp.set({ name: \"2\", type: \"d\", value: yPosition });\n\t\tbp.set({ name: \"3\", type: \"s\", value: text });\n\t\tawait bp.send(this._ch, BP.WRITETEXT);\n\t}\n\n}\nexport { LCDBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { LCDBase } from './LCD.gen';\nimport { PhidgetLock } from '../PhidgetLock';\nimport { BP } from '../BridgePackets.gen';\nimport { ErrorCode, LCDScreenSize, DeviceID, LCDFont } from '../Enumerations.gen';\nimport { BridgePacket } from '../BridgePacket';\nimport { PhidgetError } from '../PhidgetError';\nimport { Channel } from '../Channel';\n\n/** @public */\nclass LCD extends LCDBase {\n\t/** @internal */\n\t_transactionLock: PhidgetLock;\n\n\t/** @internal */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._transactionLock = new PhidgetLock();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.SETFONTSIZE: {\n\t\t\t\tconst font = bp.getNumber(0);\n\t\t\t\tconst width = bp.getNumber(1);\n\t\t\t\tconst height = bp.getNumber(2);\n\t\t\t\tthis.data.fontWidth[font] = width;\n\t\t\t\tthis.data.fontHeight[font] = height;\n\t\t\t\tthis._FIREPropertyChange('FontSize', bp);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase BP.SETSCREENSIZE:\n\t\t\t\tthis._setWidthHeightFromScreenSize(bp.getNumber(0) as LCDScreenSize);\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\t// These packets wake up an LCD1100\n\t\t\tcase BP.SETBACKLIGHT:\n\t\t\tcase BP.SETCONTRAST:\n\t\t\tcase BP.FLUSH:\n\t\t\t\tif (this.deviceID === DeviceID.PN_LCD1100)\n\t\t\t\t\tthis.data.sleeping = 0;\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_setWidthHeightFromScreenSize(size: LCDScreenSize) {\n\t\tswitch (size) {\n\t\t\tcase LCDScreenSize.NO_SCREEN:\n\t\t\t\tthis.data.height = 0;\n\t\t\t\tthis.data.width = 0;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_1X8:\n\t\t\t\tthis.data.height = 1;\n\t\t\t\tthis.data.width = 8;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_2X8:\n\t\t\t\tthis.data.height = 2;\n\t\t\t\tthis.data.width = 8;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_1X16:\n\t\t\t\tthis.data.height = 1;\n\t\t\t\tthis.data.width = 16;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_2X16:\n\t\t\t\tthis.data.height = 2;\n\t\t\t\tthis.data.width = 16;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_4X16:\n\t\t\t\tthis.data.height = 4;\n\t\t\t\tthis.data.width = 16;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_2X20:\n\t\t\t\tthis.data.height = 2;\n\t\t\t\tthis.data.width = 20;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_4X20:\n\t\t\t\tthis.data.height = 4;\n\t\t\t\tthis.data.width = 20;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_2X24:\n\t\t\t\tthis.data.height = 2;\n\t\t\t\tthis.data.width = 24;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_1X40:\n\t\t\t\tthis.data.height = 1;\n\t\t\t\tthis.data.width = 40;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_2X40:\n\t\t\t\tthis.data.height = 2;\n\t\t\t\tthis.data.width = 40;\n\t\t\t\tbreak;\n\t\t\tcase LCDScreenSize.DIMENSIONS_4X40:\n\t\t\t\tthis.data.height = 4;\n\t\t\t\tthis.data.width = 40;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetAutoFlush(autoFlush: boolean) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.autoFlush = autoFlush ? 1 : 0;\n\t}\n\n\tasync setCharacterBitmap(font: LCDFont, character: string, bitmap: number[]) {\n\t\tthis._assertOpen();\n\n\t\tconst fontSize = this.getFontSize(font);\n\t\tconst bp = new BridgePacket();\n\n\t\tif (fontSize.width <= 0)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"invalid arg (getFontSize): \" + font);\n\t\tif (fontSize.height <= 0)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"invalid arg (getFontSize): \" + font);\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: font });\n\t\tbp.set({ name: \"1\", type: \"s\", value: character });\n\t\tbp.set({ name: \"2\", type: \"R\", value: bitmap });\n\t\tawait bp.send(this._ch, BP.SETCHARACTERBITMAP);\n\t}\n\n\tgetMaxCharacters(font: LCDFont) {\n\t\tthis._assertOpen();\n\n\t\tlet maxChars;\n\t\tlet fontSize;\n\n\t\tswitch (this.deviceID) {\n\t\t\tcase DeviceID.PN_LCD1100:\n\t\t\t\tfontSize = this.getFontSize(font);\n\t\t\t\tif (fontSize.width <= 0)\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Font width is <= 0.\");\n\t\t\t\tif (fontSize.height <= 0)\n\t\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Font height is <= 0.\");\n\t\t\t\tmaxChars = Math.floor(Math.min(255, (this.data.width / fontSize.width) * (this.data.height / fontSize.height)));\n\t\t\t\tbreak;\n\t\t\tcase DeviceID.PN_1202_1203:\n\t\t\tcase DeviceID.PN_1204:\n\t\t\tcase DeviceID.PN_1215__1218:\n\t\t\tcase DeviceID.PN_1219__1222:\n\t\t\t\tmaxChars = 0xff;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t\t}\n\n\t\treturn (maxChars);\n\t}\n\n\tgetFontSize(font: LCDFont) {\n\t\tthis._assertOpen();\n\n\t\tconst fontSize = { width: 0, height: 0 };\n\n\t\tswitch (font) {\n\t\t\tcase LCDFont.DIMENSIONS_6X10:\n\t\t\t\tfontSize.width = 6;\n\t\t\t\tfontSize.height = 10;\n\t\t\t\tbreak;\n\t\t\tcase LCDFont.DIMENSIONS_5X8:\n\t\t\t\tfontSize.width = 5;\n\t\t\t\tfontSize.height = 8;\n\t\t\t\tbreak;\n\t\t\tcase LCDFont.DIMENSIONS_6X12:\n\t\t\t\tfontSize.width = 6;\n\t\t\t\tfontSize.height = 12;\n\t\t\t\tbreak;\n\t\t\tcase LCDFont.USER1:\n\t\t\tcase LCDFont.USER2:\n\t\t\t\tfontSize.width = this.data.fontWidth[font];\n\t\t\t\tfontSize.height = this.data.fontHeight[font];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Invalid font.\");\n\t\t}\n\n\t\treturn (fontSize);\n\t}\n\n\tasync writeBitmap(xpos: number, ypos: number, xsize: number, ysize: number, bitmap: number[]) {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (xsize <= 0 || ysize <= 0)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"invalid arg (size cannot be <=0) \" + (xsize <= 0 ? xsize : ysize));\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: xpos });\n\t\tbp.set({ name: \"1\", type: \"d\", value: ypos });\n\t\tbp.set({ name: \"2\", type: \"d\", value: xsize });\n\t\tbp.set({ name: \"3\", type: \"d\", value: ysize });\n\t\tbp.set({ name: \"4\", type: \"R\", value: bitmap });\n\n\t\tawait bp.send(this._ch, BP.WRITEBITMAP);\n\t}\n}\n\nexport { LCD };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface MotorPositionControllerData {\n\tpositionOffset: number, \n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tcurrentLimit: number,\n\tmaxCurrentLimit: number,\n\tminCurrentLimit: number,\n\tcurrentRegulatorGain: number,\n\tdutyCycle: number,\n\tengaged: number,\n\tmaxCurrentRegulatorGain: number,\n\tminCurrentRegulatorGain: number,\n\tvelocityLimit: number,\n\tminVelocityLimit: number,\n\tmaxVelocityLimit: number,\n\tmaxAcceleration: number,\n\tminAcceleration: number,\n\tacceleration: number,\n\ttargetPosition: number,\n\tposition: number,\n\tmaxPosition: number,\n\tminPosition: number,\n\trescaleFactor: number,\n\tfanMode: Enum.FanMode | PUNK.ENUM,\n\tdeadBand: number,\n\tkp: number,\n\tkd: number,\n\tki: number,\n\tIOMode: Enum.EncoderIOMode | PUNK.ENUM,\n\tstallVelocity: number,\n\tminStallVelocity: number,\n\tmaxStallVelocity: number,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n\ttargetBrakingStrength: number,\n\tmaxBrakingStrength: number,\n\tminBrakingStrength: number,\n}\n\nabstract class MotorPositionControllerBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: MotorPositionControllerData;\n\t/**\n\t * **PositionChange** event\n\t *  * `position` - The position value\n\t * ---\n\t * The most recent position value will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   Regardless of the `dataInterval`, this event will occur only when the position value has changed from the previous value reported.\n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t */\n\tonPositionChange: ((position: number) => void) | null = null;\n\t/** @internal */\n\t_gotPositionChangeErrorEvent?: boolean;\n\t/**\n\t * **DutyCycleUpdate** event\n\t *  * `dutyCycle` - The duty cycle value\n\t * ---\n\t * The most recent duty cycle value will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   This event will **always** occur when the `dataInterval` elapses. You can depend on this event for constant timing when implementing control loops in code. This is the last event to fire, giving you up-to-date access to all properties.\n\t */\n\tonDutyCycleUpdate: ((dutyCycle: number) => void) | null = null;\n\t/** @internal */\n\t_gotDutyCycleUpdateErrorEvent?: boolean;\n\n\t/**\n\t * The Motor Position Controller class controlls the position, velocity and acceleration of the attached motor. It also contains various other control and monitoring functions that aid in the control of the motor.\n\t * \n\t * For specifics on how to use this class, we recommend watching our video on the [Phidget Motor Position Controller](https://www.youtube.com/watch?v=0cQlxNd7dk4) class.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.MOTOR_POSITION_CONTROLLER;\n\t\tthis.name = \"MotorPositionController\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETACCELERATION:\n\t\t\tthis.data.acceleration = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Acceleration', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURRENTLIMIT:\n\t\t\tthis.data.currentLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURRENTREGULATORGAIN:\n\t\t\tthis.data.currentRegulatorGain = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentRegulatorGain', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDEADBAND:\n\t\t\tthis.data.deadBand = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DeadBand', bp);\n\t\t\tbreak;\n\t\tcase BP.SETENGAGED:\n\t\t\tthis.data.engaged = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Engaged', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.SETFANMODE:\n\t\t\tthis.data.fanMode = bp.entries[0].v as Enum.FanMode;\n\t\t\tthis._FIREPropertyChange('FanMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETIOMODE:\n\t\t\tthis.data.IOMode = bp.entries[0].v as Enum.EncoderIOMode;\n\t\t\tthis._FIREPropertyChange('IOMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETKD:\n\t\t\tthis.data.kd = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Kd', bp);\n\t\t\tbreak;\n\t\tcase BP.SETKI:\n\t\t\tthis.data.ki = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Ki', bp);\n\t\t\tbreak;\n\t\tcase BP.SETKP:\n\t\t\tthis.data.kp = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Kp', bp);\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETSTALLVELOCITY:\n\t\t\tthis.data.stallVelocity = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('StallVelocity', bp);\n\t\t\tbreak;\n\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\tthis.data.targetBrakingStrength = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetBrakingStrength', bp);\n\t\t\tbreak;\n\t\tcase BP.SETTARGETPOSITION:\n\t\t\tthis.data.targetPosition = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetPosition', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDUTYCYCLE:\n\t\t\tthis.data.velocityLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('VelocityLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.DUTYCYCLECHANGE: {\n\t\t\tthis.data.dutyCycle = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onDutyCycleUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onDutyCycleUpdate(this.data.dutyCycle);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): MotorPositionControllerData {\n\t\treturn {\n\t\t\tpositionOffset: 0, \n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tcurrentLimit: PUNK.DBL,\n\t\t\tmaxCurrentLimit: PUNK.DBL,\n\t\t\tminCurrentLimit: PUNK.DBL,\n\t\t\tcurrentRegulatorGain: PUNK.DBL,\n\t\t\tdutyCycle: PUNK.DBL,\n\t\t\tengaged: PUNK.BOOL,\n\t\t\tmaxCurrentRegulatorGain: PUNK.DBL,\n\t\t\tminCurrentRegulatorGain: PUNK.DBL,\n\t\t\tvelocityLimit: PUNK.DBL,\n\t\t\tminVelocityLimit: PUNK.DBL,\n\t\t\tmaxVelocityLimit: PUNK.DBL,\n\t\t\tmaxAcceleration: PUNK.DBL,\n\t\t\tminAcceleration: PUNK.DBL,\n\t\t\tacceleration: PUNK.DBL,\n\t\t\ttargetPosition: PUNK.INT64,\n\t\t\tposition: PUNK.INT64,\n\t\t\tmaxPosition: PUNK.INT64,\n\t\t\tminPosition: PUNK.INT64,\n\t\t\trescaleFactor: PUNK.DBL,\n\t\t\tfanMode: PUNK.ENUM,\n\t\t\tdeadBand: PUNK.UINT32,\n\t\t\tkp: PUNK.DBL,\n\t\t\tkd: PUNK.DBL,\n\t\t\tki: PUNK.DBL,\n\t\t\tIOMode: PUNK.ENUM,\n\t\t\tstallVelocity: PUNK.DBL,\n\t\t\tminStallVelocity: PUNK.DBL,\n\t\t\tmaxStallVelocity: PUNK.DBL,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t\ttargetBrakingStrength: PUNK.DBL,\n\t\t\tmaxBrakingStrength: PUNK.DBL,\n\t\t\tminBrakingStrength: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 25;\n\t\t\tthis.data.minCurrentLimit = 2;\n\t\t\tthis.data.currentRegulatorGain = 10;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.maxCurrentRegulatorGain = 100;\n\t\t\tthis.data.minCurrentRegulatorGain = 1;\n\t\t\tthis.data.velocityLimit = 20000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 250000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.fanMode = Enum.FanMode.AUTO;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 2000;\n\t\t\tthis.data.kd = 25000;\n\t\t\tthis.data.ki = 5;\n\t\t\tthis.data.IOMode = Enum.EncoderIOMode.PUSH_PULL;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.currentLimit = 2;\n\t\t\tthis.data.maxCurrentLimit = 25;\n\t\t\tthis.data.minCurrentLimit = 2;\n\t\t\tthis.data.currentRegulatorGain = 10;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.maxCurrentRegulatorGain = 100;\n\t\t\tthis.data.minCurrentRegulatorGain = 1;\n\t\t\tthis.data.velocityLimit = 20000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 250000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.fanMode = Enum.FanMode.AUTO;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 2000;\n\t\t\tthis.data.kd = 25000;\n\t\t\tthis.data.ki = 5;\n\t\t\tthis.data.IOMode = Enum.EncoderIOMode.PUSH_PULL;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.maxCurrentLimit = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.velocityLimit = 20000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 250000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 2000;\n\t\t\tthis.data.kd = 25000;\n\t\t\tthis.data.ki = 5;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.maxCurrentLimit = 2;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.velocityLimit = 20000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 250000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 2000;\n\t\t\tthis.data.kd = 25000;\n\t\t\tthis.data.ki = 5;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.maxCurrentLimit = 3.5;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.velocityLimit = 20000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 250000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 2000;\n\t\t\tthis.data.kd = 25000;\n\t\t\tthis.data.ki = 5;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.currentLimit = 1;\n\t\t\tthis.data.maxCurrentLimit = 4;\n\t\t\tthis.data.minCurrentLimit = 0;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.velocityLimit = 20000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 250000;\n\t\t\tthis.data.maxAcceleration = 10000000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 10000;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 2000;\n\t\t\tthis.data.kd = 25000;\n\t\t\tthis.data.ki = 5;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.velocityLimit = 1000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 10000;\n\t\t\tthis.data.maxAcceleration = 100000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 100;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 20000;\n\t\t\tthis.data.kd = 40000;\n\t\t\tthis.data.ki = 2;\n\t\t\tthis.data.stallVelocity = 400;\n\t\t\tthis.data.minStallVelocity = 0;\n\t\t\tthis.data.maxStallVelocity = 2000;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\tthis.data.dataInterval = 100;\n\t\t\tthis.data.minDataInterval = 20;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 50;\n\t\t\tthis.data.engaged = 0;\n\t\t\tthis.data.velocityLimit = 1000;\n\t\t\tthis.data.minVelocityLimit = 0;\n\t\t\tthis.data.maxVelocityLimit = 10000;\n\t\t\tthis.data.maxAcceleration = 100000;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.acceleration = 100;\n\t\t\tthis.data.targetPosition = 0;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.deadBand = 0;\n\t\t\tthis.data.kp = 20000;\n\t\t\tthis.data.kd = 40000;\n\t\t\tthis.data.ki = 2;\n\t\t\tthis.data.stallVelocity = 400;\n\t\t\tthis.data.minStallVelocity = 0;\n\t\t\tthis.data.maxStallVelocity = 2000;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_200:\n\t\tcase DeviceChannelUID._DCC1000_MOTORPOSITIONCONTROLLER_210:\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_100:\n\t\tcase DeviceChannelUID._DCC1001_MOTORPOSITIONCONTROLLER_120:\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_100:\n\t\tcase DeviceChannelUID._DCC1002_MOTORPOSITIONCONTROLLER_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.currentLimit });\n\t\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.engaged });\n\t\t\tawait bp.send(this._ch, BP.SETENGAGED);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.velocityLimit });\n\t\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.acceleration });\n\t\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"l\", value: this.data.targetPosition });\n\t\t\tawait bp.send(this._ch, BP.SETTARGETPOSITION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.deadBand });\n\t\t\tawait bp.send(this._ch, BP.SETDEADBAND);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.kp });\n\t\t\tawait bp.send(this._ch, BP.SETKP);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.kd });\n\t\t\tawait bp.send(this._ch, BP.SETKD);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.ki });\n\t\t\tawait bp.send(this._ch, BP.SETKI);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_100:\n\t\tcase DeviceChannelUID._DCC1100_MOTORPOSITIONCONTROLLER_120:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.engaged });\n\t\t\tawait bp.send(this._ch, BP.SETENGAGED);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.velocityLimit });\n\t\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.acceleration });\n\t\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"l\", value: this.data.targetPosition });\n\t\t\tawait bp.send(this._ch, BP.SETTARGETPOSITION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.deadBand });\n\t\t\tawait bp.send(this._ch, BP.SETDEADBAND);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.kp });\n\t\t\tawait bp.send(this._ch, BP.SETKP);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.kd });\n\t\t\tawait bp.send(this._ch, BP.SETKD);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.ki });\n\t\t\tawait bp.send(this._ch, BP.SETKI);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.stallVelocity });\n\t\t\tawait bp.send(this._ch, BP.SETSTALLVELOCITY);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.dutyCycle == PUNK.DBL)\n\t\t\t&& ! this._gotDutyCycleUpdateErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.dutyCycle != PUNK.DBL)\n\t\t\tif (this.onDutyCycleUpdate)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onDutyCycleUpdate(this.data.dutyCycle);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The rate at which the controller can change the motor's velocity.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget acceleration() { return this.getAcceleration(); }\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * The minimum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minBrakingStrength() { return this.getMinBrakingStrength(); }\n\t/**\n\t * The maximum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxBrakingStrength() { return this.getMaxBrakingStrength(); }\n\t/**\n\t * The controller will limit the current through the motor to this value.\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentLimit() { return this.getCurrentLimit(); }\n\t/**\n\t * The minimum current limit that can be set for the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentLimit() { return this.getMinCurrentLimit(); }\n\t/**\n\t * The maximum current limit that can be set for the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentLimit() { return this.getMaxCurrentLimit(); }\n\t/**\n\t * Depending on power supply voltage and motor coil inductance, current through the motor can change relatively slowly or extremely rapidly. A physically larger DC Motor will typically have a lower inductance, requiring a higher current regulator gain. A higher power supply voltage will result in motor current changing more rapidly, requiring a higher current regulator gain. If the current regulator gain is too small, spikes in current will occur, causing large variations in torque, and possibly damaging the motor controller. If the current regulator gain is too high, the current will jitter, causing the motor to sound 'rough', especially when changing directions. Each DC Motor we sell specifies a suitable current regulator gain.\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentRegulatorGain() { return this.getCurrentRegulatorGain(); }\n\t/**\n\t * The minimum current regulator gain for the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentRegulatorGain() { return this.getMinCurrentRegulatorGain(); }\n\t/**\n\t * The maximum current regulator gain for the device.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentRegulatorGain() { return this.getMaxCurrentRegulatorGain(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `DutyCycleUpdate` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * Depending on your system, it may not be possible to bring the position error (`targetPosition` - `position`) to zero. A small error can lead to the motor continually 'hunting' for a target position, which can cause unwanted effects. By setting a non-zero `deadBand`, the position controller will relax control of the motor within the deadband, preventing the 'hunting' behavior.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget deadBand() { return this.getDeadBand(); }\n\t/**\n\t * The most recent duty cycle value that the controller has reported.\n\t * \n\t * *   This value will be between -1 and 1 where a sign change (±) is indicitave of a direction change.\n\t * *   Note that `dutyCycle` is merely an indication of the average voltage across the motor. At a constant load, an increase in `dutyCycle` indicates an increase in motor speed.\n\t * *   The units of `dutyCycle` refer to 'duty cycle'. This is because the controller must rapidly switch the power on/off (i.e. change the duty cycle) in order to manipulate the voltage across the motor.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dutyCycle() { return this.getDutyCycle(); }\n\t/**\n\t * When engaged, a motor has the ability to be positioned. When disengaged, no commands are sent to the motor.\n\t * \n\t * *   This function is useful for completely relaxing a motor once it has reached the target position.\n\t * @throws {@link PhidgetError}\n\t */\n\tget engaged() { return this.getEngaged(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the controller will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @throws {@link PhidgetError}\n\t */\n\tget fanMode() { return this.getFanMode(); }\n\t/**\n\t * The encoder interface mode. Match the mode to the type of encoder you have attached.\n\t * \n\t * *   It is recommended to only change this when the encoder disabled in order to avoid unexpected results.\n\t * @throws {@link PhidgetError}\n\t */\n\tget IOMode() { return this.getIOMode(); }\n\t/**\n\t * Derivative gain constant. A higher `kd` will help reduce oscillations.\n\t * @throws {@link PhidgetError}\n\t */\n\tget kd() { return this.getKd(); }\n\t/**\n\t * Integral gain constant. The integral term will help eliminate steady-state error.\n\t * @throws {@link PhidgetError}\n\t */\n\tget ki() { return this.getKi(); }\n\t/**\n\t * Proportional gain constant. A small `kp` value will result in a less responsive controller, however, if `kp` is too high, the system can become unstable.\n\t * @throws {@link PhidgetError}\n\t */\n\tget kp() { return this.getKp(); }\n\t/**\n\t * The most recent position value that the controller has reported.\n\t * \n\t * *   This value will always be between `minPosition` and `maxPosition`.\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget position() { return this.getPosition(); }\n\t/**\n\t * The minimum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPosition() { return this.getMinPosition(); }\n\t/**\n\t * The maximum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPosition() { return this.getMaxPosition(); }\n\t/**\n\t * Change the units of your parameters so that your application is more intuitive.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget rescaleFactor() { return this.getRescaleFactor(); }\n\tset rescaleFactor(rescaleFactor: number) { this.setRescaleFactor(rescaleFactor); }\n\t/**\n\t * Before reading this description, it is important to note the difference between the units of `stallVelocity` and `dutyCycle`.\n\t * \n\t * *   `dutyCycle` is a number between -1 and 1 with units of 'duty cycle'. It simply represents the average voltage across the motor.\n\t * *   `stallVelocity` represents a real velocity (e.g. m/s, RPM, etc.) and the units are determined by the `rescaleFactor`. With a `rescaleFactor` of 1, the default units would be in commutations per second.\n\t * \n\t * If the load on your motor is large, your motor may begin rotating more slowly, or even fully stall. Depending on the voltage across your motor, this may result in a large amount of current through both the controller and the motor. In order to prevent damage in these situations, you can use the `stallVelocity` property.  \n\t *   \n\t * The `stallVelocity` should be set to the lowest velocity you would expect from your motor. The controller will then monitor the motor's velocity, as well as the `dutyCycle`, and prevent a 'dangerous stall' from occuring. If the controller detects a dangerous stall, it will immediately disengage the motor (i.e. `engaged` will be set to false) and an error will be reported to your program.\n\t * \n\t * *   A 'dangerous stall' will occur faster when the `dutyCycle` is higher (i.e. when the average voltage across the motor is higher)\n\t * *   A 'dangerous stall' will occur faster as (`stallVelocity` - motor velocity) becomes larger .\n\t * \n\t * Setting `stallVelocity` to 0 will turn off stall protection functionality.\n\t * @throws {@link PhidgetError}\n\t */\n\tget stallVelocity() { return this.getStallVelocity(); }\n\t/**\n\t * The lower bound of `stallVelocity`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minStallVelocity() { return this.getMinStallVelocity(); }\n\t/**\n\t * The upper bound of `stallVelocity`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxStallVelocity() { return this.getMaxStallVelocity(); }\n\t/**\n\t * This setting allows you to choose how hard the motor will resist being turned when it is not being driven forward or reverse. The `targetBrakingStrength` sets the relative amount of electrical braking to be applied to the DC motor, with `minBrakingStrength` corresponding to no braking (free-wheeling), and `maxBrakingStrength` indicating full braking.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free-wheeling. This means:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor, due to its momentum.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   As `targetBrakingStrength` increases, this will engage electrical braking of the DC motor. This means:\n\t *     *   The motor will stop more quickly if it is in motion when braking is requested.\n\t *     *   The motor shaft will resist rotation by outside forces.\n\t * *   This braking will only be applied during Failsafe and Emergency Stop conditions.\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetBrakingStrength() { return this.getTargetBrakingStrength(); }\n\t/**\n\t * If the controller is configured and the `targetPosition` is set, the motor will try to reach the `targetPosition`.\n\t * \n\t * *   If the `deadBand` is non-zero, the final position of the motor may not match the `targetPosition`\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetPosition() { return this.getTargetPosition(); }\n\t/**\n\t * When moving, the motor velocity will be limited by this value.\n\t * \n\t * *   `velocityLimit` is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocityLimit() { return this.getVelocityLimit(); }\n\t/**\n\t * The minimum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVelocityLimit() { return this.getMinVelocityLimit(); }\n\t/**\n\t * The maximum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVelocityLimit() { return this.getMaxVelocityLimit(); }\n\n\t/**\n\t * The rate at which the controller can change the motor's velocity.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getAcceleration(): number;\n\t/**\n\t * The rate at which the controller can change the motor's velocity.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t * @param acceleration - The acceleration value\n\t */\n\tabstract setAcceleration(acceleration: number): Promise<void>;\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The acceleration value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinAcceleration(): number;\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The acceleration value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxAcceleration(): number;\n\t/**\n\t * The minimum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minBrakingStrength);\n\t}\n\n\t/**\n\t * The maximum value that `targetBrakingStrength` can be set to. See `targetBrakingStrength` for details.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxBrakingStrength);\n\t}\n\n\t/**\n\t * The controller will limit the current through the motor to this value.\n\t * @returns Motor current limit\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentLimit);\n\t}\n\n\t/**\n\t * The controller will limit the current through the motor to this value.\n\t * @throws {@link PhidgetError}\n\t * @param currentLimit - Motor current limit\n\t */\n\tasync setCurrentLimit(currentLimit: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentLimit < this.data.minCurrentLimit || currentLimit > this.data.maxCurrentLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentLimit + \" - \" + this.data.maxCurrentLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentLimit });\n\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t}\n\n\t/**\n\t * The minimum current limit that can be set for the device.\n\t * @returns Minimum current limit\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentLimit);\n\t}\n\n\t/**\n\t * The maximum current limit that can be set for the device.\n\t * @returns Maximum current limit\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentLimit);\n\t}\n\n\t/**\n\t * Depending on power supply voltage and motor coil inductance, current through the motor can change relatively slowly or extremely rapidly. A physically larger DC Motor will typically have a lower inductance, requiring a higher current regulator gain. A higher power supply voltage will result in motor current changing more rapidly, requiring a higher current regulator gain. If the current regulator gain is too small, spikes in current will occur, causing large variations in torque, and possibly damaging the motor controller. If the current regulator gain is too high, the current will jitter, causing the motor to sound 'rough', especially when changing directions. Each DC Motor we sell specifies a suitable current regulator gain.\n\t * @returns Current Regulator Gain\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentRegulatorGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentRegulatorGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentRegulatorGain);\n\t}\n\n\t/**\n\t * Depending on power supply voltage and motor coil inductance, current through the motor can change relatively slowly or extremely rapidly. A physically larger DC Motor will typically have a lower inductance, requiring a higher current regulator gain. A higher power supply voltage will result in motor current changing more rapidly, requiring a higher current regulator gain. If the current regulator gain is too small, spikes in current will occur, causing large variations in torque, and possibly damaging the motor controller. If the current regulator gain is too high, the current will jitter, causing the motor to sound 'rough', especially when changing directions. Each DC Motor we sell specifies a suitable current regulator gain.\n\t * @throws {@link PhidgetError}\n\t * @param currentRegulatorGain - Current Regulator Gain\n\t */\n\tasync setCurrentRegulatorGain(currentRegulatorGain: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentRegulatorGain < this.data.minCurrentRegulatorGain || currentRegulatorGain > this.data.maxCurrentRegulatorGain)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentRegulatorGain + \" - \" + this.data.maxCurrentRegulatorGain + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentRegulatorGain });\n\t\tawait bp.send(this._ch, BP.SETCURRENTREGULATORGAIN);\n\t}\n\n\t/**\n\t * The minimum current regulator gain for the device.\n\t * @returns Minimum current regulator gain\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentRegulatorGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentRegulatorGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentRegulatorGain);\n\t}\n\n\t/**\n\t * The maximum current regulator gain for the device.\n\t * @returns Maximum current regulator gain\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentRegulatorGain(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentRegulatorGain === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentRegulatorGain);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `DutyCycleUpdate` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PositionChange` / `DutyCycleUpdate` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Depending on your system, it may not be possible to bring the position error (`targetPosition` - `position`) to zero. A small error can lead to the motor continually 'hunting' for a target position, which can cause unwanted effects. By setting a non-zero `deadBand`, the position controller will relax control of the motor within the deadband, preventing the 'hunting' behavior.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The dead band value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getDeadBand(): number;\n\t/**\n\t * Depending on your system, it may not be possible to bring the position error (`targetPosition` - `position`) to zero. A small error can lead to the motor continually 'hunting' for a target position, which can cause unwanted effects. By setting a non-zero `deadBand`, the position controller will relax control of the motor within the deadband, preventing the 'hunting' behavior.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t * @param deadBand - The dead band value\n\t */\n\tabstract setDeadBand(deadBand: number): Promise<void>;\n\t/**\n\t * The most recent duty cycle value that the controller has reported.\n\t * \n\t * *   This value will be between -1 and 1 where a sign change (±) is indicitave of a direction change.\n\t * *   Note that `dutyCycle` is merely an indication of the average voltage across the motor. At a constant load, an increase in `dutyCycle` indicates an increase in motor speed.\n\t * *   The units of `dutyCycle` refer to 'duty cycle'. This is because the controller must rapidly switch the power on/off (i.e. change the duty cycle) in order to manipulate the voltage across the motor.\n\t * @returns The duty cycle value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDutyCycle(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dutyCycle === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.dutyCycle);\n\t}\n\n\t/**\n\t * When engaged, a motor has the ability to be positioned. When disengaged, no commands are sent to the motor.\n\t * \n\t * *   This function is useful for completely relaxing a motor once it has reached the target position.\n\t * @returns The engaged value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetEngaged(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.engaged === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.engaged);\n\t}\n\n\t/**\n\t * When engaged, a motor has the ability to be positioned. When disengaged, no commands are sent to the motor.\n\t * \n\t * *   This function is useful for completely relaxing a motor once it has reached the target position.\n\t * @throws {@link PhidgetError}\n\t * @param engaged - The engaged value.\n\t */\n\tasync setEngaged(engaged: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (engaged !== false && engaged !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (engaged ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENGAGED);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For Motor Position Controller channels, this will disengage the motor. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the controller will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @returns The fan mode\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFanMode(): Enum.FanMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.fanMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.fanMode);\n\t}\n\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the controller will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @throws {@link PhidgetError}\n\t * @param fanMode - The fan mode\n\t */\n\tasync setFanMode(fanMode: Enum.FanMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedFanMode(this._ch!, fanMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified FanMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: fanMode });\n\t\tawait bp.send(this._ch, BP.SETFANMODE);\n\t}\n\n\t/**\n\t * The encoder interface mode. Match the mode to the type of encoder you have attached.\n\t * \n\t * *   It is recommended to only change this when the encoder disabled in order to avoid unexpected results.\n\t * @returns The IO mode value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIOMode(): Enum.EncoderIOMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.IOMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.IOMode);\n\t}\n\n\t/**\n\t * The encoder interface mode. Match the mode to the type of encoder you have attached.\n\t * \n\t * *   It is recommended to only change this when the encoder disabled in order to avoid unexpected results.\n\t * @throws {@link PhidgetError}\n\t * @param IOMode - The IO mode value.\n\t */\n\tasync setIOMode(IOMode: Enum.EncoderIOMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedEncoderIOMode(this._ch!, IOMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified EncoderIOMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: IOMode });\n\t\tawait bp.send(this._ch, BP.SETIOMODE);\n\t}\n\n\t/**\n\t * Derivative gain constant. A higher `kd` will help reduce oscillations.\n\t * @returns The Kd value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getKd(): number;\n\t/**\n\t * Derivative gain constant. A higher `kd` will help reduce oscillations.\n\t * @throws {@link PhidgetError}\n\t * @param kd - The Kd value.\n\t */\n\tabstract setKd(kd: number): Promise<void>;\n\t/**\n\t * Integral gain constant. The integral term will help eliminate steady-state error.\n\t * @returns The Ki value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getKi(): number;\n\t/**\n\t * Integral gain constant. The integral term will help eliminate steady-state error.\n\t * @throws {@link PhidgetError}\n\t * @param ki - The Ki value.\n\t */\n\tabstract setKi(ki: number): Promise<void>;\n\t/**\n\t * Proportional gain constant. A small `kp` value will result in a less responsive controller, however, if `kp` is too high, the system can become unstable.\n\t * @returns The Kp value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getKp(): number;\n\t/**\n\t * Proportional gain constant. A small `kp` value will result in a less responsive controller, however, if `kp` is too high, the system can become unstable.\n\t * @throws {@link PhidgetError}\n\t * @param kp - The Kp value.\n\t */\n\tabstract setKp(kp: number): Promise<void>;\n\t/**\n\t * The most recent position value that the controller has reported.\n\t * \n\t * *   This value will always be between `minPosition` and `maxPosition`.\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getPosition(): number;\n\t/**\n\t * The minimum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinPosition(): number;\n\t/**\n\t * The maximum value that `targetPosition` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxPosition(): number;\n\t/**\n\t * Adds an offset (positive or negative) to the current position. Useful for zeroing position.\n\t * @throws {@link PhidgetError}\n\t * @param positionOffset - Amount to offset the position by\n\t */\n\tabstract addPositionOffset(positionOffset: number): void;\n\t/**\n\t * Change the units of your parameters so that your application is more intuitive.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The rescale factor value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetRescaleFactor(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.rescaleFactor === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.rescaleFactor);\n\t}\n\n\t/**\n\t * Change the units of your parameters so that your application is more intuitive.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t * @param rescaleFactor - The rescale factor value\n\t */\n\tabstract setRescaleFactor(rescaleFactor: number): void;\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * Before reading this description, it is important to note the difference between the units of `stallVelocity` and `dutyCycle`.\n\t * \n\t * *   `dutyCycle` is a number between -1 and 1 with units of 'duty cycle'. It simply represents the average voltage across the motor.\n\t * *   `stallVelocity` represents a real velocity (e.g. m/s, RPM, etc.) and the units are determined by the `rescaleFactor`. With a `rescaleFactor` of 1, the default units would be in commutations per second.\n\t * \n\t * If the load on your motor is large, your motor may begin rotating more slowly, or even fully stall. Depending on the voltage across your motor, this may result in a large amount of current through both the controller and the motor. In order to prevent damage in these situations, you can use the `stallVelocity` property.  \n\t *   \n\t * The `stallVelocity` should be set to the lowest velocity you would expect from your motor. The controller will then monitor the motor's velocity, as well as the `dutyCycle`, and prevent a 'dangerous stall' from occuring. If the controller detects a dangerous stall, it will immediately disengage the motor (i.e. `engaged` will be set to false) and an error will be reported to your program.\n\t * \n\t * *   A 'dangerous stall' will occur faster when the `dutyCycle` is higher (i.e. when the average voltage across the motor is higher)\n\t * *   A 'dangerous stall' will occur faster as (`stallVelocity` - motor velocity) becomes larger .\n\t * \n\t * Setting `stallVelocity` to 0 will turn off stall protection functionality.\n\t * @returns The stall velocity value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getStallVelocity(): number;\n\t/**\n\t * Before reading this description, it is important to note the difference between the units of `stallVelocity` and `dutyCycle`.\n\t * \n\t * *   `dutyCycle` is a number between -1 and 1 with units of 'duty cycle'. It simply represents the average voltage across the motor.\n\t * *   `stallVelocity` represents a real velocity (e.g. m/s, RPM, etc.) and the units are determined by the `rescaleFactor`. With a `rescaleFactor` of 1, the default units would be in commutations per second.\n\t * \n\t * If the load on your motor is large, your motor may begin rotating more slowly, or even fully stall. Depending on the voltage across your motor, this may result in a large amount of current through both the controller and the motor. In order to prevent damage in these situations, you can use the `stallVelocity` property.  \n\t *   \n\t * The `stallVelocity` should be set to the lowest velocity you would expect from your motor. The controller will then monitor the motor's velocity, as well as the `dutyCycle`, and prevent a 'dangerous stall' from occuring. If the controller detects a dangerous stall, it will immediately disengage the motor (i.e. `engaged` will be set to false) and an error will be reported to your program.\n\t * \n\t * *   A 'dangerous stall' will occur faster when the `dutyCycle` is higher (i.e. when the average voltage across the motor is higher)\n\t * *   A 'dangerous stall' will occur faster as (`stallVelocity` - motor velocity) becomes larger .\n\t * \n\t * Setting `stallVelocity` to 0 will turn off stall protection functionality.\n\t * @throws {@link PhidgetError}\n\t * @param stallVelocity - The stall velocity value.\n\t */\n\tabstract setStallVelocity(stallVelocity: number): Promise<void>;\n\t/**\n\t * The lower bound of `stallVelocity`.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinStallVelocity(): number;\n\t/**\n\t * The upper bound of `stallVelocity`.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxStallVelocity(): number;\n\t/**\n\t * This setting allows you to choose how hard the motor will resist being turned when it is not being driven forward or reverse. The `targetBrakingStrength` sets the relative amount of electrical braking to be applied to the DC motor, with `minBrakingStrength` corresponding to no braking (free-wheeling), and `maxBrakingStrength` indicating full braking.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free-wheeling. This means:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor, due to its momentum.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   As `targetBrakingStrength` increases, this will engage electrical braking of the DC motor. This means:\n\t *     *   The motor will stop more quickly if it is in motion when braking is requested.\n\t *     *   The motor shaft will resist rotation by outside forces.\n\t * *   This braking will only be applied during Failsafe and Emergency Stop conditions.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTargetBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.targetBrakingStrength);\n\t}\n\n\t/**\n\t * This setting allows you to choose how hard the motor will resist being turned when it is not being driven forward or reverse. The `targetBrakingStrength` sets the relative amount of electrical braking to be applied to the DC motor, with `minBrakingStrength` corresponding to no braking (free-wheeling), and `maxBrakingStrength` indicating full braking.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free-wheeling. This means:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor, due to its momentum.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   As `targetBrakingStrength` increases, this will engage electrical braking of the DC motor. This means:\n\t *     *   The motor will stop more quickly if it is in motion when braking is requested.\n\t *     *   The motor shaft will resist rotation by outside forces.\n\t * *   This braking will only be applied during Failsafe and Emergency Stop conditions.\n\t * @throws {@link PhidgetError}\n\t * @param targetBrakingStrength - The braking strength value\n\t */\n\tasync setTargetBrakingStrength(targetBrakingStrength: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: targetBrakingStrength });\n\t\tawait bp.send(this._ch, BP.SETBRAKINGDUTYCYCLE);\n\t}\n\n\t/**\n\t * If the controller is configured and the `targetPosition` is set, the motor will try to reach the `targetPosition`.\n\t * \n\t * *   If the `deadBand` is non-zero, the final position of the motor may not match the `targetPosition`\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getTargetPosition(): number;\n\t/**\n\t * If the controller is configured and the `targetPosition` is set, the motor will try to reach the `targetPosition`.\n\t * \n\t * *   If the `deadBand` is non-zero, the final position of the motor may not match the `targetPosition`\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t * @param targetPosition - The position value\n\t */\n\tabstract setTargetPosition(targetPosition: number): Promise<void>;\n\t/**\n\t * When moving, the motor velocity will be limited by this value.\n\t * \n\t * *   `velocityLimit` is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The velocity value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getVelocityLimit(): number;\n\t/**\n\t * When moving, the motor velocity will be limited by this value.\n\t * \n\t * *   `velocityLimit` is bounded by `minVelocityLimit` and `maxVelocityLimit`.\n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @throws {@link PhidgetError}\n\t * @param velocityLimit - The velocity value.\n\t */\n\tabstract setVelocityLimit(velocityLimit: number): Promise<void>;\n\t/**\n\t * The minimum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinVelocityLimit(): number;\n\t/**\n\t * The maximum value that `velocityLimit` can be set to.\n\t * \n\t * *   Units for `position`, `velocityLimit`, `acceleration`, and `deadBand` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxVelocityLimit(): number;\n}\nexport { MotorPositionControllerBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { MotorPositionControllerBase } from './MotorPositionController.gen';\nimport { ErrorEventCode, ErrorCode } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @public */\nclass MotorPositionController extends MotorPositionControllerBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.POSITIONCHANGE:\n\t\t\t\tthis.data.position = bp.getNumber(0);\n\t\t\t\tif (this._isAttachedDone && this.onPositionChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onPositionChange((this.data.position + this.data.positionOffset) * this.data.rescaleFactor);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_errorHandler(code: ErrorEventCode) {\n\t\tswitch (code) {\n\t\t\tcase ErrorEventCode.MOTOR_STALL_CONDITION:\n\t\t\t\tthis.data.engaged = 0;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.acceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.acceleration * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tasync setAcceleration(acceleration: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcAccel = acceleration / Math.abs(this.data.rescaleFactor);\n\n\t\tif (calcAccel < this.data.minAcceleration || calcAccel > this.data.maxAcceleration)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minAcceleration + \" - \" + this.maxAcceleration + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: calcAccel });\n\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t}\n\n\tgetMinAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAcceleration * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetMaxAcceleration() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAcceleration * Math.abs(this.data.rescaleFactor));\n\t}\n\n\taddPositionOffset(positionOffset: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.positionOffset += (positionOffset / this.data.rescaleFactor);\n\t}\n\n\tgetDeadBand() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.deadBand === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.deadBand * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tasync setDeadBand(deadBand: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcDeadband = deadBand / Math.abs(this.data.rescaleFactor);\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: calcDeadband });\n\t\tawait bp.send(this._ch, BP.SETDEADBAND);\n\t}\n\n\tgetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.position === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.position + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tgetMinPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.minPosition + this.data.positionOffset) * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetMaxPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.maxPosition + this.data.positionOffset) * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tsetRescaleFactor(rescaleFactor: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.rescaleFactor = rescaleFactor;\n\t}\n\n\tgetTargetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.targetPosition + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tasync setTargetPosition(targetPosition: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcPosition = (targetPosition / this.data.rescaleFactor) - this.data.positionOffset;\n\n\t\tif (calcPosition < this.data.minPosition || calcPosition > this.data.maxPosition)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minPosition + \" - \" + this.maxPosition + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"l\", value: calcPosition });\n\t\tawait bp.send(this._ch, BP.SETTARGETPOSITION);\n\t}\n\n\tgetVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.velocityLimit * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetStallVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.stallVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.stallVelocity * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tasync setStallVelocity(stallVelocity: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcVelocity = stallVelocity / Math.abs(this.data.rescaleFactor);\n\n\t\tif (calcVelocity < this.data.minStallVelocity || calcVelocity > this.data.maxStallVelocity)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minStallVelocity + \" - \" + this.maxStallVelocity + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: calcVelocity });\n\t\tawait bp.send(this._ch, BP.SETSTALLVELOCITY);\n\t}\n\n\tasync setVelocityLimit(velocityLimit: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcLimit = velocityLimit / Math.abs(this.data.rescaleFactor);\n\n\t\tif (calcLimit < this.data.minVelocityLimit || calcLimit > this.data.maxVelocityLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minVelocityLimit + \" - \" + this.maxVelocityLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: calcLimit });\n\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t}\n\n\tgetMinStallVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minStallVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minStallVelocity * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetMaxStallVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxStallVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxStallVelocity * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetMinVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVelocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVelocityLimit * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetMaxVelocityLimit() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVelocityLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVelocityLimit * Math.abs(this.data.rescaleFactor));\n\t}\n\n\tgetKd(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.kd === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\treturn (this.data.kd / Math.abs(this.data.rescaleFactor));\n\t\t\tdefault:\n\t\t\t\treturn (this.data.kd);\n\t\t}\n\t}\n\n\tasync setKd(kd: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tswitch (this._ch!.chDef.uid) {\n\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: (kd * Math.abs(this.data.rescaleFactor)) });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: kd });\n\t\t\t\tbreak;\n\t\t}\n\t\tawait bp.send(this._ch, BP.SETKD);\n\t}\n\n\tgetKi(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.ki === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\treturn (this.data.ki / Math.abs(this.data.rescaleFactor));\n\t\t\tdefault:\n\t\t\t\treturn (this.data.ki);\n\t\t}\n\t}\n\n\tasync setKi(ki: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tswitch (this._ch!.chDef.uid) {\n\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: (ki * Math.abs(this.data.rescaleFactor)) });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: ki });\n\t\t\t\tbreak;\n\t\t}\n\t\tawait bp.send(this._ch, BP.SETKI);\n\t}\n\n\tgetKp(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.kp === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\treturn (this.data.kp / Math.abs(this.data.rescaleFactor));\n\t\t\tdefault:\n\t\t\t\treturn (this.data.kp);\n\t\t}\n\t}\n\n\tasync setKp(kp: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tswitch (this._ch!.chDef.uid) {\n\t\t\tcase DeviceChannelUID._DCC1004_MOTORPOSITIONCONTROLLER_100:\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: (kp * Math.abs(this.data.rescaleFactor)) });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbp.set({ name: \"0\", type: \"g\", value: kp });\n\t\t\t\tbreak;\n\t\t}\n\t\tawait bp.send(this._ch, BP.SETKP);\n\t}\n\t\n\t/*START_UNRELEASED*/\n\tgetExpectedPosition(): number {\n\t\t// XXX implement hmm\n\t\tthrow new Error('Method not implemented.');\n\t} /*END_UNRELEASED*/\n}\n\nexport { MotorPositionController };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BLDCMotorData {\n\tpositionOffset: number, \n\tdataInterval: number,\n\tminDataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tcurrentLimit: number,\n\tmaxCurrentLimit: number,\n\tminCurrentLimit: number,\n\tacceleration: number,\n\ttargetBrakingStrength: number,\n\tmaxAcceleration: number,\n\tmaxBrakingStrength: number,\n\tmaxVelocity: number,\n\tmaxPosition: number,\n\tminVelocity: number,\n\tminAcceleration: number,\n\tminBrakingStrength: number,\n\tminPosition: number,\n\tposition: number,\n\trescaleFactor: number,\n\ttargetVelocity: number,\n\tvelocity: number,\n\tbrakingStrength: number,\n\tstallVelocity: number,\n\tminStallVelocity: number,\n\tmaxStallVelocity: number,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n}\n\nabstract class BLDCMotorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: BLDCMotorData;\n\t/**\n\t * **BrakingStrengthChange** event\n\t *  * `brakingStrength` - The braking strength value\n\t * ---\n\t * The most recent braking strength value will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   Regardless of the `dataInterval`, this event will occur only when the braking strength value has changed from the previous value reported.\n\t * *   Braking mode is enabled by setting the `velocity` to `minVelocity`\n\t */\n\tonBrakingStrengthChange: ((brakingStrength: number) => void) | null = null;\n\t/** @internal */\n\t_gotBrakingStrengthChangeErrorEvent?: boolean;\n\t/**\n\t * **PositionChange** event\n\t *  * `position` - The position value\n\t * ---\n\t * The most recent position value will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   Regardless of the `dataInterval`, this event will occur only when the position value has changed from the previous value reported.\n\t * *   Position values are calculated using Hall Effect sensors mounted on the motor, therefore, the resolution of position depends on the motor you are using.\n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees. For more information on how to apply the `rescaleFactor` to your application, see your controller's User Guide.\n\t */\n\tonPositionChange: ((position: number) => void) | null = null;\n\t/** @internal */\n\t_gotPositionChangeErrorEvent?: boolean;\n\t/**\n\t * **VelocityUpdate** event\n\t *  * `velocity` - The velocity value\n\t * ---\n\t * The most recent velocity value will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   This event will **always** occur when the `dataInterval` elapses. You can depend on this event for constant timing when implementing control loops in code. This is the last event to fire, giving you up-to-date access to all properties.\n\t */\n\tonVelocityUpdate: ((velocity: number) => void) | null = null;\n\t/** @internal */\n\t_gotVelocityUpdateErrorEvent?: boolean;\n\n\t/**\n\t * The BLDC Motor class controls the power applied to attached brushless DC motors to affect its speed and direction. It can also contain various other control and monitoring functions that aid in the control of brushless DC motors.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.BLDC_MOTOR;\n\t\tthis.name = \"BLDCMotor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETACCELERATION:\n\t\t\tthis.data.acceleration = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('Acceleration', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCURRENTLIMIT:\n\t\t\tthis.data.currentLimit = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('CurrentLimit', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tcase BP.SETSTALLVELOCITY:\n\t\t\tthis.data.stallVelocity = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('StallVelocity', bp);\n\t\t\tbreak;\n\t\tcase BP.SETBRAKINGDUTYCYCLE:\n\t\t\tthis.data.targetBrakingStrength = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetBrakingStrength', bp);\n\t\t\tbreak;\n\t\tcase BP.SETDUTYCYCLE:\n\t\t\tthis.data.targetVelocity = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('TargetVelocity', bp);\n\t\t\tbreak;\n\t\tcase BP.BRAKINGSTRENGTHCHANGE: {\n\t\t\tthis.data.brakingStrength = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onBrakingStrengthChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onBrakingStrengthChange(this.data.brakingStrength);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.DUTYCYCLECHANGE: {\n\t\t\tthis.data.velocity = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onVelocityUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onVelocityUpdate(this.data.velocity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): BLDCMotorData {\n\t\treturn {\n\t\t\tpositionOffset: 0, \n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tcurrentLimit: PUNK.DBL,\n\t\t\tmaxCurrentLimit: PUNK.DBL,\n\t\t\tminCurrentLimit: PUNK.DBL,\n\t\t\tacceleration: PUNK.DBL,\n\t\t\ttargetBrakingStrength: PUNK.DBL,\n\t\t\tmaxAcceleration: PUNK.DBL,\n\t\t\tmaxBrakingStrength: PUNK.DBL,\n\t\t\tmaxVelocity: PUNK.DBL,\n\t\t\tmaxPosition: PUNK.INT64,\n\t\t\tminVelocity: PUNK.DBL,\n\t\t\tminAcceleration: PUNK.DBL,\n\t\t\tminBrakingStrength: PUNK.DBL,\n\t\t\tminPosition: PUNK.INT64,\n\t\t\tposition: PUNK.INT64,\n\t\t\trescaleFactor: PUNK.DBL,\n\t\t\ttargetVelocity: PUNK.DBL,\n\t\t\tvelocity: PUNK.DBL,\n\t\t\tbrakingStrength: PUNK.DBL,\n\t\t\tstallVelocity: PUNK.DBL,\n\t\t\tminStallVelocity: PUNK.DBL,\n\t\t\tmaxStallVelocity: PUNK.DBL,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.stallVelocity = 400;\n\t\t\tthis.data.minStallVelocity = 0;\n\t\t\tthis.data.maxStallVelocity = 2000;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.acceleration = 1;\n\t\t\tthis.data.targetBrakingStrength = 0;\n\t\t\tthis.data.maxAcceleration = 100;\n\t\t\tthis.data.maxBrakingStrength = 1;\n\t\t\tthis.data.maxVelocity = 1;\n\t\t\tthis.data.maxPosition = 1000000000000000;\n\t\t\tthis.data.minVelocity = 0;\n\t\t\tthis.data.minAcceleration = 0.1;\n\t\t\tthis.data.minBrakingStrength = 0;\n\t\t\tthis.data.minPosition = -1000000000000000;\n\t\t\tthis.data.position = 0;\n\t\t\tthis.data.rescaleFactor = 1;\n\t\t\tthis.data.targetVelocity = 0;\n\t\t\tthis.data.stallVelocity = 400;\n\t\t\tthis.data.minStallVelocity = 0;\n\t\t\tthis.data.maxStallVelocity = 2000;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_100:\n\t\tcase DeviceChannelUID._DCC1100_BLDCMOTOR_120:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.acceleration });\n\t\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.targetBrakingStrength });\n\t\t\tawait bp.send(this._ch, BP.SETBRAKINGDUTYCYCLE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.targetVelocity });\n\t\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.stallVelocity });\n\t\t\tawait bp.send(this._ch, BP.SETSTALLVELOCITY);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.brakingStrength == PUNK.DBL)\n\t\t\t&& ! this._gotBrakingStrengthChangeErrorEvent)\n\t\t\treturn false;\n\t\tif ((this.data.velocity == PUNK.DBL)\n\t\t\t&& ! this._gotVelocityUpdateErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.brakingStrength != PUNK.DBL)\n\t\t\tif (this.onBrakingStrengthChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onBrakingStrengthChange(this.data.brakingStrength);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t\tif(this.data.velocity != PUNK.DBL)\n\t\t\tif (this.onVelocityUpdate)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onVelocityUpdate(this.data.velocity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   The acceleration is bounded by `minAcceleration` and `maxAcceleration`\n\t * @throws {@link PhidgetError}\n\t */\n\tget acceleration() { return this.getAcceleration(); }\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minAcceleration() { return this.getMinAcceleration(); }\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxAcceleration() { return this.getMaxAcceleration(); }\n\t/**\n\t * The most recent braking strength value that the controller has reported.\n\t * @throws {@link PhidgetError}\n\t */\n\tget brakingStrength() { return this.getBrakingStrength(); }\n\t/**\n\t * The minimum value that `targetBrakingStrength` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minBrakingStrength() { return this.getMinBrakingStrength(); }\n\t/**\n\t * The maximum value that `targetBrakingStrength` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxBrakingStrength() { return this.getMaxBrakingStrength(); }\n\t/**\n\t * The controller will limit the current through the motor to the `currentLimit` value.\n\t * @throws {@link PhidgetError}\n\t */\n\tget currentLimit() { return this.getCurrentLimit(); }\n\t/**\n\t * The minimum value that `currentLimit` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minCurrentLimit() { return this.getMinCurrentLimit(); }\n\t/**\n\t * The maximum value that `currentLimit` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxCurrentLimit() { return this.getMaxCurrentLimit(); }\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `VelocityUpdate` / `PositionChange` / `BrakingStrengthChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The most recent position value that the controller has reported.\n\t * \n\t * *   Position values are calculated using Hall Effect sensors mounted on the motor, therefore, the resolution of position depends on the motor you are using.\n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees. For more information on how to apply the `rescaleFactor` to your application, see your controller's User Guide.\n\t * @throws {@link PhidgetError}\n\t */\n\tget position() { return this.getPosition(); }\n\t/**\n\t * The lower bound of `position`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPosition() { return this.getMinPosition(); }\n\t/**\n\t * The upper bound of `position`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPosition() { return this.getMaxPosition(); }\n\t/**\n\t * Change the units of your parameters so that your application is more intuitive.\n\t * \n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees. For more information on how to apply the `rescaleFactor` to your application, see your controller's User Guide.\n\t * @throws {@link PhidgetError}\n\t */\n\tget rescaleFactor() { return this.getRescaleFactor(); }\n\tset rescaleFactor(rescaleFactor: number) { this.setRescaleFactor(rescaleFactor); }\n\t/**\n\t * Before reading this description, it is important to note the difference between the units of `stallVelocity` and `velocity`.\n\t * \n\t * *   `velocity` is a number between -1 and 1 with units of 'duty cycle'. It simply represents the average voltage across the motor.\n\t * *   `stallVelocity` represents a real velocity (e.g. m/s, RPM, etc.) and the units are determined by the `rescaleFactor`. With a `rescaleFactor` of 1, the default units would be in commutations per second.\n\t * \n\t * If the load on your motor is large, your motor may begin rotating more slowly, or even fully stall. Depending on the voltage across your motor, this may result in a large amount of current through both the controller and the motor. In order to prevent damage in these situations, you can use the `stallVelocity` property.  \n\t *   \n\t * The `stallVelocity` should be set to the lowest velocity you would expect from your motor. The controller will then monitor the motor's velocity, as well as the `velocity`, and prevent a 'dangerous stall' from occuring. If the controller detects a dangerous stall, it will immediately reduce the `velocity` (i.e. average voltage) to 0 and an error will be reported to your program.\n\t * \n\t * *   A 'dangerous stall' will occur faster when the `velocity` is higher (i.e. when the average voltage across the motor is higher)\n\t * *   A 'dangerous stall' will occur faster as (`stallVelocity` - motor velocity) becomes larger .\n\t * \n\t * Setting `stallVelocity` to 0 will turn off stall protection functionality.\n\t * @throws {@link PhidgetError}\n\t */\n\tget stallVelocity() { return this.getStallVelocity(); }\n\t/**\n\t * The lower bound of `stallVelocity`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minStallVelocity() { return this.getMinStallVelocity(); }\n\t/**\n\t * The upper bound of `stallVelocity`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxStallVelocity() { return this.getMaxStallVelocity(); }\n\t/**\n\t * When a motor is not being actively driven forward or reverse, you can choose if the motor will be allowed to freely turn, or will resist being turned.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free wheeling, this will have the following effects:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor (i.e. `velocity` is 0), due to inertia.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   A higher `targetBrakingStrength` value will resist being turned, this will have the following effects:\n\t *     *   The motor will more stop more quickly if it is in motion and braking has been requested. It will fight against the rotation of the shaft.\n\t * *   Braking mode is enabled by setting the `velocity` to `minVelocity`\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetBrakingStrength() { return this.getTargetBrakingStrength(); }\n\t/**\n\t * The average voltage across the motor is based on the `targetVelocity` value.\n\t * \n\t * *   At a constant load, increasing the target velocity will increase the speed of the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * *   Setting `targetVelocity` to `minVelocity` will stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   The units of `targetVelocity` and `acceleration` refer to 'duty cycle'. This is because the controller must rapidly switch the power on/off (i.e. change the duty cycle) in order to manipulate the voltage across the motor.\n\t * @throws {@link PhidgetError}\n\t */\n\tget targetVelocity() { return this.getTargetVelocity(); }\n\t/**\n\t * The most recent velocity value that the controller has reported.\n\t * @throws {@link PhidgetError}\n\t */\n\tget velocity() { return this.getVelocity(); }\n\t/**\n\t * The minimum value that `targetVelocity` can be set to.\n\t * \n\t * *   Set the `targetVelocity` to `minVelocity` to stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minVelocity() { return this.getMinVelocity(); }\n\t/**\n\t * The maximum value that `targetVelocity` can be set to.\n\t * \n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxVelocity() { return this.getMaxVelocity(); }\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   The acceleration is bounded by `minAcceleration` and `maxAcceleration`\n\t * @returns The acceleration value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetAcceleration(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.acceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.acceleration);\n\t}\n\n\t/**\n\t * The rate at which the controller can change the motor's `velocity`.\n\t * \n\t * *   The acceleration is bounded by `minAcceleration` and `maxAcceleration`\n\t * @throws {@link PhidgetError}\n\t * @param acceleration - The acceleration value\n\t */\n\tasync setAcceleration(acceleration: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (acceleration < this.data.minAcceleration || acceleration > this.data.maxAcceleration)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minAcceleration + \" - \" + this.data.maxAcceleration + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: acceleration });\n\t\tawait bp.send(this._ch, BP.SETACCELERATION);\n\t}\n\n\t/**\n\t * The minimum value that `acceleration` can be set to.\n\t * @returns The acceleration value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinAcceleration(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minAcceleration);\n\t}\n\n\t/**\n\t * The maximum value that `acceleration` can be set to.\n\t * @returns The acceleration value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxAcceleration(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxAcceleration === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxAcceleration);\n\t}\n\n\t/**\n\t * The most recent braking strength value that the controller has reported.\n\t * @returns The braking strength value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.brakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.brakingStrength);\n\t}\n\n\t/**\n\t * The minimum value that `targetBrakingStrength` can be set to.\n\t * @returns The braking value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minBrakingStrength);\n\t}\n\n\t/**\n\t * The maximum value that `targetBrakingStrength` can be set to.\n\t * @returns The braking value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxBrakingStrength);\n\t}\n\n\t/**\n\t * The controller will limit the current through the motor to the `currentLimit` value.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.currentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.currentLimit);\n\t}\n\n\t/**\n\t * The controller will limit the current through the motor to the `currentLimit` value.\n\t * @throws {@link PhidgetError}\n\t * @param currentLimit - The current value\n\t */\n\tasync setCurrentLimit(currentLimit: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (currentLimit < this.data.minCurrentLimit || currentLimit > this.data.maxCurrentLimit)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minCurrentLimit + \" - \" + this.data.maxCurrentLimit + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: currentLimit });\n\t\tawait bp.send(this._ch, BP.SETCURRENTLIMIT);\n\t}\n\n\t/**\n\t * The minimum value that `currentLimit` can be set to.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minCurrentLimit);\n\t}\n\n\t/**\n\t * The maximum value that `currentLimit` can be set to.\n\t * @returns The current value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxCurrentLimit(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxCurrentLimit === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxCurrentLimit);\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `VelocityUpdate` / `PositionChange` / `BrakingStrengthChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `VelocityUpdate` / `PositionChange` / `BrakingStrengthChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For BLDC Motor channels, this will disengage the motor. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * The most recent position value that the controller has reported.\n\t * \n\t * *   Position values are calculated using Hall Effect sensors mounted on the motor, therefore, the resolution of position depends on the motor you are using.\n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees. For more information on how to apply the `rescaleFactor` to your application, see your controller's User Guide.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getPosition(): number;\n\t/**\n\t * The lower bound of `position`.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinPosition(): number;\n\t/**\n\t * The upper bound of `position`.\n\t * @returns The position value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxPosition(): number;\n\t/**\n\t * Adds an offset (positive or negative) to the current position.\n\t * \n\t * *   This can be especially useful for zeroing position.\n\t * @throws {@link PhidgetError}\n\t * @param positionOffset - Amount to offset the position by\n\t */\n\tabstract addPositionOffset(positionOffset: number): void;\n\t/**\n\t * Change the units of your parameters so that your application is more intuitive.\n\t * \n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees. For more information on how to apply the `rescaleFactor` to your application, see your controller's User Guide.\n\t * @returns The rescale factor value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetRescaleFactor(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.rescaleFactor === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.rescaleFactor);\n\t}\n\n\t/**\n\t * Change the units of your parameters so that your application is more intuitive.\n\t * \n\t * *   Units for `position` can be set by the user through the `rescaleFactor`. The `rescaleFactor` allows you to use more intuitive units such as rotations, or degrees. For more information on how to apply the `rescaleFactor` to your application, see your controller's User Guide.\n\t * @throws {@link PhidgetError}\n\t * @param rescaleFactor - The rescale factor value\n\t */\n\tabstract setRescaleFactor(rescaleFactor: number): void;\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n\t/**\n\t * Before reading this description, it is important to note the difference between the units of `stallVelocity` and `velocity`.\n\t * \n\t * *   `velocity` is a number between -1 and 1 with units of 'duty cycle'. It simply represents the average voltage across the motor.\n\t * *   `stallVelocity` represents a real velocity (e.g. m/s, RPM, etc.) and the units are determined by the `rescaleFactor`. With a `rescaleFactor` of 1, the default units would be in commutations per second.\n\t * \n\t * If the load on your motor is large, your motor may begin rotating more slowly, or even fully stall. Depending on the voltage across your motor, this may result in a large amount of current through both the controller and the motor. In order to prevent damage in these situations, you can use the `stallVelocity` property.  \n\t *   \n\t * The `stallVelocity` should be set to the lowest velocity you would expect from your motor. The controller will then monitor the motor's velocity, as well as the `velocity`, and prevent a 'dangerous stall' from occuring. If the controller detects a dangerous stall, it will immediately reduce the `velocity` (i.e. average voltage) to 0 and an error will be reported to your program.\n\t * \n\t * *   A 'dangerous stall' will occur faster when the `velocity` is higher (i.e. when the average voltage across the motor is higher)\n\t * *   A 'dangerous stall' will occur faster as (`stallVelocity` - motor velocity) becomes larger .\n\t * \n\t * Setting `stallVelocity` to 0 will turn off stall protection functionality.\n\t * @returns The stall velocity value.\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getStallVelocity(): number;\n\t/**\n\t * Before reading this description, it is important to note the difference between the units of `stallVelocity` and `velocity`.\n\t * \n\t * *   `velocity` is a number between -1 and 1 with units of 'duty cycle'. It simply represents the average voltage across the motor.\n\t * *   `stallVelocity` represents a real velocity (e.g. m/s, RPM, etc.) and the units are determined by the `rescaleFactor`. With a `rescaleFactor` of 1, the default units would be in commutations per second.\n\t * \n\t * If the load on your motor is large, your motor may begin rotating more slowly, or even fully stall. Depending on the voltage across your motor, this may result in a large amount of current through both the controller and the motor. In order to prevent damage in these situations, you can use the `stallVelocity` property.  \n\t *   \n\t * The `stallVelocity` should be set to the lowest velocity you would expect from your motor. The controller will then monitor the motor's velocity, as well as the `velocity`, and prevent a 'dangerous stall' from occuring. If the controller detects a dangerous stall, it will immediately reduce the `velocity` (i.e. average voltage) to 0 and an error will be reported to your program.\n\t * \n\t * *   A 'dangerous stall' will occur faster when the `velocity` is higher (i.e. when the average voltage across the motor is higher)\n\t * *   A 'dangerous stall' will occur faster as (`stallVelocity` - motor velocity) becomes larger .\n\t * \n\t * Setting `stallVelocity` to 0 will turn off stall protection functionality.\n\t * @throws {@link PhidgetError}\n\t * @param stallVelocity - The stall velocity value.\n\t */\n\tabstract setStallVelocity(stallVelocity: number): Promise<void>;\n\t/**\n\t * The lower bound of `stallVelocity`.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMinStallVelocity(): number;\n\t/**\n\t * The upper bound of `stallVelocity`.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getMaxStallVelocity(): number;\n\t/**\n\t * When a motor is not being actively driven forward or reverse, you can choose if the motor will be allowed to freely turn, or will resist being turned.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free wheeling, this will have the following effects:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor (i.e. `velocity` is 0), due to inertia.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   A higher `targetBrakingStrength` value will resist being turned, this will have the following effects:\n\t *     *   The motor will more stop more quickly if it is in motion and braking has been requested. It will fight against the rotation of the shaft.\n\t * *   Braking mode is enabled by setting the `velocity` to `minVelocity`\n\t * @returns The braking value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTargetBrakingStrength(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetBrakingStrength === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.targetBrakingStrength);\n\t}\n\n\t/**\n\t * When a motor is not being actively driven forward or reverse, you can choose if the motor will be allowed to freely turn, or will resist being turned.\n\t * \n\t * *   A low `targetBrakingStrength` value corresponds to free wheeling, this will have the following effects:\n\t *     *   The motor will continue to rotate after the controller is no longer driving the motor (i.e. `velocity` is 0), due to inertia.\n\t *     *   The motor shaft will provide little resistance to being turned when it is stopped.\n\t * *   A higher `targetBrakingStrength` value will resist being turned, this will have the following effects:\n\t *     *   The motor will more stop more quickly if it is in motion and braking has been requested. It will fight against the rotation of the shaft.\n\t * *   Braking mode is enabled by setting the `velocity` to `minVelocity`\n\t * @throws {@link PhidgetError}\n\t * @param targetBrakingStrength - The braking value\n\t */\n\tasync setTargetBrakingStrength(targetBrakingStrength: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: targetBrakingStrength });\n\t\tawait bp.send(this._ch, BP.SETBRAKINGDUTYCYCLE);\n\t}\n\n\t/**\n\t * The average voltage across the motor is based on the `targetVelocity` value.\n\t * \n\t * *   At a constant load, increasing the target velocity will increase the speed of the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * *   Setting `targetVelocity` to `minVelocity` will stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   The units of `targetVelocity` and `acceleration` refer to 'duty cycle'. This is because the controller must rapidly switch the power on/off (i.e. change the duty cycle) in order to manipulate the voltage across the motor.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetTargetVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.targetVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.targetVelocity);\n\t}\n\n\t/**\n\t * The average voltage across the motor is based on the `targetVelocity` value.\n\t * \n\t * *   At a constant load, increasing the target velocity will increase the speed of the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * *   Setting `targetVelocity` to `minVelocity` will stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   The units of `targetVelocity` and `acceleration` refer to 'duty cycle'. This is because the controller must rapidly switch the power on/off (i.e. change the duty cycle) in order to manipulate the voltage across the motor.\n\t * @throws {@link PhidgetError}\n\t * @param targetVelocity - The velocity value\n\t */\n\tasync setTargetVelocity(targetVelocity: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: targetVelocity });\n\t\tawait bp.send(this._ch, BP.SETDUTYCYCLE);\n\t}\n\n\t/**\n\t * The most recent velocity value that the controller has reported.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.velocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.velocity);\n\t}\n\n\t/**\n\t * The minimum value that `targetVelocity` can be set to.\n\t * \n\t * *   Set the `targetVelocity` to `minVelocity` to stop the motor. See `targetBrakingStrength` for more information on stopping the motor.\n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minVelocity);\n\t}\n\n\t/**\n\t * The maximum value that `targetVelocity` can be set to.\n\t * \n\t * *   `targetVelocity` is bounded by -`maxVelocity` and +`maxVelocity`, where a sign change (±) is indicitave of a direction change.\n\t * @returns The velocity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxVelocity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxVelocity);\n\t}\n\n}\nexport { BLDCMotorBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { BLDCMotorBase } from './BLDCMotor.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { ErrorCode } from '../Enumerations.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { logEventException } from '../Logging';\n\n/** @public */\nclass BLDCMotor extends BLDCMotorBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.POSITIONCHANGE:\n\t\t\t\tthis.data.position = bp.getNumber(0);\n\t\t\t\tif (this._isAttachedDone && this.onPositionChange) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onPositionChange((this.data.position + this.data.positionOffset) * this.data.rescaleFactor);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetRescaleFactor(rescaleFactor: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.rescaleFactor = rescaleFactor;\n\t}\n\n\tgetPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.position === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.position * this.data.rescaleFactor);\n\t}\n\n\tgetMinPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.minPosition + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\tgetMaxPosition() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPosition === PUNK.INT64)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn ((this.data.maxPosition + this.data.positionOffset) * this.data.rescaleFactor);\n\t}\n\n\taddPositionOffset(positionOffset: number) {\n\t\tthis._assertOpen();\n\n\t\tthis.data.positionOffset += (positionOffset / this.data.rescaleFactor)\n\t}\n\n\tasync setStallVelocity(stallVelocity: number) {\n\t\tthis._assertOpen();\n\n\t\tconst calcVelocity = stallVelocity / this.data.rescaleFactor;\n\n\t\tif (calcVelocity < this.data.minStallVelocity || calcVelocity > this.data.maxStallVelocity)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.minStallVelocity + \" - \" + this.maxStallVelocity + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: calcVelocity });\n\t\tawait bp.send(this._ch, BP.SETSTALLVELOCITY);\n\t}\n\n\tgetStallVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.stallVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.stallVelocity * this.data.rescaleFactor);\n\t}\n\n\tgetMinStallVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minStallVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minStallVelocity * this.data.rescaleFactor);\n\t}\n\n\tgetMaxStallVelocity() {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxStallVelocity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxStallVelocity * this.data.rescaleFactor);\n\t}\n}\n\nexport { BLDCMotor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface DistanceSensorData {\n\tamplitudes: [number, number, number, number, number, number, number, number],\n\tdistances: [number, number, number, number, number, number, number, number],\n\tcount: number, \n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxDistance: number,\n\tmaxDistanceChangeTrigger: number,\n\tminDataInterval: number,\n\tminDistance: number,\n\tminDistanceChangeTrigger: number,\n\tdistance: number,\n\tdistanceChangeTrigger: number,\n\tsonarQuietMode: number,\n}\n\nabstract class DistanceSensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: DistanceSensorData;\n\t/**\n\t * **DistanceChange** event\n\t *  * `distance` - The current distance\n\t * ---\n\t * The most recent distance value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `distanceChangeTrigger` has been set to a non-zero value, the `DistanceChange` event will not occur until the distance has changed by at least the `distanceChangeTrigger` value.\n\t */\n\tonDistanceChange: ((distance: number) => void) | null = null;\n\t/** @internal */\n\t_gotDistanceChangeErrorEvent?: boolean;\n\t/**\n\t * **SonarReflectionsUpdate** event\n\t *  * `distances` - The reflection values\n\t *  * `amplitudes` - The amplitude values\n\t *  * `count` - The number of reflections detected\n\t * ---\n\t * The most recent reflections the channel has detected will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `distanceChangeTrigger` has been set to a non-zero value, the `SonarReflectionsUpdate` event will not occur until the distance has changed by at least the `distanceChangeTrigger` value.\n\t * *   The closest reflection will be placed at index 0 of the _distances_ array, and the furthest reflection at index 7.\n\t * *   If you are only interested in the closest reflection, you can simply use the `DistanceChange` event.\n\t * *   The values reported as amplitudes are relative amplitudes of the reflections that are normalized to an arbitrary scale.\n\t */\n\tonSonarReflectionsUpdate: ((distances: readonly [number, number, number, number, number, number, number, number], amplitudes: readonly [number, number, number, number, number, number, number, number], count: number) => void) | null = null;\n\t/** @internal */\n\t_gotSonarReflectionsUpdateErrorEvent?: boolean;\n\n\t/**\n\t * The Distance Sensor class gathers data from the distance sensor on a Phidget board.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.DISTANCE_SENSOR;\n\t\tthis.name = \"DistanceSensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.distanceChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DistanceChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSONARQUIETMODE:\n\t\t\tthis.data.sonarQuietMode = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('SonarQuietMode', bp);\n\t\t\tbreak;\n\t\tcase BP.DISTANCECHANGE: {\n\t\t\tthis.data.distance = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onDistanceChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onDistanceChange(this.data.distance);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.SONARUPDATE: {\n\t\t\tif (this._isAttachedDone && this.onSonarReflectionsUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onSonarReflectionsUpdate(bp.entries[0].v as readonly [number, number, number, number, number, number, number, number], bp.entries[1].v as readonly [number, number, number, number, number, number, number, number], bp.entries[2].v as number);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): DistanceSensorData {\n\t\treturn {\n\t\t\tamplitudes: [PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32],\n\t\t\tdistances: [PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32, PUNK.UINT32],\n\t\t\tcount: 0, \n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxDistance: PUNK.UINT32,\n\t\t\tmaxDistanceChangeTrigger: PUNK.UINT32,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminDistance: PUNK.UINT32,\n\t\t\tminDistanceChangeTrigger: PUNK.UINT32,\n\t\t\tdistance: PUNK.UINT32,\n\t\t\tdistanceChangeTrigger: PUNK.UINT32,\n\t\t\tsonarQuietMode: PUNK.BOOL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxDistance = 200;\n\t\t\tthis.data.maxDistanceChangeTrigger = 200;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.minDistance = 0;\n\t\t\tthis.data.minDistanceChangeTrigger = 0;\n\t\t\tthis.data.distanceChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 33.333333333333336;\n\t\t\tthis.data.maxDistance = 650;\n\t\t\tthis.data.maxDistanceChangeTrigger = 650;\n\t\t\tthis.data.minDataInterval = 30;\n\t\t\tthis.data.minDistance = 0;\n\t\t\tthis.data.minDistanceChangeTrigger = 0;\n\t\t\tthis.data.distanceChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 33.333333333333336;\n\t\t\tthis.data.maxDistance = 1300;\n\t\t\tthis.data.maxDistanceChangeTrigger = 1300;\n\t\t\tthis.data.minDataInterval = 30;\n\t\t\tthis.data.minDistance = 0;\n\t\t\tthis.data.minDistanceChangeTrigger = 0;\n\t\t\tthis.data.distanceChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxDistance = 10000;\n\t\t\tthis.data.maxDistanceChangeTrigger = 10000;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.minDistance = 40;\n\t\t\tthis.data.minDistanceChangeTrigger = 0;\n\t\t\tthis.data.distanceChangeTrigger = 0;\n\t\t\tthis.data.sonarQuietMode = 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._DST1000_DISTANCESENSOR_100:\n\t\tcase DeviceChannelUID._DST1001_DISTANCESENSOR_100:\n\t\tcase DeviceChannelUID._DST1002_DISTANCESENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.distanceChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._DST1200_DISTANCESENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: this.data.distanceChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.sonarQuietMode });\n\t\t\tawait bp.send(this._ch, BP.SETSONARQUIETMODE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.distance == PUNK.UINT32)\n\t\t\t&& ! this._gotDistanceChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.distance != PUNK.UINT32)\n\t\t\tif (this.onDistanceChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onDistanceChange(this.data.distance);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the `distanceChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent distance value that the channel has reported.\n\t * \n\t * *   This value will always be between `minDistance` and `maxDistance`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget distance() { return this.getDistance(); }\n\t/**\n\t * The minimum distance that a event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDistance() { return this.getMinDistance(); }\n\t/**\n\t * The maximum distance that a event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDistance() { return this.getMaxDistance(); }\n\t/**\n\t * The channel will not issue an event until the distance value has changed by the amount specified by the `distanceChangeTrigger`.\n\t * \n\t * *   Setting the `distanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering,\n\t * @throws {@link PhidgetError}\n\t */\n\tget distanceChangeTrigger() { return this.getDistanceChangeTrigger(); }\n\t/**\n\t * The minimum value that `distanceChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDistanceChangeTrigger() { return this.getMinDistanceChangeTrigger(); }\n\t/**\n\t * The maximum value that `distanceChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDistanceChangeTrigger() { return this.getMaxDistanceChangeTrigger(); }\n\t/**\n\t * When set to true, the device will operate more quietly.\n\t * \n\t * *   The measurable range is reduced when operating in quiet mode.\n\t * @throws {@link PhidgetError}\n\t */\n\tget sonarQuietMode() { return this.getSonarQuietMode(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the `distanceChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between events can also be affected by the `distanceChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent distance value that the channel has reported.\n\t * \n\t * *   This value will always be between `minDistance` and `maxDistance`.\n\t * @returns The distance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDistance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.distance === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.distance > this.data.maxDistance)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.distance < this.data.minDistance)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.distance);\n\t}\n\n\t/**\n\t * The minimum distance that a event will report.\n\t * @returns The distance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDistance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDistance === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDistance);\n\t}\n\n\t/**\n\t * The maximum distance that a event will report.\n\t * @returns The distance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDistance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDistance === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDistance);\n\t}\n\n\t/**\n\t * The channel will not issue an event until the distance value has changed by the amount specified by the `distanceChangeTrigger`.\n\t * \n\t * *   Setting the `distanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering,\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDistanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.distanceChangeTrigger === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.distanceChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue an event until the distance value has changed by the amount specified by the `distanceChangeTrigger`.\n\t * \n\t * *   Setting the `distanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering,\n\t * @throws {@link PhidgetError}\n\t * @param distanceChangeTrigger - The change trigger value\n\t */\n\tasync setDistanceChangeTrigger(distanceChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (distanceChangeTrigger < this.data.minDistanceChangeTrigger || distanceChangeTrigger > this.data.maxDistanceChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDistanceChangeTrigger + \" - \" + this.data.maxDistanceChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: distanceChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `distanceChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDistanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDistanceChangeTrigger === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDistanceChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `distanceChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDistanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDistanceChangeTrigger === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDistanceChangeTrigger);\n\t}\n\n\t/**\n\t * When set to true, the device will operate more quietly.\n\t * \n\t * *   The measurable range is reduced when operating in quiet mode.\n\t * @returns The quiet mode value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSonarQuietMode(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.sonarQuietMode === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.sonarQuietMode);\n\t}\n\n\t/**\n\t * When set to true, the device will operate more quietly.\n\t * \n\t * *   The measurable range is reduced when operating in quiet mode.\n\t * @throws {@link PhidgetError}\n\t * @param sonarQuietMode - The quiet mode value\n\t */\n\tasync setSonarQuietMode(sonarQuietMode: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (sonarQuietMode !== false && sonarQuietMode !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (sonarQuietMode ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETSONARQUIETMODE);\n\t}\n\n\t/**\n\t * The most recent reflection values that the channel has reported.\n\t * \n\t * *   The distance values will always be between `minDistance` and `maxDistance`.\n\t * *   The closest reflection will be placed at index 0 of the distances array, and the furthest reflection at index 7\n\t * *   The amplitude values are relative amplitudes of the reflections that are normalized to an arbitrary scale.\n\t * @returns\n\t * \t- distances: The reflection values\n\t * \t- amplitudes: The amplitude values\n\t * \t- count: The number of reflections\n\t * @throws {@link PhidgetError}\n\t */\n\tabstract getSonarReflections(): {distances: readonly [number, number, number, number, number, number, number, number], amplitudes: readonly [number, number, number, number, number, number, number, number], count: number};\n}\nexport { DistanceSensorBase };\n","import { DistanceSensorBase } from './DistanceSensor.gen';\nimport { ErrorEventCode } from '../Enumerations.gen';\nimport { BP } from '../BridgePackets.gen';\nimport { BridgePacket, PUNK } from '../BridgePacket';\n\n/** @public */\nclass DistanceSensor extends DistanceSensorBase {\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\t\tswitch (bp.vpkt) {\n\t\t\tcase BP.SONARUPDATE:\n\t\t\t\tthis.data.distances = bp.getArray(0) as [number, number, number, number, number, number, number, number];\n\t\t\t\tthis.data.amplitudes = bp.getArray(1) as [number, number, number, number, number, number, number, number];\n\t\t\t\tthis.data.count = bp.getNumber(2);\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._bridgeInput(bp);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** @internal */\n\t_errorHandler(code: ErrorEventCode) {\n\t\tswitch (code) {\n\t\t\tcase ErrorEventCode.SATURATION:\n\t\t\tcase ErrorEventCode.OUT_OF_RANGE:\n\t\t\t\tthis.data.distance = PUNK.UINT32;\n\t\t\t\tthis._gotDistanceChangeErrorEvent = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetSonarReflections() {\n\t\tthis._assertOpen();\n\t\treturn ({\n\t\t\tdistances: this.data.distances,\n\t\t\tamplitudes: this.data.amplitudes,\n\t\t\tcount: this.data.count\n\t\t});\n\t}\n}\n\nexport { DistanceSensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface HumiditySensorData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxHumidity: number,\n\tmaxHumidityChangeTrigger: number,\n\tminDataInterval: number,\n\tminHumidity: number,\n\tminHumidityChangeTrigger: number,\n\thumidity: number,\n\thumidityChangeTrigger: number,\n}\n\nabstract class HumiditySensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: HumiditySensorData;\n\t/**\n\t * **HumidityChange** event\n\t *  * `humidity` - The ambient relative humidity\n\t * ---\n\t * The most recent humidity value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `humidityChangeTrigger` has been set to a non-zero value, the `HumidityChange` event will not occur until the humidity has changed by at least the `humidityChangeTrigger` value.\n\t */\n\tonHumidityChange: ((humidity: number) => void) | null = null;\n\t/** @internal */\n\t_gotHumidityChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Humidity Sensor class gathers relative humidity data from the Phidget and makes it available to your code.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.HUMIDITY_SENSOR;\n\t\tthis.name = \"HumiditySensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.humidityChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('HumidityChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.HUMIDITYCHANGE: {\n\t\t\tthis.data.humidity = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onHumidityChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onHumidityChange(this.data.humidity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): HumiditySensorData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxHumidity: PUNK.DBL,\n\t\t\tmaxHumidityChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminHumidity: PUNK.DBL,\n\t\t\tminHumidityChangeTrigger: PUNK.DBL,\n\t\t\thumidity: PUNK.DBL,\n\t\t\thumidityChangeTrigger: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\t\tthis.data.dataInterval = 500;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 2;\n\t\t\tthis.data.maxHumidity = 100;\n\t\t\tthis.data.maxHumidityChangeTrigger = 100;\n\t\t\tthis.data.minDataInterval = 500;\n\t\t\tthis.data.minHumidity = 0;\n\t\t\tthis.data.minHumidityChangeTrigger = 0;\n\t\t\tthis.data.humidityChangeTrigger = 0;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 20;\n\t\t\tthis.data.maxHumidity = 100;\n\t\t\tthis.data.maxHumidityChangeTrigger = 100;\n\t\t\tthis.data.minDataInterval = 50;\n\t\t\tthis.data.minHumidity = 0;\n\t\t\tthis.data.minHumidityChangeTrigger = 0;\n\t\t\tthis.data.humidityChangeTrigger = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._HUM1000_HUMIDITYSENSOR_100:\n\t\tcase DeviceChannelUID._HUM1001_HUMIDITYSENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.humidityChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.humidity == PUNK.DBL)\n\t\t\t&& ! this._gotHumidityChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.humidity != PUNK.DBL)\n\t\t\tif (this.onHumidityChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onHumidityChange(this.data.humidity);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `HumidityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `HumidityChange` events can also be affected by the `humidityChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent humidity value that the channel has reported.\n\t * \n\t * *   This value will always be between `minHumidity` and `maxHumidity`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget humidity() { return this.getHumidity(); }\n\t/**\n\t * The minimum value that the `HumidityChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minHumidity() { return this.getMinHumidity(); }\n\t/**\n\t * The maximum value that the `HumidityChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxHumidity() { return this.getMaxHumidity(); }\n\t/**\n\t * The channel will not issue a `HumidityChange` event until the humidity value has changed by the amount specified by the `humidityChangeTrigger`.\n\t * \n\t * *   Setting the `humidityChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering.\n\t * @throws {@link PhidgetError}\n\t */\n\tget humidityChangeTrigger() { return this.getHumidityChangeTrigger(); }\n\t/**\n\t * The minimum value that `humidityChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minHumidityChangeTrigger() { return this.getMinHumidityChangeTrigger(); }\n\t/**\n\t * The maximum value that `humidityChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxHumidityChangeTrigger() { return this.getMaxHumidityChangeTrigger(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `HumidityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `HumidityChange` events can also be affected by the `humidityChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `HumidityChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `HumidityChange` events can also be affected by the `humidityChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent humidity value that the channel has reported.\n\t * \n\t * *   This value will always be between `minHumidity` and `maxHumidity`.\n\t * @returns The humidity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHumidity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.humidity === PUNK.DBL || Number.isNaN(this.data.humidity))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.humidity > this.data.maxHumidity)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.humidity < this.data.minHumidity)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.humidity);\n\t}\n\n\t/**\n\t * The minimum value that the `HumidityChange` event will report.\n\t * @returns The humidity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinHumidity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minHumidity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minHumidity);\n\t}\n\n\t/**\n\t * The maximum value that the `HumidityChange` event will report.\n\t * @returns The humidity value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxHumidity(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxHumidity === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxHumidity);\n\t}\n\n\t/**\n\t * The channel will not issue a `HumidityChange` event until the humidity value has changed by the amount specified by the `humidityChangeTrigger`.\n\t * \n\t * *   Setting the `humidityChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetHumidityChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.humidityChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.humidityChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `HumidityChange` event until the humidity value has changed by the amount specified by the `humidityChangeTrigger`.\n\t * \n\t * *   Setting the `humidityChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering.\n\t * @throws {@link PhidgetError}\n\t * @param humidityChangeTrigger - The change trigger value\n\t */\n\tasync setHumidityChangeTrigger(humidityChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (humidityChangeTrigger < this.data.minHumidityChangeTrigger || humidityChangeTrigger > this.data.maxHumidityChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minHumidityChangeTrigger + \" - \" + this.data.maxHumidityChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: humidityChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `humidityChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinHumidityChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minHumidityChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minHumidityChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `humidityChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxHumidityChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxHumidityChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxHumidityChangeTrigger);\n\t}\n\n}\nexport { HumiditySensorBase };\n","import { HumiditySensorBase } from './HumiditySensor.gen';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass HumiditySensor extends HumiditySensorBase {\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.humidity = PUNK.DBL;\r\n\t\t\t\tthis._gotHumidityChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { HumiditySensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface LightSensorData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxIlluminance: number,\n\tmaxIlluminanceChangeTrigger: number,\n\tminDataInterval: number,\n\tminIlluminance: number,\n\tminIlluminanceChangeTrigger: number,\n\tilluminance: number,\n\tilluminanceChangeTrigger: number,\n}\n\nabstract class LightSensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: LightSensorData;\n\t/**\n\t * **IlluminanceChange** event\n\t *  * `illuminance` - The current illuminance\n\t * ---\n\t * The most recent illuminance value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `illuminanceChangeTrigger` has been set to a non-zero value, the `IlluminanceChange` event will not occur until the illuminance has changed by at least the `illuminanceChangeTrigger` value.\n\t */\n\tonIlluminanceChange: ((illuminance: number) => void) | null = null;\n\t/** @internal */\n\t_gotIlluminanceChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Light Sensor class gathers data from the light sensor on a Phidget board.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.LIGHT_SENSOR;\n\t\tthis.name = \"LightSensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.illuminanceChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('IlluminanceChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.ILLUMINANCECHANGE: {\n\t\t\tthis.data.illuminance = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onIlluminanceChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onIlluminanceChange(this.data.illuminance);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): LightSensorData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxIlluminance: PUNK.DBL,\n\t\t\tmaxIlluminanceChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminIlluminance: PUNK.DBL,\n\t\t\tminIlluminanceChangeTrigger: PUNK.DBL,\n\t\t\tilluminance: PUNK.DBL,\n\t\t\tilluminanceChangeTrigger: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 8;\n\t\t\tthis.data.maxIlluminance = 131072;\n\t\t\tthis.data.maxIlluminanceChangeTrigger = 131072;\n\t\t\tthis.data.minDataInterval = 125;\n\t\t\tthis.data.minIlluminance = 0;\n\t\t\tthis.data.minIlluminanceChangeTrigger = 0;\n\t\t\tthis.data.illuminanceChangeTrigger = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._LUX1000_LIGHTSENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.illuminanceChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.illuminance == PUNK.DBL)\n\t\t\t&& ! this._gotIlluminanceChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.illuminance != PUNK.DBL)\n\t\t\tif (this.onIlluminanceChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onIlluminanceChange(this.data.illuminance);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `IlluminanceChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `IlluminanceChange` events can also be affected by the `illuminanceChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent illuminance value that the channel has reported.\n\t * \n\t * *   This value will always be between `minIlluminance` and `maxIlluminance`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget illuminance() { return this.getIlluminance(); }\n\t/**\n\t * The minimum value the `IlluminanceChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minIlluminance() { return this.getMinIlluminance(); }\n\t/**\n\t * The maximum value the `IlluminanceChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxIlluminance() { return this.getMaxIlluminance(); }\n\t/**\n\t * The channel will not issue a `IlluminanceChange` event until the illuminance value has changed by the amount specified by the `illuminanceChangeTrigger`.\n\t * \n\t * *   Setting the `illuminanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget illuminanceChangeTrigger() { return this.getIlluminanceChangeTrigger(); }\n\t/**\n\t * The minimum value that `illuminanceChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minIlluminanceChangeTrigger() { return this.getMinIlluminanceChangeTrigger(); }\n\t/**\n\t * The maximum value that `illuminanceChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxIlluminanceChangeTrigger() { return this.getMaxIlluminanceChangeTrigger(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `IlluminanceChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `IlluminanceChange` events can also be affected by the `illuminanceChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `IlluminanceChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `IlluminanceChange` events can also be affected by the `illuminanceChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent illuminance value that the channel has reported.\n\t * \n\t * *   This value will always be between `minIlluminance` and `maxIlluminance`.\n\t * @returns The illuminance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIlluminance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.illuminance === PUNK.DBL || Number.isNaN(this.data.illuminance))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.illuminance > this.data.maxIlluminance)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.illuminance < this.data.minIlluminance)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.illuminance);\n\t}\n\n\t/**\n\t * The minimum value the `IlluminanceChange` event will report.\n\t * @returns The illuminance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinIlluminance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minIlluminance === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minIlluminance);\n\t}\n\n\t/**\n\t * The maximum value the `IlluminanceChange` event will report.\n\t * @returns The illuminance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxIlluminance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxIlluminance === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxIlluminance);\n\t}\n\n\t/**\n\t * The channel will not issue a `IlluminanceChange` event until the illuminance value has changed by the amount specified by the `illuminanceChangeTrigger`.\n\t * \n\t * *   Setting the `illuminanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetIlluminanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.illuminanceChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.illuminanceChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `IlluminanceChange` event until the illuminance value has changed by the amount specified by the `illuminanceChangeTrigger`.\n\t * \n\t * *   Setting the `illuminanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param illuminanceChangeTrigger - The change trigger value\n\t */\n\tasync setIlluminanceChangeTrigger(illuminanceChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (illuminanceChangeTrigger < this.data.minIlluminanceChangeTrigger || illuminanceChangeTrigger > this.data.maxIlluminanceChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minIlluminanceChangeTrigger + \" - \" + this.data.maxIlluminanceChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: illuminanceChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `illuminanceChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinIlluminanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minIlluminanceChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minIlluminanceChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `illuminanceChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxIlluminanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxIlluminanceChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxIlluminanceChangeTrigger);\n\t}\n\n}\nexport { LightSensorBase };\n","import { LightSensorBase } from './LightSensor.gen';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass LightSensor extends LightSensorBase {\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.illuminance = PUNK.DBL;\r\n\t\t\t\tthis._gotIlluminanceChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { LightSensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PressureSensorData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxPressure: number,\n\tmaxPressureChangeTrigger: number,\n\tminDataInterval: number,\n\tminPressure: number,\n\tminPressureChangeTrigger: number,\n\tpressure: number,\n\tpressureChangeTrigger: number,\n}\n\nabstract class PressureSensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: PressureSensorData;\n\t/**\n\t * **PressureChange** event\n\t *  * `pressure` - The new measured pressure\n\t * ---\n\t * The most recent pressure value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `pressureChangeTrigger` has been set to a non-zero value, the `PressureChange` event will not occur until the pressure has changed by at least the `pressureChangeTrigger` value.\n\t */\n\tonPressureChange: ((pressure: number) => void) | null = null;\n\t/** @internal */\n\t_gotPressureChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Pressure Sensor class gathers data from the pressure sensor on a Phidget board.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.PRESSURE_SENSOR;\n\t\tthis.name = \"PressureSensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.pressureChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('PressureChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.PRESSURECHANGE: {\n\t\t\tthis.data.pressure = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onPressureChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPressureChange(this.data.pressure);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): PressureSensorData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxPressure: PUNK.DBL,\n\t\t\tmaxPressureChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminPressure: PUNK.DBL,\n\t\t\tminPressureChangeTrigger: PUNK.DBL,\n\t\t\tpressure: PUNK.DBL,\n\t\t\tpressureChangeTrigger: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxPressure = 110;\n\t\t\tthis.data.maxPressureChangeTrigger = 60;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.minPressure = 50;\n\t\t\tthis.data.minPressureChangeTrigger = 0;\n\t\t\tthis.data.pressureChangeTrigger = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._PRE1000_PRESSURESENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.pressureChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.pressure == PUNK.DBL)\n\t\t\t&& ! this._gotPressureChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.pressure != PUNK.DBL)\n\t\t\tif (this.onPressureChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onPressureChange(this.data.pressure);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PressureChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PressureChange` events can also be affected by the `pressureChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent pressure value that the channel has reported.\n\t * \n\t * *   This value will always be between `minPressure` and `maxPressure`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget pressure() { return this.getPressure(); }\n\t/**\n\t * The minimum value the `PressureChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPressure() { return this.getMinPressure(); }\n\t/**\n\t * The maximum value the `PressureChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPressure() { return this.getMaxPressure(); }\n\t/**\n\t * The channel will not issue a `PressureChange` event until the pressure value has changed by the amount specified by the `pressureChangeTrigger`.\n\t * \n\t * *   Setting the `pressureChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget pressureChangeTrigger() { return this.getPressureChangeTrigger(); }\n\t/**\n\t * The minimum value that `pressureChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minPressureChangeTrigger() { return this.getMinPressureChangeTrigger(); }\n\t/**\n\t * The maximum value that `pressureChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxPressureChangeTrigger() { return this.getMaxPressureChangeTrigger(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PressureChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PressureChange` events can also be affected by the `pressureChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `PressureChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `PressureChange` events can also be affected by the `pressureChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent pressure value that the channel has reported.\n\t * \n\t * *   This value will always be between `minPressure` and `maxPressure`.\n\t * @returns The pressure value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPressure(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.pressure === PUNK.DBL || Number.isNaN(this.data.pressure))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.pressure > this.data.maxPressure)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.pressure < this.data.minPressure)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.pressure);\n\t}\n\n\t/**\n\t * The minimum value the `PressureChange` event will report.\n\t * @returns The pressure value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPressure(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPressure === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPressure);\n\t}\n\n\t/**\n\t * The maximum value the `PressureChange` event will report.\n\t * @returns The pressure value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPressure(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPressure === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPressure);\n\t}\n\n\t/**\n\t * The channel will not issue a `PressureChange` event until the pressure value has changed by the amount specified by the `pressureChangeTrigger`.\n\t * \n\t * *   Setting the `pressureChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPressureChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.pressureChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.pressureChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `PressureChange` event until the pressure value has changed by the amount specified by the `pressureChangeTrigger`.\n\t * \n\t * *   Setting the `pressureChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param pressureChangeTrigger - The change trigger value\n\t */\n\tasync setPressureChangeTrigger(pressureChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (pressureChangeTrigger < this.data.minPressureChangeTrigger || pressureChangeTrigger > this.data.maxPressureChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minPressureChangeTrigger + \" - \" + this.data.maxPressureChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: pressureChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `pressureChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinPressureChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minPressureChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minPressureChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `pressureChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxPressureChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxPressureChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxPressureChangeTrigger);\n\t}\n\n}\nexport { PressureSensorBase };\n","import { PressureSensorBase } from './PressureSensor.gen';\r\nimport { ErrorEventCode } from '../Enumerations.gen';\r\nimport { PUNK } from '../BridgePacket';\r\n\r\n/** @public */\r\nclass PressureSensor extends PressureSensorBase {\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.pressure = PUNK.DBL;\r\n\t\t\t\tthis._gotPressureChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { PressureSensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface ResistanceInputData {\n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxResistance: number,\n\tmaxResistanceChangeTrigger: number,\n\tminDataInterval: number,\n\tminResistance: number,\n\tminResistanceChangeTrigger: number,\n\tresistance: number,\n\tresistanceChangeTrigger: number,\n\tRTDWireSetup: Enum.RTDWireSetup | PUNK.ENUM,\n}\n\nabstract class ResistanceInputBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: ResistanceInputData;\n\t/**\n\t * **ResistanceChange** event\n\t *  * `resistance` - The resistance value\n\t * ---\n\t * The most recent resistance value the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `resistanceChangeTrigger` has been set to a non-zero value, the `ResistanceChange` event will not occur until the resistance has changed by at least the `resistanceChangeTrigger` value.\n\t */\n\tonResistanceChange: ((resistance: number) => void) | null = null;\n\t/** @internal */\n\t_gotResistanceChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Resistance Input class measures the resistance of a circuit connected to the Phidget, which is used to read resistance-based sensors such as platinum RTDs.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.RESISTANCE_INPUT;\n\t\tthis.name = \"ResistanceInput\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.resistanceChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('ResistanceChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETRTDWIRESETUP:\n\t\t\tthis.data.RTDWireSetup = bp.entries[0].v as Enum.RTDWireSetup;\n\t\t\tthis._FIREPropertyChange('RTDWireSetup', bp);\n\t\t\tbreak;\n\t\tcase BP.RESISTANCECHANGE: {\n\t\t\tthis.data.resistance = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onResistanceChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onResistanceChange(this.data.resistance);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): ResistanceInputData {\n\t\treturn {\n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxResistance: PUNK.DBL,\n\t\t\tmaxResistanceChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tminResistance: PUNK.DBL,\n\t\t\tminResistanceChangeTrigger: PUNK.DBL,\n\t\t\tresistance: PUNK.DBL,\n\t\t\tresistanceChangeTrigger: PUNK.DBL,\n\t\t\tRTDWireSetup: PUNK.ENUM,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 4;\n\t\t\tthis.data.maxResistance = 50000;\n\t\t\tthis.data.maxResistanceChangeTrigger = 19000;\n\t\t\tthis.data.minDataInterval = 250;\n\t\t\tthis.data.minResistance = 0;\n\t\t\tthis.data.minResistanceChangeTrigger = 0;\n\t\t\tthis.data.resistanceChangeTrigger = 0;\n\t\t\tthis.data.RTDWireSetup = Enum.RTDWireSetup.WIRES_4;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\tthis.data.dataInterval = 333;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 3.003003003003003;\n\t\t\tthis.data.maxResistance = 5000;\n\t\t\tthis.data.maxResistanceChangeTrigger = 5000;\n\t\t\tthis.data.minDataInterval = 333;\n\t\t\tthis.data.minResistance = 0;\n\t\t\tthis.data.minResistanceChangeTrigger = 0;\n\t\t\tthis.data.resistanceChangeTrigger = 0;\n\t\t\tthis.data.RTDWireSetup = Enum.RTDWireSetup.WIRES_4;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_100:\n\t\tcase DeviceChannelUID._TMP1200_RESISTANCEINPUT_300:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"g\", value: this.data.resistanceChangeTrigger });\n\t\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.RTDWireSetup });\n\t\t\tawait bp.send(this._ch, BP.SETRTDWIRESETUP);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.resistance == PUNK.DBL)\n\t\t\t&& ! this._gotResistanceChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.resistance != PUNK.DBL)\n\t\t\tif (this.onResistanceChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onResistanceChange(this.data.resistance);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `ResistanceChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `ResistanceChange` events can also be affected by the `resistanceChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent resistance value that the channel has reported.\n\t * \n\t * *   This value will always be between `minResistance` and `maxResistance`.\n\t * *   The `resistance` value will change when the device is also being used as a temperature sensor. This is a side effect of increasing accuracy on the temperature channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget resistance() { return this.getResistance(); }\n\t/**\n\t * The minimum value the `ResistanceChange` event will report.\n\t * \n\t * *   When the device is also being used as a TemperatureSensor the `minResistance` and `maxResistance` will not represent the true input range. This is a side effect of increasing accuracy on the temperature channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minResistance() { return this.getMinResistance(); }\n\t/**\n\t * The maximum value the `ResistanceChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxResistance() { return this.getMaxResistance(); }\n\t/**\n\t * The channel will not issue a `ResistanceChange` event until the resistance value has changed by the amount specified by the `resistanceChangeTrigger`.\n\t * \n\t * *   Setting the `resistanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget resistanceChangeTrigger() { return this.getResistanceChangeTrigger(); }\n\t/**\n\t * The minimum value that the `resistanceChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minResistanceChangeTrigger() { return this.getMinResistanceChangeTrigger(); }\n\t/**\n\t * The maximum value that `resistanceChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxResistanceChangeTrigger() { return this.getMaxResistanceChangeTrigger(); }\n\t/**\n\t * Select the RTD wiring configuration.\n\t * \n\t * *   More information about RTD wiring can be found in the user guide.\n\t * @throws {@link PhidgetError}\n\t */\n\tget RTDWireSetup() { return this.getRTDWireSetup(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `ResistanceChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `ResistanceChange` events can also be affected by the `resistanceChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `ResistanceChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `ResistanceChange` events can also be affected by the `resistanceChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent resistance value that the channel has reported.\n\t * \n\t * *   This value will always be between `minResistance` and `maxResistance`.\n\t * *   The `resistance` value will change when the device is also being used as a temperature sensor. This is a side effect of increasing accuracy on the temperature channel.\n\t * @returns The resistance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetResistance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.resistance === PUNK.DBL || Number.isNaN(this.data.resistance))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.resistance > this.data.maxResistance)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\t\tif (this.data.resistance < this.data.minResistance)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);\n\n\t\treturn (this.data.resistance);\n\t}\n\n\t/**\n\t * The minimum value the `ResistanceChange` event will report.\n\t * \n\t * *   When the device is also being used as a TemperatureSensor the `minResistance` and `maxResistance` will not represent the true input range. This is a side effect of increasing accuracy on the temperature channel.\n\t * @returns The minimum resistance\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinResistance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minResistance === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minResistance);\n\t}\n\n\t/**\n\t * The maximum value the `ResistanceChange` event will report.\n\t * @returns The resistance value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxResistance(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxResistance === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxResistance);\n\t}\n\n\t/**\n\t * The channel will not issue a `ResistanceChange` event until the resistance value has changed by the amount specified by the `resistanceChangeTrigger`.\n\t * \n\t * *   Setting the `resistanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetResistanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.resistanceChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.resistanceChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `ResistanceChange` event until the resistance value has changed by the amount specified by the `resistanceChangeTrigger`.\n\t * \n\t * *   Setting the `resistanceChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param resistanceChangeTrigger - The change trigger value\n\t */\n\tasync setResistanceChangeTrigger(resistanceChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (resistanceChangeTrigger < this.data.minResistanceChangeTrigger || resistanceChangeTrigger > this.data.maxResistanceChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minResistanceChangeTrigger + \" - \" + this.data.maxResistanceChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: resistanceChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that the `resistanceChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinResistanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minResistanceChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minResistanceChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `resistanceChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxResistanceChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxResistanceChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxResistanceChangeTrigger);\n\t}\n\n\t/**\n\t * Select the RTD wiring configuration.\n\t * \n\t * *   More information about RTD wiring can be found in the user guide.\n\t * @returns Wire setup value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetRTDWireSetup(): Enum.RTDWireSetup {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.RTDWireSetup === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.RTDWireSetup);\n\t}\n\n\t/**\n\t * Select the RTD wiring configuration.\n\t * \n\t * *   More information about RTD wiring can be found in the user guide.\n\t * @throws {@link PhidgetError}\n\t * @param RTDWireSetup - Wire setup value\n\t */\n\tasync setRTDWireSetup(RTDWireSetup: Enum.RTDWireSetup): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedRTDWireSetup(this._ch!, RTDWireSetup))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified RTDWireSetup is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: RTDWireSetup });\n\t\tawait bp.send(this._ch, BP.SETRTDWIRESETUP);\n\t}\n\n}\nexport { ResistanceInputBase };\n","import { ResistanceInputBase } from './ResistanceInput.gen';\r\nimport { ErrorEventCode, RTDWireSetup } from '../Enumerations.gen';\r\nimport { BridgePacket, PUNK } from '../BridgePacket';\r\nimport { BP } from '../BridgePackets.gen';\r\n\r\n/** @public */\r\nclass ResistanceInput extends ResistanceInputBase {\r\n\r\n\t/** @internal */\r\n\t_errorHandler(code: ErrorEventCode) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ErrorEventCode.SATURATION:\r\n\t\t\t\tthis.data.resistance = PUNK.DBL;\r\n\t\t\t\tthis._gotResistanceChangeErrorEvent = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.RTDWIRESETUPCHANGE:\r\n\t\t\t\tthis.data.RTDWireSetup = bp.entries[0].v as RTDWireSetup;\r\n\t\t\t\tthis._FIREPropertyChange('RTDWireSetup', bp);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { ResistanceInput };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PowerGuardData {\n\tpowerEnabled: number,\n\toverVoltage: number,\n\tmaxOverVoltage: number,\n\tminOverVoltage: number,\n\tfanMode: Enum.FanMode | PUNK.ENUM,\n\tmaxFailsafeTime: number,\n\tminFailsafeTime: number,\n}\n\nabstract class PowerGuardBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: PowerGuardData;\n\n\t/**\n\t * The Power Guard class controls the safety features and thresholds of a programmable power guard Phidget board.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.POWER_GUARD;\n\t\tthis.name = \"PowerGuard\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETFAILSAFETIME:\n\t\t\tbreak;\n\t\tcase BP.SETFANMODE:\n\t\t\tthis.data.fanMode = bp.entries[0].v as Enum.FanMode;\n\t\t\tthis._FIREPropertyChange('FanMode', bp);\n\t\t\tbreak;\n\t\tcase BP.SETOVERVOLTAGE:\n\t\t\tthis.data.overVoltage = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('OverVoltage', bp);\n\t\t\tbreak;\n\t\tcase BP.SETENABLED:\n\t\t\tthis.data.powerEnabled = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('PowerEnabled', bp);\n\t\t\tbreak;\n\t\tcase BP.FAILSAFERESET:\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): PowerGuardData {\n\t\treturn {\n\t\t\tpowerEnabled: PUNK.BOOL,\n\t\t\toverVoltage: PUNK.DBL,\n\t\t\tmaxOverVoltage: PUNK.DBL,\n\t\t\tminOverVoltage: PUNK.DBL,\n\t\t\tfanMode: PUNK.ENUM,\n\t\t\tmaxFailsafeTime: PUNK.UINT32,\n\t\t\tminFailsafeTime: PUNK.UINT32,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\t\tthis.data.powerEnabled = 0;\n\t\t\tthis.data.maxOverVoltage = 33;\n\t\t\tthis.data.minOverVoltage = 8;\n\t\t\tthis.data.fanMode = Enum.FanMode.AUTO;\n\t\t\tbreak;\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\tthis.data.powerEnabled = 0;\n\t\t\tthis.data.maxOverVoltage = 33;\n\t\t\tthis.data.minOverVoltage = 8;\n\t\t\tthis.data.fanMode = Enum.FanMode.AUTO;\n\t\t\tthis.data.maxFailsafeTime = 30000;\n\t\t\tthis.data.minFailsafeTime = 500;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_100:\n\t\tcase DeviceChannelUID._SAF1000_POWERGUARD_110:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.powerEnabled });\n\t\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.fanMode });\n\t\t\tawait bp.send(this._ch, BP.SETFANMODE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minFailsafeTime() { return this.getMinFailsafeTime(); }\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxFailsafeTime() { return this.getMaxFailsafeTime(); }\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the device will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @throws {@link PhidgetError}\n\t */\n\tget fanMode() { return this.getFanMode(); }\n\t/**\n\t * The device constantly monitors the output voltage, and if it exceeds the `overVoltage` value, it will disconnect the input from the output.\n\t * \n\t * *   This functionality is critical for protecting power supplies from regenerated voltage coming from motors. Many power supplies assume that a higher than output expected voltage is related to an internal failure to the power supply, and will permanently disable themselves to protect the system. A typical safe value is to set OverVoltage to 1-2 volts higher than the output voltage of the supply. For instance, a 12V supply would be protected by setting OverVoltage to 13V.\n\t * *   The device will connect the input to the output again when the voltage drops to (`overVoltage` - 1V)\n\t * @throws {@link PhidgetError}\n\t */\n\tget overVoltage() { return this.getOverVoltage(); }\n\t/**\n\t * The minimum value that `overVoltage` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minOverVoltage() { return this.getMinOverVoltage(); }\n\t/**\n\t * The maximum value that `overVoltage` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxOverVoltage() { return this.getMaxOverVoltage(); }\n\t/**\n\t * When `powerEnabled` is true, the device will connect the input to the output and begin monitoring.\n\t * \n\t * *   The output voltage is constantly monitored and will be automatically disconnected from the input when the output exceeds the `overVoltage` value.\n\t * *   `powerEnabled` allows the device to operate as a Solid State Relay, powering on or off all devices connected to the output.\n\t * @throws {@link PhidgetError}\n\t */\n\tget powerEnabled() { return this.getPowerEnabled(); }\n\n\t/**\n\t * Enables the **failsafe** feature for the channel, with a given **failsafe time**.\n\t * \n\t * The **failsafe** feature is intended for use in applications where it is important for the channel to enter a known _safe state_ if the program controlling it locks up or crashes. If you do not enable the failsafe feature, the channel will carry out whatever instructions it was last given until it is explicitly told to stop.\n\t * \n\t * Enabling the failsafe feature starts a recurring **failsafe timer** for the channel. Once the failsafe timer is enabled, it must be reset within the specified time or the channel will enter a **failsafe state**. The failsafe timer may be reset by sending any valid command to the device\\*. Resetting the failsafe timer will reload the timer with the specified _failsafe time_, starting when the message to reset the timer is received by the Phidget.\n\t * \n\t * _\\*(**get** requests do not typically send commands and won't reset the failsafe timer)_\n\t * \n\t * For example: if the failsafe is enabled with a **failsafe time** of 1000ms, you will have 1000ms to reset the failsafe timer. Every time the failsafe timer is reset, you will have 1000ms from that time to reset the failsafe again.\n\t * \n\t * If the failsafe timer is not reset before it runs out, the channel will enter a **failsafe state**. For Power Guard channels, this will turn off the output. Once the channel enters the **failsafe state**, it will reject any further input until the channel is reopened.\n\t * \n\t * To prevent the channel from falsely entering the failsafe state, we recommend resetting the failsafe timer as frequently as is practical for your application. A good rule of thumb is to not let more than a third of the failsafe time pass before resetting the timer.\n\t * \n\t * Once the failsafe timer has been set, it cannot be disabled by any means other than closing and reopening the channel.\n\t * @throws {@link PhidgetError}\n\t * @param failsafeTime - Failsafe timeout in milliseconds\n\t */\n\tasync enableFailsafe(failsafeTime: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: failsafeTime });\n\t\tawait bp.send(this._ch, BP.SETFAILSAFETIME);\n\t}\n\n\t/**\n\t * The minimum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minFailsafeTime);\n\t}\n\n\t/**\n\t * The maximum value that `failsafeTime` can be set to when calling `enableFailsafe()`.\n\t * @returns The failsafe time\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxFailsafeTime(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxFailsafeTime === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxFailsafeTime);\n\t}\n\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the device will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @returns The fan mode value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetFanMode(): Enum.FanMode {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.fanMode === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.fanMode);\n\t}\n\n\t/**\n\t * The `fanMode` dictates the operating condition of the fan.\n\t * \n\t * *   Choose between on, off, or automatic (based on temperature).\n\t * *   If the `fanMode` is set to automatic, the fan will turn on when the temperature reaches 70°C and it will remain on until the temperature falls below 55°C.\n\t * *   If the `fanMode` is off, the device will still turn on the fan if the temperature reaches 85°C and it will remain on until it falls below 70°C.\n\t * @throws {@link PhidgetError}\n\t * @param fanMode - The fan mode value\n\t */\n\tasync setFanMode(fanMode: Enum.FanMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedFanMode(this._ch!, fanMode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified FanMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: fanMode });\n\t\tawait bp.send(this._ch, BP.SETFANMODE);\n\t}\n\n\t/**\n\t * The device constantly monitors the output voltage, and if it exceeds the `overVoltage` value, it will disconnect the input from the output.\n\t * \n\t * *   This functionality is critical for protecting power supplies from regenerated voltage coming from motors. Many power supplies assume that a higher than output expected voltage is related to an internal failure to the power supply, and will permanently disable themselves to protect the system. A typical safe value is to set OverVoltage to 1-2 volts higher than the output voltage of the supply. For instance, a 12V supply would be protected by setting OverVoltage to 13V.\n\t * *   The device will connect the input to the output again when the voltage drops to (`overVoltage` - 1V)\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetOverVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.overVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.overVoltage);\n\t}\n\n\t/**\n\t * The device constantly monitors the output voltage, and if it exceeds the `overVoltage` value, it will disconnect the input from the output.\n\t * \n\t * *   This functionality is critical for protecting power supplies from regenerated voltage coming from motors. Many power supplies assume that a higher than output expected voltage is related to an internal failure to the power supply, and will permanently disable themselves to protect the system. A typical safe value is to set OverVoltage to 1-2 volts higher than the output voltage of the supply. For instance, a 12V supply would be protected by setting OverVoltage to 13V.\n\t * *   The device will connect the input to the output again when the voltage drops to (`overVoltage` - 1V)\n\t * @throws {@link PhidgetError}\n\t * @param overVoltage - The voltage value\n\t */\n\tasync setOverVoltage(overVoltage: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (overVoltage < this.data.minOverVoltage || overVoltage > this.data.maxOverVoltage)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minOverVoltage + \" - \" + this.data.maxOverVoltage + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: overVoltage });\n\t\tawait bp.send(this._ch, BP.SETOVERVOLTAGE);\n\t}\n\n\t/**\n\t * The minimum value that `overVoltage` can be set to.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinOverVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minOverVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minOverVoltage);\n\t}\n\n\t/**\n\t * The maximum value that `overVoltage` can be set to.\n\t * @returns The voltage value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxOverVoltage(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxOverVoltage === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxOverVoltage);\n\t}\n\n\t/**\n\t * When `powerEnabled` is true, the device will connect the input to the output and begin monitoring.\n\t * \n\t * *   The output voltage is constantly monitored and will be automatically disconnected from the input when the output exceeds the `overVoltage` value.\n\t * *   `powerEnabled` allows the device to operate as a Solid State Relay, powering on or off all devices connected to the output.\n\t * @returns The power enabled value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetPowerEnabled(): boolean {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.powerEnabled === PUNK.BOOL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (!!this.data.powerEnabled);\n\t}\n\n\t/**\n\t * When `powerEnabled` is true, the device will connect the input to the output and begin monitoring.\n\t * \n\t * *   The output voltage is constantly monitored and will be automatically disconnected from the input when the output exceeds the `overVoltage` value.\n\t * *   `powerEnabled` allows the device to operate as a Solid State Relay, powering on or off all devices connected to the output.\n\t * @throws {@link PhidgetError}\n\t * @param powerEnabled - The power enabled value.\n\t */\n\tasync setPowerEnabled(powerEnabled: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (powerEnabled !== false && powerEnabled !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: (powerEnabled ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETENABLED);\n\t}\n\n\t/**\n\t * Resets the failsafe timer, if one has been set. See `enableFailsafe()` for details.\n\t * \n\t * This function will fail if no failsafe timer has been set for the channel.\n\t * @throws {@link PhidgetError}\n\t */\n\tasync resetFailsafe(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.FAILSAFERESET);\n\t}\n\n}\nexport { PowerGuardBase };\n","import { PowerGuardBase } from './PowerGuard.gen';\r\n/** @public */\r\nclass PowerGuard extends PowerGuardBase { }\r\nexport { PowerGuard };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface SoundSensorData {\n\tlastdB: number, \n\tdataInterval: number,\n\tmaxDataInterval: number,\n\tminDataRate: number,\n\tmaxDataRate: number,\n\tmaxdB: number,\n\tmaxSPLChangeTrigger: number,\n\tminDataInterval: number,\n\tnoiseFloor: number,\n\tminSPLChangeTrigger: number,\n\tdB: number,\n\tdBA: number,\n\tdBC: number,\n\toctaves: readonly [number, number, number, number, number, number, number, number, number, number],\n\tSPLRange: Enum.SPLRange | PUNK.ENUM,\n\tSPLChangeTrigger: number,\n}\n\nabstract class SoundSensorBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: SoundSensorData;\n\t/**\n\t * **SPLChange** event\n\t *  * `dB` - The dB SPL value.\n\t *  * `dBA` - The dBA SPL value.\n\t *  * `dBC` - The dBC SPL value.\n\t *  * `octaves` - The dB SPL value for each band.\n\t * ---\n\t * The most recent SPL values the channel has measured will be reported in this event, which occurs when the `dataInterval` has elapsed.\n\t * \n\t * *   If a `SPLChangeTrigger` has been set to a non-zero value, the `SPLChange` event will not occur until the `dB` SPL value has changed by at least the `SPLChangeTrigger` value.\n\t * *   The dB SPL value is calculated from the `octaves` data.\n\t * *   The dBA SPL value is calculated by applying a A-weighted filter to the `octaves` data.\n\t * *   The dBC SPL value is calculated by applying a C-weighted filter to the `octaves` data.\n\t * *   The following frequency bands are represented:\n\t * \n\t * *   octaves\\[0\\] = 31.5 Hz\n\t * *   octaves\\[1\\] = 63 Hz\n\t * *   octaves\\[2\\] = 125 Hz\n\t * *   octaves\\[3\\] = 250 Hz\n\t * *   octaves\\[4\\] = 500 Hz\n\t * *   octaves\\[5\\] = 1 kHz\n\t * *   octaves\\[6\\] = 2 kHz\n\t * *   octaves\\[7\\] = 4 kHz\n\t * *   octaves\\[8\\] = 8 kHz\n\t * *   octaves\\[9\\] = 16 kHz\n\t */\n\tonSPLChange: ((dB: number, dBA: number, dBC: number, octaves: readonly [number, number, number, number, number, number, number, number, number, number]) => void) | null = null;\n\t/** @internal */\n\t_gotSPLChangeErrorEvent?: boolean;\n\n\t/**\n\t * The Sound Sensor class gathers data from the sound sensor on a Phidget board.\n\t * \n\t * If you're using a simple 0-5V sensor that does not have its own firmware, use the VoltageInput or VoltageRatioInput class instead, as specified for your device.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.SOUND_SENSOR;\n\t\tthis.name = \"SoundSensor\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETDATAINTERVAL:\n\t\t\tif (bp.entryCount > 1)\n\t\t\t\tthis.data.dataInterval = bp.entries[1].v as number;\n\t\t\telse\n\t\t\t\tthis.data.dataInterval = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('DataInterval', bp);\n\t\t\tthis._FIREPropertyChange('DataRate', bp);\n\t\t\tbreak;\n\t\tcase BP.SETCHANGETRIGGER:\n\t\t\tthis.data.SPLChangeTrigger = bp.entries[0].v as number;\n\t\t\tthis._FIREPropertyChange('SPLChangeTrigger', bp);\n\t\t\tbreak;\n\t\tcase BP.SETSPLRANGE:\n\t\t\tthis.data.SPLRange = bp.entries[0].v as Enum.SPLRange;\n\t\t\tthis._FIREPropertyChange('SPLRange', bp);\n\t\t\tbreak;\n\t\tcase BP.DBCHANGE: {\n\t\t\tthis.data.dB = bp.entries[0].v as number;\n\t\t\tthis.data.dBA = bp.entries[1].v as number;\n\t\t\tthis.data.dBC = bp.entries[2].v as number;\n\t\t\tthis.data.octaves = bp.entries[3].v as [number, number, number, number, number, number, number, number, number, number];\n\t\t\tif (this._isAttachedDone && this.onSPLChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onSPLChange(this.data.dB, this.data.dBA, this.data.dBC, this.data.octaves);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): SoundSensorData {\n\t\treturn {\n\t\t\tlastdB: 0, \n\t\t\tdataInterval: PUNK.DBL,\n\t\t\tmaxDataInterval: PUNK.UINT32,\n\t\t\tminDataRate: PUNK.DBL,\n\t\t\tmaxDataRate: PUNK.DBL,\n\t\t\tmaxdB: PUNK.DBL,\n\t\t\tmaxSPLChangeTrigger: PUNK.DBL,\n\t\t\tminDataInterval: PUNK.UINT32,\n\t\t\tnoiseFloor: PUNK.DBL,\n\t\t\tminSPLChangeTrigger: PUNK.DBL,\n\t\t\tdB: PUNK.DBL,\n\t\t\tdBA: PUNK.DBL,\n\t\t\tdBC: PUNK.DBL,\n\t\t\toctaves: [PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL, PUNK.DBL],\n\t\t\tSPLRange: PUNK.ENUM,\n\t\t\tSPLChangeTrigger: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\tthis.data.dataInterval = 250;\n\t\t\tthis.data.maxDataInterval = 60000;\n\t\t\tthis.data.minDataRate = 0.016666666666666666;\n\t\t\tthis.data.maxDataRate = 10;\n\t\t\tthis.data.maxdB = 102;\n\t\t\tthis.data.maxSPLChangeTrigger = 102;\n\t\t\tthis.data.minDataInterval = 100;\n\t\t\tthis.data.noiseFloor = 34;\n\t\t\tthis.data.minSPLChangeTrigger = 0;\n\t\t\tthis.data.SPLRange = Enum.SPLRange.DB_102;\n\t\t\tthis.data.SPLChangeTrigger = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\tlet bp;\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._SND1000_SOUNDSENSOR_100:\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(this.data.dataInterval) });\n\t\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t\t\tbp = new BridgePacket();\n\t\t\tbp.set({ name: \"0\", type: \"d\", value: this.data.SPLRange });\n\t\t\tawait bp.send(this._ch, BP.SETSPLRANGE);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `SPLChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `SPLChange` events can also be affected by the `SPLChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataInterval() { return this.getDataInterval(); }\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataInterval() { return this.getMinDataInterval(); }\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataInterval() { return this.getMaxDataInterval(); }\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dataRate() { return this.getDataRate(); }\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minDataRate() { return this.getMinDataRate(); }\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxDataRate() { return this.getMaxDataRate(); }\n\t/**\n\t * The most recent dB SPL value that has been calculated.\n\t * \n\t * *   This value is bounded by `maxdB`.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dB() { return this.getdB(); }\n\t/**\n\t * The maximum value the `SPLChange` event will report.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxdB() { return this.getMaxdB(); }\n\t/**\n\t * The most recent dBA SPL value that has been calculated.\n\t * \n\t * *   The dBA SPL value is calculated by applying a A-weighted filter to the `octaves` data.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dBA() { return this.getdBA(); }\n\t/**\n\t * The most recent dBC SPL value that has been calculated.\n\t * \n\t * *   The dBC SPL value is calculated by applying a C-weighted filter to the `octaves` data.\n\t * @throws {@link PhidgetError}\n\t */\n\tget dBC() { return this.getdBC(); }\n\t/**\n\t * The minimum SPL value that the channel can accurately measure.\n\t * \n\t * *   Input SPLs below this level will not produce an output from the microphone.\n\t * @throws {@link PhidgetError}\n\t */\n\tget noiseFloor() { return this.getNoiseFloor(); }\n\t/**\n\t * The unweighted value of each frequency band.\n\t * \n\t * *   The following frequency bands are represented:\n\t * \n\t * *   octaves\\[0\\] = 31.5 Hz\n\t * *   octaves\\[1\\] = 63 Hz\n\t * *   octaves\\[2\\] = 125 Hz\n\t * *   octaves\\[3\\] = 250 Hz\n\t * *   octaves\\[4\\] = 500 Hz\n\t * *   octaves\\[5\\] = 1 kHz\n\t * *   octaves\\[6\\] = 2 kHz\n\t * *   octaves\\[7\\] = 4 kHz\n\t * *   octaves\\[8\\] = 8 kHz\n\t * *   octaves\\[9\\] = 16 kHz\n\t * @throws {@link PhidgetError}\n\t */\n\tget octaves() { return this.getOctaves(); }\n\t/**\n\t * The channel will not issue a `SPLChange` event until the `dB` value has changed by the amount specified by the `SPLChangeTrigger`.\n\t * \n\t * *   Setting the `SPLChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t */\n\tget SPLChangeTrigger() { return this.getSPLChangeTrigger(); }\n\t/**\n\t * The minimum value that `SPLChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget minSPLChangeTrigger() { return this.getMinSPLChangeTrigger(); }\n\t/**\n\t * The maximum value that `SPLChangeTrigger` can be set to.\n\t * @throws {@link PhidgetError}\n\t */\n\tget maxSPLChangeTrigger() { return this.getMaxSPLChangeTrigger(); }\n\t/**\n\t * When selecting a range, first decide how sensitive you want the microphone to be. Select a smaller range when you want more sensitivity from the microphone.\n\t * \n\t * *   If a `Saturation` event occurrs, increase the range.\n\t * @throws {@link PhidgetError}\n\t */\n\tget SPLRange() { return this.getSPLRange(); }\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `SPLChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `SPLChange` events can also be affected by the `SPLChangeTrigger`.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn this.data.dataInterval;\n\t}\n\n\t/**\n\t * The `dataInterval` is the time that must elapse before the channel will fire another `SPLChange` event.\n\t * \n\t * *   The data interval is bounded by `minDataInterval` and `maxDataInterval`.\n\t * *   The timing between `SPLChange` events can also be affected by the `SPLChangeTrigger`.\n\t * @throws {@link PhidgetError}\n\t * @param dataInterval - The data interval value\n\t */\n\tasync setDataInterval(dataInterval: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataInterval < this.data.minDataInterval || dataInterval > this.data.maxDataInterval)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataInterval + \" - \" + this.data.maxDataInterval + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: dataInterval });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataInterval);\n\t}\n\n\t/**\n\t * The maximum value that `dataInterval` can be set to.\n\t * @returns The data interval value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataInterval(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataInterval === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @returns The data rate for the channel\n\t * @throws {@link PhidgetError}\n\t */\n\tgetDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dataInterval === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (1000.0 / this.data.dataInterval);\n\t}\n\n\t/**\n\t * The `dataRate` is the frequency of events from the device.\n\t * \n\t * *   The data rate is bounded by `minDataRate` and `maxDataRate`.\n\t * *   Changing `dataRate` will change the channel's `dataInterval` to a corresponding value, rounded to the nearest integer number of milliseconds.\n\t * *   The timing between events can also affected by the change trigger.\n\t * @throws {@link PhidgetError}\n\t * @param dataRate - The data rate for the channel\n\t */\n\tasync setDataRate(dataRate: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (dataRate < this.data.minDataRate || dataRate > this.data.maxDataRate)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minDataRate + \" - \" + this.data.maxDataRate + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"u\", value: Math.round(1000.0 / dataRate) });\n\t\tbp.set({ name: \"1\", type: \"g\", value: (1000.0 / dataRate) });\n\t\tawait bp.send(this._ch, BP.SETDATAINTERVAL);\n\t}\n\n\t/**\n\t * The minimum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minDataRate);\n\t}\n\n\t/**\n\t * The maximum value that `dataRate` can be set to.\n\t * @returns The data rate value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxDataRate(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxDataRate === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxDataRate);\n\t}\n\n\t/**\n\t * The most recent dB SPL value that has been calculated.\n\t * \n\t * *   This value is bounded by `maxdB`.\n\t * @returns The dB value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetdB(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dB === PUNK.DBL || Number.isNaN(this.data.dB))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\t\tif (this.data.dB > this.data.maxdB)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);\n\n\t\treturn (this.data.dB);\n\t}\n\n\t/**\n\t * The maximum value the `SPLChange` event will report.\n\t * @returns The dB value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxdB(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxdB === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxdB);\n\t}\n\n\t/**\n\t * The most recent dBA SPL value that has been calculated.\n\t * \n\t * *   The dBA SPL value is calculated by applying a A-weighted filter to the `octaves` data.\n\t * @returns The dBA value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetdBA(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dBA === PUNK.DBL || Number.isNaN(this.data.dBA))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.dBA);\n\t}\n\n\t/**\n\t * The most recent dBC SPL value that has been calculated.\n\t * \n\t * *   The dBC SPL value is calculated by applying a C-weighted filter to the `octaves` data.\n\t * @returns The dBC value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetdBC(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.dBC === PUNK.DBL || Number.isNaN(this.data.dBC))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.dBC);\n\t}\n\n\t/**\n\t * The minimum SPL value that the channel can accurately measure.\n\t * \n\t * *   Input SPLs below this level will not produce an output from the microphone.\n\t * @returns The noise floor value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetNoiseFloor(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.noiseFloor === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.noiseFloor);\n\t}\n\n\t/**\n\t * The unweighted value of each frequency band.\n\t * \n\t * *   The following frequency bands are represented:\n\t * \n\t * *   octaves\\[0\\] = 31.5 Hz\n\t * *   octaves\\[1\\] = 63 Hz\n\t * *   octaves\\[2\\] = 125 Hz\n\t * *   octaves\\[3\\] = 250 Hz\n\t * *   octaves\\[4\\] = 500 Hz\n\t * *   octaves\\[5\\] = 1 kHz\n\t * *   octaves\\[6\\] = 2 kHz\n\t * *   octaves\\[7\\] = 4 kHz\n\t * *   octaves\\[8\\] = 8 kHz\n\t * *   octaves\\[9\\] = 16 kHz\n\t * @returns The octave values\n\t * @throws {@link PhidgetError}\n\t */\n\tgetOctaves(): readonly [number, number, number, number, number, number, number, number, number, number] {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.octaves.includes(PUNK.DBL))\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.octaves);\n\t}\n\n\t/**\n\t * The channel will not issue a `SPLChange` event until the `dB` value has changed by the amount specified by the `SPLChangeTrigger`.\n\t * \n\t * *   Setting the `SPLChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSPLChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.SPLChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.SPLChangeTrigger);\n\t}\n\n\t/**\n\t * The channel will not issue a `SPLChange` event until the `dB` value has changed by the amount specified by the `SPLChangeTrigger`.\n\t * \n\t * *   Setting the `SPLChangeTrigger` to 0 will result in the channel firing events every `dataInterval`. This is useful for applications that implement their own data filtering\n\t * @throws {@link PhidgetError}\n\t * @param SPLChangeTrigger - The change trigger value\n\t */\n\tasync setSPLChangeTrigger(SPLChangeTrigger: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tif (SPLChangeTrigger < this.data.minSPLChangeTrigger || SPLChangeTrigger > this.data.maxSPLChangeTrigger)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: \" + this.data.minSPLChangeTrigger + \" - \" + this.data.maxSPLChangeTrigger + \".\");\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"g\", value: SPLChangeTrigger });\n\t\tawait bp.send(this._ch, BP.SETCHANGETRIGGER);\n\t}\n\n\t/**\n\t * The minimum value that `SPLChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMinSPLChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.minSPLChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.minSPLChangeTrigger);\n\t}\n\n\t/**\n\t * The maximum value that `SPLChangeTrigger` can be set to.\n\t * @returns The change trigger value\n\t * @throws {@link PhidgetError}\n\t */\n\tgetMaxSPLChangeTrigger(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.maxSPLChangeTrigger === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.maxSPLChangeTrigger);\n\t}\n\n\t/**\n\t * When selecting a range, first decide how sensitive you want the microphone to be. Select a smaller range when you want more sensitivity from the microphone.\n\t * \n\t * *   If a `Saturation` event occurrs, increase the range.\n\t * @returns The range value.\n\t * @throws {@link PhidgetError}\n\t */\n\tgetSPLRange(): Enum.SPLRange {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.SPLRange === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.SPLRange);\n\t}\n\n\t/**\n\t * When selecting a range, first decide how sensitive you want the microphone to be. Select a smaller range when you want more sensitivity from the microphone.\n\t * \n\t * *   If a `Saturation` event occurrs, increase the range.\n\t * @throws {@link PhidgetError}\n\t * @param SPLRange - The range value.\n\t */\n\tasync setSPLRange(SPLRange: Enum.SPLRange): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\n\t\tif (!SEnum.supportedSPLRange(this._ch!, SPLRange))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified SPLRange is unsupported by this device.\");\n\n\t\tbp.set({ name: \"0\", type: \"d\", value: SPLRange });\n\t\tawait bp.send(this._ch, BP.SETSPLRANGE);\n\t}\n\n}\nexport { SoundSensorBase };\n","import { SoundSensorBase } from './SoundSensor.gen';\r\nimport { PUNK } from '../BridgePacket';\r\nimport { logEventException } from '../Logging';\r\n\r\n/** @public */\r\nclass SoundSensor extends SoundSensorBase {\r\n\r\n\t/** @internal */\r\n\t_hasInitialState() {\r\n\t\tif (this.data.dB == PUNK.DBL)\r\n\t\t\treturn false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/** @internal */\r\n\t_fireInitialEvents() {\r\n\t\tif (this.data.dB != PUNK.DBL) {\r\n\t\t\tif (this.onSPLChange) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.onSPLChange(this.data.dB, this.data.dBA, this.data.dBC, this.data.octaves);\r\n\t\t\t\t} catch (err) { logEventException(err); }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { SoundSensor };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport * as SEnum from '../SupportedEnum.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface HubData {\n}\n\nabstract class HubBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: HubData;\n\n\t/**\n\t * The hub class allows you to control power to VINT hub ports.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.HUB;\n\t\tthis.name = \"Hub\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SETFIRMWAREUPGRADEFLAG:\n\t\t\tbreak;\n\t\tcase BP.SETPORTAUTOSETSPEED:\n\t\t\tbreak;\n\t\tcase BP.SETPORTMODE:\n\t\t\tbreak;\n\t\tcase BP.SETPORTPOWER:\n\t\t\tbreak;\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): HubData {\n\t\treturn {\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB0000_HUB_300:\n\t\tcase DeviceChannelUID._HUB0001_HUB_100:\n\t\tcase DeviceChannelUID._HUB0001_HUB_115:\n\t\tcase DeviceChannelUID._HUB5000_HUB_200:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._HUB0000_HUB_300:\n\t\tcase DeviceChannelUID._HUB0001_HUB_100:\n\t\tcase DeviceChannelUID._HUB0001_HUB_115:\n\t\tcase DeviceChannelUID._HUB5000_HUB_200:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\n\t/**\n\t * Sets a flag on this hub port which forces the next VINT devices plugged in to stay in firmware upgrade mode.\n\t * @throws {@link PhidgetError}\n\t * @param port - The port the device is plugged into\n\t * @param timeout - The time to leave the flag set for\n\t * @internal\n\t */\n\tasync setFirmwareUpgradeFlag(port: number, timeout: number): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: port });\n\t\tbp.set({ name: \"1\", type: \"u\", value: timeout });\n\t\tawait bp.send(this._ch, BP.SETFIRMWAREUPGRADEFLAG);\n\t}\n\n\t/**\n\t * Enables / disables Auto Set Speed on the hub port. When enabled, and a supported VINT device is attached, the **HubPortSpeed** will automatically be set to the fastest reliable speed. This is enabled by default on supported VINT Hubs.\n\t * @throws {@link PhidgetError}\n\t * @param port - The Hub port\n\t * @param state - The AutoSetSpeed state\n\t */\n\tasync setPortAutoSetSpeed(port: number, state: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: port });\n\n\t\tif (state !== false && state !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"1\", type: \"d\", value: (state ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETPORTAUTOSETSPEED);\n\t}\n\n\t/**\n\t * The max communication speed of a high-speed capable VINT Port.\n\t * @returns The max speed\n\t * @throws {@link PhidgetError}\n\t * @param port - The Hub port\n\t */\n\tabstract getPortMaxSpeed(port: number): number;\n\t/**\n\t * Gets the mode of the selected hub port. VINT devices will not show up when the port is in digital/analog mode.\n\t * @returns The mode the port is in\n\t * @throws {@link PhidgetError}\n\t * @param port - The port being read\n\t */\n\tabstract getPortMode(port: number): Promise<Enum.HubPortMode>;\n\t/**\n\t * Sets the mode of the selected port. This could be used to set a port back to VINT mode if it was left in digital/analog mode.\n\t * @throws {@link PhidgetError}\n\t * @param port - The port being set\n\t * @param mode - The mode the port is being set to\n\t */\n\tasync setPortMode(port: number, mode: Enum.HubPortMode): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: port });\n\n\t\tif (!SEnum.supportedHubPortMode(this._ch!, mode))\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Specified HubPortMode is unsupported by this device.\");\n\n\t\tbp.set({ name: \"1\", type: \"d\", value: mode });\n\t\tawait bp.send(this._ch, BP.SETPORTMODE);\n\t}\n\n\t/**\n\t * Gets the VINT Hub Port power state\n\t * @returns The power state\n\t * @throws {@link PhidgetError}\n\t * @param port - The Hub port\n\t */\n\tabstract getPortPower(port: number): Promise<boolean>;\n\t/**\n\t * Controls power to the VINT Hub Port.\n\t * @throws {@link PhidgetError}\n\t * @param port - The Hub port\n\t * @param state - The power state\n\t */\n\tasync setPortPower(port: number, state: boolean): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"d\", value: port });\n\n\t\tif (state !== false && state !== true)\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be a boolean.\");\n\n\t\tbp.set({ name: \"1\", type: \"d\", value: (state ? 1 : 0) });\n\t\tawait bp.send(this._ch, BP.SETPORTPOWER);\n\t}\n\n\t/**\n\t * Indicates that this VINT Port support Auto Set Speed.\n\t * @returns The supported state\n\t * @throws {@link PhidgetError}\n\t * @param port - The Hub port\n\t */\n\tabstract getPortSupportsAutoSetSpeed(port: number): boolean;\n\t/**\n\t * Indicates that the communication speed of this VINT port can be set.\n\t * @returns The supported state\n\t * @throws {@link PhidgetError}\n\t * @param port - The Hub port\n\t */\n\tabstract getPortSupportsSetSpeed(port: number): boolean;\n}\nexport { HubBase };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { ErrorCode, HubPortMode } from '../Enumerations.gen';\r\nimport { PhidgetDevice } from '../Phidget';\r\nimport { PhidgetError } from '../PhidgetError';\r\nimport { HubDevice } from '../usb/device/HubDevice';\r\nimport { HubBase } from './Hub.gen';\r\n\r\n/** @public */\r\nclass Hub extends HubBase {\r\n\r\n\tasync getPortMode(port: number) {\r\n\t\tthis._assertAttached();\r\n\r\n\t\t// Only supported for local (USB) connections\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\tif (!this._ch!.conn._isLocal)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tawait (<HubDevice>(this.hub as PhidgetDevice)._device).openAndUpdatePortProperties(port);\r\n\t\tconst mode = (this.hub as PhidgetDevice)._device.hubPortProps?.[port].portMode;\r\n\t\tif (mode == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\treturn (mode);\r\n\t}\r\n\tasync getPortPower(port: number) {\r\n\t\tthis._assertAttached();\r\n\r\n\t\t// Only supported for local (USB) connections\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\tif (!this._ch!.conn._isLocal)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tawait (<HubDevice>(this.hub as PhidgetDevice)._device).openAndUpdatePortProperties(port);\r\n\t\tconst power = (this.hub as PhidgetDevice)._device.hubPortProps?.[port].portPowered;\r\n\t\tif (power == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\treturn (power);\r\n\t}\r\n\r\n\tgetPortMaxSpeed(port: number): number {\r\n\t\tthis._assertAttached();\r\n\r\n\t\t// Only supported for local (USB) connections\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\tif (!this._ch!.conn._isLocal)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tconst portMaxSpeed = (this.hub as PhidgetDevice)._device.hubPortProps?.[port].portMaxSpeed;\r\n\t\tif (portMaxSpeed == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\treturn (portMaxSpeed);\r\n\t}\r\n\tgetPortSupportsAutoSetSpeed(port: number): boolean {\r\n\t\tthis._assertAttached();\r\n\r\n\t\t// Only supported for local (USB) connections\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\tif (!this._ch!.conn._isLocal)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tconst portSuppAutoSetSpeed = (this.hub as PhidgetDevice)._device.hubPortProps?.[port].portSuppAutoSetSpeed;\r\n\t\tif (portSuppAutoSetSpeed == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\treturn (portSuppAutoSetSpeed);\r\n\t}\r\n\tgetPortSupportsSetSpeed(port: number): boolean {\r\n\t\tthis._assertAttached();\r\n\r\n\t\t// Only supported for local (USB) connections\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\tif (!this._ch!.conn._isLocal)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\r\n\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tconst portSuppSetSpeed = (this.hub as PhidgetDevice)._device.hubPortProps?.[port].portSuppSetSpeed;\r\n\t\tif (portSuppSetSpeed == undefined)\r\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\r\n\r\n\t\treturn (portSuppSetSpeed);\r\n\t}\r\n\r\n\tasync setFirmwareUpgradeFlag(port: number, timeout: number): Promise<void> {\r\n\t\tthis._assertAttached();\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tawait super.setFirmwareUpgradeFlag(port, timeout);\r\n\t}\r\n\tasync setPortMode(port: number, mode: HubPortMode): Promise<void> {\r\n\t\tthis._assertAttached();\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tawait super.setPortMode(port, mode);\r\n\t}\r\n\tasync setPortPower(port: number, state: boolean): Promise<void> {\r\n\t\tthis._assertAttached();\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tawait super.setPortPower(port, state);\r\n\t}\r\n\tasync setPortAutoSetSpeed(port: number, state: boolean): Promise<void> {\r\n\t\tthis._assertAttached();\r\n\t\tif (port < 0 || port > (this.hubPortCount - 1))\r\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_ARGUMENT, \"Value must be in range: 0 - \" + (this.hubPortCount - 1) + \".\");\r\n\r\n\t\tawait super.setPortAutoSetSpeed(port, state);\r\n\t}\r\n}\r\n\r\nexport { Hub };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport * as Enum from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket, PUNK } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface FirmwareUpgradeData {\n\tactualDeviceID: Enum.DeviceID | PUNK.ENUM,\n\tactualDeviceVINTID: number,\n\tactualDeviceSKU: string | null,\n\tactualDeviceVersion: number,\n\tactualDeviceName: string | null,\n\tprogress: number,\n}\n\nabstract class FirmwareUpgradeBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: FirmwareUpgradeData;\n\t/**\n\t * **ProgressChange** event\n\t *  * `progress` - The progress, range is 0-1.\n\t * ---\n\t * Occurs on firmware upgrade progress.\n\t * @internal\n\t */\n\tonProgressChange: ((progress: number) => void) | null = null;\n\t/** @internal */\n\t_gotProgressChangeErrorEvent?: boolean;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.FIRMWARE_UPGRADE;\n\t\tthis.name = \"FirmwareUpgrade\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.SENDFIRMWARE:\n\t\t\tbreak;\n\t\tcase BP.PROGRESSCHANGE: {\n\t\t\tthis.data.progress = bp.entries[0].v as number;\n\t\t\tif (this._isAttachedDone && this.onProgressChange) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onProgressChange(this.data.progress);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): FirmwareUpgradeData {\n\t\treturn {\n\t\t\tactualDeviceID: PUNK.ENUM,\n\t\t\tactualDeviceVINTID: PUNK.UINT32,\n\t\t\tactualDeviceSKU: null,\n\t\t\tactualDeviceVersion: PUNK.INT32,\n\t\t\tactualDeviceName: null,\n\t\t\tprogress: PUNK.DBL,\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200:\n\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300:\n\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\tthis.data.progress = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_200:\n\t\tcase DeviceChannelUID._STM32_USB_FIRMWARE_UPGRADE_300:\n\t\tcase DeviceChannelUID._STM32F0_FIRMWARE_UPGRADE_100:\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_110:\n\t\tcase DeviceChannelUID._STM32G0_FIRMWARE_UPGRADE_114:\n\t\tcase DeviceChannelUID._STM32F3_FIRMWARE_UPGRADE_120:\n\t\tcase DeviceChannelUID._STM8S_FIRMWARE_UPGRADE_100:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\t\tif ((this.data.progress == PUNK.DBL)\n\t\t\t&& ! this._gotProgressChangeErrorEvent)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t\tif(this.data.progress != PUNK.DBL)\n\t\t\tif (this.onProgressChange)\n\t\t\t\ttry {\n\t\t\t\t\tthis.onProgressChange(this.data.progress);\n\t\t\t\t} catch (err) { logEventException(err); }\n\n\t}\n\n\t/**\n\t * TODO: Text Here\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget actualDeviceID() { return this.getActualDeviceID(); }\n\t/**\n\t * TODO: Text Here\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget actualDeviceName() { return this.getActualDeviceName(); }\n\t/**\n\t * TODO: Text Here\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget actualDeviceSKU() { return this.getActualDeviceSKU(); }\n\t/**\n\t * TODO: Text Here\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget actualDeviceVersion() { return this.getActualDeviceVersion(); }\n\t/**\n\t * TODO: Text Here\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget actualDeviceVINTID() { return this.getActualDeviceVINTID(); }\n\t/**\n\t * TODO: Text Here\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tget progress() { return this.getProgress(); }\n\n\t/**\n\t * TODO: Text Here\n\t * @returns Device ID\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetActualDeviceID(): Enum.DeviceID {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.actualDeviceID === PUNK.ENUM)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.actualDeviceID);\n\t}\n\n\t/**\n\t * TODO: Text Here\n\t * @returns Name of the device\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetActualDeviceName(): string {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.actualDeviceName === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.actualDeviceName);\n\t}\n\n\t/**\n\t * TODO: Text Here\n\t * @returns Device SKU\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetActualDeviceSKU(): string {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.actualDeviceSKU === null)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.actualDeviceSKU);\n\t}\n\n\t/**\n\t * TODO: Text Here\n\t * @returns Firmware version\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetActualDeviceVersion(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.actualDeviceVersion === PUNK.INT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.actualDeviceVersion);\n\t}\n\n\t/**\n\t * TODO: Text Here\n\t * @returns Device VINT ID\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetActualDeviceVINTID(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.actualDeviceVINTID === PUNK.UINT32)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.actualDeviceVINTID);\n\t}\n\n\t/**\n\t * TODO: Text Here\n\t * @returns Firmware update progress\n\t * @throws {@link PhidgetError}\n\t * @internal\n\t */\n\tgetProgress(): number {\n\t\tthis._assertOpen();\n\n\t\tif (this.data.progress === PUNK.DBL)\n\t\t\tthrow new PhidgetError(ErrorCode.UNKNOWN_VALUE);\n\n\t\treturn (this.data.progress);\n\t}\n\n\t/**\n\t * TODO\n\t * @throws {@link PhidgetError}\n\t * @param data - Data being sent in the firmware update\n\t * @internal\n\t */\n\tabstract sendFirmware(data: readonly number[]): Promise<void>;\n}\nexport { FirmwareUpgradeBase };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { BridgePacket } from '../BridgePacket';\r\nimport { BP } from '../BridgePackets.gen';\r\nimport { FirmwareUpgradeBase } from './FirmwareUpgrade.gen';\r\n\r\n// XXX Implement\r\n/** @internal */\r\nclass FirmwareUpgrade extends FirmwareUpgradeBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tcase BP.DEVICEINFO:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tsendFirmware(_data: number[]): Promise<void> {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n}\r\n\r\nexport { FirmwareUpgrade };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket } from '../BridgePacket';\nimport { DeviceChannelUID } from '../Devices.gen';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface GenericData {\n}\n\nabstract class GenericBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: GenericData;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.GENERIC;\n\t\tthis.name = \"Generic\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): GenericData {\n\t\treturn {\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\tthis.data = this._initData();\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\n\t\tswitch (this._ch!.chDef.uid) {\n\t\tcase DeviceChannelUID._VINT_UNKNOWN:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new PhidgetError(ErrorCode.UNSUPPORTED);\n\t\t}\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\n}\nexport { GenericBase };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { BridgePacket } from '../BridgePacket';\r\nimport { GenericBase } from './Generic.gen';\r\n\r\n/** @internal */\r\nclass Generic extends GenericBase {\r\n\r\n\t/** @internal */\r\n\t_bridgeInput(bp: BridgePacket) {\r\n\t\tswitch (bp.vpkt) {\r\n\t\t\tdefault:\r\n\t\t\t\tsuper._bridgeInput(bp);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tsendChannelPacket(_packetType: number, _index: number, _packet: number): Promise<void> {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n\t/** @internal */\r\n\tsendDevicePacket(_packetType: number, _packet: number): Promise<void> {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n\t/** @internal */\r\n\tsendPacket(_packet: number): Promise<void> {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n}\r\n\r\nexport { Generic };","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","require('../../../modules/es.string.trim');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('String').trim;\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../string/virtual/trim');\n\nvar StringPrototype = String.prototype;\n\nmodule.exports = function (it) {\n  var own = it.trim;\n  return typeof it == 'string' || it === StringPrototype\n    || (isPrototypeOf(StringPrototype, it) && own === StringPrototype.trim) ? method : own;\n};\n","var parent = require('../../es/instance/trim');\n\nmodule.exports = parent;\n","module.exports = require(\"core-js-pure/stable/instance/trim\");","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PhidgetChannel } from '../Phidget';\nimport { Channel } from '../Channel';\nimport { ErrorCode, ChannelClass } from '../Enumerations.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { BridgePacket } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { logEventException } from '../Logging';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface DictionaryData {\n}\n\nabstract class DictionaryBase extends PhidgetChannel {\n\t/** @internal */\n\tdata: DictionaryData;\n\t/**\n\t * **Add** event\n\t *  * `key` - The key that was added\n\t *  * `value` - The value of the new key\n\t * ---\n\t * Occurs when a new key value pair is added to the dictionary.\n\t */\n\tonAdd: ((key: string, value: string) => void) | null = null;\n\t/** @internal */\n\t_gotAddErrorEvent?: boolean;\n\t/**\n\t * **Update** event\n\t *  * `key` - The key whose value was updated\n\t *  * `value` - The new value\n\t * ---\n\t * Occurs when a change is made to a key value pair in the dictionary.\n\t */\n\tonUpdate: ((key: string, value: string) => void) | null = null;\n\t/** @internal */\n\t_gotUpdateErrorEvent?: boolean;\n\t/**\n\t * **Remove** event\n\t *  * `key` - The key that was removed\n\t * ---\n\t * Occurs when a key is removed from the dictionary.\n\t */\n\tonRemove: ((key: string) => void) | null = null;\n\t/** @internal */\n\t_gotRemoveErrorEvent?: boolean;\n\n\t/**\n\t * Dictionaries are useful for passing information between multiple programs using Phidgets. A common example would be to have one program controlling your application that receives commands sent via a Phidget dictionary from a web interface, as outlined in many of our [articles](/?view=articles).\n\t * \n\t * Keys can be thought of as being similar to variable names, with their values as their associated value. Phidget dictionaries contain groups of related key-value pairs, and are stored on a central [Phigdet Network Server](/docs/Phidget_Network_Server). Dictionaries, and the key-value pairs within may be accessed from programs that have access to the [Phigdet Network Server](/docs/Phidget_Network_Server).\n\t * \n\t * The Dictionary API supports connecting to a dictionary on the server, managing key-value pairs, and monitoring changes made to the dictionary.\n\t * \n\t * More information on Phidget Dictionaries can be found on the [Phidget Dictionary](/docs/Phidget_Dictionary) support page.\n\t * @public\n\t */\n\tconstructor();\n\t/** @internal */\n\tconstructor(ch?: Channel);\n\tconstructor(ch?: Channel) {\n\t\tsuper(ch);\n\t\tthis._class = ChannelClass.DICTIONARY;\n\t\tthis.name = \"Dictionary\";\n\t\tthis.data = this._initData();\n\t}\n\n\t/** @internal */\n\t_bridgeInput(bp: BridgePacket) {\n\n\t\tswitch(bp.vpkt) {\n\t\tcase BP.DICTIONARYADD:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYREMOVEALL:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYGET:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYREMOVE:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYSCAN:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYSET:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYUPDATE:\n\t\t\tbreak;\n\t\tcase BP.DICTIONARYADDED: {\n\t\t\tif (this._isAttachedDone && this.onAdd) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onAdd(bp.entries[0].v as string, bp.entries[1].v as string);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.DICTIONARYREMOVED: {\n\t\t\tif (this._isAttachedDone && this.onRemove) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onRemove(bp.entries[0].v as string);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase BP.DICTIONARYUPDATED: {\n\t\t\tif (this._isAttachedDone && this.onUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.onUpdate(bp.entries[0].v as string, bp.entries[1].v as string);\n\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tthrow new PhidgetError(ErrorCode.INVALID_PACKET, \"Unsupported bridge packet: 0x\" + bp.vpkt!.toString(16));\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initData(): DictionaryData {\n\t\treturn {\n\t\t}\n\t}\n\n\t/** @internal */\n\t_initAfterOpen() {\n\t\t// This should never be called as no USB Phidgets that use this calls are supported\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line require-await\n\tasync _setDefaults() {\n\t\t// This should never be called as no USB Phidgets that use this calls are supported\n\t\tthrow new PhidgetError(ErrorCode.UNEXPECTED);\n\t}\n\n\t/** @internal */\n\t_hasInitialState() {\n\n\n\t\treturn true;\n\t}\n\n\t/** @internal */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t_fireInitialEvents() {\n\n\t}\n\n\n\t/**\n\t * Adds a new key value pair to the dictionary. It is an error if the key already exits.\n\t * @throws {@link PhidgetError}\n\t * @param key - The key to add\n\t * @param value - The value to add\n\t */\n\tasync add(key: string, value: string): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: key });\n\t\tbp.set({ name: \"1\", type: \"s\", value: value });\n\t\tawait bp.send(this._ch, BP.DICTIONARYADD);\n\t}\n\n\t/**\n\t * Removes every key from the dictionary\n\t * @throws {@link PhidgetError}\n\t */\n\tasync removeAll(): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tawait bp.send(this._ch, BP.DICTIONARYREMOVEALL);\n\t}\n\n\t/**\n\t * Gets the value associated with the given key from the dictionary\n\t * @returns The value\n\t * @throws {@link PhidgetError}\n\t * @param key - The key whose value is desired\n\t */\n\tabstract get(key: string): Promise<(string | null)>;\n\t/**\n\t * Gets the value associated with the given key from the dictionary\n\t * @returns The value\n\t * @throws {@link PhidgetError}\n\t * @param key - The key whose value is desired\n\t * @param def - default value if the key isn't found\n\t */\n\tabstract get(key: string, def: string): Promise<(string | null)>;\n\t/**\n\t * Removes the key from the dictionary\n\t * @throws {@link PhidgetError}\n\t * @param key - The key to remove\n\t */\n\tasync remove(key: string): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: key });\n\t\tawait bp.send(this._ch, BP.DICTIONARYREMOVE);\n\t}\n\n\t/**\n\t * Scans the keys in the dictionary, indexed by `start` or the first key in the dictionary if start is `NULL` or an empty String.  \n\t * \n\t * *   The result is formated as a newline seperated list of keys\n\t * *   The list begins at the key following the start key\n\t * *   The list might not contain all of the keys in the dictionary\n\t * *   To continue scanning, call the method again with the last entry from the previous result\n\t * *   When all of the keys have been scanned, a zero length string is returned\n\t * *   Keys added during the scan may be missed, and keys deleted during the scan may be included\n\t * @returns The list of keys\n\t * @throws {@link PhidgetError}\n\t * @param start - The key to start the scan from\n\t */\n\tabstract scan(start?: string): Promise<readonly string[]>;\n\t/**\n\t * Sets the value of a key, or creates the key value pair if the key does not already exist.\n\t * @throws {@link PhidgetError}\n\t * @param key - The key to set\n\t * @param value - The value to set\n\t */\n\tasync set(key: string, value: string): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: key });\n\t\tbp.set({ name: \"1\", type: \"s\", value: value });\n\t\tawait bp.send(this._ch, BP.DICTIONARYSET);\n\t}\n\n\t/**\n\t * Updates a key value pair in the dictionary. It is an error if the key does not exist.\n\t * @throws {@link PhidgetError}\n\t * @param key - The key to update\n\t * @param value - The value to set\n\t */\n\tasync update(key: string, value: string): Promise<void> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: key });\n\t\tbp.set({ name: \"1\", type: \"s\", value: value });\n\t\tawait bp.send(this._ch, BP.DICTIONARYUPDATE);\n\t}\n\n}\nexport { DictionaryBase };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { DictionaryBase } from './Dictionary.gen';\nimport { BridgePacket } from '../BridgePacket';\nimport { BP } from '../BridgePackets.gen';\nimport { PhidgetError } from '../PhidgetError';\nimport { ErrorCode } from '../Enumerations.gen';\n\n/** @public */\nclass Dictionary extends DictionaryBase {\n\n\tasync get(key: string, def?: string): Promise<string | null> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: key });\n\t\ttry {\n\t\t\tconst val = await bp.send(this._ch, BP.DICTIONARYGET) as string;\n\t\t\treturn val;\n\t\t} catch (err) {\n\t\t\tif (def !== undefined)\n\t\t\t\treturn def;\n\t\t\tif (err instanceof PhidgetError && err.errorCode === ErrorCode.NO_SUCH_ENTITY)\n\t\t\t\treturn null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tasync scan(key?: string): Promise<string[]> {\n\t\tthis._assertOpen();\n\n\t\tconst bp = new BridgePacket();\n\t\tbp.set({ name: \"0\", type: \"s\", value: key ?? '' });\n\t\tconst list = await bp.send(this._ch, BP.DICTIONARYSCAN) as string;\n\t\tif (list.length == 0)\n\t\t\treturn ([]);\n\t\treturn (list.trim().split('\\n'));\n\t}\n}\n\nexport { Dictionary };\n","import { Channel } from './Channel';\nimport * as ChCls from './Classes.gen';\nimport { ChannelClass } from './Enumerations.gen';\nimport { PhidgetChannel } from './Phidget';\n\n/** @internal */\nexport function CreatePhidgetChannel(ch: Channel): PhidgetChannel {\n\tswitch (ch.class) {\n\t\tcase ChannelClass.ACCELEROMETER:\n\t\t\treturn new ChCls.Accelerometer(ch);\n\t\tcase ChannelClass.BLDC_MOTOR:\n\t\t\treturn new ChCls.BLDCMotor(ch);\n\t\tcase ChannelClass.CAPACITIVE_TOUCH:\n\t\t\treturn new ChCls.CapacitiveTouch(ch);\n\t\tcase ChannelClass.CURRENT_INPUT:\n\t\t\treturn new ChCls.CurrentInput(ch);\n\t\tcase ChannelClass.DC_MOTOR:\n\t\t\treturn new ChCls.DCMotor(ch);\n\t\tcase ChannelClass.DICTIONARY:\n\t\t\treturn new ChCls.Dictionary(ch);\n\t\tcase ChannelClass.DIGITAL_INPUT:\n\t\t\treturn new ChCls.DigitalInput(ch);\n\t\tcase ChannelClass.DIGITAL_OUTPUT:\n\t\t\treturn new ChCls.DigitalOutput(ch);\n\t\tcase ChannelClass.DISTANCE_SENSOR:\n\t\t\treturn new ChCls.DistanceSensor(ch);\n\t\tcase ChannelClass.ENCODER:\n\t\t\treturn new ChCls.Encoder(ch);\n\t\tcase ChannelClass.FIRMWARE_UPGRADE:\n\t\t\treturn new ChCls.FirmwareUpgrade(ch);\n\t\tcase ChannelClass.FREQUENCY_COUNTER:\n\t\t\treturn new ChCls.FrequencyCounter(ch);\n\t\tcase ChannelClass.GENERIC:\n\t\t\treturn new ChCls.Generic(ch);\n\t\tcase ChannelClass.GPS:\n\t\t\treturn new ChCls.GPS(ch);\n\t\tcase ChannelClass.GYROSCOPE:\n\t\t\treturn new ChCls.Gyroscope(ch);\n\t\tcase ChannelClass.HUB:\n\t\t\treturn new ChCls.Hub(ch);\n\t\tcase ChannelClass.HUMIDITY_SENSOR:\n\t\t\treturn new ChCls.HumiditySensor(ch);\n\t\tcase ChannelClass.IR:\n\t\t\treturn new ChCls.IR(ch);\n\t\tcase ChannelClass.LCD:\n\t\t\treturn new ChCls.LCD(ch);\n\t\tcase ChannelClass.LIGHT_SENSOR:\n\t\t\treturn new ChCls.LightSensor(ch);\n\t\tcase ChannelClass.MAGNETOMETER:\n\t\t\treturn new ChCls.Magnetometer(ch);\n\t\tcase ChannelClass.MOTOR_POSITION_CONTROLLER:\n\t\t\treturn new ChCls.MotorPositionController(ch);\n\t\tcase ChannelClass.PH_SENSOR:\n\t\t\treturn new ChCls.PHSensor(ch);\n\t\tcase ChannelClass.POWER_GUARD:\n\t\t\treturn new ChCls.PowerGuard(ch);\n\t\tcase ChannelClass.PRESSURE_SENSOR:\n\t\t\treturn new ChCls.PressureSensor(ch);\n\t\tcase ChannelClass.RC_SERVO:\n\t\t\treturn new ChCls.RCServo(ch);\n\t\tcase ChannelClass.RESISTANCE_INPUT:\n\t\t\treturn new ChCls.ResistanceInput(ch);\n\t\tcase ChannelClass.RFID:\n\t\t\treturn new ChCls.RFID(ch);\n\t\tcase ChannelClass.SOUND_SENSOR:\n\t\t\treturn new ChCls.SoundSensor(ch);\n\t\tcase ChannelClass.SPATIAL:\n\t\t\treturn new ChCls.Spatial(ch);\n\t\tcase ChannelClass.STEPPER:\n\t\t\treturn new ChCls.Stepper(ch);\n\t\tcase ChannelClass.TEMPERATURE_SENSOR:\n\t\t\treturn new ChCls.TemperatureSensor(ch);\n\t\tcase ChannelClass.VOLTAGE_INPUT:\n\t\t\treturn new ChCls.VoltageInput(ch);\n\t\tcase ChannelClass.VOLTAGE_OUTPUT:\n\t\t\treturn new ChCls.VoltageOutput(ch);\n\t\tcase ChannelClass.VOLTAGE_RATIO_INPUT:\n\t\t\treturn new ChCls.VoltageRatioInput(ch);\n\t\tdefault:\n\t\t\tthrow new Error(\"Invalid Channel Class\");\n\t}\n}\n\n","﻿import { CreatePhidgetChannel } from './CreatePhidgetChannel.gen';\nimport { Phidget, PhidgetDevice } from './Phidget';\nimport { Managers, Connections } from './phidget22';\nimport { logEventException } from './Logging';\nimport { Channel } from './Channel';\nimport { Device } from './Device';\n\n/** @public */\nexport interface ManagerOptions {\n\tonDeviceAttach?: ((phid: Phidget) => void);\n\tonDeviceDetach?: ((phid: Phidget) => void);\n\tonAttach?: ((phid: Phidget) => void);\n\tonDetach?: ((phid: Phidget) => void);\n}\n\n/**\n * @public\n */\nclass Manager {\n\t/** @internal */\n\tprivate _isopen: boolean;\n\n\t/**\n\t * **DeviceAttach** event\n\t *  * `device` - The Phidget device that attached\n\t * ---\n\t * Occurs when a device is attached.Phidget devices you get from the manager are informational only, \n\t * you can read information about them such as serial number, class, name, etc.\n\t */\n\tonDeviceAttach: ((this: Manager, device: Phidget) => void) | null = null;\n\n\t/**\n\t * **DeviceDetach** event\n\t *  * `device` - The Phidget device that detached\n\t * ---\n\t * Occurs when a device is detached\n\t */\n\tonDeviceDetach: ((this: Manager, device: Phidget) => void) | null = null;\n\n\t/**\n\t * **Attach** event\n\t *  * `channel` - The Phidget channel that attached\n\t * ---\n\t * Occurs when a channel is attached.\n\t * *   Phidget channels you get from the manager are informational only. You can read information about \n\t * them such as serial number, class, name, etc. but they are not opened. In order to interact with one, \n\t * you must call `open` to take ownership of the channel, and wait for the attach.\n\t */\n\tonAttach: ((this: Manager, channel: Phidget) => void) | null = null;\n\n\t/**\n\t * **Detach** event\n\t *  * `channel` - The Phidget channel that detached\n\t * ---\n\t * Occurs when a channel is detached.\n\t */\n\tonDetach: ((this: Manager, channel: Phidget) => void) | null = null;\n\n\t/**\n\t * The Phidget Manager allows tracking of which Phidgets are available to be controlled from the current program. \n\t * This is useful for listing all available Phidgets so you can select which ones to use at runtime.\n\t *\n\t * You do not need to use a Phidget Manager if you know what Phidgets will be required for your application \n\t * in advance.\n\t *\n\t * Phidget channels that become available will each send an Attach event, and Phidgets that are removed \n\t * from the system will send corresponding Detach events. If you are using a Phidget Manager, your program \n\t * is responsible for keeping track of available Phidgets using these events.\n\t * \n\t * @param opts - Event callbacks can be specified via this object\n\t */\n\tconstructor(opts?: ManagerOptions) {\n\t\tthis._isopen = false;\n\n\t\tif (typeof opts === 'object') {\n\t\t\tif ('onDeviceAttach' in opts && typeof opts.onDeviceAttach === 'function')\n\t\t\t\tthis.onDeviceAttach = opts.onDeviceAttach;\n\t\t\tif ('onDeviceDetach' in opts && typeof opts.onDeviceDetach === 'function')\n\t\t\t\tthis.onDeviceDetach = opts.onDeviceDetach;\n\t\t\tif ('onAttach' in opts && typeof opts.onAttach === 'function')\n\t\t\t\tthis.onAttach = opts.onAttach;\n\t\t\tif ('onDetach' in opts && typeof opts.onDetach === 'function')\n\t\t\t\tthis.onDetach = opts.onDetach;\n\t\t}\n\t}\n\n\t/**\n\t * Opens the Phidget Manager.\n\t * \n\t * Be sure to register `Attach` and `Detach` event handlers for the Manager before opening it, \n\t * to ensure you program doesn't miss the events reported for devices already connected to your system.\n\t */\n\topen() {\n\t\tif (this._isopen)\n\t\t\treturn;\n\n\t\tManagers.push(this);\n\n\t\tfor (const conn of Connections) {\n\t\t\tif (this.onDeviceAttach) {\n\t\t\t\tfor (const d of conn._devices.values()) {\n\t\t\t\t\tconst phid = new PhidgetDevice(d);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onDeviceAttach(phid);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.onAttach) {\n\t\t\t\tfor (const ch of conn._channels.values()) {\n\t\t\t\t\tconst phid = CreatePhidgetChannel(ch);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.onAttach(phid);\n\t\t\t\t\t} catch (err) { logEventException(err); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._isopen = true;\n\t}\n\n\t/**\n\t * Closes a Phidget Manager that has been opened.\n\t */\n\tclose() {\n\t\tthis._isopen = false;\n\t\tif (Managers.includes(this))\n\t\t\tManagers.splice(Managers.indexOf(this), 1);\n\t}\n\n\t/** @internal */\n\t_deviceAttach(dev: Device) {\n\t\tif (this._isopen && this.onDeviceAttach) {\n\t\t\tconst phdev = new PhidgetDevice(dev);\n\t\t\ttry {\n\t\t\t\tthis.onDeviceAttach(phdev);\n\t\t\t} catch (err) { logEventException(err); }\n\t\t}\n\t}\n\n\t/** @internal */\n\t_deviceDetach(dev: Device) {\n\t\tif (this._isopen && this.onDeviceDetach) {\n\t\t\tconst phdev = new PhidgetDevice(dev);\n\t\t\ttry {\n\t\t\t\tthis.onDeviceDetach(phdev);\n\t\t\t} catch (err) { logEventException(err); }\n\t\t}\n\t}\n\n\t/** @internal */\n\t_channelAttach(ch: Channel) {\n\t\tif (this._isopen && this.onAttach) {\n\t\t\tconst phch = CreatePhidgetChannel(ch);\n\t\t\ttry {\n\t\t\t\tthis.onAttach(phch);\n\t\t\t} catch (err) { logEventException(err); }\n\t\t}\n\t}\n\n\t/** @internal */\n\t_channelDetach(ch: Channel) {\n\t\tif (this._isopen && this.onDetach) {\n\t\t\tconst phch = CreatePhidgetChannel(ch);\n\t\t\ttry {\n\t\t\t\tthis.onDetach(phch);\n\t\t\t} catch (err) { logEventException(err); }\n\t\t}\n\t}\n}\n\n// Export\nexport { Manager };\n"],"names":["global","fails","require$$0","NATIVE_BIND","FunctionPrototype","apply","call","bind","uncurryThis","isCallable","getOwnPropertyDescriptor","createPropertyDescriptor","toString","stringSlice","classofRaw","require$$1","require$$2","classof","require$$3","Object","TypeError","requireObjectCoercible","IndexedObject","toIndexedObject","isObject","path","getBuiltIn","userAgent","process","V8_VERSION","NATIVE_SYMBOL","isPrototypeOf","USE_SYMBOL_AS_UID","require$$4","isSymbol","String","tryToString","aCallable","getMethod","ordinaryToPrimitive","defineProperty","setGlobal","store","sharedModule","toObject","uid","shared","hasOwn","require$$5","Symbol","wellKnownSymbol","require$$6","toPrimitive","toPropertyKey","document","EXISTS","documentCreateElement","DESCRIPTORS","createElement","IE8_DOM_DEFINE","require$$7","$getOwnPropertyDescriptor","isForced","anObject","V8_PROTOTYPE_DEFINE_BUG","CONFIGURABLE","definePropertyModule","createNonEnumerableProperty","require$$8","require$$9","sharedKey","IE_PROTO","aPossiblePrototype","toIntegerOrInfinity","min","toAbsoluteIndex","toLength","lengthOfArrayLike","createMethod","hiddenKeys","push","enumBugKeys","internalObjectKeys","ownKeys","copyConstructorProperties","objectKeys","html","replace","clearErrorStack","installErrorCause","Iterators","ITERATOR","ArrayPrototype","isArrayIteratorMethod","TO_STRING_TAG","test","TO_STRING_TAG_SUPPORT","getIteratorMethod","getIterator","iteratorClose","require$$10","iterate","normalizeStringArgument","$","getPrototypeOf","create","require$$11","require$$12","require$$13","require$$14","Error","inspectSource","WeakMap","set","redefine","BUGGY_SAFARI_ITERATORS","IteratorPrototype","setToStringTag","returnThis","createIteratorConstructor","PROPER_FUNCTION_NAME","defineIterator","InternalStateModule","setInternalState","getInternalState","redefineAll","SPECIES","setSpecies","anInstance","checkCorrectnessOfIteration","isConstructor","aConstructor","speciesConstructor","arraySlice","validateArgumentsLength","IS_IOS","IS_NODE","Function","queue","task","Promise","notify","promise","microtask","newPromiseCapability","promiseResolve","hostReportErrors","perform","Queue","NativePromise","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","newPromiseCapabilityModule","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","charAt","DOMIterables","parent","sha256hash","msg","ROTR","n","x","S0","S1","s0","s1","Ch","y","z","Maj","toHexStr","s","v","i","unescape","encodeURIComponent","K","H","fromCharCode","l","length","N","Math","ceil","M","Array","j","charCodeAt","pow","floor","W","a","b","c","d","e","f","g","h","t","T1","T2","entryVirtual","values","method","EncoderIOMode","ErrorCode","ErrorEventCode","DeviceID","LogLevel","DeviceClass","ChannelClass","ChannelSubclass","MeshMode","PowerSupply","RTDWireSetup","InputMode","FanMode","MotorDriveType","MotorPositionType","SpatialPrecision","Unit","BridgeGain","VoltageRatioSensorType","LEDForwardVoltage","RCServoVoltage","VoltageOutputRange","VoltageRange","VoltageSensorType","RFIDProtocol","SpatialAlgorithm","RTDType","ThermocoupleType","FrequencyFilterType","IRCodeEncoding","IRCodeLength","StepperControlMode","LCDFont","LCDScreenSize","LCDPixelState","DataAdapterParity","DataAdapterStopBits","DataAdapterHandshakeMode","DataAdapterProtocol","DataAdapterSPIMode","DataAdapterEndianness","DataAdapterIOVoltage","PacketErrorCode","SPLRange","HubPortMode","PhidgetErrorDescription","PhidgetError","constructor","code","message","innerException","undefined","innerMsg","JSON","stringify","captureStackTrace","name","errorCode","stacks","_stacks","stack","loglevel","WARNING","logsEnabled","Log","setLevel","level","getLevel","enable","disable","log","CRITICAL","logcrit","ERROR","logerr","logwarn","INFO","loginfo","DEBUG","logdebug","VERBOSE","logverbose","prevTime","colouredText","txt","colour","logger","lvl","obj","msDiffTxt","curr","Number","Date","ms","m","console","error","warn","debug","logbuffer","buffer","bytestring","view","ArrayBuffer","isView","DataView","byteLength","by","getUint8","slice","logEventException","err","PhidgetLock","_locked","releaseEvents","onRelease","listener","removeReleaseListener","idx","indexOf","splice","emitRelease","listeners","acquire","resolve","tryAcquire","release","setTimeout","locked","C_LIBRARY_VERSION","LibraryVersion","JSLibraryVersion","Managers","Connections","UserPhidgets","Epoch","tm","now","scanChannels","userphid","conn","_isLocal","_isRemote","_match","scanUserPhidgets","ch","tryMatchOpen","scanningActive","scanStopped","scanLock","scanTimeout","startScanningUserPhidgets","scan","again","all","filter","_attaching","_isopen","map","then","catch","stopScanningUserPhidgets","clearTimeout","scanStopPromise","managerDeviceAttach","dev","_deviceAttach","managerDeviceDetach","_deviceDetach","managerChannelAttach","_channelAttach","managerChannelDetach","_channelDetach","_onConnectionRemoved","_onConnectionAdded","onConnectionRemoved","onConnectionAdded","ConnectionID","PhidgetConnection","opts","_id","connected","_channels","Map","_devices","onError","setOnConnectionRemoved","func","setOnConnectionAdded","delete","BUSY","includes","getKey","key","_type","_getChannel","id","get","UNEXPECTED","_getDevice","_detachAllDevices","size","last","from","_valuesInstanceProperty","has","DUPLICATE","isHubPort","NO_SUCH_ENTITY","entries","detach","Request","dataOrLength","flgs","reqseq","repseq","type","stype","len","hdrlen","parse","buf","magic","array","Uint8Array","flags","BPE_ISEVENT_FLAG","BridgePacket","data","version","source","vpkt","p","O","entryCount","local","isEvent","_flagsInstanceProperty","entryType","validate","value","num","isNaN","isArray","val","remove","entry","filteredEntries","add","getJsonOut","bp","I","X","uniqueIndex","send","callBridgeInput","isopen","NOT_ATTACHED","response","bridgeInput","deliver","sendToChannel","clearErrorEvent","getNumber","getArray","getObject","getString","getBoolean","ChannelClassName","DeviceClassName","PhidgetBase","ANY_SERIAL_NUMBER","ANY_HUB_PORT","ANY_CHANNEL","ANY_LABEL","INFINITE_TIMEOUT","DEFAULT_TIMEOUT","AUTO_HUBPORTSPEED","attached","getAttached","channel","getChannel","setChannel","isChannel","getIsChannel","channelClass","getChannelClass","channelClassName","getChannelClassName","channelName","getChannelName","channelSubclass","getChannelSubclass","connection","getConnection","deviceClass","getDeviceClass","deviceClassName","getDeviceClassName","deviceFirmwareUpgradeString","getDeviceFirmwareUpgradeString","deviceID","getDeviceID","deviceLabel","getDeviceLabel","setDeviceLabel","deviceName","getDeviceName","deviceSerialNumber","getDeviceSerialNumber","setDeviceSerialNumber","deviceSKU","getDeviceSKU","deviceVersion","getDeviceVersion","deviceVINTID","getDeviceVINTID","hub","getHub","hubPort","getHubPort","setHubPort","hubPortCount","getHubPortCount","isHubPortDevice","getIsHubPortDevice","setIsHubPortDevice","hubPortSpeed","getHubPortSpeed","maxHubPortSpeed","getMaxHubPortSpeed","hubPortSupportsAutoSetSpeed","getHubPortSupportsAutoSetSpeed","hubPortSupportsSetSpeed","getHubPortSupportsSetSpeed","isLocal","getIsLocal","setIsLocal","isOpen","getIsOpen","getParent","isRemote","getIsRemote","setIsRemote","maxVINTDeviceSpeed","getMaxVINTDeviceSpeed","VINTDeviceSupportsAutoSetSpeed","getVINTDeviceSupportsAutoSetSpeed","VINTDeviceSupportsSetSpeed","getVINTDeviceSupportsSetSpeed","Phidget","chOrDev","onAttach","onDetach","onPropertyChange","_fromManager","_isattached","libraryVersion","getLibraryVersion","PhidgetChannel","_useropen","_detaching","_isHubPort","_channel","_deviceLabel","_serialNumber","_hubPort","_ch","_cancelOpenTimeout","_openTimeoutTimer","_openTimeout","_openTime","_wasOpened","_resolveOpen","_close","fromDetach","close","_rejectOpen","CLOSED","_FIREPropertyChange","prop","_isAttachedDone","_handleSetStatus","dataIntervalDbl","dataInterval","minDataInterval","maxDataRate","maxDataInterval","minDataRate","_assertAttached","_assertOpen","_isAttachedOrDetaching","open","timeout","openPromise","reject","TIMEOUT","index","_class","subclass","class","label","serialNumber","sn","sku","HUB","WRONG_DEVICE","PhidgetDevice","VINT","vintDeviceProps","commSpeed","UNKNOWN_VALUE","setHubPortSpeed","fwstr","writeDeviceLabel","getDeviceChannelCount","cls","count","devDef","UNSUPPORTED","vintID","_device","hubPortProps","portSuppSetSpeed","portSuppAutoSetSpeed","portMaxSpeed","suppSetSpeed","suppAutoSetSpeed","maxSpeed","reboot","rebootFirmwareUpgrade","upgradeTimeout","_deviceSerialNumber","_hubPortSpeed","_isHubPortDevice","_timeout","_upgradeTimeout","Channel","chDef","NONE","match","BAD_VERSION","FAILURE","detaching","supportedBridgePacket","_errorHandler","_bridgeInput","_onInitialState","_hasInitialState","sendErrorEvent","desc","lastErrorEventCode","lastErrorEventDesc","lastErrorEventTime","NetworkChannel","cpversion","devInfo","phid","status","_sendRequest","closePkt","pkt","PhidgetDevices","USB","cn","MESH","SPI","LIGHTNING","VIRTUAL","findPhidgetUniqueDevice","typeDevs","productID","interfaceNum","Device","parentId","NetworkDevice","findPhidgetUniqueChannel","NET_MAJOR","NET_MINOR","NET_IDENT","NetworkConnectionBase","optsOrUriOrPort","optsOrHostname","options","uri","hostname","port","_generation","_reqseq","_requests","_opened","_uri","_hostname","_port","onConnect","onDisconnect","onAuthenticationNeeded","passwd","_passwd","_handleAbandonedRequestsInterval","setInterval","_handleAbandonedRequests","clearInterval","setKeepAlive","_connectionMaintainer","_closesocket","_onmessage","req","json","tmp1","tmp2","NaN","_ondatamessage","_onauthmessage","r","generation","CONNECTION_RESET","time","onTimeout","_getNextRequestSequence","onReply","res","E","SUCCESS","R","data2","_send","_sendReply","reply","NRF_REPLY","_maintainConnection","nextMaintainer","connect","_doclose","_onauthdata","request","_handleCommand","_handleDevice","INVALID","_keepAliveTimeout","KEEP_ALIVE","_handleDeviceAttach","_handleDeviceDetach","_handleBridgePacket","_handleChannel","devData","baseData","vintProto","hubPortCnt","hubPortsInfo","portProto","chData","chid","_handshake","_protocol","pmajor","pminor","HandShakeS0","result","_nonceC","_createSalt","ident","nonceC","AuthS0","challenge","nonceS","salt","proof","_hash","AuthReply","pass","DecodeUTF8","bytes","EncodeUTF8","ci","c2","subarray","NetworkConnection","retryOnFail","_resolveConnect","_ws","hasCompleted","WebSocket","binaryType","onopen","_connectTimeout","onclose","onmessage","event","perr","onerror","CONNECTION_REFUSED","readyState","OPEN","dataArr","digest","bin","parseInt","substring","btoa","crypto","getRandomValues","PHIDGET_MAXCHANNELS","MAX_OUT_PACKET_SIZE","LocalDevice","channels","GetBigInt64","offset","prototype","getBigInt64","isNegative","uint64","carrying","uint32","getUint32","SetBigInt64","temp","setInt32","setUint32","StringToWordByteArray","buff","wordarray","Uint16Array","WordByteArrayToString","bytearray","RoundDouble","decimals","round","UpperPowerOfTwo","PhidgetSleep","delay","MAX_PACKET_IDS","PACKETTRACKER_INUSE","PACKETTRACKER_SIGNALLED","PACKETTRACKER_SENT","PACKETTRACKER_ABANDONNED","PacketTrackers","packetTracker","counter","setPacketsReturnCode","child","pt","state","childIndex","returnCode","signal","getPacketTrackerWait","device","max","tracker","getPacketTracker","packetTrackers","PacketTracker","waitForPendingPackets","stillSomeLeft","timetm","setPacketLength","setPacketReturnCode","signalled","sent","waitForPendingPacket","timer","releasePacketTracker","force","reverse","supportedEncoderIOMode","Enum","PUSH_PULL","OPEN_COLLECTOR_10K","LINE_DRIVER_2K2","LINE_DRIVER_10K","OPEN_COLLECTOR_2K2","supportedPowerSupply","OFF","VOLTS_24","VOLTS_12","supportedRTDWireSetup","WIRES_2","WIRES_4","WIRES_3","supportedInputMode","NPN","PNP","supportedFanMode","AUTO","ON","supportedSpatialPrecision","HYBRID","LOW","supportedBridgeGain","GAIN_1X","GAIN_128X","GAIN_64X","GAIN_2X","GAIN_4X","GAIN_8X","GAIN_16X","GAIN_32X","supportedVoltageRatioSensorType","VOLTAGE_RATIO","PN_3522","PN_1101_SHARP2D120X","PN_1101_SHARP2Y0A21","PN_1101_SHARP2Y0A02","PN_1102","PN_1103","PN_1104","PN_1105","PN_1106","PN_1107","PN_1108","PN_1109","PN_1110","PN_1111","PN_1112","PN_1113","PN_1115","PN_1116","PN_1118_AC","PN_1118_DC","PN_1119_AC","PN_1119_DC","PN_1120","PN_1121","PN_1122_AC","PN_1122_DC","PN_1124","PN_1125_HUMIDITY","PN_1125_TEMPERATURE","PN_1126","PN_1128","PN_1129","PN_1131","PN_1134","PN_1136","PN_1137","PN_1138","PN_1139","PN_1140","PN_1141","PN_1146","PN_3120","PN_3121","PN_3122","PN_3123","PN_3130","PN_3520","PN_3521","supportedLEDForwardVoltage","VOLTS_1_7","VOLTS_5_6","VOLTS_2_75","VOLTS_3_9","VOLTS_5_0","VOLTS_3_2","VOLTS_4_0","VOLTS_4_8","supportedRCServoVoltage","VOLTS_7_4","VOLTS_6_0","supportedVoltageOutputRange","VOLTS_10","VOLTS_5","supportedVoltageRange","MILLIVOLTS_10","MILLIVOLTS_40","MILLIVOLTS_200","MILLIVOLTS_1000","MILLIVOLTS_312_5","MILLIVOLTS_400","VOLTS_2","VOLTS_15","VOLTS_40","supportedVoltageSensorType","VOLTAGE","PN_VCP4114","PN_1114","PN_1117","PN_1123","PN_1127","PN_1130_PH","PN_1130_ORP","PN_1132","PN_1133","PN_1135","PN_1142","PN_1143","PN_3500","PN_3501","PN_3502","PN_3503","PN_3585","PN_3586","PN_3587","PN_3588","PN_3589","PN_MOT2002_LOW","PN_MOT2002_MED","PN_MOT2002_HIGH","PN_3507","PN_3508","PN_3509","PN_3510","PN_3511","PN_3512","PN_3513","PN_3514","PN_3515","PN_3516","PN_3517","PN_3518","PN_3519","PN_3584","supportedRFIDProtocol","EM4100","PHIDGET_TAG","ISO11785_FDX_B","supportedSpatialAlgorithm","IMU","supportedRTDType","PT100_3850","PT1000_3920","PT1000_3850","PT100_3920","supportedThermocoupleType","J","T","supportedFrequencyFilterType","ZERO_CROSSING","LOGIC_LEVEL","supportedStepperControlMode","STEP","RUN","supportedLCDFont","USER1","DIMENSIONS_6X12","USER2","DIMENSIONS_6X10","DIMENSIONS_5X8","supportedLCDScreenSize","NO_SCREEN","DIMENSIONS_64X128","DIMENSIONS_1X8","DIMENSIONS_2X8","DIMENSIONS_1X16","DIMENSIONS_2X16","DIMENSIONS_4X16","DIMENSIONS_4X20","DIMENSIONS_2X24","DIMENSIONS_1X40","DIMENSIONS_2X40","DIMENSIONS_4X40","DIMENSIONS_2X20","supportedLCDPixelState","INVERT","supportedSPLRange","DB_102","DB_82","supportedHubPortMode","VOLTAGE_RATIO_INPUT","VINT_MAX_OUT_PACKETSIZE","VINTPacketDescription","VINTPacketCode_to_PhidgetReturnCode","INVALID_ARGUMENT","INVALID_PACKET","NOT_CONFIGURED","NO_SPACE","FILE_TOO_BIG","FAILSAFE","send1014_3_VINT","dutyCycle","setUint8","sendVINTDataPacket","setUint16","recv1014_3_VINT","FAILSAFE_CONDITION","send1017_2_VINT","recv1017_2_VINT","send1055_1_VINT","recv1055_1_VINT","sendDIGITALINPUT_PORT","recvDIGITALINPUT_PORT","sendDIGITALOUTPUT_PORT","buf8","_reverseInstanceProperty","recvDIGITALOUTPUT_PORT","sendDIGITALOUTPUT_PORT_FAILSAFE","recvDIGITALOUTPUT_PORT_FAILSAFE","sendVOLTAGEINPUT_PORT","SEnum","recvVOLTAGEINPUT_PORT","voltage","getUint16","SATURATION","sendVOLTAGEINPUT_PORT_5V25","recvVOLTAGEINPUT_PORT_5V25","sendVOLTAGERATIOINPUT_PORT","recvVOLTAGERATIOINPUT_PORT","voltageRatio","sendADP1000","range","sensorType","recvADP1000","getInt32","sendDAQ1000","setFloat32","recvDAQ1000","getFloat32","sendDAQ1000_5V25","recvDAQ1000_5V25","sendOUT1000","recvOUT1000","VOLTAGE_ERROR","sendOUT1000_Failsafe","recvOUT1000_Failsafe","sendOUT1001","recvOUT1001","sendOUT1001_Failsafe","recvOUT1001_Failsafe","sendOUT1002","recvOUT1002","sendOUT1002_Failsafe","recvOUT1002_Failsafe","sendDAQ1200","recvDAQ1200","sendOUT1100","recvOUT1100","sendOUT1100_Failsafe","recvOUT1100_Failsafe","sendOUT1100_Failsafe_Frequency","recvOUT1100_Failsafe_Frequency","sendDAQ1300","recvDAQ1300","sendDAQ1301","recvDAQ1301","sendDAQ1400","recvDAQ1400","ticksAtLastCount","counts","ticks","current","OUT_OF_RANGE","sendDAQ1400_120","recvDAQ1400_120","sendDAQ1500","recvDAQ1500","voltageratio","sendVCP1100","recvVCP1100","sendDCC1000","position","recvDCC1000","brakingDutyCycle","sign","temperature","indexPosition","timeChange","indexTriggered","positionChange","brakingStrength","sendDCC1000_POSITIONCONTROL","recvDCC1000_POSITIONCONTROL","sendDCC1000_POSITIONCONTROL_FAILSAFE","recvDCC1000_POSITIONCONTROL_FAILSAFE","sendDCC1001","recvDCC1001","sendDCC1001_Failsafe","recvDCC1001_Failsafe","sendDCC1002","recvDCC1002","sendDCC1002_Failsafe","recvDCC1002_Failsafe","sendDCC1003","recvDCC1003","sendDCC1003_Failsafe","recvDCC1003_Failsafe","sendDCC1100","recvDCC1100","MOTOR_STALL_CONDITION","sendDCC1100_Failsafe","recvDCC1100_Failsafe","sendDST1000","recvDST1000","distance","sendDST1001","recvDST1001","sendDST1002","recvDST1002","sendDST1200","recvDST1200","DISTANCE_MAX_REFLECTIONS","reflections_distance","reflections_strength","reflections_count","sendENC1000","recvENC1000","sendHIN1101","setInt8","recvHIN1101","sendHIN1000","recvHIN1000","touched","sendHIN1001","recvHIN1001","sendHIN1100","recvHIN1100","axis","getInt16","sendHUM1000","recvHUM1000","humidity","sendHUM1001","recvHUM1001","sendLCD1100_WRITETEXT","font","xpos","ypos","chars","fontSize","getFontSize","frameBuffer","width","height","numchars","numsent","sendLCD1100_WRITEBITMAP","bitmap","xsize","ysize","byteIdx","bit","newbyte","sendLCD1100_SETCHARACTERBITMAP","characterStr","maxchars","getMaxCharacters","lcdw","character","sendLCD1100","_transactionLock","fb","recvLCD1100","sendLED1000","recvLED1000","sendLUX1000","recvLUX1000","illuminance","sendHUM1100","recvHUM1100","sendMOT1100","recvMOT1100","timestamp","acc","sendMOT1101","sendMOT1101_SETCORRECTIONPARAMETERS","recvMOT1101","fireSaturation","compass","accel","gyro","tmp","saturationError","firmware_userMagnetometerTransform","firmware_userMagnetometerOffset","firmware_userMagnetometerGain","firmware_userMagField","sendMOT1102","transactionLock","sendMOT1102_SETCORRECTIONPARAMETERS","recvMOT1102","quaternion","INVALID_STATE_CONDITION","sendMOT1102_1","recvMOT1102_1","sendMOT0100_VINT","_handleDataIntervalPacket","recvMOT0100_VINT","sendMOT0110_VINT","sendMOT0110_SETCORRECTIONPARAMETERS","recvMOT0110_VINT","tmpFlt","interval","OUT_OF_RANGE_LOW_CONDITION","OUT_OF_RANGE_HIGH_CONDITION","sendPRE1000","recvPRE1000","pressure","sendRCC1000","recvRCC1000","motorPosition","BAD_POWER","sendRCC1000_Failsafe","recvRCC1000_Failsafe","sendRCC1000_1","recvRCC1000_1","sendREL1000","recvREL1000","sendREL1000_Failsafe","recvREL1000_Failsafe","sendREL1100","recvREL1100","sendREL1100_Failsafe","recvREL1100_Failsafe","sendREL1100_Failsafe_Frequency","recvREL1100_Failsafe_Frequency","sendREL1101","recvREL1101","sendREL1101_Failsafe","recvREL1101_Failsafe","sendREL1101_1","recvREL1101_1","sendSAF1000","recvSAF1000","ENERGY_DUMP_CONDITION","OVER_TEMPERATURE","OVER_VOLTAGE","sendSAF1000_Failsafe","recvSAF1000_Failsafe","sendSND1000","recvSND1000","octaves","finaloctaves","tempDouble","gain","dB","dBA","dBC","changeTrigger","lastdB","saturatedFlag","dBA_weight","dBC_weight","sqrt","log10","SPLChangeTrigger","abs","sendSTC1000","recvSTC1000","velocity","stopped","moving","isMoving","sendSTC1000_Failsafe","recvSTC1000_Failsafe","sendSTC1001","recvSTC1001","sendSTC1001_Failsafe","recvSTC1001_Failsafe","sendSTC1002","recvSTC1002","sendSTC1002_Failsafe","recvSTC1002_Failsafe","sendSTC1003","recvSTC1003","sendSTC1003_Failsafe","recvSTC1003_Failsafe","sendSTC1003_1","recvSTC1003_1","sendSTC1005_0","recvSTC1005_0","FAULT","sendTMP1000","recvTMP1000","sendTMP1100","recvTMP1100","sendTMP1101","recvTMP1101","sendTMP1101_1","recvTMP1101_1","BAD_CONNECTION_CONDITION","sendTMP1200","recvTMP1200","resistance","sendTMP1200_1","recvTMP1200_1","sendVCP1000","recvVCP1000","sendVCP1001","recvVCP1001","sendVCP1002","recvVCP1002","sendVCP1001_110","recvVCP1001_110","sendVCP1002_110","recvVCP1002_110","sendFIRMWARE_UPGRADE_STM32F0","recvFIRMWARE_UPGRADE_STM32F0","sendFIRMWARE_UPGRADE_STM32G0_BLBug","recvFIRMWARE_UPGRADE_STM32G0_BLBug","sendFIRMWARE_UPGRADE_STM32G0","recvFIRMWARE_UPGRADE_STM32G0","sendFIRMWARE_UPGRADE_STM32F3","recvFIRMWARE_UPGRADE_STM32F3","sendFIRMWARE_UPGRADE_STM8S","recvFIRMWARE_UPGRADE_STM8S","sendUNKNOWNVINT","recvUNKNOWNVINT","USBVID_PHIDGETS","USBPID_PHIDGETS_MIN","USBPID_PHIDGETS_MAX","USBD_PHIDGET_PROTO_VERSION","USB_CONFIGURATION_DESCRIPTOR","USB_COMMON_DESCRIPTOR","GetPhidgetDeviceParams","usbDevice","endpointDesc","phidgetDeviceDesc","phidgetEndpointDesc","params","maxPacketEP0","ep1type","maxPacketEP1","ep2type","maxPacketEP2","wMaxPacketSizeEP1","labelIndex","skuIndex","descEnd","configDescData","GetConfigDescriptor","configDesc","bLength","bDescriptorType","wTotalLength","bNumInterfaces","bConfigurationValue","iConfiguration","bmAttributes","MaxPower","bEndpointAddress","wMaxPacketSize","bInterval","bcdVersion","iLabel","iSKU","GetPhidgetUSBData","vendorId","productId","GetDescriptor","devDescriptor","bcdUSB","bDeviceClass","bDeviceSubClass","bDeviceProtocol","bMaxPacketSize0","idVendor","idProduct","bcdDevice","iManufacturer","iProduct","iSerialNumber","bNumConfigurations","serial","phidDevParams","skuString","configuration","interfaces","interfaceNumber","bStringWordArray","vendorID","pusbParams","DescriptorType","DescriptorIndex","wIndex","descReq","controlTransferParams","requestType","recipient","controlTransferIn","IO","configDescReq","PhidgetUSBDevice","usbDev","phidlock","readlock","writelock","openCnt","opened","claimed","fullOpen","closing","selectConfiguration","claimInterface","openReset","initAfterOpen","_usbType","_setEpTimeout","pollUSBData","_usbErrorDetach","dataInput","readPacket","fullClose","closeReset","releaseInterface","transferPacket","transferType","packetType","bufferOrReadLen","transferOut","controlTransferOut","bytesWritten","xfer","transferIn","readDescriptor","getMaxOutPacketSize","writeLabel","bufftemp","lock","unlock","interruptRate","__di","HUB_PORT_ID_MAX","VINTHUB_MAXPORTS","PACKETID_MAX","PACKETIDS_PER_PORT","PACKETRETURN_notACK","INPACKET_HUBMSG_FLAG","IN_VINTPACKET_START","UNKNOWN_VINT_ID","HubDevice","fill","packetCounter","splitPacketStoragePtr","splitPacketStorage","scanError","numVintPorts","numVintPortModes","makePacket","vintDevice","updatePortProperties","bPortMode","bVINTProtocolVersion","VINTProperties","vintPortDesc","portSpeed","portMode","propLen","packetID","readPtr","packetSpace","vintDevices","sendHubPacket","internalPacketInBufferLen","dataCount","killOutstandingPackets","nextPacketStart","setPortMode","outstandingPacketCnt","pktCnt","vintDeviceDesc","vint","_attachLocalDevice","scanVINTDevice","mode","getVINTIO","VintPackets","recv","VINT_DATA_wCHANNEL","NUM_VINT_SUPPORTED_SPEEDS","supportedSpeeds","VINTDevice","io","vintIO","DIGITAL_INPUT","DIGITAL_OUTPUT","VOLTAGE_INPUT","channelIndex","vintChannel","byteOffset","deviceCommand","devicePacketType","bufferIn","bufIndex","sendpacket","hubDevice","claimPacketSpace","sendpacketWithTracking","packetOutCounter","speed","sendVINTPacket","sendHubPortPacket","LocalChannel","_initAfterOpen","_setDefaults","_fireInitialEvents","remaining","command","bufferOut","InterfaceKitDevice","outputState","numOutputs","failsafeState","inputState","numInputs","numVoltageInputs","numSensors","numCapTouches","RFIDDevice","RFID","protocol","antennaEnabled","tagString","toLower","tagPresent","ZERO_GYRO_TIME","MIN_DATA_RATE","ACCEL_CHANNEL","GYRO_CHANNEL","MAG_CHANNEL","SPT_CHANNEL","TMP_CHANNEL","ACCEL_SEND_FLAG","GYRO_SEND_FLAG","MAG_SEND_FLAG","SPT_SEND_FLAG","TMP_SEND_FLAG","SpatialDevice","numAccelAxes","numSpatialInputs","numTempInputs","updateTimestamp","lastTimeCounter","latestDataTime","timestampDiff","time2","initData","angularRate","magneticField","temperatureDataInterval","accelerationChangeTrigger","magneticFieldChangeTrigger","temperatureChangeTrigger","accelAxisLastTrigger","gyroCorrection","magAxisLastTrigger","lastEventTime","doZeroGyro","dataBuffer","accelerationMax","accelerationMin","dataRateMax","dataRateMin","angularRateMax","angularRateMin","magneticFieldMax","magneticFieldMin","AHRSMagGain","userMagField","calDataValid","algorithm","temperatureMax","temperatureMin","lastTemperatureEventTime","temperatureLastTrigger","heatingEnabled","GYROSCOPE","setPrecision","MAGNETOMETER","resetCompassCorrectionParameters","corrParams","offset2","gain0","gain1","gain2","T0","T3","T4","T5","SPATIAL","saveCompassCorrectionParameters","setCompassCorrectionParameters","zeroAHRS","TEMPERATURE_SENSOR","eventData","dataRate","incData","acceleration","channelFlags","evData","dataIndex","gyroCorrectionTemp","_value","arary","forEach","doneGyroZero","angularRateCounter","magneticFieldCounter","dataPerEvent","multipleDataPerEvent","accelCounter","tempTime","accelAvg","numCompassAxes","w","fireEvent","numGyroAxes","channelHandle","newVal","numChannels","resetAHRS","configureAlgorithm","offset0","offset1","EncoderDevice","numEncoders","_buffer","_arg1","BridgeDevice","numBridgeInputs","updateBridgeIntervals","integerInterval","enabled","bp_s","voltageRatioChangeTrigger","enabledEcho","gainEcho","bridgeLastTrigger","bridgeMin","bridgeMax","outOfRange","chEnabledBugNotValid","ch0EnableOverride","chIndex","getInt8","DataAdapterDevice","GenericDevice","INPacketLength","OUTPacketLength","CTRPacketLength","TEMPSENSOR_MAXSENSORS","PHIDID_1048_GAIN","PHIDID_1048_OFFSET","TemperatureSensorDevice","lookup_voltage","tJunc","tcType","tcTable","thermocouple_table_k_type","thermocouple_table_j_type","thermocouple_table_e_type","thermocouple_table_t_type","startingTemp","thermocouple_table_range","lookup_temperature","Vtc","maxTemperature","minTemperature","voltageChangeTrigger","lastVoltageTrigger","potentialMin","potentialMax","voltageDeadline","voltageDataInterval","thermocoupleType","ambientTemperatureIndex","temperatureDeadline","lastTrigger","lastAmbientTrigger","di_calltm","potential","Vthermocouple","Temp","badConnectionFlags","ambientTemperature","errorMsg","toFixed","thermocouple_useful_range","AccelerometerDevice","accelDataInterval","accelDeadLine","callcnt","accelerationLastTrigger","UNKNOWN_USB_ID","CreateUSBDevice","find","phidgetDevice","ACCELEROMETER","BRIDGE","DATA_ADAPTER","ENCODER","GENERIC","INTERFACE_KIT","initAfterCreate","_a","USBConnectionCnt","USBConnectionBase","webusb","usbtype","_webusb","_nextScanDelay","_boundondisconnect","removeEventListener","_scanTimeout","_ondisconnect","addEventListener","_scanWebUSBDevices","random","usbDevices","_getDevices","_Promise","isNewDevice","_trackUSBDevice","_getPUSBDevice","_addPUSBDevice","scanVINTDevices","productName","_untrackUSBDevice","pUsbDevice","children","_deletePUSBDevice","channelCnt","USBConnection","window","navigator","usb","_usbdevs","Set","_pUSBDevices","requestWebUSBDeviceAccess","classCode","requestDevice","filters","_dev","_ep","getDevices","VoltageRatioInputBase","_initData","bridgeEnabled","bridgeGain","sensorValueChangeTrigger","sensorValue","sensorUnit","unit","symbol","onSensorChange","minVoltageRatio","maxVoltageRatio","minVoltageRatioChangeTrigger","maxVoltageRatioChangeTrigger","getBridgeEnabled","getBridgeGain","getDataInterval","getMinDataInterval","getMaxDataInterval","getDataRate","getMinDataRate","getMaxDataRate","getSensorType","getSensorUnit","getSensorValue","getSensorValueChangeTrigger","getVoltageRatio","getMinVoltageRatio","getMaxVoltageRatio","getVoltageRatioChangeTrigger","getMinVoltageRatioChangeTrigger","getMaxVoltageRatioChangeTrigger","setBridgeEnabled","setBridgeGain","setDataInterval","setDataRate","setSensorType","setSensorValueChangeTrigger","UNKNOWN_VALUE_HIGH","UNKNOWN_VALUE_LOW","setVoltageRatioChangeTrigger","Units","BOOLEAN","PERCENT","DECIBEL","MILLIMETER","CENTIMETER","METER","GRAM","KILOGRAM","MILLIAMPERE","AMPERE","KILOPASCAL","VOLT","DEGREE_CELCIUS","LUX","GAUSS","PH","WATT","VoltageRatioInput","_bangSensorVoltage","sentSensorEvent","_gotVoltageRatioChangeErrorEvent","_getVoltageRatioSensorUnit","_getVoltageRatioSensorValue","onVoltageRatioChange","includeVoltage","unitInfo","_getSensorValueInRange","exp","DigitalInputBase","inputMode","powerSupply","onStateChange","_gotStateChangeErrorEvent","getInputMode","getPowerSupply","getState","setInputMode","setPowerSupply","DigitalInput","DigitalOutputBase","frequency","LEDCurrentLimit","maxDutyCycle","minDutyCycle","minLEDCurrentLimit","maxLEDCurrentLimit","maxFailsafeTime","minFailsafeTime","maxFrequency","minFrequency","getDutyCycle","getMinDutyCycle","getMaxDutyCycle","getMinFailsafeTime","getMaxFailsafeTime","getFrequency","getMinFrequency","getMaxFrequency","getLEDCurrentLimit","getMinLEDCurrentLimit","getMaxLEDCurrentLimit","getLEDForwardVoltage","setDutyCycle","enableFailsafe","failsafeTime","setFrequency","setLEDCurrentLimit","setLEDForwardVoltage","resetFailsafe","setState","DigitalOutput","RCServoBase","RC_SERVO","engaged","minPulseWidth","maxPulseWidth","speedRampingState","targetPosition","torque","velocityLimit","maxPulseWidthLimit","maxPosition","maxVelocityLimit","maxAcceleration","maxTorque","minTorque","minPulseWidthLimit","minPosition","minVelocityLimit","minAcceleration","getAcceleration","getMinAcceleration","getMaxAcceleration","getEngaged","getIsMoving","getPosition","getMinPosition","setMinPosition","getMaxPosition","setMaxPosition","getMinPulseWidth","getMaxPulseWidth","getMinPulseWidthLimit","getMaxPulseWidthLimit","getSpeedRampingState","getTargetPosition","getTorque","getMinTorque","getMaxTorque","getVelocity","getVelocityLimit","getMinVelocityLimit","getMaxVelocityLimit","getVoltage","setEngaged","setMinPulseWidth","setMaxPulseWidth","setSpeedRampingState","setTorque","setVoltage","RCServo","onPositionChange","_positionUser","onVelocityChange","_velocityUser","onTargetPositionReached","position_us","_positionUS","position_user","velocity_us","_velocityUS","velocity_user","_accelUser","accel_us","_accelUS","accel_user","setAcceleration","setTargetPosition","setVelocityLimit","VoltageOutputBase","VOLTAGE_OUTPUT","voltageOutputRange","maxVoltage","minVoltage","getEnabled","getMinVoltage","getMaxVoltage","getVoltageOutputRange","setEnabled","setVoltageOutputRange","VoltageOutput","AccelerometerBase","precision","onAccelerationChange","maxAccelerationChangeTrigger","minAccelerationChangeTrigger","axisCount","HIGH","_gotAccelerationChangeErrorEvent","getAccelerationChangeTrigger","getMinAccelerationChangeTrigger","getMaxAccelerationChangeTrigger","getAxisCount","getHeatingEnabled","getPrecision","getTimestamp","setAccelerationChangeTrigger","setHeatingEnabled","Accelerometer","arrayMethodIsStrict","reduce","VoltageInputBase","voltageRange","minVoltageChangeTrigger","maxVoltageChangeTrigger","getVoltageChangeTrigger","getMinVoltageChangeTrigger","getMaxVoltageChangeTrigger","getVoltageRange","setVoltageChangeTrigger","setVoltageRange","VoltageInput","_private","voltageBuffer","voltageBufferIndex","voltageBufferReady","motionSensorCountdown","motionSensorBaseline","VOLTAGE_BUFFER_LEN","subbp","_updateVoltageBuffer","_gotVoltageChangeErrorEvent","_getVoltageSensorUnit","_getVoltageSensorValue","onVoltageChange","shift","_doMotionSensorCalculations","threshold","startAvgDiff","endAvgDiff","longTermAvg","longTermDiff","triggered","_reduceInstanceProperty","prev","CapacitiveTouchBase","CAPACITIVE_TOUCH","sensitivity","touchValueChangeTrigger","touchValue","onTouch","onTouchEnd","minTouchValueChangeTrigger","maxTouchValueChangeTrigger","minSensitivity","maxSensitivity","maxTouchValue","minTouchValue","isTouched","_gotTouchErrorEvent","getSensitivity","getMinSensitivity","getMaxSensitivity","getIsTouched","getTouchValue","getMinTouchValue","getMaxTouchValue","getTouchValueChangeTrigger","getMinTouchValueChangeTrigger","getMaxTouchValueChangeTrigger","setSensitivity","setTouchValueChangeTrigger","CapacitiveTouch","RFIDBase","lastTagString","lastTagProtocol","getAntennaEnabled","getTagPresent","setAntennaEnabled","write","lockTag","latestTagString","tag","onTag","onTagLost","getLastTag","_setLatestTagString","resolveLatestTag","_waitForTag","expectedString","GPSBase","GPS","heading","onHeadingChange","latitude","longitude","altitude","positionFixState","onPositionFixStateChange","date","NMEAData","_gotHeadingChangeErrorEvent","_gotPositionChangeErrorEvent","_gotPositionFixStateChangeErrorEvent","getAltitude","getDate","dateAndTime","getDateAndTime","getHeading","getLatitude","getLongitude","getNMEAData","getPositionFixState","getTime","readGPGGA","fixQuality","numSatellites","horizontalDilution","heightOfGeoid","readGPGSA","fixType","satUsed","posnDilution","horizDilution","vertDilution","readGPRMC","speedKnots","magneticVariation","readGPVTG","trueHeading","magneticHeading","readNMEAData","GGA","GSA","RMC","VTG","tm_ms","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","UTC","GyroscopeBase","onAngularRateUpdate","maxAngularRate","minAngularRate","_gotAngularRateUpdateErrorEvent","getAngularRate","getMinAngularRate","getMaxAngularRate","zero","Gyroscope","MagnetometerBase","onMagneticFieldChange","maxMagneticField","maxMagneticFieldChangeTrigger","minMagneticField","minMagneticFieldChangeTrigger","_gotMagneticFieldChangeErrorEvent","getMagneticField","getMinMagneticField","getMaxMagneticField","getMagneticFieldChangeTrigger","getMinMagneticFieldChangeTrigger","getMaxMagneticFieldChangeTrigger","setCorrectionParameters","setMagneticFieldChangeTrigger","resetCorrectionParameters","saveCorrectionParameters","Magnetometer","SpatialBase","algorithmMagnetometerGain","onSpatialData","eulerAngles","AHRS","getAlgorithm","getAlgorithmMagnetometerGain","getEulerAngles","getQuaternion","setAHRSParameters","angularVelocityThreshold","angularVelocityDeltaThreshold","accelerationThreshold","magTime","accelTime","biasTime","setAlgorithm","setAlgorithmMagnetometerGain","setMagnetometerCorrectionParameters","resetMagnetometerCorrectionParameters","saveMagnetometerCorrectionParameters","zeroAlgorithm","zeroGyro","Spatial","onAlgorithmData","roll_rad","atan2","pitch_rad","asin","heading_rad","PI","pitch","roll","TemperatureSensorBase","onTemperatureChange","maxTemperatureChangeTrigger","minTemperatureChangeTrigger","_gotTemperatureChangeErrorEvent","getRTDType","getRTDWireSetup","getTemperature","getMinTemperature","getMaxTemperature","getTemperatureChangeTrigger","getMinTemperatureChangeTrigger","getMaxTemperatureChangeTrigger","getThermocoupleType","setRTDType","setRTDWireSetup","setTemperatureChangeTrigger","setThermocoupleType","TemperatureSensor","EncoderBase","IOMode","positionChangeTrigger","maxPositionChangeTrigger","minPositionChangeTrigger","getIndexPosition","getIOMode","setPosition","getPositionChangeTrigger","getMinPositionChangeTrigger","getMaxPositionChangeTrigger","setIOMode","setPositionChangeTrigger","Encoder","FrequencyCounterBase","FREQUENCY_COUNTER","filterType","onCountChange","onFrequencyChange","totalTicksSinceLastCount","frequencyPrecision","maxFrequencyCutoff","minFrequencyCutoff","timeElapsed","frequencyCutoff","_gotFrequencyChangeErrorEvent","getCount","getFilterType","getFrequencyCutoff","setFrequencyCutoff","getMinFrequencyCutoff","getMaxFrequencyCutoff","getTimeElapsed","setFilterType","FrequencyCounter","cutoffTime","countTimeSpan","reset","IRBase","IR","RAW_DATA_LONG_SPACE","MAX_CODE_BIT_COUNT","MAX_CODE_STRING_LENGTH","onRawData","lastCodeInfo","lastLearnedCodeInfo","lastCodeStr","lastCodeBitCount","lastLearnedCodeStr","transmitRepeat","onCode","toggleString","repeatArr","pop","bitCount","encoding","gap","trail","header","one","repeat","minRepeat","carrierFrequency","toggleMask","onLearn","transmit","codeInfo","SPACE","CONSTANT","toggleMaskArr","transmitRaw","getLastCode","getLastLearnedCode","PHSensorBase","PH_SENSOR","correctionTemperature","PHChangeTrigger","onPHChange","maxPH","maxPHChangeTrigger","minPH","minPHChangeTrigger","minCorrectionTemperature","maxCorrectionTemperature","_gotPHChangeErrorEvent","getCorrectionTemperature","getMinCorrectionTemperature","getMaxCorrectionTemperature","getPH","getMinPH","getMaxPH","getPHChangeTrigger","getMinPHChangeTrigger","getMaxPHChangeTrigger","setCorrectionTemperature","setPHChangeTrigger","PHSensor","DCMotorBase","DC_MOTOR","backEMFSensingState","currentLimit","currentRegulatorGain","fanMode","targetBrakingStrength","targetVelocity","backEMF","onBackEMFChange","onBrakingStrengthChange","onVelocityUpdate","maxCurrentLimit","minCurrentLimit","maxCurrentRegulatorGain","minCurrentRegulatorGain","maxVelocity","minVelocity","maxBrakingStrength","minBrakingStrength","_gotBackEMFChangeErrorEvent","_gotBrakingStrengthChangeErrorEvent","_gotVelocityUpdateErrorEvent","getBackEMF","getBackEMFSensingState","getBrakingStrength","getMinBrakingStrength","getMaxBrakingStrength","getCurrentLimit","getMinCurrentLimit","getMaxCurrentLimit","getCurrentRegulatorGain","getMinCurrentRegulatorGain","getMaxCurrentRegulatorGain","getFanMode","getTargetBrakingStrength","getTargetVelocity","getMinVelocity","getMaxVelocity","setBackEMFSensingState","setCurrentLimit","setCurrentRegulatorGain","setFanMode","setTargetBrakingStrength","setTargetVelocity","DCMotor","CurrentInputBase","CURRENT_INPUT","currentChangeTrigger","onCurrentChange","maxCurrent","maxCurrentChangeTrigger","minCurrent","minCurrentChangeTrigger","_gotCurrentChangeErrorEvent","getCurrent","getMinCurrent","getMaxCurrent","getCurrentChangeTrigger","getMinCurrentChangeTrigger","getMaxCurrentChangeTrigger","setCurrentChangeTrigger","CurrentInput","StepperBase","STEPPER","controlMode","holdingCurrentLimit","onStopped","positionOffset","rescaleFactor","getControlMode","getHoldingCurrentLimit","getRescaleFactor","setRescaleFactor","setControlMode","setHoldingCurrentLimit","Stepper","calcAccel","calcPosition","calcLimit","addPositionOffset","LCDBase","LCD","backlight","contrast","cursorBlink","cursorOn","screenSize","sleeping","fontWidth","fontHeight","minBacklight","maxBacklight","minContrast","maxContrast","autoFlush","getAutoFlush","setAutoFlush","getBacklight","getMinBacklight","getMaxBacklight","getContrast","getMinContrast","getMaxContrast","getCursorBlink","getCursorOn","getFrameBuffer","getHeight","getScreenSize","getSleeping","getWidth","setBacklight","clear","setContrast","copy","sourceFramebuffer","destFramebuffer","sourceX1","sourceY1","sourceX2","sourceY2","destX","destY","inverted","setCursorBlink","setCursorOn","drawLine","x1","y1","x2","y2","drawPixel","pixelState","drawRect","filled","flush","setFontSize","setFrameBuffer","initialize","saveFrameBuffer","setScreenSize","setSleeping","writeText","xPosition","yPosition","text","_setWidthHeightFromScreenSize","PN_LCD1100","setCharacterBitmap","maxChars","PN_1202_1203","PN_1204","PN_1215__1218","PN_1219__1222","writeBitmap","MotorPositionControllerBase","MOTOR_POSITION_CONTROLLER","deadBand","kd","ki","kp","stallVelocity","onDutyCycleUpdate","minStallVelocity","maxStallVelocity","_gotDutyCycleUpdateErrorEvent","getDeadBand","getKd","getKi","getKp","getStallVelocity","getMinStallVelocity","getMaxStallVelocity","MotorPositionController","setDeadBand","calcDeadband","setStallVelocity","calcVelocity","setKd","setKi","setKp","BLDCMotorBase","BLDC_MOTOR","BLDCMotor","DistanceSensorBase","DISTANCE_SENSOR","distanceChangeTrigger","sonarQuietMode","onDistanceChange","onSonarReflectionsUpdate","amplitudes","distances","maxDistance","maxDistanceChangeTrigger","minDistance","minDistanceChangeTrigger","_gotDistanceChangeErrorEvent","getDistance","getMinDistance","getMaxDistance","getDistanceChangeTrigger","getMinDistanceChangeTrigger","getMaxDistanceChangeTrigger","getSonarQuietMode","setDistanceChangeTrigger","setSonarQuietMode","DistanceSensor","getSonarReflections","HumiditySensorBase","HUMIDITY_SENSOR","humidityChangeTrigger","onHumidityChange","maxHumidity","maxHumidityChangeTrigger","minHumidity","minHumidityChangeTrigger","_gotHumidityChangeErrorEvent","getHumidity","getMinHumidity","getMaxHumidity","getHumidityChangeTrigger","getMinHumidityChangeTrigger","getMaxHumidityChangeTrigger","setHumidityChangeTrigger","HumiditySensor","LightSensorBase","LIGHT_SENSOR","illuminanceChangeTrigger","onIlluminanceChange","maxIlluminance","maxIlluminanceChangeTrigger","minIlluminance","minIlluminanceChangeTrigger","_gotIlluminanceChangeErrorEvent","getIlluminance","getMinIlluminance","getMaxIlluminance","getIlluminanceChangeTrigger","getMinIlluminanceChangeTrigger","getMaxIlluminanceChangeTrigger","setIlluminanceChangeTrigger","LightSensor","PressureSensorBase","PRESSURE_SENSOR","pressureChangeTrigger","onPressureChange","maxPressure","maxPressureChangeTrigger","minPressure","minPressureChangeTrigger","_gotPressureChangeErrorEvent","getPressure","getMinPressure","getMaxPressure","getPressureChangeTrigger","getMinPressureChangeTrigger","getMaxPressureChangeTrigger","setPressureChangeTrigger","PressureSensor","ResistanceInputBase","RESISTANCE_INPUT","resistanceChangeTrigger","onResistanceChange","maxResistance","maxResistanceChangeTrigger","minResistance","minResistanceChangeTrigger","_gotResistanceChangeErrorEvent","getResistance","getMinResistance","getMaxResistance","getResistanceChangeTrigger","getMinResistanceChangeTrigger","getMaxResistanceChangeTrigger","setResistanceChangeTrigger","ResistanceInput","PowerGuardBase","POWER_GUARD","overVoltage","powerEnabled","maxOverVoltage","minOverVoltage","getOverVoltage","getMinOverVoltage","getMaxOverVoltage","getPowerEnabled","setOverVoltage","setPowerEnabled","PowerGuard","SoundSensorBase","SOUND_SENSOR","onSPLChange","maxdB","maxSPLChangeTrigger","noiseFloor","minSPLChangeTrigger","getdB","getMaxdB","getdBA","getdBC","getNoiseFloor","getOctaves","getSPLChangeTrigger","getMinSPLChangeTrigger","getMaxSPLChangeTrigger","getSPLRange","setSPLChangeTrigger","setSPLRange","SoundSensor","HubBase","setFirmwareUpgradeFlag","setPortAutoSetSpeed","setPortPower","Hub","getPortMode","openAndUpdatePortProperties","getPortPower","power","portPowered","getPortMaxSpeed","getPortSupportsAutoSetSpeed","getPortSupportsSetSpeed","FirmwareUpgradeBase","FIRMWARE_UPGRADE","progress","onProgressChange","actualDeviceID","actualDeviceVINTID","actualDeviceSKU","actualDeviceVersion","actualDeviceName","_gotProgressChangeErrorEvent","getActualDeviceID","getActualDeviceName","getActualDeviceSKU","getActualDeviceVersion","getActualDeviceVINTID","getProgress","FirmwareUpgrade","sendFirmware","_data","GenericBase","Generic","sendChannelPacket","_packetType","_index","_packet","sendDevicePacket","sendPacket","whitespaces","trim","DictionaryBase","DICTIONARY","onAdd","onRemove","onUpdate","removeAll","update","Dictionary","def","list","_trimInstanceProperty","split","CreatePhidgetChannel","ChCls","Manager","onDeviceAttach","onDeviceDetach","phdev","phch"],"mappings":"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"}